com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/lang/Class/isInterface()
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/lang/Integer/intValue()
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/util/Iterator/hasNext()
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/lang/Math/max(int,int)
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/util/Iterator/next()
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/lang/Iterable/iterator()
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/lang/Integer/valueOf(int)
com/google/common/reflect/TypeToken$TypeCollector/collectTypes(java.lang.Object,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/String/length()
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/Integer/toHexString(int)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/String/substring(int,int)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/String/lastIndexOf(int)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/String/substring(int)
com/google/common/net/InetAddresses/convertDottedQuadToHex(java.lang.String)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/position(int)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/allocateDirect(int)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/lang/Math/min(int,int)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/allocate(int)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
com/esotericsoftware/kryo/io/ByteBufferOutput/require(int)#java/nio/ByteBuffer/isDirect()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace/getStackTrace()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Iterator/hasNext()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Map$Entry/getKey()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace/setStackTrace(java.lang.StackTraceElement[])
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Map/get(java.lang.Object)
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Iterator/next()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#com/google/common/util/concurrent/CycleDetectingLockFactory$ExampleStackTrace/initCause(java.lang.Throwable)
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Set/iterator()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Map$Entry/getValue()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Map/entrySet()
com/google/common/util/concurrent/CycleDetectingLockFactory$LockGraphNode/findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set)#java/util/Set/add(java.lang.Object)
com/badlogic/gdx/input/RemoteInput/run()#java/io/IOException/printStackTrace()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/getInputStream()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readFloat()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setSoTimeout(int)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/toString()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readBoolean()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/io/PrintStream/println(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readInt()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readChar()
com/badlogic/gdx/input/RemoteInput/run()#java/net/ServerSocket/accept()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setTcpNoDelay(boolean)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/Object/toString()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(int)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/String/charAt(int)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getX()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/validate()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getY()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/WidgetGroup/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/validate()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipEnd()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/io/IOException/IOException(java.lang.String)
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/doubleValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/intValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/byteValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/floatValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/shortValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Object/toString()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Character/charValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/longValue()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteOrder/nativeOrder()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#com/badlogic/gdx/graphics/Texture/getTextureObjectHandle()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/IntBuffer/get(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/allocateDirect(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/asIntBuffer()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/StringBuilder/toString()
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/length()
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/substring(int,int)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/indexOf(int,int)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/indexOf(int)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/substring(int)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/net/HostAndPort/fromString(java.lang.String)#java/lang/String/String(java.lang.String)
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/append(int)
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/lang/IllegalArgumentException/getMessage()
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readObject()
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/defaultReadObject()
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readInt()
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/toString()
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/io/InvalidObjectException/initCause(java.lang.Throwable)
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/io/InvalidObjectException/InvalidObjectException(java.lang.String)
com/google/common/collect/ImmutableListMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Map$Entry/getKey()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList/isEmpty()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Iterator/next()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Set/iterator()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Map$Entry/getValue()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableList/size()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#com/google/common/collect/ImmutableListMultimap/isPartialView()
com/google/common/collect/ImmutableListMultimap/copyOf(com.google.common.collect.Multimap)#java/util/Map/entrySet()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Map$Entry/getKey()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#com/google/common/collect/ImmutableSet/isEmpty()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Iterator/next()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Set/iterator()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#com/google/common/collect/ImmutableSet/size()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#com/google/common/collect/ImmutableSetMultimap/isPartialView()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Map$Entry/getValue()
com/google/common/collect/ImmutableSetMultimap/copyOf(com.google.common.collect.Multimap,java.util.Comparator)#java/util/Map/entrySet()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/String/valueOf(java.lang.Object)
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/append(int)
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readObject()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/defaultReadObject()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/io/ObjectInputStream/readInt()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/toString()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/io/InvalidObjectException/initCause(java.lang.Throwable)
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#com/google/common/collect/ImmutableSet/size()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/String/length()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/IllegalArgumentException/getMessage()
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/util/Arrays/asList(java.lang.Object[])
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/io/InvalidObjectException/InvalidObjectException(java.lang.String)
com/google/common/collect/ImmutableSetMultimap/readObject(java.io.ObjectInputStream)#java/lang/StringBuilder/StringBuilder(int)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Double/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Boolean/valueOf(boolean)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/isInterface()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/ArrayList/ArrayList()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Boolean/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getComponentType()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Double/valueOf(double)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Long/valueOf(long)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Byte/valueOf(byte)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/String/charAt(int)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Byte/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Short/valueOf(short)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Float/valueOf(float)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getName()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Character/valueOf(char)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/Collection/add(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Short/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Float/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Integer/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getEnumConstants()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Long/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Iterator/hasNext()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#com/badlogic/gdx/utils/OrderedMap$OrderedMapValues/iterator()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Iterator/next()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Arrays/deepEquals(java.lang.Object[],java.lang.Object[])
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Class/getName()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Object/getClass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isPrimitive()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Set/iterator()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getSuperclass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/hasNext()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getComponentType()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getKey()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/next()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Object/getClass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getValue()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Collection/iterator()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map/entrySet()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getEnumConstants()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/String(char[],int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/io/BufferedReader/read()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/substring(int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/Character/isSpace(char)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/substring(int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/Character/digit(char,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/os/Handler/Handler()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/forName(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/newInstance()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/content/res/Resources/getAssets()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/io/File/getAbsolutePath()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#com/badlogic/gdx/backends/android/AndroidFragmentApplication/getResources()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#com/badlogic/gdx/backends/android/AndroidFragmentApplication/getActivity()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/support/v4/app/FragmentActivity/getFilesDir()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Iterator/hasNext()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Map$Entry/getKey()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#com/google/common/collect/StandardTable$ColumnKeyIterator/endOfData()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Iterator/next()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Set/iterator()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Map/containsKey(java.lang.Object)
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Map$Entry/getValue()
com/google/common/collect/StandardTable$ColumnKeyIterator/computeNext()#java/util/Map/entrySet()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/util/Iterator/hasNext()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/lang/StringBuilder/append(long)
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/util/List/toArray(java.lang.Object[])
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/util/List/iterator()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#sun/misc/Unsafe/objectFieldOffset(java.lang.reflect.Field)
com/esotericsoftware/kryo/util/UnsafeUtil/sortFieldsByOffset(java.util.List)#java/util/Iterator/next()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/Math/min(int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/writeInt(int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/remaining()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/limit(int)
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Iterator/remove()
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Iterator/hasNext()
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Iterator/next()
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Collections/unmodifiableList(java.util.List)
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Collection/iterator()
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Collections/unmodifiableSet(java.util.Set)
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/List/isEmpty()
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/Map/get(java.lang.Object)
com/google/common/collect/FilteredEntryMultimap$AsMap/remove(java.lang.Object)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/util/Iterator/hasNext()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TiledMap/getProperties()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/util/Iterator/next()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadImageLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/concat(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/trim()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/readLine()
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/Thread/start()
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/Thread/Thread(java.lang.Runnable)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/Thread/setDaemon(boolean)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/Thread/setName(java.lang.String)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/String/equals(java.lang.Object)
com/google/common/base/internal/Finalizer/startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference)#java/lang/Class/getName()
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/String/valueOf(java.lang.Object)
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/util/Iterator/hasNext()
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/String/length()
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/util/Iterator/next()
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/StringBuilder/StringBuilder()
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/StringBuilder/append(char)
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/collect/Iterators/getOnlyElement(java.util.Iterator)#java/lang/StringBuilder/toString()
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Integer/intValue()
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/setVisible(boolean)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/setName(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMap/getLayers()
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/getProperties()
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/Object/equals(java.lang.Object)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/reflect/Constructor/setAccessible(boolean)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/Long/valueOf(long)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/util/Date/setTime(long)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/sql/Timestamp/Timestamp(long)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/lang/reflect/Constructor/isAccessible()
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/util/Date/Date(long)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/sql/Time/Time(long)
com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer/create(com.esotericsoftware.kryo.Kryo,java.lang.Class,long)#java/sql/Date/Date(long)
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/lang/System/nanoTime()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/Future/cancel(boolean)
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/List/add(java.lang.Object)
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/TimeoutException/TimeoutException()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/Future/get()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/Iterator/hasNext()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/BlockingQueue/poll()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/Collection/size()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/BlockingQueue/poll(long,java.util.concurrent.TimeUnit)
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/BlockingQueue/take()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/Iterator/next()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/concurrent/ExecutionException/ExecutionException(java.lang.Throwable)
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/List/iterator()
com/google/common/util/concurrent/MoreExecutors/invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long)#java/util/Collection/iterator()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/String(char[],int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/String(char[])
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Double/parseDouble(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(double)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/io/PrintStream/println(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/io/PrintStream/println()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Math/min(int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/length()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/charAt(int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/Character/toChars(int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/substring(int,int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/intValue()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getSimpleName()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/length()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/isPrimitive()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Byte/byteValue()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Integer/valueOf(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getDeclaringClass()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Boolean/booleanValue()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Double/valueOf(double)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Long/valueOf(long)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Byte/valueOf(byte)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Short/valueOf(short)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Float/valueOf(float)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getReturnType()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Class/getName()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/String/substring(int,int)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/getName()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/util/Arrays/deepToString(java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/Character/valueOf(char)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/locks/ReentrantLock/unlock()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/ConcurrentHashMap/containsKey(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/locks/Condition/await(long,java.util.concurrent.TimeUnit)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/lang/Byte/valueOf(byte)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/lang/Thread/currentThread()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/lang/Thread/interrupt()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace$RemoteInvocationHandler/waitForResponse(byte)#java/util/concurrent/locks/ReentrantLock/lock()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/util/Iterator/next()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/g2d/PixmapPackerIO$ImageFormat/ordinal()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/utils/OrderedMap/get(java.lang.Object)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/Pixmap$Format/name()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/io/Writer/close()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/Texture$TextureFilter/name()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/io/Writer/write(java.lang.String)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/g2d/PixmapPackerIO$ImageFormat/getExtension()
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/String/valueOf(java.lang.Object)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/StringBuilder/append(int)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/CharSequence/charAt(int)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/Character/toCodePoint(char,char)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/StringBuilder/append(char)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/StringBuilder/toString()
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/String/length()
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/Character/isLowSurrogate(char)
com/google/common/escape/UnicodeEscaper/codePointAt(java.lang.CharSequence,int,int)#java/lang/StringBuilder/StringBuilder(int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/toString()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/util/Iterator/hasNext()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/TiledMap/getProperties()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/util/Iterator/next()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/substring(int,int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/lastIndexOf(int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/resolve(java.lang.String)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String)
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/util/Iterator/hasNext()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/util/Iterator/next()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/Integer/valueOf(int)
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/util/List/iterator()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/util/List/isEmpty()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/Object/getClass()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#java/lang/StringBuilder/toString()
net/npg/abattle/communication/command/impl/CommandQueueImpl/processCommand(net.npg.abattle.communication.command.impl.CommandStore)#net/npg/abattle/communication/command/CommandType/toString()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit()
com/google/common/io/Files/createTempDir()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/common/io/Files/createTempDir()#java/lang/StringBuilder/append(java.lang.String)
com/google/common/io/Files/createTempDir()#java/lang/StringBuilder/append(int)
com/google/common/io/Files/createTempDir()#java/lang/String/length()
com/google/common/io/Files/createTempDir()#java/io/File/mkdir()
com/google/common/io/Files/createTempDir()#java/lang/System/getProperty(java.lang.String)
com/google/common/io/Files/createTempDir()#java/lang/System/currentTimeMillis()
com/google/common/io/Files/createTempDir()#java/lang/StringBuilder/toString()
com/google/common/io/Files/createTempDir()#java/io/File/File(java.io.File,java.lang.String)
com/google/common/io/Files/createTempDir()#java/lang/String/valueOf(java.lang.Object)
com/google/common/io/Files/createTempDir()#java/lang/StringBuilder/StringBuilder(int)
com/google/common/io/Files/createTempDir()#java/lang/StringBuilder/append(long)
com/google/common/io/Files/createTempDir()#java/io/File/File(java.lang.String)
com/google/common/io/Files/createParentDirs(java.io.File)#java/io/File/isDirectory()
com/google/common/io/Files/createParentDirs(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/io/Files/createParentDirs(java.io.File)#java/lang/String/length()
com/google/common/io/Files/createParentDirs(java.io.File)#java/io/File/getCanonicalFile()
com/google/common/io/Files/createParentDirs(java.io.File)#java/io/File/mkdirs()
com/google/common/io/Files/createParentDirs(java.io.File)#java/io/IOException/IOException(java.lang.String)
com/google/common/io/Files/createParentDirs(java.io.File)#java/lang/String/valueOf(java.lang.Object)
com/google/common/io/Files/createParentDirs(java.io.File)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/io/Files/createParentDirs(java.io.File)#java/lang/StringBuilder/toString()
com/google/common/io/Files/createParentDirs(java.io.File)#java/io/File/getParentFile()
com/google/common/io/Files/touch(java.io.File)#java/io/File/createNewFile()
com/google/common/io/Files/touch(java.io.File)#java/lang/String/length()
com/google/common/io/Files/touch(java.io.File)#java/lang/System/currentTimeMillis()
com/google/common/io/Files/touch(java.io.File)#java/lang/StringBuilder/toString()
com/google/common/io/Files/touch(java.io.File)#java/io/IOException/IOException(java.lang.String)
com/google/common/io/Files/touch(java.io.File)#java/lang/String/valueOf(java.lang.Object)
com/google/common/io/Files/touch(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/io/Files/touch(java.io.File)#java/io/File/setLastModified(long)
com/google/common/io/Files/touch(java.io.File)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/lang/String/length()
com/google/common/io/Files/move(java.io.File,java.io.File)#java/io/File/renameTo(java.io.File)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/io/File/delete()
com/google/common/io/Files/move(java.io.File,java.io.File)#java/io/IOException/IOException(java.lang.String)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/lang/String/valueOf(java.lang.Object)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/io/Files/move(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
com/google/common/io/Files/move(java.io.File,java.io.File)#java/io/File/equals(java.lang.Object)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/ArrayList/ArrayList()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/charAt(int)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/length()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/List/size()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/Iterator/next()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/Iterable/iterator()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/substring(int)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/List/add(java.lang.Object)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/Iterator/hasNext()
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/List/remove(int)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/util/List/get(int)
com/google/common/io/Files/simplifyPath(java.lang.String)#java/lang/String/String(java.lang.String)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/List/size()
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/Iterator/next()
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/String/equals(java.lang.Object)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/List/add(java.lang.Object)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/List/iterator()
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/lang/StringBuilder/toString()
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/macro/file/Path/getAbsolutePath(org.eclipse.xtend.lib.macro.file.Path)#java/util/List/remove(int)
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/lang/String/trim()
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/List/size()
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/Iterator/next()
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/lang/String/equals(java.lang.Object)
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/lang/Iterable/iterator()
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/List/add(java.lang.Object)
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/List/get(int)
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/Iterator/hasNext()
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/List/remove(int)
org/eclipse/xtend/lib/macro/file/Path/normalize(java.lang.Iterable)#java/util/List/isEmpty()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Iterator/remove()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Iterator/hasNext()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map$Entry/getKey()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Iterator/next()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Set/iterator()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map$Entry/getValue()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map/entrySet()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map/remove(java.lang.Object)
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map/isEmpty()
com/google/common/collect/StandardTable$Column/removeFromColumnIf(com.google.common.base.Predicate)#java/util/Map/get(java.lang.Object)
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/getSimpleName()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/getDeclaringType()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/toString()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/getReturnType()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/getParameters()
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/utils/NotNullProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableParameterDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/getBody()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/lang/Integer/intValue()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Map$Entry/getKey()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Set/iterator()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Map$Entry/getValue()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Map/entrySet()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/lang/Boolean/booleanValue()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Iterator/hasNext()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/util/Iterator/next()
net/npg/abattle/common/configuration/impl/ConfigurationComponentImpl/save()#java/lang/Long/longValue()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/defaultWriteObject()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Iterator/next()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Set/iterator()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeInt(int)
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Map$Entry/getValue()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Iterator/hasNext()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Set/size()
com/google/common/collect/LinkedHashMultimap/writeObject(java.io.ObjectOutputStream)#java/util/Map$Entry/getKey()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#net/npg/abattle/common/model/Link/getId()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#net/npg/abattle/common/model/client/ClientCell/getId()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/util/Set/add(java.lang.Object)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/AssertionError/AssertionError()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/toString()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/Integer/valueOf(int)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/addLink(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#net/npg/abattle/common/model/Link/getId()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/util/Set/contains(java.lang.Object)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#net/npg/abattle/common/model/client/ClientCell/getId()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/AssertionError/AssertionError()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/StringBuilder/toString()
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/lang/Integer/valueOf(int)
net/npg/abattle/common/model/client/impl/ClientLinksImpl/remove(net.npg.abattle.common.model.Link)#java/util/Set/remove(java.lang.Object)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Integer/intValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Short/intValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.Object)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Byte/intValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Float/floatValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Character/charValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Long/longValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Double/doubleValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/toString()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.String)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Boolean/booleanValue()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/StringBuffer()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getSuperclass()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getName()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isInterface()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Object/getClass()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getClassLoader()
com/esotericsoftware/reflectasm/shaded/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Exception/toString()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/util/logging/Logger/warning(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/io/File/getName()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/String/valueOf(java.lang.Object)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/io/File/isDirectory()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/String/length()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/String/equals(java.lang.Object)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/String/concat(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#com/google/common/collect/ImmutableSet/contains(java.lang.Object)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/String/String(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/io/File/listFiles()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/StringBuilder/toString()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/io/File/getCanonicalFile()
com/google/common/reflect/ClassPath$Scanner/scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/logging/Logger/warning(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/Iterator/hasNext()
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/Iterator/next()
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/lang/Iterable/iterator()
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/jar/Manifest/getMainAttributes()
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/lang/String/concat(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/jar/Attributes/getValue(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/lang/String/String(java.lang.String)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/lang/String/valueOf(java.lang.Object)
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/lang/String/length()
com/google/common/reflect/ClassPath$Scanner/getClassPathFromManifest(java.io.File,java.util.jar.Manifest)#java/util/jar/Attributes$Name/toString()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarFile/entries()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/Iterator/hasNext()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarFile/close()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/lang/String/equals(java.lang.Object)
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarFile/getManifest()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarFile/JarFile(java.io.File)
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarEntry/getName()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/jar/JarEntry/isDirectory()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/Enumeration/hasMoreElements()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/Enumeration/nextElement()
com/google/common/reflect/ClassPath$Scanner/scanJar(java.io.File,java.lang.ClassLoader)#java/util/Iterator/next()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/Class/getConstructors()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/util/Iterator/hasNext()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/util/Iterator/next()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/util/List/iterator()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/StringBuilder/toString()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/Exception/getCause()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/String/length()
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/util/Arrays/asList(java.lang.Object[])
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/Exception/initCause(java.lang.Throwable)
com/google/common/util/concurrent/Futures/newWithCause(java.lang.Class,java.lang.Throwable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/util/Arrays/toString(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/Object/getClass()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/newCachedFieldOfGenericType(java.lang.reflect.Field,int,java.lang.Class[],java.lang.reflect.Type)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/util/Arrays/toString(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/TypeVariable/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/ParameterizedType/getRawType()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/Object/getClass()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/computeFieldGenerics(java.lang.reflect.Type,java.lang.reflect.Field,java.lang.Class[])#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/Class/getComponentType()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/util/HashMap/HashMap()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/util/Arrays/toString(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/reflect/TypeVariable/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/Class/getTypeParameters()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/reflect/TypeVariable/getBounds()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/buildGenericsScope(java.lang.Class,java.lang.Class[])#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/reflect/TypeVariable/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/reflect/ParameterizedType/getRawType()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil/getGenerics(java.lang.reflect.Type,com.esotericsoftware.kryo.Kryo)#java/lang/Object/getClass()
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/StringBuilder/append(int)
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/String/length()
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/String/isEmpty()
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/Integer/valueOf(int)
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/StringBuilder/toString()
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/String/charAt(int)
com/google/common/primitives/Ints/tryParse(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#java/util/Iterator/hasNext()
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addField(java.lang.String,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#java/util/Iterator/next()
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#java/util/List/iterator()
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#org/eclipse/xtend/lib/macro/TransformationContext/findClass(java.lang.String)
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addMethod(java.lang.String,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
net/npg/abattle/common/utils/TransferDataProcessor/generateBuilder(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext,java.util.List)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getQualifiedName()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/toLowerCase()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/length()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/intValue()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/charAt(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/toString()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/io/PrintWriter/PrintWriter(java.io.Writer)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/io/StringWriter/StringWriter(int)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/util/Date/Date()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/util/Date/getTime()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/String/trim()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(long)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder(int)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(char)
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/io/StringWriter/toString()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/toString()
com/esotericsoftware/minlog/Log$Logger/log(int,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/Throwable/printStackTrace(java.io.PrintWriter)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/readInt()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/read(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/put(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/graphics/Pixmap$Format/fromGdx2DPixmapFormat(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/writeInt(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/Pixmap$Format/toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/indexOf(int,int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/indexOf(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/trim()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/io/BufferedReader/readLine()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/Class/isPrimitive()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/reflect/Field/getGenericType()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/reflect/Field/getType()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializer/newCachedField(java.lang.reflect.Field,int,int)#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializer/removeField(java.lang.String)#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/ArrayList/ArrayList()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/Class/getSuperclass()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/Iterator/hasNext()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/Class/getModifiers()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/Arrays/asList(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/List/size()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/reflect/Modifier/isPublic(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/List/add(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/Class/getDeclaredFields()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/reflect/Field/getModifiers()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/Class/isInterface()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/HashSet/iterator()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/ArrayList/ArrayList(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/Arrays/toString(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/Iterator/next()
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/util/List/toArray(java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/esotericsoftware/kryo/serializers/FieldSerializer/rebuildCachedFields(boolean)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/setAccessible(boolean)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/Class/getModifiers()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/util/List/size()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Modifier/isTransient(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/isAccessible()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Modifier/isPublic(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/util/List/add(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/util/List/get(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/getModifiers()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/util/ArrayList/ArrayList(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Modifier/isFinal(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/getType()
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
com/esotericsoftware/kryo/serializers/FieldSerializer/buildValidFields(boolean,java.util.List,com.esotericsoftware.kryo.util.ObjectMap,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/isSynthetic()
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getImplementedInterfaces()
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getQualifiedName()
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findClass(java.lang.String)
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/toString()
net/npg/abattle/common/component/FactoryProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addMethod(java.lang.String,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/Iterator/hasNext()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/Map$Entry/getKey()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/concurrent/ConcurrentMap/entrySet()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/Iterator/next()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/Set/iterator()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeInt(int)
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/Map$Entry/getValue()
com/google/common/collect/MapMakerInternalMap$AbstractSerializationProxy/writeMapTo(java.io.ObjectOutputStream)#java/util/concurrent/ConcurrentMap/size()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getUnicodeChar()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/isAltPressed()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/String/charAt(int)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/System/nanoTime()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/String/length()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/View$OnKeyListener/onKey(android.view.View,int,android.view.KeyEvent)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/size()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/get(int)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getAction()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getCharacters()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/isMemberClass()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/newInstance()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/getModifiers()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/getEnclosingClass()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/String/startsWith(java.lang.String)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/reflect/Constructor/getModifiers()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#com/esotericsoftware/reflectasm/AccessClassLoader/loadClass(java.lang.String)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/String/replace(char,char)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/reflect/Modifier/isPrivate(int)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/reflectasm/ConstructorAccess/get(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setFocusable(boolean)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/FrameLayout(android.content.Context)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setFocusableInTouchMode(boolean)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setOnKeyListener(android.view.View$OnKeyListener)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/app/Dialog/Dialog(android.content.Context,int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/setOnTouchListener(android.view.View$OnTouchListener)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/getImeOptions()
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/app/Dialog/setContentView(android.view.View)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setImeOptions(int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/addView(android.view.View)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int,int)
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/isStatic()
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setVisibility(org.eclipse.xtend.lib.macro.declaration.Visibility)
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference)
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimitiveVoid()
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getType()
net/npg/abattle/common/configuration/DirtyAccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/Class/getSimpleName()
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/System/identityHashCode(java.lang.Object)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/Integer/valueOf(int)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/StringBuilder/toString()
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/toSimpleReferenceString(java.lang.Object)#java/lang/Object/getClass()
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/lang/Enum/name()
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(java.lang.Object[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(double[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(float[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/lang/CharSequence/toString()
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(byte[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(char[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(int[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(long[])
org/eclipse/xtext/xbase/lib/util/ToStringBuilder/internalToString(java.lang.Object,org.eclipse.xtext.xbase.lib.util.ToStringBuilder$IndentationAwareStringBuilder)#java/util/Arrays/toString(boolean[])
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Integer/intValue()
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Long/valueOf(long)
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Thread/setPriority(int)
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Thread/setDaemon(boolean)
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Thread/setName(java.lang.String)
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Thread/setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/lang/Boolean/booleanValue()
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/util/concurrent/atomic/AtomicLong/getAndIncrement()
com/google/common/util/concurrent/ThreadFactoryBuilder$1/newThread(java.lang.Runnable)#java/util/concurrent/ThreadFactory/newThread(java.lang.Runnable)
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/canWrite()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/isDirectory()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/util/UUID/randomUUID()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/mkdirs()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/getParentFile()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/util/UUID/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/FileOutputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/delete()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/InputStream/read(byte[])
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/getAbsolutePath()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/write(byte[],int,int)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/InputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/mkdirs()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/getParentFile()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/getName()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/File(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/File(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/getAbsolutePath()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/createTempFile(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/delete()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/System/load(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/System/getProperty(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/Object/equals(java.lang.Object)
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/isEmpty()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/reflect/Field/getType()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/toString()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/reflect/Field/getName()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/size()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/FieldAccess/insertGetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/get(int)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/Class/newInstance()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/String/startsWith(java.lang.String)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/Class/getDeclaredFields()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/reflect/Field/getModifiers()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/reflect/Field/getName()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/util/ArrayList/ArrayList()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#com/esotericsoftware/reflectasm/AccessClassLoader/loadClass(java.lang.String)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/reflect/Field/getType()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/util/ArrayList/add(java.lang.Object)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/util/ArrayList/size()
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/String/replace(char,char)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/lang/reflect/Modifier/isPrivate(int)
com/esotericsoftware/reflectasm/FieldAccess/get(java.lang.Class)#java/util/ArrayList/get(int)
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/Object/equals(java.lang.Object)
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/isEmpty()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/reflect/Field/getType()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/toString()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/reflect/Field/getName()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/size()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/FieldAccess/insertSetPrimitive(com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ClassWriter,java.lang.String,java.util.ArrayList,com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.Type)#java/util/ArrayList/get(int)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/append(java.lang.CharSequence)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/Iterable/iterator()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/getDeclaredFields()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addMethod(java.lang.String,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/util/Iterator/hasNext()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addField(java.lang.String,org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableClassDeclaration/addConstructor(org.eclipse.xtext.xbase.lib.Procedures$Procedure1)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/util/Iterator/next()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
net/npg/abattle/common/configuration/PropertyStoredProcessor/doTransform(org.eclipse.xtend.lib.macro.declaration.MutableClassDeclaration,org.eclipse.xtend.lib.macro.TransformationContext)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getType()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildTarget/newDefaultTarget(com.badlogic.gdx.jnigen.BuildTarget$TargetOs,boolean)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/generate(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/generate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget[])
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildConfig/BuildConfig(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/NativeCodeGenerator()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/AntScriptGenerator()
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/util/concurrent/atomic/AtomicInteger/compareAndSet(int,int)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/Integer/valueOf(int)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/StringBuilder/toString()
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/StringBuilder/append(int)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/collect/ConcurrentHashMultiset/add(java.lang.Object,int)#java/util/concurrent/ConcurrentMap/replace(java.lang.Object,java.lang.Object,java.lang.Object)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/Class/getSimpleName()
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/net/SocketException/SocketException(java.lang.String)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Connection/sendUDP(java.lang.Object)#java/lang/Object/getClass()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getRight()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getStage()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setPosition(float,float,int)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getParent()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getX()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getY()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setY(float)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setX(float)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getY(int)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getTop()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getX(int)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadTop()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/setPosition(float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/setSize(float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadLeft()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getColor()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getColor()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadRight()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[])
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/finish()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/Deflater/reset()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/write(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/PixmapIO$PNG$ChunkBuffer/writeByte(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/OutputStream/flush()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/PixmapIO$PNG$ChunkBuffer/writeInt(int)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/util/ArrayList/remove(int)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Object/wait()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onDrawFrame(javax.microedition.khronos.opengles.GL10)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/ref/WeakReference/get()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/util/ArrayList/isEmpty()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Runnable/run()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Object/notifyAll()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/nio/channels/DatagramChannel/send(java.nio.ByteBuffer,java.net.SocketAddress)
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/nio/ByteBuffer/clear()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/Class/getName()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/nio/ByteBuffer/hasRemaining()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/nio/ByteBuffer/limit()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/net/SocketException/SocketException(java.lang.String)
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/UdpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object,java.net.SocketAddress)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/remaining()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/hasRemaining()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/UdpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/clear()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/io/IOException/IOException(java.lang.String)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/ByteBuffer/clear()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/channels/DatagramChannel/configureBlocking(boolean)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/channels/spi/SelectorProvider/openDatagramChannel()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/net/DatagramSocket/bind(java.net.SocketAddress)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/channels/DatagramChannel/socket()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/channels/Selector/provider()
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/net/DatagramSocket/connect(java.net.SocketAddress)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/nio/channels/DatagramChannel/register(java.nio.channels.Selector,int)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/io/IOException/initCause(java.lang.Throwable)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/UdpConnection/connect(java.nio.channels.Selector,java.net.InetSocketAddress)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/net/Socket/connect(java.net.SocketAddress,int)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/SocketChannel/socket()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/io/IOException/IOException(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/io/IOException/initCause(java.lang.Throwable)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/net/Socket/getLocalPort()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/SocketChannel/register(java.nio.channels.Selector,int)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/spi/SelectorProvider/openSocketChannel()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/SocketChannel/configureBlocking(boolean)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/Selector/provider()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/ByteBuffer/clear()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/nio/channels/SelectionKey/attach(java.lang.Object)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/net/Socket/getRemoteSocketAddress()
com/esotericsoftware/kryonet/TcpConnection/connect(java.nio.channels.Selector,java.net.SocketAddress,int)#java/net/Socket/setTcpNoDelay(boolean)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/channels/SelectionKey/selector()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/ByteBuffer/position()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/net/SocketException/SocketException(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Class/getName()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/ByteBuffer/position(int)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/append(float)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/ByteBuffer/capacity()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/channels/Selector/wakeup()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/TcpConnection/send(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/nio/channels/SelectionKey/interestOps(int)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/nio/channels/SocketChannel/socket()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/net/Socket/getLocalPort()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/nio/channels/SocketChannel/register(java.nio.channels.Selector,int)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/nio/channels/SocketChannel/configureBlocking(boolean)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/nio/ByteBuffer/clear()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/net/Socket/getRemoteSocketAddress()
com/esotericsoftware/kryonet/TcpConnection/accept(java.nio.channels.Selector,java.nio.channels.SocketChannel)#java/net/Socket/setTcpNoDelay(boolean)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/compact()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/position()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/net/SocketException/SocketException(java.lang.String)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/channels/SocketChannel/read(java.nio.ByteBuffer)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/capacity()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/remaining()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/limit()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/TcpConnection/readObject(com.esotericsoftware.kryonet.Connection)#java/nio/ByteBuffer/limit(int)
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Iterator/hasNext()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getKey()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/AbstractCollection/retainAll(java.util.Collection)
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Set/iterator()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Map$Entry/getValue()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Set/retainAll(java.util.Collection)
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Iterator/next()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Map/keySet()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Map/entrySet()
com/google/common/collect/Maps$Values/retainAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Iterator/hasNext()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getKey()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/AbstractCollection/removeAll(java.util.Collection)
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Set/removeAll(java.util.Collection)
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Set/iterator()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Collection/contains(java.lang.Object)
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Map$Entry/getValue()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Iterator/next()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Map/keySet()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Map/entrySet()
com/google/common/collect/Maps$Values/removeAll(java.util.Collection)#java/util/Set/add(java.lang.Object)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/WidgetGroup/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getY()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/validate()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getX()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/isTransform()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/URL/openConnection()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setReadTimeout(int)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/URL/URL(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setConnectTimeout(int)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Iterator/next()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map$Entry/getValue()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setDoInput(boolean)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map/entrySet()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Iterator/hasNext()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map$Entry/getKey()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/addRequestProperty(java.lang.String,java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setFollowRedirects(boolean)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Set/iterator()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/toString()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setDoOutput(boolean)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/toString()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/deleteCharAt(int)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/StringBuffer()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/length()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Map/keySet()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/Class/getDeclaredMethods()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/reflect/Method/setAccessible(boolean)
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/reflect/Method/isBridge()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/Class/getSuperclass()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/reflect/Method/isAccessible()
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
org/eclipse/xtext/xbase/lib/util/ReflectExtensions/invoke(java.lang.Object,java.lang.String,java.lang.Object[])#java/lang/Object/getClass()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getString()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newWildcardTypeReference()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MethodDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newTypeReference(java.lang.Class,org.eclipse.xtend.lib.macro.declaration.TypeReference[])
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getObject()
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/eclipse/xtend/lib/annotations/DelegateProcessor$Util/_delegateAccess(org.eclipse.xtend.lib.macro.declaration.MethodDeclaration,org.eclipse.xtend.lib.macro.declaration.MethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/newArrayTypeReference(org.eclipse.xtend.lib.macro.declaration.TypeReference)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/validate()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getX()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getY()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#java/lang/Object/toString()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getColor()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/utils/ArraySelection/first()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/hasParent()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#java/lang/String/length()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Iterator/hasNext()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Map$Entry/getKey()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Map/size()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Iterator/next()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Set/iterator()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeInt(int)
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Map$Entry/getValue()
com/google/common/collect/Serialization/writeMap(java.util.Map,java.io.ObjectOutputStream)#java/util/Map/entrySet()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Iterator/hasNext()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Map$Entry/getKey()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Iterator/next()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Set/iterator()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeInt(int)
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Map$Entry/getValue()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Collection/iterator()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Map/entrySet()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Collection/size()
com/google/common/collect/Serialization/writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)#java/util/Map/size()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/remaining()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/min(float,float)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/split(java.lang.String,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/max(int,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/max(float,float)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/nextToken()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/hasMoreTokens()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/endsWith(java.lang.String)
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Iterator/remove()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Iterator/hasNext()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map$Entry/getKey()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map/isEmpty()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Iterator/next()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Set/iterator()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map$Entry/getValue()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map/entrySet()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/LinkedHashMap/LinkedHashMap()
com/google/common/collect/StandardTable/removeColumn(java.lang.Object)#java/util/Map/remove(java.lang.Object)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/ArrayStoreException/ArrayStoreException(java.lang.String)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/IllegalArgumentException/getMessage()
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/util/List/get(int)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/StringBuilder/toString()
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/lang/Class/isPrimitive()
org/eclipse/xtext/xbase/lib/Conversions/unwrapArray(java.lang.Object,java.lang.Class)#java/util/List/size()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/toLowerCase()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/length()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/substring(int)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/charAt(int)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/Character/isLowerCase(char)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstLower(java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/toUpperCase()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/length()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/substring(int,int)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/Character/isUpperCase(char)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/substring(int)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/StringBuilder/toString()
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/eclipse/xtext/xbase/lib/StringExtensions/toFirstUpper(java.lang.String)#java/lang/String/charAt(int)
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/Class/getSimpleName()
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/StringBuilder/append(int)
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/Thread/start()
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/Object/getClass()
net/npg/abattle/client/view/command/impl/ViewCommandImpl/execute()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/Math/sqrt(double)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/Math/ceil(double)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/String/charAt(int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator$FreeTypeBitmapFontData/setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/Character/valueOf(char)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/Math/min(int,int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/Math/abs(int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/nio/ByteBuffer/get(int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/Math/max(int,int)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#com/badlogic/gdx/graphics/Texture/bind()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator$FreeTypeBitmapFontData/setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/graphics/g2d/freetype/FreeTypeFontGenerator/createGlyph(char,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Stroker,float,java.lang.String,com.badlogic.gdx.graphics.g2d.PixmapPacker)#java/lang/StringBuilder/toString()
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#net/npg/abattle/server/model/impl/ServerPlayerImpl/getCreationTime()
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/append(int)
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#net/npg/abattle/server/model/impl/ServerPlayerImpl/getId()
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/append(boolean)
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/append(long)
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#java/lang/StringBuilder/toString()
net/npg/abattle/server/model/impl/ServerPlayerImpl/toString()#net/npg/abattle/server/model/impl/ServerPlayerImpl/getName()
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/add(java.math.BigInteger)
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/RoundingMode/ordinal()
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/valueOf(long)
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/intValue()
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/longValue()
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/pow(int)
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/lang/AssertionError/AssertionError()
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/equals(java.lang.Object)
com/google/common/math/BigIntegerMath/sqrt(java.math.BigInteger,java.math.RoundingMode)#java/math/BigInteger/compareTo(java.math.BigInteger)
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/ServerSocketChannel/configureBlocking(boolean)
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/net/ServerSocket/bind(java.net.SocketAddress)
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/spi/SelectorProvider/openServerSocketChannel()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/Selector/provider()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/ServerSocketChannel/socket()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/Selector/wakeup()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Server/bind(java.net.InetSocketAddress,java.net.InetSocketAddress)#java/nio/channels/ServerSocketChannel/register(java.nio.channels.Selector,int)
com/esotericsoftware/kryonet/Server/update(int)#java/util/Iterator/hasNext()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Server/update(int)#java/net/InetSocketAddress/equals(java.lang.Object)
com/esotericsoftware/kryonet/Server/update(int)#java/io/IOException/getMessage()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/DatagramChannel/socket()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/SelectionKey/channel()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Server/update(int)#java/util/Iterator/remove()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/Thread/sleep(long)
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/Selector/selectedKeys()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/Class/getSimpleName()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/SelectionKey/attachment()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/Server/update(int)#java/net/DatagramSocket/getLocalPort()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/Thread/currentThread()
com/esotericsoftware/kryonet/Server/update(int)#java/util/Iterator/next()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/SelectionKey/readyOps()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/Selector/select(long)
com/esotericsoftware/kryonet/Server/update(int)#java/util/Set/iterator()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Server/update(int)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/Server/update(int)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/ServerSocketChannel/accept()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/SelectableChannel/close()
com/esotericsoftware/kryonet/Server/update(int)#java/nio/channels/Selector/selectNow()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Iterator/hasNext()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Map$Entry/getKey()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Collection/isEmpty()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Collection/size()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Iterator/next()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Set/iterator()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Collection/clear()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Map$Entry/getValue()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Map/entrySet()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Iterator/remove()
com/google/common/collect/FilteredEntryMultimap$AsMap$3/remove(java.lang.Object)#java/util/Collection/equals(java.lang.Object)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Iterator/hasNext()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/lang/Long/valueOf(long)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Map$Entry/getKey()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Map/size()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Set/iterator()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Map$Entry/getValue()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/List/iterator()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Map/entrySet()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Iterator/next()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/startupTimes()#java/util/List/add(java.lang.Object)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/String/valueOf(java.lang.Object)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/util/Iterator/hasNext()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/StringBuilder/append(java.lang.String)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/util/Iterator/next()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/StringBuilder/StringBuilder(int)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/StringBuilder/toString()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/lang/String/length()
com/google/common/util/concurrent/ServiceManager$ServiceManagerState/markReady()#java/util/List/add(java.lang.Object)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/keySet()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#net/npg/abattle/server/model/ServerPlayer/getId()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#net/npg/abattle/server/model/ServerGame/getBoard()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/StringBuilder/append(int)
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#net/npg/abattle/server/model/ServerBoard/getLinks()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/StringBuilder/toString()
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#net/npg/abattle/server/model/ServerCell/isAdjacentTo(net.npg.abattle.common.model.Cell)
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#net/npg/abattle/server/model/ServerCell/isOwner(net.npg.abattle.common.model.Player)
net/npg/abattle/server/game/impl/GameEnvironmentImpl/link(net.npg.abattle.server.model.ServerPlayer,net.npg.abattle.common.utils.IntPoint,net.npg.abattle.common.utils.IntPoint,boolean)#java/lang/AssertionError/AssertionError()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#java/lang/Math/max(float,float)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getStage()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getColor()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/validate()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/io/File/getName()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/io/File/File(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/replace(char,char)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/lastIndexOf(int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/setLength(int)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(char)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(boolean)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(long)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/length()
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/append(double)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#com/esotericsoftware/jsonbeans/OutputType/quoteValue(java.lang.Object)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#com/esotericsoftware/jsonbeans/OutputType/quoteName(java.lang.String)
com/esotericsoftware/jsonbeans/JsonValue/prettyPrint(com.esotericsoftware.jsonbeans.JsonValue,java.lang.StringBuilder,int,com.esotericsoftware.jsonbeans.JsonValue$PrettyPrintSettings)#java/lang/StringBuilder/toString()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/concurrent/locks/Lock/unlock()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Iterator/hasNext()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/String/length()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Set/removeAll(java.util.Collection)
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Iterator/next()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Set/containsAll(java.util.Collection)
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Set/iterator()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Map$Entry/getValue()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Map/entrySet()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/StringBuilder/toString()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/Map$Entry/getKey()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/concurrent/locks/ReadWriteLock/writeLock()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/util/concurrent/locks/Lock/lock()
com/google/common/eventbus/EventBus/unregister(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/util/concurrent/locks/ReentrantLock/tryLock()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/lang/Thread/interrupted()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/util/concurrent/locks/ReentrantLock/isHeldByCurrentThread()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/util/concurrent/locks/ReentrantLock/tryLock(long,java.util.concurrent.TimeUnit)
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/util/concurrent/locks/ReentrantLock/unlock()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/lang/System/nanoTime()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/lang/Thread/currentThread()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/lang/Thread/interrupt()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/lang/IllegalMonitorStateException/IllegalMonitorStateException()
com/google/common/util/concurrent/Monitor/enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit)#java/util/concurrent/TimeUnit/toNanos(long)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Iterator/hasNext()
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/lang/Math/max(int,int)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/ArrayList/subList(int,int)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/ArrayList/size()
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/lang/Math/min(int,int)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Arrays/asList(java.lang.Object[])
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Iterator/next()
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Arrays/sort(java.lang.Object[],int,int,java.util.Comparator)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/ArrayList/trimToSize()
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/Collections/unmodifiableList(java.util.List)
com/google/common/collect/Ordering/leastOf(java.util.Iterator,int)#java/util/List/clear()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getFilesDir()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/io/File/getAbsolutePath()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/os/Handler/Handler()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/forName(java.lang.String)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/view/Window/setFlags(int,int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/newInstance()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getWindow()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/requestWindowFeature(int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/view/Window/clearFlags(int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getAssets()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/position()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/get(float[],int,int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/keySet()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/Class/isInterface()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/Class/newInstance()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/util/ArrayList/isEmpty()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/util/ArrayList/ArrayList()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/setLength(int)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#com/esotericsoftware/reflectasm/AccessClassLoader/loadClass(java.lang.String)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/StringBuilder(int)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/reflect/Method/getReturnType()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/util/ArrayList/size()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/reflect/Method/getName()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/String/replace(char,char)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/StringBuilder/append(char)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/lang/String/startsWith(java.lang.String)
com/esotericsoftware/reflectasm/MethodAccess/get(java.lang.Class)#java/util/ArrayList/get(int)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/DataInputStream/readByte()
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/IOException/initCause(java.lang.Throwable)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/String/length()
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/DataInputStream/readLong()
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/StringBuilder/toString()
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/IOException/IOException(java.lang.String)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/String/valueOf(java.lang.Object)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#com/google/common/hash/BloomFilterStrategies/values()
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/lang/StringBuilder/append(int)
com/google/common/hash/BloomFilter/readFrom(java.io.InputStream,com.google.common.hash.Funnel)#java/io/DataInputStream/readInt()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/InputStream/read(byte[])
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/IOException/getMessage()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream,int)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/InputStream/read(byte[],int,int)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/trim()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#sun/misc/Unsafe/objectFieldOffset(java.lang.reflect.Field)
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/util/List/add(java.lang.Object)
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/Class/isPrimitive()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/util/List/size()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/reflect/Field/getType()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/StringBuilder/append(long)
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtilImpl/createUnsafeCacheFieldsAndRegions(java.util.List,java.util.List,int,com.esotericsoftware.kryo.util.IntArray)#java/util/List/get(int)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/ClassLoader/getResource(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/net/URL/URL(java.net.URL,java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/net/URL/toString()
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/length()
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/substring(int,int)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/concat(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/replace(char,char)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/String(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/endsWith(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/io/IOException/IOException(java.lang.String)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/String/valueOf(java.lang.Object)
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/Object/getClass()
com/google/common/base/FinalizableReferenceQueue$DecoupledLoader/getBaseUrl()#java/lang/Class/getClassLoader()
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/DataOutputStream/writeInt(int)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/lang/StringBuilder/append(java.lang.String)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/lang/Error/Error(java.lang.String)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/IOException/getMessage()
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/lang/StringBuilder/StringBuilder()
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/DataOutputStream/writeShort(int)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/DataOutputStream/writeByte(int)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/lang/StringBuilder/toString()
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/objenesis/instantiator/basic/ObjectInputStreamInstantiator$MockStream/initialize()#java/io/ByteArrayOutputStream/toByteArray()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/ResolvedConstructor/getResolvedParameters()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/lang/Object/toString()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/ArrayList/isEmpty()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/regex/Matcher/matches()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/findTypeGlobally(java.lang.Class)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/Collections/unmodifiableList(java.util.List)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/findAnnotation(org.eclipse.xtend.lib.macro.declaration.Type)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addWarning(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/addError(org.eclipse.xtend.lib.macro.declaration.Element,java.lang.String)
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getBody()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getParameters()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/getDeclaringType()
org/eclipse/xtend/lib/annotations/FinalFieldsConstructorProcessor$Util/makeFinalFieldsConstructor(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/Thread/sleep(long)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/System/nanoTime()
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/StringBuilder/append(int)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/InterruptedException/getMessage()
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/StringBuilder/append(float)
net/npg/abattle/client/view/main/BoardControl/render()#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/Class/getSimpleName()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/String/length()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/Class/isPrimitive()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/reflect/Method/getDeclaringClass()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/reflect/Method/getReturnType()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/Class/getName()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/String/substring(int,int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/reflect/Method/getName()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/util/Arrays/deepToString(java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/reflect/InvocationTargetException/getCause()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/rmi/ObjectSpace/invoke(com.esotericsoftware.kryonet.Connection,java.lang.Object,com.esotericsoftware.kryonet.rmi.ObjectSpace$InvokeMethod)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/ArrayList/ArrayList()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/Class/getDeclaredMethods()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/PriorityQueue/add(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/Math/max(int,int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/reflect/Method/getModifiers()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/reflect/Method/isSynthetic()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/ArrayList/size()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/reflect/Modifier/isPrivate(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/HashMap/get(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/PriorityQueue/PriorityQueue(int,java.util.Comparator)
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/PriorityQueue/poll()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/PriorityQueue/size()
com/esotericsoftware/kryonet/rmi/ObjectSpace/getMethods(com.esotericsoftware.kryo.Kryo,java.lang.Class)#java/util/ArrayList/get(int)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/util/ArrayList/remove(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/util/ArrayList/ArrayList(java.util.Collection)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/util/Arrays/asList(java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/util/ArrayList/toArray(java.lang.Object[])
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/util/ArrayList/size()
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/rmi/ObjectSpace/removeConnection(com.esotericsoftware.kryonet.Connection)#java/lang/StringBuilder/toString()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InetAddress/isLoopbackAddress()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InterfaceAddress/getAddress()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InetAddress/toString()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InterfaceAddress/getBroadcast()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/lang/StringBuilder/toString()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InetAddress/isAnyLocalAddress()
net/npg/abattle/communication/network/impl/AddressFinder/getInterfaceAddress(java.net.InterfaceAddress)#java/net/InetAddress/isLinkLocalAddress()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/net/InetAddress/getLocalHost()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/net/NetworkInterface/getNetworkInterfaces()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/util/Enumeration/hasMoreElements()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/util/Enumeration/nextElement()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/net/UnknownHostException/getMessage()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/lang/StringBuilder/toString()
net/npg/abattle/communication/network/impl/AddressFinder/getInetAddress()#java/net/SocketException/getMessage()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#android/widget/RelativeLayout/addView(android.view.View)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/getWindow()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/requestWindowFeature(int)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#java/lang/RuntimeException/RuntimeException(java.lang.String)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/getPackageManager()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#android/view/Window/setFlags(int,int)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/setContentView(android.view.View)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#com/badlogic/gdx/backends/android/AndroidApplication/onCreate(android.os.Bundle)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#net/npg/abattle/ABattleActivity/getPackageName()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#android/view/Window/clearFlags(int)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#android/widget/RelativeLayout/RelativeLayout(android.content.Context)
net/npg/abattle/ABattleActivity/onCreate(android.os.Bundle)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain)
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/reflect/Method/setAccessible(boolean)
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/Integer/valueOf(int)
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/Object/getClass()
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#com/esotericsoftware/reflectasm/AccessClassLoader/getParent()
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/reflect/Method/isAccessible()
com/esotericsoftware/reflectasm/AccessClassLoader/defineClass(java.lang.String,byte[])#java/lang/Class/getProtectionDomain()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Iterator/next()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/entrySet()
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
com/google/common/collect/Maps/doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map)#java/util/Set/iterator()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/util/Iterator/hasNext()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#net/npg/abattle/client/view/screens/LocalScreen/getWidgets()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/util/Iterator/next()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/lang/Integer/valueOf(int)
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/lang/StringBuilder/toString()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/net/InetAddress/getHostAddress()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/util/ArrayList/iterator()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#com/badlogic/gdx/scenes/scene2d/ui/Table/clear()
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/client/view/screens/LocalScreen/fillTable()#java/lang/StringBuilder/append(java.lang.Object)
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Iterator/hasNext()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Collections/max(java.util.Collection)
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/lang/Character/valueOf(char)
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Set/iterator()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/lang/String/toCharArray()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/lang/Character/charValue()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Map/isEmpty()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Iterator/next()
com/google/common/escape/ArrayBasedEscaperMap/createReplacementArray(java.util.Map)#java/util/Map/keySet()
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/nio/ByteBuffer/position()
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/nio/ByteBuffer/get(byte[],int,int)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/lang/String/String(byte[],int,int)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/nio/ByteBuffer/capacity()
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/nio/ByteBuffer/position(int)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/nio/ByteBuffer/limit(int)
com/esotericsoftware/kryonet/JsonSerialization/write(com.esotericsoftware.kryonet.Connection,java.nio.ByteBuffer,java.lang.Object)#java/io/OutputStreamWriter/flush()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Iterator/hasNext()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/StringBuilder/append(int)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/String/length()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Map/values()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Iterator/next()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Set/iterator()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/util/Map/containsKey(java.lang.Object)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/reflect/Method/isBridge()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/StringBuilder/toString()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/Class/getMethods()
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/String/valueOf(java.lang.Object)
com/google/common/eventbus/AnnotatedSubscriberFinder/getAnnotatedMethodsInternal(java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/String/valueOf(java.lang.Object)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/String/substring(int,int)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/String/substring(int)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/String/indexOf(java.lang.String,int)
com/google/common/base/Preconditions/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/util/Iterator/next()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/util/Set/iterator()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/util/Map/entrySet()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/util/Map$Entry/getKey()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/String/length()
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/collect/ImmutableRangeMap$Builder/put(com.google.common.collect.Range,java.lang.Object)#java/lang/StringBuilder/toString()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/util/Iterator/hasNext()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/lang/StringBuilder/append(int)
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/util/Iterator/next()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/util/Set/iterator()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#net/npg/abattle/common/model/Player/getId()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#java/lang/StringBuilder/toString()
net/npg/abattle/common/model/client/impl/ClientStructureCopy/findPlayer(com.google.common.base.Optional)#net/npg/abattle/common/model/client/impl/ClientGameImpl/getPlayers()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/Object/getClass()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/reflect/Field/getDeclaringClass()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/reflect/Field/getType()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/Class/getName()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil/processAnnotatedFields(com.esotericsoftware.kryo.serializers.FieldSerializer)#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setY(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/max(float,float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setWidth(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/clearActions()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/min(float,float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setX(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/localToStageCoordinates(com.badlogic.gdx.math.Vector2)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getPrefHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/validate()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/updateVisualScroll()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/utils/ArraySelection/set(java.lang.Object)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/scrollTo(float,float,float,float,boolean,boolean)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getStyle()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/isTouchable()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/min(int,int)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getScrollBarWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setHeight(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getPrefWidth()
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/reflect/Field/getName()
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/getGenerics()
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/create(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/getField(java.lang.String)
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/String/equals(java.lang.Object)
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/getFields()
com/esotericsoftware/kryo/serializers/CompatibleFieldSerializer/read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)#java/lang/StringBuilder/toString()
com/badlogic/gdx/files/FileHandle/read()#java/lang/Class/getResourceAsStream(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/isDirectory()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/exists()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/read()#java/lang/String/replace(char,char)
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/read()#java/io/FileInputStream/FileInputStream(java.io.File)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/getPath()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/toString()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/read(char[])
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(char[],int,int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/toString()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/server/model/ServerPlayer/getId()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/util/Collection/size()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/server/model/ServerGame/getPlayers()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/common/error/BaseException/getMessage()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/util/Collection/contains(java.lang.Object)
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/toString()
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/communication/command/CommandQueueServer/addCommand(net.npg.abattle.communication.command.GameCommand,net.npg.abattle.communication.command.CommandType,java.util.List)
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/Integer/valueOf(int)
net/npg/abattle/server/game/impl/GamesManagerImpl/leaveGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/server/game/GameEnvironment/getId()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/server/model/ServerPlayer/getId()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/append(java.lang.String)
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/server/model/ServerGame/getPlayers()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/StringBuilder()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#net/npg/abattle/common/error/BaseException/getMessage()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/util/Collection/contains(java.lang.Object)
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/append(java.lang.Object)
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/StringBuilder/toString()
net/npg/abattle/server/game/impl/GamesManagerImpl/joinGame(net.npg.abattle.server.game.GameEnvironment,net.npg.abattle.server.model.ServerPlayer)#java/lang/Integer/valueOf(int)
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/lang/StringBuilder/append(java.lang.CharSequence)
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/FieldDeclaration/getSimpleName()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/Iterator/hasNext()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/Iterator/next()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/setVisibility(org.eclipse.xtend.lib.macro.declaration.Visibility)
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/lang/Iterable/iterator()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/ClassDeclaration/getDeclaredFields()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/setBody(org.eclipse.xtend.lib.macro.declaration.CompilationStrategy)
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/ClassDeclaration/getSimpleName()
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableConstructorDeclaration/addParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference)
net/npg/abattle/common/utils/TransferDataProcessor$1/apply(org.eclipse.xtend.lib.macro.declaration.MutableConstructorDeclaration)#java/util/List/add(java.lang.Object)
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/length()
com/google/common/base/CharMatcher/precomputedInternal()#java/util/BitSet/cardinality()
com/google/common/base/CharMatcher/precomputedInternal()#java/util/BitSet/flip(int,int)
com/google/common/base/CharMatcher/precomputedInternal()#java/util/BitSet/BitSet()
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/substring(int,int)
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/concat(java.lang.String)
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/endsWith(java.lang.String)
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/valueOf(java.lang.Object)
com/google/common/base/CharMatcher/precomputedInternal()#java/lang/String/String(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/toLowerCase()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/length()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/String(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/charAt(int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/trim()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/replace(char,char)
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/ArrayList/ArrayList(int)
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/Iterator/hasNext()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#net/npg/abattle/server/model/ServerBoard/getLinks()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/Collections/emptyList()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/Iterator/next()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/ArrayList/add(java.lang.Object)
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#net/npg/abattle/server/model/ServerCell/getOwner()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/lang/Math/min(double,double)
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#net/npg/abattle/server/model/ServerCell/getStrength()
net/npg/abattle/server/logic/SimpleDistributeArmies/calcMaxToMoveArmies(net.npg.abattle.server.model.ServerCell)#java/util/List/iterator()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(java.lang.String,int)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetManager/openFd(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/path()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(android.content.res.AssetFileDescriptor,int)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.io.FileDescriptor,long,long)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetManager/openFd(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/prepare()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/path()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getStartOffset()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/MediaPlayer()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getFileDescriptor()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getLength()
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/String/valueOf(java.lang.Object)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/StringBuilder/append(int)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/String/length()
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/String/concat(java.lang.String)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/Character/digit(char,int)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/StringBuilder/toString()
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/String/charAt(int)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/String/String(java.lang.String)
com/google/common/primitives/UnsignedLongs/parseUnsignedLong(java.lang.String,int)#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/util/ArrayList/iterator()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/nio/ByteBuffer/allocate(int)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/DatagramSocket/send(java.net.DatagramPacket)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/InetAddress/getByAddress(byte[])
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/nio/ByteBuffer/get(byte[])
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/util/Collections/list(java.util.Enumeration)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/util/Iterator/next()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/NetworkInterface/getNetworkInterfaces()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/NetworkInterface/getInetAddresses()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/nio/ByteBuffer/limit()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/DatagramPacket/DatagramPacket(byte[],int,java.net.InetAddress,int)
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/util/Iterator/hasNext()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/nio/ByteBuffer/flip()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/net/InetAddress/getAddress()
com/esotericsoftware/kryonet/Client/broadcast(int,java.net.DatagramSocket)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/Object/wait(long)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/nio/ByteBuffer/capacity()
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/net/SocketTimeoutException/SocketTimeoutException(java.lang.String)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/Thread/currentThread()
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/nio/channels/Selector/wakeup()
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/Client/connect(int,java.net.InetAddress,int,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/util/ArrayList/ArrayList()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/net/DatagramSocket/DatagramSocket()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/util/List/add(java.lang.Object)
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/net/DatagramSocket/close()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/net/DatagramSocket/receive(java.net.DatagramPacket)
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/net/DatagramSocket/setSoTimeout(int)
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Client/discoverHosts(int,int)#java/net/DatagramPacket/getAddress()
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/net/DatagramSocket/DatagramSocket()
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/net/DatagramSocket/close()
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/net/DatagramSocket/receive(java.net.DatagramPacket)
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/net/DatagramSocket/setSoTimeout(int)
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Client/discoverHost(int,int)#java/net/DatagramPacket/getAddress()
com/esotericsoftware/kryonet/Client/update(int)#com/esotericsoftware/kryonet/Client/notifyConnected()
com/esotericsoftware/kryonet/Client/update(int)#com/esotericsoftware/kryonet/Client/isIdle()
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/DatagramChannel/socket()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/Object/notifyAll()
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/Selector/selectNow()
com/esotericsoftware/kryonet/Client/update(int)#java/util/Iterator/remove()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/Thread/sleep(long)
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/Selector/selectedKeys()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/Class/getSimpleName()
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/SelectionKey/attachment()
com/esotericsoftware/kryonet/Client/update(int)#java/util/Iterator/hasNext()
com/esotericsoftware/kryonet/Client/update(int)#com/esotericsoftware/kryonet/Client/notifyReceived(java.lang.Object)
com/esotericsoftware/kryonet/Client/update(int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Client/update(int)#com/esotericsoftware/kryonet/Client/setConnected(boolean)
com/esotericsoftware/kryonet/Client/update(int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/kryonet/Client/update(int)#com/esotericsoftware/kryonet/Client/notifyIdle()
com/esotericsoftware/kryonet/Client/update(int)#java/net/DatagramSocket/getLocalPort()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/Thread/currentThread()
com/esotericsoftware/kryonet/Client/update(int)#java/util/Iterator/next()
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/SelectionKey/readyOps()
com/esotericsoftware/kryonet/Client/update(int)#java/nio/channels/Selector/select(long)
com/esotericsoftware/kryonet/Client/update(int)#java/util/Set/iterator()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryonet/Client/update(int)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/System/currentTimeMillis()
com/esotericsoftware/kryonet/Client/update(int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/List/size()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/List/get(int)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/Locale/equals(java.lang.Object)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getVariant()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/ArrayList/ArrayList(int)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/lang/String/length()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/Locale(java.lang.String)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/List/size()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getCountry()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getLanguage()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/Locale(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Integer/intValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getKey()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Float/floatValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map/entrySet()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Boolean/booleanValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Long/longValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/validate()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getOriginX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getOriginY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getScaleY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getRotation()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getScaleX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getColor()
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/String/valueOf(java.lang.Object)
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/String/length()
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/util/Iterator/next()
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/Iterable/iterator()
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/String/concat(java.lang.String)
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/util/Collection/add(java.lang.Object)
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/google/common/collect/ImmutableMultimap$Builder/putAll(java.lang.Object,java.lang.Iterable)#java/lang/String/String(java.lang.String)
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Map$Entry/getKey()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Map$Entry/getValue()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Map/entrySet()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Map/values()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Iterator/next()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/List/iterator()
com/google/common/collect/ImmutableMultimap$Builder/build()#java/util/Collection/iterator()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/Class/getModifiers()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/Class/getEnclosingClass()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/Class/getConstructor(java.lang.Class[])
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/reflect/Constructor/setAccessible(boolean)
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/Class/isMemberClass()
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy/newInstantiatorOf(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildTarget/newDefaultTarget(com.badlogic.gdx.jnigen.BuildTarget$TargetOs,boolean)
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildConfig/BuildConfig(java.lang.String)
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/generate()
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/generate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget[])
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/NativeCodeGenerator()
com/badlogic/gdx/graphics/g2d/freetype/FreetypeBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/AntScriptGenerator()
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/content/Context/getString(int)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setText(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/EditText(android.content.Context)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setView(android.view.View)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/show()
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setHint(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setSingleLine()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/newInstance()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/getModifiers()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/getEnumConstants()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/isArray()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/reflect/Constructor/setAccessible(boolean)
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/isMemberClass()
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/esotericsoftware/jsonbeans/Json/newInstance(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/reflect/Field/getName()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/util/Iterator/hasNext()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/util/Iterator/next()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/getDefaultValues(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/reflect/Field/getName()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/util/Iterator/hasNext()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/util/Iterator/next()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/reflect/Field/getType()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/reflect/Field/get(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/Class/getName()
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeFields(java.lang.Object)#java/lang/Object/getClass()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/reflect/Array/getLength(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/next()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Collection/iterator()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/reflect/Array/get(java.lang.Object,int)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isArray()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Object/equals(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/hasNext()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getComponentType()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getKey()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isPrimitive()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Set/iterator()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Object/getClass()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getValue()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map/entrySet()
com/esotericsoftware/jsonbeans/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getEnumConstants()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/reflect/Field/getName()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/reflect/Field/getType()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)#java/lang/Object/getClass()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/util/ArrayList/ArrayList()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/getComponentType()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/forName(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/isInterface()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/isArray()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Boolean/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Object/toString()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Long/valueOf(long)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Byte/valueOf(byte)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Double/valueOf(double)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/String/charAt(int)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Byte/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Short/valueOf(short)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Float/valueOf(float)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/String/equals(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/getName()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Double/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Character/valueOf(char)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Boolean/valueOf(boolean)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/util/List/add(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Short/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Integer/valueOf(int)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Float/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Integer/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Class/getEnumConstants()
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Float/toString(float)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/Long/valueOf(java.lang.String)
com/esotericsoftware/jsonbeans/Json/readValue(java.lang.Class,java.lang.Class,com.esotericsoftware.jsonbeans.JsonValue)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/Class/getSuperclass()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Field/setAccessible(boolean)
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/util/ArrayList/size()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Field/isAccessible()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/Class/getDeclaredFields()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Field/getModifiers()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Field/isSynthetic()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/util/ArrayList/get(int)
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Field/getName()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/util/ArrayList/ArrayList()
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/esotericsoftware/jsonbeans/Json/cacheFields(java.lang.Class)#java/lang/reflect/Modifier/isTransient(int)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/StringBuilder/append(int)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/String/length()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/String/valueOf(java.lang.Object)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/reflect/TypeResolver$WildcardCapturer/capture(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getSimpleName()
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setVisibility(org.eclipse.xtend.lib.macro.declaration.Visibility)
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/setBody(org.eclipse.xtend2.lib.StringConcatenationClient)
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableMethodDeclaration/addParameter(java.lang.String,org.eclipse.xtend.lib.macro.declaration.TypeReference)
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.Element)
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/getPrimitiveVoid()
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/isStatic()
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/declaration/MutableFieldDeclaration/getType()
org/eclipse/xtend/lib/annotations/AccessorsProcessor$Util$8/apply(org.eclipse.xtend.lib.macro.declaration.MutableMethodDeclaration)#org/eclipse/xtend/lib/macro/TransformationContext/setPrimarySourceElement(org.eclipse.xtend.lib.macro.declaration.MutableElement,org.eclipse.xtend.lib.macro.declaration.Element)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/util/Iterator/hasNext()
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/util/Iterator/next()
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/util/Set/iterator()
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/String/valueOf(java.lang.Object)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/String/length()
com/google/common/collect/ImmutableRangeSet$Builder/add(com.google.common.collect.Range)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/Math/max(int,int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/e(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/view/Surface/isValid()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/service/wallpaper/WallpaperService$Engine/onVisibilityChanged(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/isVisible()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/view/SurfaceHolder/getSurface()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/Error/Error(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder/removeCallback(android.view.SurfaceHolder$Callback)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onSurfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/view/Surface/isValid()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/service/wallpaper/WallpaperService$Engine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/isPreview()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/view/SurfaceHolder/getSurface()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onSurfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onCreate(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Thread/currentThread()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Thread/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/view/SurfaceHolder$Callback/surfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/toString()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getStage()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMinWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/setBounds(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMaxHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMaxWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#java/lang/Math/round(float)
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getParent()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getX()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMinHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getY()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Iterator/hasNext()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Map$Entry/getKey()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Collection/isEmpty()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Collection/size()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Iterator/next()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Set/iterator()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Collection/clear()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Map$Entry/getValue()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Map/entrySet()
com/google/common/collect/FilteredEntryMultimap/removeEntriesIf(com.google.common.base.Predicate)#java/util/Iterator/remove()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/Class/isArray()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/Class/getSimpleName()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/Class/isPrimitive()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/StringBuilder/StringBuilder(int)
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/Class/getName()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/esotericsoftware/kryo/util/Util/className(java.lang.Class)#java/lang/StringBuilder/toString()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Iterator/hasNext()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Iterator/next()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Set/isEmpty()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/Iterable/iterator()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Set/iterator()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Map/containsKey(java.lang.Object)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Set/add(java.lang.Object)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/StringBuilder/toString()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/String/valueOf(java.lang.Object)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/lang/String/length()
com/google/common/cache/LocalCache/getAll(java.lang.Iterable)#java/util/Map/get(java.lang.Object)
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Iterator/hasNext()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Map$Entry/getValue()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Map/entrySet()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/StringBuilder/toString()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/String/valueOf(java.lang.Object)
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Map$Entry/getKey()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/String/length()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/Thread/currentThread()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/Thread/interrupt()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Iterator/next()
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/concurrent/ExecutionException/ExecutionException(java.lang.Throwable)
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/cache/LocalCache/loadAll(java.util.Set,com.google.common.cache.CacheLoader)#java/util/Set/iterator()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Class/getName()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Object/getClass()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/toString()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/util/HashMap/containsKey(java.lang.Object)
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/lang/Throwable/getCause()
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/esotericsoftware/kryonet/Listener$ReflectionListener/received(com.esotericsoftware.kryonet.Connection,java.lang.Object)#java/util/HashMap/get(java.lang.Object)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/String/String(char[])
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/String/length()
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/StringBuilder/toString()
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/StringBuilder/append(long)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/Integer/valueOf(int)
com/google/common/base/Strings/repeat(java.lang.String,int)#java/lang/String/getChars(int,int,char[],int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/position()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/getInt(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/readInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/read(byte[])
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/getInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/wrap(byte[])
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/order()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/isDirect()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/get()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/put(byte[],int,int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/String/endsWith(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/Math/max(int,int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/IntBuffer/get(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/slice()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/Integer/toHexString(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/getInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/FilenameFilter/accept(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/FileFilter/accept(java.io.File)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/String/String(char[],int,int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/remove(int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/ArrayList(int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/Long/parseLong(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/String/String(char[])
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/io/PrintStream/println()
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/Double/parseDouble(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/clear()
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(char)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/String/indexOf(int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/io/PrintStream/println(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/String/equals(java.lang.Object)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/add(java.lang.Object)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/size()
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(double)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/util/ArrayList/get(int)
com/esotericsoftware/jsonbeans/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/String/length()
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(char[])
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(char)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/toString()
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/String/charAt(int)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/Character/toChars(int)
com/esotericsoftware/jsonbeans/JsonReader/unescape(java.lang.String)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/flip()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/limit(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position(int)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#java/util/concurrent/atomic/AtomicReferenceArray/set(int,java.lang.Object)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#java/util/concurrent/atomic/AtomicReferenceArray/length()
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/unlock()
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#java/util/concurrent/atomic/AtomicReferenceArray/get(int)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/postReadCleanup()
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#java/util/Queue/remove(java.lang.Object)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/postWriteCleanup()
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getEntry(java.lang.Object,int)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/enqueueNotification(java.lang.Object,int,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/preWriteCleanup()
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#java/lang/Thread/holdsLock(java.lang.Object)
com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/getOrCompute(java.lang.Object,int,com.google.common.base.Function)#com/google/common/collect/ComputingConcurrentHashMap$ComputingSegment/lock()
