android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/hasMessages(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/clear()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/obtainMessage(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/unbindService(android.content.ServiceConnection)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/Intent(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/bindService(android.content.Intent,android.content.ServiceConnection,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Context/getPackageManager()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/Object/equals(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/containsKey(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/List/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getKey()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/next()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/contains(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getValue()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/Intent()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/HashSet/HashSet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/entrySet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/add(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/isEmpty()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/peek()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/Integer/toString(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/pop()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/peek()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/remove()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/List/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/String/length()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/size()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/List/iterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/io/Writer/write(java.lang.String)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/InputStream/close()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/net/URL/openStream()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/InputStream/read()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/isAssignableFrom(java.lang.Class)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/get(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/getType()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/OutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/util/zip/GZIPOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/lang/String/String(byte[])
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#com/itextpdf/text/pdf/codec/Base64$InputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/File/length()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/Math/max(int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[])
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/read(byte[])
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayInputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/lang/String/getBytes()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#com/itextpdf/text/pdf/codec/Base64$InputStream/close()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/File/length()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/append(long)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/File/File(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Iterator/next()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/File/mkdirs()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/FileOutputStream/FileOutputStream(java.io.File)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/File/File(java.io.File,java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/util/Iterator/hasNext()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#android/os/Environment/getExternalStorageDirectory()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/File/exists()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/File/File(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/util/List/iterator()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/misc/PdfExporter/export(java.util.List,java.lang.String,java.lang.String,boolean)#java/io/File/toString()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/Long/toString(long)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/setLength(int)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/text/DecimalFormat/DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/text/DecimalFormat/format(double)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/Math/abs(double)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/length()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/charAt(int)
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getAdapter()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getListPaddingTop()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getDivider()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getListPaddingLeft()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getListPaddingRight()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getListPaddingBottom()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/getDividerHeight()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/measure(int,int)
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getCount()
android/support/v7/internal/widget/ListPopupWindow$DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getItemViewType(int)
android/support/v4/util/AtomicFile/startWrite()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/io/IOException/IOException(java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/io/File/exists()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/mkdir()
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/renameTo(java.io.File)
android/support/v4/util/AtomicFile/startWrite()#java/io/File/delete()
android/support/v4/util/AtomicFile/startWrite()#java/io/FileOutputStream/FileOutputStream(java.io.File)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/toString()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/getParentFile()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/remove(int)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Xml/newSerializer()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(float)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startDocument(java.lang.String,java.lang.Boolean)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/size()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/Context/openFileOutput(java.lang.String,int)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/ComponentName/flattenToString()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/setOutput(java.io.OutputStream,java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endDocument()
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(long)
android/support/v7/internal/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/io/FileOutputStream/close()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/isEmpty()
com/itextpdf/text/Jpeg2000/processParameters()#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/Jpeg2000/processParameters()#java/util/ArrayList/ArrayList()
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/setRight(float)
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/getHeight()
com/itextpdf/text/Jpeg2000/processParameters()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/Jpeg2000/processParameters()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/Jpeg2000/processParameters()#java/io/InputStream/close()
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/getWidth()
com/itextpdf/text/Jpeg2000/processParameters()#java/net/URL/openStream()
com/itextpdf/text/Jpeg2000/processParameters()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/setTop(float)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/buffer/ScatterBuffer/size()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/charts/ScatterChart$ScatterShape/ordinal()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/data/ScatterData/getIndexOfDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/buffer/ScatterBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getMaxVisibleCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSetCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getYValCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSets()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Map/keySet()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfStamperImp/addDirectTemplateSimple(com.itextpdf.text.pdf.PdfTemplate,com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/text/SimpleDateFormat/format(java.util.Date)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplateReference(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfName,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfSignatureAppearance$RenderingMode/ordinal()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/util/Calendar/getTime()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/concatCTM(float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addImage(com.itextpdf.text.Image,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/setLiteral(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/seek(long)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/OutputStream/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/Math/min(long,long)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/EOFException/EOFException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/read(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/length()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/File/delete()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfStamperImp/getPdfIndirectReference()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/seek(long)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Arrays/sort(long[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/length()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setPage(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/File/delete()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#[F/clone()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#com/itextpdf/text/pdf/PdfPCell/getRight()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#java/lang/StringBuilder/append(float)
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#com/itextpdf/text/pdf/PdfPCell/getLeft()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#com/itextpdf/text/pdf/PdfPCell/getTop()
com/itextpdf/text/pdf/PdfPRow/splitRow(com.itextpdf.text.pdf.PdfPTable,int,float)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/toUpperCase()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/charAt(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Character/getNumericValue(char)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/length()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int,int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/text/DecimalFormat/format(double)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/matches(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPoint/getDistributionPoint()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/CRLDistPoint/getDistributionPoints()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPointName/getType()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralName/toASN1Primitive()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralName/getTagNo()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/DERIA5String/getString()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralNames/getNames()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPointName/getName()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/DERIA5String/getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/CRLDistPoint/getInstance(java.lang.Object)
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Map/entrySet()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/lang/String/charAt(int)
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/lang/String/length()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Iterator/next()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Set/iterator()
com/itextpdf/text/pdf/DocumentFont/doType1TT()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/CFFFontSubset/getNames()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/getSubSet(java.util.HashSet,boolean)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/getFontDescriptor(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/Collection/toArray(java.lang.Object[])
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/addRangeUni(java.util.HashMap,boolean,boolean)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashMap/values()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/createSubsetPrefix()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/getFullFont()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/readCffFont()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashSet/HashSet(java.util.Collection)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashMap/keySet()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/LinearLayoutICS/onLayout(boolean,int,int,int,int)
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getSupportDividerWidth()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingRight()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getChildCount()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingLeft()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getWidth()
android/support/v7/internal/view/menu/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getChildAt(int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Long/bitCount(long)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getVisibility()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/setPadding(int,int,int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingRight()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getChildAt(int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/measure(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingLeft()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingTop()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getPaddingBottom()
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/setMeasuredDimension(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/view/menu/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getChildCount()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/length()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/trim()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int,int)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/io/File/File(java.lang.String,java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/io/File/getPath()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Process/getErrorStream()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/BufferedReader/close()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/PrintStream/print(java.lang.String)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Runtime/getRuntime()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/exists()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/mkdir()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/getAbsolutePath()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/delete()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Process/getInputStream()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Integer/toString(int)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/listFiles(java.io.FileFilter)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Runtime/exec(java.lang.String)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/BufferedReader/readLine()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/FileInputStream/close()
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/text/pdf/CompareTool/compare(java.lang.String,java.lang.String)#java/lang/Process/waitFor()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Iterator/next()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Set/iterator()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Properties/keySet()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Iterator/hasNext()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/toLowerCase()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/trim()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/length()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Integer/toHexString(int)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Float/toString(float)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/append(float)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#com/itextpdf/text/pdf/codec/PngImage$NewByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/InputStream/read()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/Math/abs(float)
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/setRight(float)
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/getHeight()
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/close()
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/Jpeg/processParameters()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/valueOf(int)
com/itextpdf/text/Jpeg/processParameters()#java/net/URL/openStream()
com/itextpdf/text/Jpeg/processParameters()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/Jpeg/processParameters()#java/net/URL/toString()
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/read(byte[])
com/itextpdf/text/Jpeg/processParameters()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/setTop(float)
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/read()
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/tagICC(com.itextpdf.text.pdf.ICC_Profile)
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/getWidth()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/size()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Set/iterator()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Iterator/next()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Map/keySet()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/isInEditMode()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/ViewGroup/onMeasure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#java/lang/Math/min(float,float)
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/isInEditMode()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/content/res/Resources/getDisplayMetrics()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/getParent()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/getResources()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/view/View/getTop()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/ensureTarget()#android/view/View/getHeight()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/InputStream/close()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getResponseCode()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/iterator()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getContent()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/Exception/getMessage()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/getPdfIndirectReference()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/indexOf(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/HashMap/entrySet()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/view/Window/getDecorView()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/view/View/post(java.lang.Runnable)
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/support/v7/app/ActionBarActivity/getResources()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/support/v7/app/ActionBarActivity/findViewById(int)
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/support/v7/app/ActionBarActivity/getWindow()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/support/v7/app/ActionBarActivity/obtainStyledAttributes(int[])
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#java/lang/String/equals(java.lang.Object)
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/content/res/TypedArray/recycle()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/support/v7/app/ActionBarActivityDelegateBase/getUiOptionsFromMetadata()
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/content/res/Resources/getBoolean(int)
android/support/v7/app/ActionBarActivityDelegateBase/ensureSubDecor()#android/view/View/setId(int)
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/util/TypedValue/TypedValue()
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/content/res/TypedArray/hasValue(int)
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/support/v7/app/ActionBarActivity/getResources()
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/support/v7/app/ActionBarActivity/obtainStyledAttributes(int[])
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/content/res/TypedArray/recycle()
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/util/TypedValue/getDimension(android.util.DisplayMetrics)
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/content/res/TypedArray/getValue(int,android.util.TypedValue)
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/support/v7/app/ActionBarActivity/getWindow()
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/util/TypedValue/getFraction(float,float)
android/support/v7/app/ActionBarActivityDelegateBase/applyFixedSizeWindow()#android/view/Window/setLayout(int,int)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#javax/xml/crypto/dom/DOMStructure/DOMStructure(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/apache/xml/security/utils/Base64/encode(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Document/createElement(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/text/SimpleDateFormat/format(java.util.Date)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Element/setIdAttribute(java.lang.String,boolean)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/util/Calendar/getTime()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/String/length()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/security/cert/Certificate/getEncoded()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/String/concat(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/String/substring(int)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#javax/xml/crypto/dsig/XMLSignatureFactory/newXMLObject(java.util.List,java.lang.String,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesBesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/getNextSibling()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMReference/digest(javax.xml.crypto.dsig.XMLSignContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMSignedInfo/canonicalize(javax.xml.crypto.XMLCryptoContext,java.io.ByteArrayOutputStream)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/xml/security/utils/Base64/encode(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/getParent()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Document/getDocumentElement()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMUtils/getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMSignedInfo/getReferences()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/DOMSignContext(java.security.Key,org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/getChildNodes()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.util.List,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/List/get(int)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature/marshal(org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/spec/XPathType/XPathType(java.lang.String,javax.xml.crypto.dsig.spec.XPathType$Filter)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/spec/XPathFilter2ParameterSpec/XPathFilter2ParameterSpec(java.util.List)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newDigestMethod(java.lang.String,javax.xml.crypto.dsig.spec.DigestMethodParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#javax/xml/crypto/dsig/XMLSignatureFactory/newSignatureMethod(java.lang.String,javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#javax/xml/crypto/dsig/XMLSignatureFactory/newSignedInfo(javax.xml.crypto.dsig.CanonicalizationMethod,javax.xml.crypto.dsig.SignatureMethod,java.util.List,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/util/Arrays/asList(java.lang.Object[])
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#javax/xml/crypto/dsig/XMLSignatureFactory/newCanonicalizationMethod(java.lang.String,javax.xml.crypto.dsig.spec.C14NMethodParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/signXadesBes(com.itextpdf.text.pdf.XmlSignatureAppearance,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[])#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/setInput(java.io.InputStream,java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/StringBuilder()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/clear()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Long/parseLong(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Float/parseFloat(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#android/content/Context/openFileInput(java.lang.String)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/String/equals(java.lang.Object)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/add(java.lang.Object)
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/io/FileInputStream/close()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Xml/newPullParser()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Canvas/saveLayerAlpha(android.graphics.RectF,int,int)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.Rect)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/view/animation/Interpolator/getInterpolation(float)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/RectF/set(float,float,float,float)
android/support/v4/widget/SwipeProgressBar/draw(android.graphics.Canvas)#android/graphics/Canvas/drawColor(int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/size()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/requestLayout()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/get(android.content.Context)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setFocusable(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setDescendantFocusability(int)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setWillNotDraw(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/getContext()
android/support/v4/view/ViewPager/initViewPager()#android/content/Context/getResources()
android/support/v4/view/ViewPager/initViewPager()#android/content/res/Resources/getDisplayMetrics()
android/support/v4/view/ViewPager/initViewPager()#android/widget/Scroller/Scroller(android.content.Context,android.view.animation.Interpolator)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/getScaledMaximumFlingVelocity()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getHeight()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/util/ArrayList/isEmpty()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/startScroll(int,int,int,int,int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/getDuration()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/timePassed()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/setMeasuredDimension(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getDefaultSize(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getEdgeFlags()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getParent()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/offsetLeftAndRight(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/os/SystemClock/uptimeMillis()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/obtain(long,long,int,float,float,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/recycle()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Integer/toHexString(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getWindowToken()
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/populate(int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/hasFocus()
android/support/v4/view/ViewPager/populate(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getId()
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getResources()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/populate(int)#android/view/View/requestFocus(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/ViewPager/populate(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/populate(int)#android/content/res/Resources/getResourceName(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/SoundEffectConstants/getContantForFocusDirection(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/requestFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Class/getSimpleName()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/ViewParent/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/getInstance()
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/playSoundEffect(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/Rect()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getBottom()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getBottom()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/lang/Runnable/run()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrY()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/addFocusables(java.util.ArrayList,int,int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getDescendantFocusability()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusableInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusable()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/computeScrollOffset()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getFinalX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/startScroll(int,int,int,int,int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/round(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/CertificateID/CertificateID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,java.math.BigInteger)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/jcajce/JcaX509CertificateHolder/JcaX509CertificateHolder(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/x509/Extension/Extension(org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/x509/Extensions/Extensions(org.spongycastle.asn1.x509.Extension[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/JcaDigestCalculatorProviderBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/addRequest(org.spongycastle.cert.ocsp.CertificateID)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/DEROctetString/getEncoded()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/OCSPReqBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#java/security/Security/addProvider(java.security.Provider)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/jce/provider/BouncyCastleProvider/BouncyCastleProvider()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/build()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/setRequestExtensions(org.spongycastle.asn1.x509.Extensions)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/build()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/DigestCalculatorProvider/get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/close()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/flush()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#org/spongycastle/cert/ocsp/OCSPReq/getEncoded()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/write(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getContent()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getOutputStream()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#org/spongycastle/cert/ocsp/OCSPResp/OCSPResp(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getResponseCode()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/setDoOutput(boolean)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/get(java.lang.Object)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/isDrawingCacheEnabled()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getDrawingCache()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(android.graphics.Rect)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/StringBuilder/toString()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/setDrawingCacheEnabled(boolean)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save(int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/getClipBounds(android.graphics.Rect)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingBottom()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/setMeasuredDimension(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/isInEditMode()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getBottom()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getWidth()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/setVisibility(int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getHeight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getWidth()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getBottom()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingBottom()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/get(byte[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/rewind()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/limit()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/CharBuffer/wrap(char[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/CharsetEncoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/Charset/newEncoder()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/get(byte[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/rewind()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/CharBuffer/wrap(char[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/CharsetEncoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/Charset/newEncoder()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/limit()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Rect/height()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Paint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Rect/width()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#java/lang/String/length()
com/github/mikephil/charting/utils/Utils/drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,android.graphics.PointF,float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/TextPaint/getFontMetrics(android.graphics.Paint$FontMetrics)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/StaticLayout/getLineCount()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/TextPaint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/StaticLayout/getWidth()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/TextPaint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,android.graphics.PointF,float)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/RadarChart/getXAxis()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getHeight()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getCenter()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getWidth()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#android/graphics/PointF/PointF(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/util/ListIterator/next()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/util/ListIterator/hasNext()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/Object/getClass()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Object/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.CharSequence)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#android/graphics/Rect/Rect()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Integer/numberOfTrailingZeros(int)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(boolean)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridColor()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarChart/getData()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/XAxisRendererBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridLineWidth()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/set(int,int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar(java.util.TimeZone)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/SimpleTimeZone/SimpleTimeZone(int,java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/clear()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Iterator/next()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/ListIterator/set(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/sort()#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/ListIterator/next()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Arrays/sort(java.lang.Object[],int,int)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Collections/sort(java.util.List)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/List/listIterator()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/getOptionsString()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/String/length()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(int)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/toString()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/Arrays/sort(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(char)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/containsOneOf(int)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/Arrays/sort(java.lang.Object[],int,int)
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/ClipData/getItemAt(int)
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/ClipData/getDescription()
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#java/lang/Object/equals(java.lang.Object)
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/Intent/getClipData()
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/ClipDescription/getLabel()
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/Intent/getExtras()
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/ClipData$Item/getIntent()
android/support/v4/app/RemoteInputCompatJellybean/getResultsFromIntent(android.content.Intent)#android/content/ClipDescription/hasMimeType(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/View/getBackground()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/View/performClick()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/graphics/Rect/Rect()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/View/getDrawingRect(android.graphics.Rect)
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/graphics/Rect/contains(int,int)
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/graphics/drawable/TransitionDrawable/startTransition(int)
pl/pcz/wimii/mind/mypressure/misc/ViewUtils$2/onTouch(android.view.View,android.view.MotionEvent)#android/graphics/drawable/TransitionDrawable/reverseTransition(int)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/util/ArrayList/ArrayList()
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/String/valueOf(java.lang.Object)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/StringBuilder/append(long)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/Exception/printStackTrace()
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#pl/pcz/wimii/mind/mypressure/kaj/KActivity/getString(int)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/System/currentTimeMillis()
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/String/valueOf(long)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/io/PrintStream/println(java.lang.String)
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#com/itextpdf/text/DocumentException/printStackTrace()
pl/pcz/wimii/mind/mypressure/dialogs/PdfExportDialog$3/doInBackground(java.lang.Void[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/pdf/PdfImage/writeContent(java.io.OutputStream)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/pdf/PdfImage/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/Image/hasBorders()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/pdf/PdfImage/getKeys()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/pdf/PdfName/getBytes()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#com/itextpdf/text/pdf/PdfImage/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,float,float,float,float,float,float,boolean)#java/util/HashMap/get(java.lang.Object)
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/SpinnerICS/getMeasuredWidth()
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/SpinnerICS/setMeasuredDimension(int,int)
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/SpinnerICS/getMeasuredHeight()
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/SpinnerICS/getBackground()
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/SpinnerICS/getAdapter()
android/support/v7/internal/widget/SpinnerICS/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getMeasuredWidth()
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/measure(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/internal/widget/SpinnerICS/getSelectedItemPosition()
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getItemViewType(int)
android/support/v7/internal/widget/SpinnerICS/measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getCount()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/resetList()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/removeAllViewsInLayout()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/getRight()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/setSelectedPositionInt(int)
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/getLeft()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/recycleAllViews()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/handleDataChanged()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/invalidate()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/view/View/offsetLeftAndRight(int)
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/setNextSelectedPositionInt(int)
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/view/View/getMeasuredWidth()
android/support/v7/internal/widget/SpinnerICS/layout(int,boolean)#android/support/v7/internal/widget/SpinnerICS/checkSelectionChanged()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/support/v7/internal/widget/SpinnerICS/hasFocus()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/ViewGroup/getChildMeasureSpec(int,int,int)
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/getMeasuredWidth()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/setSelected(boolean)
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/layout(int,int,int,int)
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/support/v7/internal/widget/SpinnerICS/generateDefaultLayoutParams()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/support/v7/internal/widget/SpinnerICS/addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/support/v7/internal/widget/SpinnerICS/getMeasuredHeight()
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/measure(int,int)
android/support/v7/internal/widget/SpinnerICS/setUpChild(android.view.View)#android/view/View/getMeasuredHeight()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/net/Uri/encode(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/app/SearchableInfo/getSuggestIntentAction()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/database/Cursor/getPosition()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/app/SearchableInfo/getSuggestIntentData()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setData(android.net.Uri)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/app/SearchableInfo/getSearchActivity()
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/Intent(java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/addFlags(int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.CharSequence)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/setDropDownWidth(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/view/View/getWidth()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/setDropDownHorizontalOffset(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView/getContext()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/view/View/getPaddingLeft()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/content/Context/getResources()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/graphics/Rect/Rect()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/getDropDownBackground()
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/text/SpannableStringBuilder/SpannableStringBuilder(java.lang.CharSequence)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/text/SpannableStringBuilder/setSpan(java.lang.Object,int,int,int)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/text/style/ImageSpan/ImageSpan(android.graphics.drawable.Drawable)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/content/res/Resources/getDrawable(int)
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/support/v7/widget/SearchView/getContext()
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/support/v7/widget/SearchView$SearchAutoComplete/getTextSize()
android/support/v7/widget/SearchView/getDecoratedHint(java.lang.CharSequence)#android/content/Context/getResources()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/res/Resources/getString(int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/Intent(android.content.Intent)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/support/v7/widget/SearchView/getResources()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoicePromptTextId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/Intent(java.lang.String)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/support/v7/widget/SearchView/getContext()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceMaxResults()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceLanguageId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceLanguageModeId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/os/Bundle/Bundle()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/ComponentName/flattenToShortString()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/PendingIntent/getActivity(android.content.Context,int,android.content.Intent,int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getSearchActivity()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/Integer/intValue()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#com/itextpdf/text/Paragraph/getFont()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#com/itextpdf/text/Paragraph/add(int,com.itextpdf.text.Element)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/length()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/toString()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/util/ArrayList/size()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/insert(int,int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/Math/min(int,int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/deleteCharAt(int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/insert(int,java.lang.String)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/util/ArrayList/get(int)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setVisibility(int)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setContentDescription(java.lang.CharSequence)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/support/v7/internal/widget/ActivityChooserView/getContext()
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/getVisibility()
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/content/Context/getPackageManager()
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/widget/LinearLayout/setBackgroundDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/internal/widget/ActivityChooserView/updateAppearance()#android/content/Context/getString(int,java.lang.Object[])
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/util/ArrayList/ArrayList(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/lang/String/format(java.lang.String,java.lang.Object[])
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/util/List/size()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/errorBox(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/getIntent()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/widget/Toast/show()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/text/Editable/toString()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/goToActivity(java.lang.Class)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/os/Bundle/getInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/widget/EditText/getText()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/lang/String/equals(java.lang.Object)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/finish()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/lang/String/isEmpty()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/errorBox(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#java/lang/Integer/parseInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/content/Intent/getExtras()
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/getString(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/widget/Toast/makeText(android.content.Context,int,int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#pl/pcz/wimii/mind/mypressure/misc/Account$Gender/fromInt(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/addUser(android.view.View)#android/os/Bundle/getString(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#java/util/ArrayList/ArrayList(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddUserActivity/getIntent()
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#java/util/List/size()
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/widget/Button/setVisibility(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddUserActivity/setContentView(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddUserActivity/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/view/Window/setSoftInputMode(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/widget/ImageView/setImageResource(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddUserActivity/getWindow()
pl/pcz/wimii/mind/mypressure/AddUserActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/Character/toLowerCase(char)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/substring(int)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/inverseSearchAdd(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/String/trim()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/printStack()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNodeType()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getSelectedItemPosition()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getSuggestedMinimumWidth()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getPaddingBottom()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getPaddingTop()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/resolveSize(int,int)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/measureChild(android.view.View,int,int)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/setMeasuredDimension(int,int)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getPaddingRight()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/handleDataChanged()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getSuggestedMinimumHeight()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/widget/SpinnerAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/widget/SpinnerAdapter/getCount()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/support/v7/internal/widget/AbsSpinnerICS/getPaddingLeft()
android/support/v7/internal/widget/AbsSpinnerICS/onMeasure(int,int)#android/view/View/getLayoutParams()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/ProcessingInstruction/getData()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/ProcessingInstruction/getTarget()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getNodeType()
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/Context/getPackageManager()
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/Context/getString(int)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/addSubMenu(int,int,int,java.lang.CharSequence)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/MenuItem/setIcon(android.graphics.drawable.Drawable)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#java/lang/Math/min(int,int)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/add(int,int,int,java.lang.CharSequence)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/clear()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarChart/getData()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridLineWidth()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getLimitLines()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getXOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/PointF/PointF(float,float)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/OutputStream/close()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setDoInput(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setUseCaches(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getOutputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getContentEncoding()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setDoOutput(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getInputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/String(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/getBytes()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampTokenInfo/getGenTime()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/TimeStampRequestGenerator()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/math/BigInteger/valueOf(long)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampToken/getTimeStampInfo()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/setCertReq(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/asn1/cmp/PKIFailureInfo/intValue()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampToken/getEncoded()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getFailInfo()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequest/getEncoded()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/validate(org.spongycastle.tsp.TimeStampRequest)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/TimeStampResponse(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/System/currentTimeMillis()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/generate(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],java.math.BigInteger)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getTimeStampToken()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getStatusString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/isMemberClass()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/getModifiers()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Object/getClass()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/FileReader/FileReader(java.io.File)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File,boolean)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/createNewFile()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/newLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/exists()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/next()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/close()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/List/iterator()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/IOException/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/splitParts(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getOwnerDocument()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/get(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/setNodeValue(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/lastIndexOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/size()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Document/createAttributeNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/inverseSearchAdd(java.util.HashMap,com.itextpdf.text.pdf.XfaForm$Stack2,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/NamedNodeMap/setNamedItemNS(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/inverseSearchAdd(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/printStack()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeType()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/widget/TextView/measure(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/setMeasuredDimension(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/widget/TextView/getMeasuredHeight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingLeft()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#java/lang/Math/max(int,int)
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getMeasuredHeight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getWidth()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getHeight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getMeasuredWidth()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#java/lang/Math/min(int,int)
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getBaseline()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingRight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/layout(int,int,int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingLeft()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/widget/TextView/measure(int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getWidth()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getHeight()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingRight()
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/graphics/drawable/Drawable$ConstantState/newDrawable(android.content.res.Resources)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/view/View/setVisibility(int)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ActionBarView$HomeView/setVisibility(int)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/graphics/drawable/Drawable/getConstantState()
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ScrollingTabContainerView/setVisibility(int)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ActionBarView$HomeView/getParent()
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ActionBarView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/SpinnerICS/setVisibility(int)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/view/View/getParent()
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/widget/LinearLayout/setVisibility(int)
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ActionBarView/requestLayout()
android/support/v7/internal/widget/ActionBarView$ExpandedActionViewMenuPresenter/expandItemActionView(android.support.v7.internal.view.menu.MenuBuilder,android.support.v7.internal.view.menu.MenuItemImpl)#android/support/v7/internal/widget/ActionBarView/getResources()
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/util/Calendar/add(int,int)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#android/widget/ImageButton/setVisibility(int)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/System/currentTimeMillis()
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/String/valueOf(java.lang.Object)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/stats/StatsData$Range/getStringId(pl.pcz.wimii.mind.mypressure.stats.StatsData$Range)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#android/widget/Spinner/getSelectedView()
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#android/widget/TextView/setText(int)
pl/pcz/wimii/mind/mypressure/StatsActivity$3/onClick(android.view.View)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarView/getLeft()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarView/getBottom()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarView/getTop()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarView/getRight()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/invalidate()
android/support/v7/internal/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getLayoutParams()
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContainer/setMeasuredDimension(int,int)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/widget/FrameLayout/onMeasure(int,int)
android/support/v7/internal/widget/ActionBarContainer/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getRight()
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getTop()
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getLeft()
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/invalidate()
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/internal/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/internal/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getBottom()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getLeft()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getBottom()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getTop()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getRight()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContainer/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getRight()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContainer/getChildAt(int)
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContainer/getChildCount()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/widget/FrameLayout/onLayout(boolean,int,int,int,int)
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getTop()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getLeft()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContainer/invalidate()
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/offsetTopAndBottom(int)
android/support/v7/internal/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getBottom()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/setNoDataText(java.lang.String)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/setHighlightPerTapEnabled(boolean)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/getLegend()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/components/Legend/setTextSize(float)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/setDescription(java.lang.String)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/getPaint(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#android/graphics/Paint/setColor(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/components/Legend/setTextColor(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizePieChart(com.github.mikephil.charting.charts.PieChart)#com/github/mikephil/charting/charts/PieChart/setRotationEnabled(boolean)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/Calendar/clear(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/Calendar/setTimeInMillis(long)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#pl/pcz/wimii/mind/mypressure/stats/StatsData$Range/isDaily(pl.pcz.wimii.mind.mypressure.stats.StatsData$Range)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/List/size()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#pl/pcz/wimii/mind/mypressure/misc/SingletonCalendar/getInstance()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/convertData(java.util.List,java.util.List)#java/util/List/get(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/components/YAxis/setAxisMaxValue(float)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/setDescription(java.lang.String)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/getAxisLeft()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/getLegend()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/setHighlightPerTapEnabled(boolean)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/components/YAxis/setAxisMinValue(float)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/components/Legend/setTextSize(float)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/setNoDataText(java.lang.String)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/components/Legend/setTextColor(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/customizeLineChart(com.github.mikephil.charting.charts.LineChart)#com/github/mikephil/charting/charts/LineChart/getAxisRight()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/setTimeInMillis(long)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/add(int,int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#pl/pcz/wimii/mind/mypressure/stats/StatsData$Range/isDaily(pl.pcz.wimii.mind.mypressure.stats.StatsData$Range)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/set(int,int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#pl/pcz/wimii/mind/mypressure/misc/SingletonCalendar/getInstance()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/getActualMaximum(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/generateLineLabels(java.util.List)#java/util/List/add(java.lang.Object)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Calendar/setTimeInMillis(long)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#pl/pcz/wimii/mind/mypressure/stats/StatsData$Range/isDaily(pl.pcz.wimii.mind.mypressure.stats.StatsData$Range)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/lang/Math/abs(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#pl/pcz/wimii/mind/mypressure/misc/Measure$Result/getColor()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/ArrayList/ArrayList()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/ArrayList/ArrayList(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Iterator/hasNext()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Calendar/set(int,int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Iterator/next()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Calendar/getInstance()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/List/add(java.lang.Object)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#com/github/mikephil/charting/data/LineDataSet/setColor(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/lang/Integer/valueOf(int)
pl/pcz/wimii/mind/mypressure/stats/StatsHelper/prepareLineData(pl.pcz.wimii.mind.mypressure.stats.StatsHelper$Fragment,java.lang.String[],int[])#java/util/List/get(int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredWidth()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/layout(int,int,int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/measure(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/from(android.content.Context)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#com/github/mikephil/charting/components/MarkerView/getContext()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredHeight()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/widget/RelativeLayout$LayoutParams/RelativeLayout$LayoutParams(int,int)
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/LinkedHashMap/values()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#com/itextpdf/text/pdf/PdfPatternPainter/getIndirectReference()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/close()#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/close()#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfWriter/close()#com/itextpdf/text/pdf/PdfWriter/getISOBytes(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/String/valueOf(long)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#com/itextpdf/text/pdf/PdfImage/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#com/itextpdf/text/pdf/PdfImage/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/remove()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfLayer/getAsString(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/remove(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/TreeMap/entrySet()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/toUpperCase()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/trim()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Exception/getMessage()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/SortedSet/iterator()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/size()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/Collections/unmodifiableList(java.util.List)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/LinkedHashMap/LinkedHashMap(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/Short/valueOf(short)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/Short/shortValue()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#com/itextpdf/text/pdf/fonts/otf/Language/values()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#com/itextpdf/text/pdf/fonts/otf/Language/isSupported(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Collections/unmodifiableList(java.util.List)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/pop()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/elementAt(int)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/size()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/remove(int)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/get(int)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/add(int,java.lang.Object)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/isEmpty()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/addAll(int,java.util.Collection)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/add(java.lang.Object)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/obtain()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getViewPortHandler()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/enableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/postInvalidate()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/disableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/graphics/PointF/PointF(float,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/listener/ChartTouchListener/onDoubleTap(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getOnChartGestureListener()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isLogEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/drawable/InsetDrawable/draw(android.graphics.Canvas)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/app/Activity/getWindow()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/view/Window/getDecorView()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/copyBounds(android.graphics.Rect)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout/setId(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout/FrameLayout(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/support/v4/app/FragmentTabHost/findViewById(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/setOrientation(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/setOrientation(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/support/v4/app/FragmentTabHost/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/TabWidget(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int,float)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/setId(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getSupportedLanguage()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Exception/printStackTrace()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Character/valueOf(char)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/List/contains(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/size()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/keySet()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/length()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/exists()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/substring(int,int)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/getAbsolutePath()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/substring(int)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/getPath()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/isDirectory()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/list()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/File(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/File(java.lang.String,java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(int)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/Hashtable/get(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawLines(float[],int,int,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColors()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForXIndex(int,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/generateFilledPath(com.github.mikephil.charting.interfaces.datasets.ILineDataSet,int,int)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getYValCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForXIndex(int,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getMaxVisibleCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/addPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForXIndex(int,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubic(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForXIndex(int,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/IssuerAndSerialNumber/IssuerAndSerialNumber(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getSerialNumber()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/AlgorithmIdentifier/getAlgorithm()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getTBSCertificate()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/SubjectPublicKeyInfo/getAlgorithm()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/RecipientIdentifier/RecipientIdentifier(org.spongycastle.asn1.cms.IssuerAndSerialNumber)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/init(int,java.security.cert.Certificate)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getSubjectPublicKeyInfo()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/init(int,java.security.Key)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getIssuer()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/doFinal(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/KeyTransRecipientInfo/KeyTransRecipientInfo(org.spongycastle.asn1.cms.RecipientIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getInstance(java.lang.Object)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1Integer/getValue()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/generateKey()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/init(int,java.security.Key,java.security.AlgorithmParameters)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/init(int)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/doFinal(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/RecipientInfo/RecipientInfo(org.spongycastle.asn1.cms.KeyTransRecipientInfo)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/ContentInfo/ContentInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/EncryptedContentInfo/EncryptedContentInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/EnvelopedData/EnvelopedData(org.spongycastle.asn1.cms.OriginatorInfo,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.cms.EncryptedContentInfo,org.spongycastle.asn1.ASN1Set)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameters/getEncoded(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/ContentInfo/toASN1Primitive()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/SecretKey/getEncoded()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/generateParameters()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/nextToken(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/String/substring(int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/valueOf(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/get(java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/hasNext()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/next()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/clear()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/getParcelableArray(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Iterable/iterator()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/substring(int)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Integer/parseInt(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/keySet()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForXIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setAlpha(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getXChartMax()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getHighLightColor()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarEntry/getXIndex()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Matrix/getValues(float[])
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isHighlightEnabled()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/getRawLength()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/File/canRead()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/InputStream/close()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/flateCompress(int)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/net/URL/openStream()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/writeLength()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfFileSpecification/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/FileInputStream/FileInputStream(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/String/startsWith(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/entrySet()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Iterator/next()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Class/getName()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Set/iterator()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/toString()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/isEmpty()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/remove(java.lang.Object)
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getKey()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Object/getClass()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getValue()
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/widget/ImageView/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/widget/ImageView/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/widget/ImageView/getLayoutParams()
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/widget/ImageView/getVisibility()
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/measureChildWithMargins(android.view.View,int,int,int,int)
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/setMeasuredDimension(int,int)
android/support/v7/internal/widget/ActionBarView$HomeView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/app/ListFragment/ensureList()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/ListFragment/ensureList()#android/widget/ListView/setEmptyView(android.view.View)
android/support/v4/app/ListFragment/ensureList()#android/view/View/findViewById(int)
android/support/v4/app/ListFragment/ensureList()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v4/app/ListFragment/ensureList()#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v4/app/ListFragment/ensureList()#android/os/Handler/post(java.lang.Runnable)
android/support/v4/app/ListFragment/ensureList()#android/support/v4/app/ListFragment/getView()
android/support/v4/app/ListFragment/ensureList()#android/widget/TextView/setVisibility(int)
android/support/v4/app/ListFragment/ensureList()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/FrameLayout(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setOrientation(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/setDrawSelectorOnTop(boolean)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/ListView(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/TextView(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setGravity(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ProgressBar/ProgressBar(android.content.Context,android.util.AttributeSet,int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setVisibility(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/support/v4/app/ListFragment/getActivity()
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setGravity(int)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/widget/TextView/getLeft()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTitleStrip/onDraw(android.graphics.Canvas)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getWidth()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/widget/TextView/getRight()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getHeight()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getPaddingLeft()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getPaddingRight()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/setValue(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#com/itextpdf/text/pdf/PdfStructureTreeRoot/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/size()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/TreeSet/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA1$Digest/SHA1$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA384$Digest/SHA384$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#java/security/NoSuchAlgorithmException/NoSuchAlgorithmException(java.lang.String)
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA224$Digest/SHA224$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA256$Digest/SHA256$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA512$Digest/SHA512$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/GOST3411$Digest/GOST3411$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/MD5$Digest/MD5$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/MD2$Digest/MD2$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD160$Digest/RIPEMD160$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD128$Digest/RIPEMD128$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD256$Digest/RIPEMD256$Digest()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/size()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/GeneralSecurityException/GeneralSecurityException()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#com/itextpdf/text/pdf/security/LtvVerification$CertificateOption/equals(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/Principal/getName()
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setTicker(java.lang.CharSequence,android.widget.RemoteViews)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setLargeIcon(android.graphics.Bitmap)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setDefaults(int)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setFullScreenIntent(android.app.PendingIntent,boolean)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setLights(int,int,int)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setAutoCancel(boolean)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/getNotification()
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setSound(android.net.Uri,int)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setVibrate(long[])
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setOngoing(boolean)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setContentTitle(java.lang.CharSequence)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setContentIntent(android.app.PendingIntent)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setNumber(int)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setOnlyAlertOnce(boolean)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setContentText(java.lang.CharSequence)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setContentInfo(java.lang.CharSequence)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/Notification$Builder(android.content.Context)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setContent(android.widget.RemoteViews)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setDeleteIntent(android.app.PendingIntent)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setSmallIcon(int,int)
android/support/v4/app/NotificationCompatHoneycomb/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap)#android/app/Notification$Builder/setWhen(long)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/hasMessages(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getFlags()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/size()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getScheme()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Context/getContentResolver()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/ArrayList()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/IntentFilter/match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/resolveTypeIfNeeded(android.content.ContentResolver)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getAction()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/sendEmptyMessage(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getCategories()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/Integer/toHexString(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getData()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/get(int)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Class/getResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/ClassLoader/getSystemResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Thread/currentThread()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/String/substring(int)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Thread/getContextClassLoader()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/Math/min(long,long)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/channels/FileChannel/map(java.nio.channels.FileChannel$MapMode,long,long)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/Error/Error(java.lang.String)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/MappedByteBuffer/load()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/channels/FileChannel/size()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackState/instantiate(android.support.v4.app.FragmentManagerImpl)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/OutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/File/getPath()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/Exception/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/IOException/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Long/valueOf(long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/exists()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#com/github/mikephil/charting/charts/Chart/getContext()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/getAbsolutePath()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/mkdirs()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Integer/valueOf(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap$CompressFormat/ordinal()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/flush()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/ContentValues(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/File(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/length()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/Context/getContentResolver()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/String/endsWith(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/iterator()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/hasNext()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#com/github/mikephil/charting/charts/Chart/post(java.lang.Runnable)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/next()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/clear()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/view/ViewGroup/onSizeChanged(int,int,int,int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Boolean/booleanValue()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getYOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Boolean/valueOf(boolean)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendPosition/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/size()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/lang/Integer/valueOf(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/get(int)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/Cursor/getColumnIndex(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#java/lang/Long/toString(long)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/Cursor/getLong(int)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#pl/pcz/wimii/mind/mypressure/misc/DB/getReadableDatabase()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/Cursor/moveToNext()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/Cursor/close()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntriesDates(long,long,boolean)#android/database/Cursor/getCount()
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#pl/pcz/wimii/mind/mypressure/misc/DB/getWritableDatabase()
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#java/lang/StringBuilder/append(int)
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#android/database/sqlite/SQLiteDatabase/beginTransaction()
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#java/lang/Long/toString(long)
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/deleteEntries(long,long)#android/database/sqlite/SQLiteDatabase/endTransaction()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/Long/toString(long)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/String/isEmpty()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/util/List/add(java.lang.Object)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/Math/min(int,int)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#pl/pcz/wimii/mind/mypressure/misc/DB/getReadableDatabase()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#android/database/Cursor/moveToNext()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#android/database/Cursor/close()
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/misc/DB/getEntries(java.util.List,long,long,boolean,boolean,int)#android/database/Cursor/getCount()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#com/itextpdf/text/pdf/Barcode128/getCodeType()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/valueOf(char)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/size()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/verify(java.security.PublicKey,java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Primitive/getEncoded(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/security/cert/CertificateFactory/generateCRL(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/security/cert/CertificateFactory/getInstance(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/getObjectAt(int)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/util/Collection/add(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/size()
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Encodable/toASN1Primitive()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/CertificateID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,java.math.BigInteger)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/SingleResp/getCertID()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#java/util/Collection/size()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/JcaDigestCalculatorProviderBuilder()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/build()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/DigestCalculatorProvider/get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/getHashAlgOID()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/jcajce/JcaX509CertificateHolder/JcaX509CertificateHolder(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/BasicOCSPResp/getResponses()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1OctetString/getOctets()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/size()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1TaggedObject/getObject()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ocsp/BasicOCSPResponse/getInstance(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/cert/ocsp/BasicOCSPResp/BasicOCSPResp(org.spongycastle.asn1.ocsp.BasicOCSPResponse)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/getObjectAt(int)
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/Signature/verify(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/asn1/tsp/TSTInfo/getMessageImprint()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/Signature/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/asn1/tsp/MessageImprint/getHashedMessage()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/tsp/TimeStampToken/getTimeStampInfo()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/tsp/TimeStampTokenInfo/toASN1Structure()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/MessageDigest/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERUTCTime/DERUTCTime(java.util.Date)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Enumerated/ASN1Enumerated(int)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/add(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/ASN1EncodableVector()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Calendar/getTime()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(boolean,int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],java.util.Calendar,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/add(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/ASN1EncodableVector()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERNull/DERNull()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(boolean,int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/Signature/sign()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Integer/ASN1Integer(java.math.BigInteger)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/Signature/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/writeObject(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/close()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Set/iterator()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/ASN1OutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Integer/ASN1Integer(int)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getTBSCertificate()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],java.util.Calendar,com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map/entrySet()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map/entrySet()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/HashMap/HashMap()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/trim()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/substring(int,int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/substring(int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/indexOf(int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/util/HashMap/HashMap()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/io/BufferedReader/readLine()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/moveTo(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/stroke()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setLineDash(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorStroke(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/lineTo(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setMatrix(float,float,float,float,float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/size()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/size()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/size()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/String/valueOf(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/content/Context/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/newInstance()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Object/getClass()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/DynamicRealmObject/DynamicRealmObject(io.realm.RealmObject)
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/DynamicRealmObject/getInt(java.lang.String)
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#java/util/Iterator/hasNext()
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/RealmResults/iterator()
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/RealmList/size()
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/DynamicRealmObject/getFloat(java.lang.String)
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/DynamicRealmObject/getList(java.lang.String)
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#io/realm/RealmList/iterator()
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/data/realm/implementation/RealmBarDataSet/build(io.realm.RealmResults)#java/util/Iterator/next()
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/String/length()
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setWriter(com.itextpdf.text.pdf.PdfWriter)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setBorderWidth(float)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setText(java.lang.String)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setBox(com.itextpdf.text.Rectangle)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/getRotation()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/size()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Set/iterator()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map/entrySet()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Set/iterator()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map/entrySet()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#com/itextpdf/text/pdf/PdfAppearance/getIndirectReference()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/indexOf(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfFormField/getMKColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/getInternalBuffer()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/String/substring(int)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/Float/floatValue()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/toString()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfName/getBytes()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/size()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/LinkedHashSet/LinkedHashSet()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/toArray(java.lang.Object[])
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Set/iterator()
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormatSymbols/DecimalFormatSymbols(java.util.Locale)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/append(char)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/applyPattern(java.lang.String)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/util/TimeZone/getOffset(long)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/format(long)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/toString()
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/util/Calendar/getTimeInMillis()
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/format(double)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/Math/abs(int)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/StringBuffer()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/show()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#android/widget/TimePicker/setIs24HourView(java.lang.Boolean)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#android/widget/TimePicker/setCurrentMinute(java.lang.Integer)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#android/widget/TimePicker/setMinute(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#java/lang/Boolean/valueOf(boolean)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#java/lang/Integer/valueOf(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#android/widget/TimePicker/setHour(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/timePicker(android.view.View)#android/widget/TimePicker/setCurrentHour(java.lang.Integer)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#java/util/Calendar/clear(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/getWindow()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/getIntent()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#java/util/Calendar/getInstance()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/setContentView(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/view/Window/setSoftInputMode(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#java/util/Calendar/setTimeInMillis(long)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/onCreate(android.os.Bundle)#android/os/Bundle/getLong(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/widget/EditText/getText()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/show()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/os/Bundle/getLong(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/finish()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/widget/Toast/show()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/text/Editable/toString()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/getIntent()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#java/lang/Integer/parseInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/content/Intent/getExtras()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/errorBox(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#android/widget/Toast/makeText(android.content.Context,int,int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/addLog(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/errorBox(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/getId()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/view/View/requestFocus()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/String/valueOf(java.lang.Object)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/setSelection(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/String/length()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/getSelectionEnd()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/StringBuilder/append(java.lang.Object)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/getSelectionStart()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/view/View/getId()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/TextView/getText()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/text/Editable/toString()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/getText()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/getCurrentFocus()
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#android/widget/EditText/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddEntryActivity/keyboard(android.view.View)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readCoverageFormat(int)
com/itextpdf/text/Paragraph/breakUp()#java/util/ArrayList/ArrayList()
com/itextpdf/text/Paragraph/breakUp()#java/util/List/size()
com/itextpdf/text/Paragraph/breakUp()#java/util/Iterator/next()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/ListItem/setSpacingAfter(float)
com/itextpdf/text/Paragraph/breakUp()#java/util/List/get(int)
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/Paragraph/size()
com/itextpdf/text/Paragraph/breakUp()#java/util/Iterator/hasNext()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/Paragraph/iterator()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/ListItem/setSpacingBefore(float)
com/itextpdf/text/Paragraph/breakUp()#java/util/List/add(java.lang.Object)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getName()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/print(char)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/println(char)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeName()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Attr/getNodeValue()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/print(java.lang.String)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getSystemId()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/lang/String/length()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Document/getDoctype()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/flush()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getInternalSubset()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getPublicId()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Document/getDocumentElement()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/println(java.lang.String)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Attr/getNodeName()
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/io/PrintWriter/PrintWriter(java.io.Writer)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/BackStackRecord/popFromBackStack(boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/run()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/BackStackRecord/run()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/run()#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/run()#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/run()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/run()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/BackStackRecord/run()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackRecord/run()#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/run()#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/run()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/BackStackRecord/run()#java/util/ArrayList/ArrayList()
android/support/v4/app/BackStackRecord/run()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(boolean)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(java.lang.String)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/saveHierarchyState(android.util.SparseArray)
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/hasSubMenu()
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getSubMenu()
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/support/v7/internal/view/menu/SubMenuBuilder/saveActionViewStates(android.os.Bundle)
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getItemId()
android/support/v7/internal/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/getId()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/isEmpty()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/lang/ref/WeakReference/get()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/next()
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v7/internal/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/next()
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/clear()
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/add(java.lang.Object)
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/addAll(java.util.Collection)
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/get(int)
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/hasNext()
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/lang/ref/WeakReference/get()
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/size()
android/support/v7/internal/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/PackageManager/queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Context/getPackageManager()
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/Intent(android.content.Intent)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/size()
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIntent(android.content.Intent)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/get(int)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIcon(android.graphics.drawable.Drawable)
android/support/v7/internal/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/setComponent(android.content.ComponentName)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/isEmpty()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/equals(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/iterator()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Collection/iterator()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/Object/toString()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/substring(int,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/Character/digit(char,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/indexOf(int,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/charAt(int)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/group()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/find()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/start()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/end()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/SortedMap/keySet()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/SortedMap/get(java.lang.Object)
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/max(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/min(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setColor(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getHeight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setAlpha(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getBottom()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getHeight()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/setMeasuredDimension(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/isInEditMode()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildMeasureSpec(int,int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/measure(int,int)
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getSpacingAfter()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getIndentationRight()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/Paragraph/getFont()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorder(int)
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/Anchor/getLeading()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getSpacingBefore()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getAlignment()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getTotalLeading()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfWriter/isPaused()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getIndentationLeft()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getFont()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Float/Float(float)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#com/itextpdf/text/pdf/PdfStructureElement/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/length()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#com/itextpdf/text/pdf/PdfStructureElement/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#com/itextpdf/text/pdf/PdfStructureElement/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Boolean/booleanValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/replace(char,char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/io/PrintWriter/print(java.lang.String)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/io/PrintWriter/print(char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/length()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/indexOf(java.lang.String)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/renderer/XAxisRendererRadarChart/drawLabel(android.graphics.Canvas,java.lang.String,int,float,float,android.graphics.PointF,float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/PointF/PointF(float,float)
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#java/lang/Class/getSimpleName()
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#android/content/pm/PackageManager/getActivityInfo(android.content.ComponentName,int)
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#android/support/v7/app/ActionBarActivity/getComponentName()
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#android/support/v7/app/ActionBarActivity/getPackageManager()
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#java/lang/Object/getClass()
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#android/os/Bundle/getString(java.lang.String)
android/support/v7/app/ActionBarActivityDelegate/getUiOptionsFromMetadata()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/Phrase/get(int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/TextField/getBorderAppearance()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/String/length()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/StringBuffer/substring(int,int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/Phrase/size()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/lang/reflect/Array/newInstance(java.lang.Class,int[])
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/TextField/getTextField()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getListAppearance()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/TextField/getBorderAppearance()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/size()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/length()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/Math/max(int,int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/size()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/zip/DeflaterOutputStream/write(byte[])
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/zip/DeflaterOutputStream/close()
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/codec/TiffImage/getTiffImageColor(com.itextpdf.text.pdf.codec.TIFFDirectory,com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/Class/getName()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Calendar/getInstance()
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/lang/Integer/Integer(int)
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/MakeSignature/signDetached(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.ExternalDigest,com.itextpdf.text.pdf.security.ExternalSignature,java.security.cert.Certificate[],java.util.Collection,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.TSAClient,int,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/RadioCheckField/getRealFont()
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKNormalCaption(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearanceState(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,java.lang.String,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/RadioCheckField/getRealFont()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/RadioCheckField/getBorderAppearance()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/stroke()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorStroke(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setMatrix(float,float,float,float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/circle(float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/getBoundingBox()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/internal/widget/ScrollingTabContainerView$TabView/getContext()
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/ImageView(android.content.Context)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/internal/widget/ScrollingTabContainerView$TabView/removeView(android.view.View)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setVisibility(int)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setContentDescription(java.lang.CharSequence)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/view/View/getParent()
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setVisibility(int)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/internal/widget/ScrollingTabContainerView$TabView/addView(android.view.View,int)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
android/support/v7/internal/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/internal/widget/ScrollingTabContainerView$TabView/addView(android.view.View)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getCacheDir()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getName()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/ProviderInfo/loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/next()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getFilesDir()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/delete(int,int)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(long)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(java.lang.String)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getVal()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getXIndex()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForXIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getVal()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForXIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getXIndex()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/alpha(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/RGBToHSV(int,int,int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleData/getEntryForHighlight(com.github.mikephil.charting.highlight.Highlight)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/HSVToColor(int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/round(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getMaxVisibleCount()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleData/getYValCount()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleData/getDataSets()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForXIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/argb(int,int,int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/data/PieData/getIndexOfDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/RectF()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getXVals()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/toRadians(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getXValCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/CharSequence/length()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/addOval(android.graphics.RectF,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/StaticLayout(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Object/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/width()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/max(double,double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/height()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/toRadians(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getStyle()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getColor()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/addTemplateReference(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfName,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PushbuttonField/getRealFont()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PushbuttonField/getBorderAppearance()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/String/length()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addImage(com.itextpdf.text.Image,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/getBoundingBox()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKNormalIcon(com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKTextPosition(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PushbuttonField/getRealFont()
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKIconFit(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfName,float,float,boolean)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKNormalCaption(java.lang.String)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getXValCount()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PdfIndirectReference/isIndirect()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map/keySet()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfFormField/getIndirectReference()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/HashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfAnnotation/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addSharedObjectsToBody()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfOCProperties/getAsDict(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/getPdfVersion()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfOCProperties/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/getXmpWriter(java.io.ByteArrayOutputStream,com.itextpdf.text.pdf.PdfDictionary)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/fillOCProperties(boolean)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#com/itextpdf/text/pdf/PdfLayer/merge(com.itextpdf.text.pdf.PdfDictionary)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#com/itextpdf/text/pdf/PdfLayer/getAsString(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/getISOBytes(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/writeKeyInfo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/isCloseStream()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#java/lang/String/valueOf(long)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/FdfReader/getCatalog()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/FdfReader/getPdfObject(int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/get(java.lang.Object)
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/findViewById(int)
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#java/util/Calendar/set(int,int,int)
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#android/widget/DatePicker/getMonth()
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#android/app/Dialog/findViewById(int)
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/dismiss()
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#android/widget/DatePicker/getYear()
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#java/util/Calendar/getTimeInMillis()
pl/pcz/wimii/mind/mypressure/kaj/KDialog$2/onClick(android.view.View)#android/widget/DatePicker/getDayOfMonth()
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/Math/ceil(double)
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#com/github/mikephil/charting/data/BarLineScatterCandleBubbleData/getXValCount()
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#android/graphics/Matrix/getValues(float[])
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calcModulus()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/Integer/intValue()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawMarkers(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/renderer/DataRenderer/calcXBounds(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider,int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/renderer/XAxisRenderer/calcXBounds(com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider,int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawDescription(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(long)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/Integer/valueOf(int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/valuesToHighlight()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/toString()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/flush()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/lang/String/getBytes()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/setPrefix(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NamedNodeMap/item(int)
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/graphics/Rect/height()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/support/v7/internal/view/menu/ActionMenuItemView/getContext()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/support/v7/internal/view/menu/ActionMenuItemView/getWindowVisibleDisplayFrame(android.graphics.Rect)
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/widget/Toast/setGravity(int,int,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/support/v7/internal/view/menu/ActionMenuItemView/getLocationOnScreen(int[])
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/support/v7/internal/view/menu/ActionMenuItemView/getWidth()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/graphics/Rect/Rect()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/widget/Toast/show()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/content/Context/getResources()
android/support/v7/internal/view/menu/ActionMenuItemView/onLongClick(android.view.View)#android/support/v7/internal/view/menu/ActionMenuItemView/getHeight()
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuItemView/getPaddingRight()
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/widget/CompatTextView/setPadding(int,int,int,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuItemView/getPaddingBottom()
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuItemView/getPaddingTop()
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuItemView/getMeasuredWidth()
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/internal/widget/CompatTextView/onMeasure(int,int)
android/support/v7/internal/view/menu/ActionMenuItemView/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setSelector(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setFocusable(boolean)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/graphics/Rect/setEmpty()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setAdapter(android.widget.ListAdapter)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setOnScrollListener(android.widget.AbsListView$OnScrollListener)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getBackground()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int,float)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/setContentView(android.view.View)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getContentView()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setFocusableInTouchMode(boolean)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(int)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getInputMethodMode()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/StringBuilder()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/view/View/measure(int,int)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/setOrientation(int)
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/content/Context/getResources()
android/support/v7/internal/widget/ListPopupWindow/buildDropDown()#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/setTouchInterceptor(android.view.View$OnTouchListener)
android/support/v7/internal/widget/ListPopupWindow/show()#android/support/v7/internal/widget/ListPopupWindow$DropDownListView/setSelection(int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/update(android.view.View,int,int,int,int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/view/View/getWidth()
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/setOutsideTouchable(boolean)
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/setHeight(int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/showAsDropDown(android.view.View,int,int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/isShowing()
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/setWindowLayoutMode(int,int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/widget/PopupWindow/setWidth(int)
android/support/v7/internal/widget/ListPopupWindow/show()#android/os/Handler/post(java.lang.Runnable)
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/widget/PopupWindow/getBackground()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/graphics/Rect/Rect()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/view/View/getWindowVisibleDisplayFrame(android.graphics.Rect)
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/view/View/getContext()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/view/View/getHeight()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/content/Context/getResources()
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/view/View/getLocationOnScreen(int[])
android/support/v7/internal/widget/ListPopupWindow/getMaxAvailableHeight(android.view.View,int,boolean)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Iterator/next()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map/entrySet()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#com/itextpdf/text/pdf/CMapAwareDocumentFont/getByte2Uni()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#com/itextpdf/text/pdf/CMapAwareDocumentFont/getDiffmap()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Set/iterator()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(char)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/hasChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/removeNamedItem(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/Iterator/next()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/List/add(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/List/iterator()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/hasChildNodes()
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/lang/StringBuilder/append(int)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#android/view/View/getContext()
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#android/widget/GridView/setAdapter(android.widget.ListAdapter)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/lang/String/valueOf(java.lang.Object)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/lang/StringBuilder/append(java.lang.String)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment/getView()
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/fragments/JournalCalendarFragment$3/onPostExecute(long[])#android/app/ProgressDialog/dismiss()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/toLowerCase()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/length()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/substring(int,int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/charAt(int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/substring(int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/Float/floatValue()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/length()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/Properties/Properties()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/trim()
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setBackground(android.graphics.drawable.Drawable)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setClickable(boolean)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setOnClickListener(android.view.View$OnClickListener)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setBackgroundColor(int)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/graphics/drawable/Drawable$ConstantState/newDrawable()
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setBackgroundDrawable(android.graphics.drawable.Drawable)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/adapters/CalendarAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#com/itextpdf/text/pdf/PdfDocument$PdfCatalog/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/TreeMap/isEmpty()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/TreeMap/entrySet()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getKey()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#java/util/ArrayList/ArrayList(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/getIntent()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#android/os/Bundle/getInt(java.lang.String)
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/finish()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#android/content/Intent/getExtras()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#android/widget/Toast/makeText(android.content.Context,int,int)
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/dismiss()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#android/widget/Toast/show()
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/AddUserActivity/errorBox(int)
pl/pcz/wimii/mind/mypressure/AddUserActivity$1/onClick(android.view.View)#java/util/List/get(int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Map/size()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/List/iterator()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getDownTime()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageAtTime(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/removeMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/hasMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onSingleTapUp(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTap(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onSingleTapConfirmed(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTapEvent(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageDelayed(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onDown(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/view/View/findViewById(int)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#java/util/List/size()
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment/getView()
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/widget/Button/setClickable(boolean)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/widget/Button/setVisibility(int)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/widget/LinearLayout/setVisibility(int)
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/view/View/getContext()
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#android/app/ProgressDialog/dismiss()
pl/pcz/wimii/mind/mypressure/fragments/JournalListFragment$3/onPostExecute(java.util.List)#java/util/List/get(int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/length()
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/isEmpty()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/size()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/app/Notification$Builder/build()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/remove(java.lang.String)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/keySet()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Iterator/next()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/containsKey(java.lang.String)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Set/iterator()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setContentView(android.view.View)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setCancelable(boolean)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getActivity()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/onRestoreInstanceState(android.os.Bundle)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOwnerActivity(android.app.Activity)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getView()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnDismissListener(android.content.DialogInterface$OnDismissListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/view/View/getParent()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/Character/isDigit(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/String(char[])
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/size()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/length()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#android/view/MenuItem/setActionProvider(android.view.ActionProvider)
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#java/lang/Class/getName()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#android/widget/ShareActionProvider/setShareIntent(android.content.Intent)
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#java/lang/Object/getClass()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#android/view/MenuItem/getActionProvider()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#android/widget/ShareActionProvider/ShareActionProvider(android.content.Context)
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/app/ShareCompatICS/configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent)#android/widget/ShareActionProvider/setShareHistoryFileName(java.lang.String)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/support/v7/internal/widget/ActivityChooserView/getContext()
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getPackageManager()
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getString(int)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getId()
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setId(int)
android/support/v7/internal/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/IllegalArgumentException/IllegalArgumentException()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/getEncodedPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/indexOf(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/decode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/SecurityException/SecurityException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/hasNext()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/HashMap/entrySet()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/next()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(char)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getKey()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/encodedPath(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/length()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/build()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Set/iterator()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getValue()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/endsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/iterator()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/addLast(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/LinkedList()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/toString()
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#pl/pcz/wimii/mind/mypressure/misc/Measure$Result/getColor()
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setTextSize(float)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/isEmpty()
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setTextColor(int)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setVisibility(int)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/toString(int)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/List/get(int)
pl/pcz/wimii/mind/mypressure/adapters/EntryListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/finish()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/size()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/write(byte[])
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/close()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/InputStream/read()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/flush()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/println()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/print(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/String/length()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/Exception/printStackTrace(java.io.PrintStream)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/close()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/flush()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/PrintWriter(java.io.OutputStream)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/String/compareToIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Set/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/List/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStream/getAsNumber(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/next()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/io/InputStream/read()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Set/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/String/String(char[],int,int)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Character/isWhitespace(char)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/String/length()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Boolean/booleanValue()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/length()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/Integer/parseInt(java.lang.String,int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/charAt(int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/substring(int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/append(boolean)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/endsWith(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getSimpleName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/length()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Integer/toHexString(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/lastIndexOf(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/substring(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Object/getClass()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/ArrayList(int)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/toArray(java.lang.Object[])
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Math/max(float,float)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/add(java.lang.Object)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/size()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Boolean/valueOf(boolean)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/set(int,java.lang.Object)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/ArrayList/get(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStream/read()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/Character/isWhitespace(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/length()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/indexOf(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/io/BufferedReader/read()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/setLength(int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancelAll(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancel(java.lang.String,int,java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/notify(java.lang.String,int,java.lang.String,android.app.Notification)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/finish()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/superToPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Collections/unmodifiableMap(java.util.Map)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/List/size()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/LinkedHashMap/LinkedHashMap()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/size()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readCoverageFormat(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/get(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/Class/getSimpleName()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readCoverageFormat(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Arrays/asList(java.lang.Object[])
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Character/charValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/List/isEmpty()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/remove(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/keys()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/Properties()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/io/InputStream/close()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/load(java.io.InputStream)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getRegistry()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getOrdering()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getOrdering()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getSupplement()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getRegistry()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getSupplement()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/lang/String/split(java.lang.String)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/lang/String/length()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/Properties()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/io/InputStream/close()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Set/iterator()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/keySet()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Set/add(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Iterator/next()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/load(java.io.InputStream)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Set/contains(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Set/addAll(java.util.Collection)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/valueOf(char)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/String(char[])
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/TreeSet/TreeSet(java.util.Comparator)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Map/keySet()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/get(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/Integer/valueOf(int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/view/View/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/support/v7/internal/widget/ActionBarView/getContext()
android/support/v7/internal/widget/ActionBarView/initTitle()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/LinearLayout/setEnabled(boolean)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/LinearLayout/setOnClickListener(android.view.View$OnClickListener)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/LinearLayout/findViewById(int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/TextView/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/LinearLayout/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/internal/widget/ActionBarView/initTitle()#android/support/v7/internal/widget/ActionBarView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/view/menu/ActionMenuView/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/widget/ActionBarContainer/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/view/menu/ActionMenuView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/view/menu/ActionMenuPresenter/setId(int)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/widget/ActionBarView/getContext()
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/widget/ActionBarView/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/view/menu/ActionMenuPresenter/setCallback(android.support.v7.internal.view.menu.MenuPresenter$Callback)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/content/res/Resources/getBoolean(int)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/content/Context/getResources()
android/support/v7/internal/widget/ActionBarView/setMenu(android.support.v4.internal.view.SupportMenu,android.support.v7.internal.view.menu.MenuPresenter$Callback)#android/support/v7/internal/widget/ActionBarView/getResources()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingRight()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ScrollingTabContainerView/measure(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingLeft()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/measure(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/getLayoutParams()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingTop()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/getVisibility()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/Class/getSimpleName()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/setMeasuredDimension(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getChildAt(int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/widget/LinearLayout/measure(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/measure(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/widget/LinearLayout/getVisibility()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getChildCount()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getVisibility()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingBottom()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ScrollingTabContainerView/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getChildCount()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/widget/LinearLayout/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/Object/getClass()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarView/measureChildView(android.view.View,int,int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ActionBarView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/view/menu/ActionMenuView/requestLayout()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarView/getContext()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarContainer/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/content/res/Resources/getBoolean(int)
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/view/menu/ActionMenuView/getLayoutParams()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/content/Context/getResources()
android/support/v7/internal/widget/ActionBarView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarView/getResources()
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView$HomeView/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/widget/LinearLayout/setEnabled(boolean)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView$HomeView/isEnabled()
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView$HomeView/setContentDescription(java.lang.CharSequence)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView/removeView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/view/View/setVisibility(int)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/content/res/Resources/getText(int)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView/invalidate()
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/support/v7/internal/widget/ActionBarView/requestLayout()
android/support/v7/internal/widget/ActionBarView/setDisplayOptions(int)#android/content/Context/getResources()
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/support/v7/internal/widget/ActionBarView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/support/v7/internal/widget/SpinnerICS/getAdapter()
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/support/v7/internal/widget/ActionBarView/removeView(android.view.View)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/support/v7/internal/widget/ActionBarView/requestLayout()
android/support/v7/internal/widget/ActionBarView/setNavigationMode(int)#android/support/v7/internal/widget/SpinnerICS/setOnItemSelectedListener(android.support.v7.internal.widget.AdapterViewICS$OnItemSelectedListener)
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/positionChildInverse(android.view.View,int,int,int)
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getHeight()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingRight()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ProgressBarICS/bringToFront()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingLeft()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingBottom()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ProgressBarICS/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getPaddingTop()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/getWidth()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView$HomeView/getVisibility()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ProgressBarICS/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ProgressBarICS/getVisibility()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/widget/LinearLayout/getVisibility()
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ProgressBarICS/layout(int,int,int,int)
android/support/v7/internal/widget/ActionBarView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarView/positionChild(android.view.View,int,int,int)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#com/itextpdf/text/pdf/PRStream/remove(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/write(byte[])
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#com/itextpdf/text/pdf/PRStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/close()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Iterator/hasNext()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Iterator/next()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/substring(int,int)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/get(int)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/iterator()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/isEmpty()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/length()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Map/get(java.lang.Object)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillDrawable()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getLineWidth()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillAlpha()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillColor()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForXIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryIndex(com.github.mikephil.charting.data.Entry)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightLines(android.graphics.Canvas,float[],com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,android.graphics.PointF,float,float,int,int,float)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getEntireIndexRange(int)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/iterator()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getDictItem()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getPosition()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/addLast(java.lang.Object)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/lang/String/length()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/seek(int)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/LinkedList()
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getNumberOfLayers()
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/setId(int,int)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/BitmapDrawable/getBitmap()
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getId(int)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/LayerDrawable(android.graphics.drawable.Drawable[])
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/getPaint()
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/ShapeDrawable(android.graphics.drawable.shapes.Shape)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getDrawable(int)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/BitmapShader/BitmapShader(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android/support/v7/internal/widget/ProgressBarICS/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ClipDrawable/ClipDrawable(android.graphics.drawable.Drawable,int,int)
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/resolveSize(int,int)
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getPaddingTop()
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/setMeasuredDimension(int,int)
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getPaddingRight()
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getPaddingBottom()
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/ProgressBarICS/onMeasure(int,int)#android/support/v7/internal/widget/ProgressBarICS/getPaddingLeft()
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/setDuration(long)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/AlphaAnimation(float,float)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/setRepeatCount(int)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/setInterpolator(android.view.animation.Interpolator)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/setStartTime(long)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/AlphaAnimation/setRepeatMode(int)
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/support/v7/internal/widget/ProgressBarICS/getVisibility()
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/LinearInterpolator/LinearInterpolator()
android/support/v7/internal/widget/ProgressBarICS/startAnimation()#android/view/animation/Transformation/Transformation()
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setLevel(int)
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/addFrame(android.graphics.drawable.Drawable,int)
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setLevel(int)
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/isOneShot()
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getNumberOfFrames()
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getDuration(int)
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/AnimationDrawable()
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getFrame(int)
android/support/v7/internal/widget/ProgressBarICS/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setOneShot(boolean)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/support/v7/internal/widget/ProgressBarICS/getPaddingTop()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/support/v7/internal/widget/ProgressBarICS/getDrawingTime()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/os/SystemClock/uptimeMillis()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/view/View/onDraw(android.graphics.Canvas)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/support/v7/internal/widget/ProgressBarICS/getPaddingLeft()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/support/v7/internal/widget/ProgressBarICS/postInvalidateDelayed(long)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/view/animation/Transformation/getAlpha()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setLevel(int)
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/graphics/drawable/Animatable/start()
android/support/v7/internal/widget/ProgressBarICS/onDraw(android.graphics.Canvas)#android/view/animation/AlphaAnimation/getTransformation(long,android.view.animation.Transformation)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setGrayStroke(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/closePathStroke()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showTextAligned(int,java.lang.String,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,java.lang.String,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showTextAligned(int,java.lang.String,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/first()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/io/OutputStream/write(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/iterator()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/Runtime/getRuntime()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/append(long)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/Runtime/freeMemory()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/String/getBytes()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/System/currentTimeMillis()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/Float(float)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getIndentationRight()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/Stack()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/isEmpty()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/pop()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getSpacingAfter()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/Paragraph/getLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getSpacingBefore()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getAlignment()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/removeFirst()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getKeepTogether()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/getFirst()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getExtraParagraphSpace()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/set(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getFirstLineIndent()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getIndentationLeft()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getMultipliedLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorder()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorderWidth()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/LinkedList()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorderWidth(float)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorder(int)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBackgroundColor()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorderColor()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/removeExtra(java.lang.String)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/isEmpty()
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/getAction()
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/lang/String/equals(java.lang.Object)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/get(int)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/size()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$Page/getCanvas()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/writeTo(java.io.OutputStream)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/PrintedPdfDocument(android.content.Context,android.print.PrintAttributes)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#java/io/FileOutputStream/FileOutputStream(java.io.FileDescriptor)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$Page/getInfo()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/RectF/RectF(android.graphics.Rect)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Bitmap/getHeight()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/PrintDocumentAdapter$WriteResultCallback/onWriteFailed(java.lang.CharSequence)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/close()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/os/ParcelFileDescriptor/close()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Bitmap/getWidth()
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/finishPage(android.graphics.pdf.PdfDocument$Page)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/PrintDocumentAdapter$WriteResultCallback/onWriteFinished(android.print.PageRange[])
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/startPage(int)
android/support/v4/print/PrintHelperKitkat$1/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$PageInfo/getContentRect()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/List/size()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/build(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/JcaSimpleSignerInfoVerifierBuilder()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/setProvider(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/tsp/TimeStampToken/isSignatureValid(org.spongycastle.cms.SignerInformationVerifier)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/build(java.security.PublicKey)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/cert/ocsp/BasicOCSPResp/isSignatureValid(org.spongycastle.operator.ContentVerifierProvider)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/setProvider(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/JcaContentVerifierProviderBuilder()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getKeyUsage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Calendar/getTime()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Set/iterator()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getCriticalExtensionOIDs()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/hasUnsupportedCriticalExtension()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/List/contains(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/CRL/isRevoked(java.security.cert.Certificate)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getExtendedKeyUsage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/lang/Exception/getMessage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/checkValidity(java.util.Date)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getPathSegments()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/size()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/pm/PackageManager/getResourcesForApplication(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/get(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getAuthority()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getDrawable(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestPath()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/query(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/fragment(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/Uri$Builder()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/build()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestAuthority()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#java/lang/String/valueOf(int)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestSelection()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/flattenToShortString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getActivityInfo(android.content.ComponentName,int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager$NameNotFoundException/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/ActivityInfo/getIconResource()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/net/Uri/getScheme()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/graphics/drawable/Drawable/createFromStream(java.io.InputStream,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/getMessage()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/InputStream/close()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/content/Context/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/length()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/content/res/Resources/getDrawable(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/content/Context/getResources()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/style/TextAppearanceSpan/TextAppearanceSpan(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#java/lang/CharSequence/length()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getTheme()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/SpannableString(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/util/TypedValue/TypedValue()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources/getColorStateList(int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/setSpan(java.lang.Object,int,int,int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getResources()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setVisibility(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setMaxLines(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setSingleLine(boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setTag(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/view/View/getTag()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getInt(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/getText()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#com/itextpdf/text/html/WebColors/get(java.lang.Object)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/length()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#com/itextpdf/text/html/WebColors/containsKey(java.lang.Object)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/Arrays/sort(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Collections/nCopies(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/empty()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/Stack()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/pop()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/CMSEnvelopedData/CMSEnvelopedData(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/CMSEnvelopedData/getRecipientInfos()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cert/X509CertificateHolder/X509CertificateHolder(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/update(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformationStore/getRecipients()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformation/getRID()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientId/match(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/cert/Certificate/getEncoded()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/update(byte[],int,int)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/readFully(byte[],int,int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/read()
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/lang/Math/abs(int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/Version/getInstance()#java/lang/Class/forName(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/itextpdf/text/Version/getInstance()#java/lang/String/length()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/Version/getInstance()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/itextpdf/text/Version/getInstance()#java/lang/Exception/Exception()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/toString()
com/itextpdf/text/Version/getInstance()#java/lang/Class/newInstance()
com/itextpdf/text/Version/getInstance()#java/lang/String/toLowerCase()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/String/trim()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/os/Environment/getExternalStorageState()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/obtain(int)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/getText()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setClassName(java.lang.CharSequence)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/content/Context/getPackageName()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#java/util/List/isEmpty()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/View/getContext()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setPackageName(java.lang.CharSequence)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/getContentDescription()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setEnabled(boolean)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/PointF/PointF(float,float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridDashPathEffect()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getGridLineWidth()
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#java/util/Calendar/set(int,int,int)
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/StatsActivity/getSupportFragmentManager()
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#android/widget/Spinner/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#android/widget/Spinner/setSelection(int)
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#java/util/Calendar/getInstance()
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#java/util/Calendar/clear()
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#java/util/Calendar/get(int)
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
pl/pcz/wimii/mind/mypressure/StatsActivity/onCreate(android.os.Bundle)#pl/pcz/wimii/mind/mypressure/StatsActivity/findViewById(int)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraRightOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraLeftOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/prepareOffsetMatrix()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraBottomOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraTopOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/toString()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$Page/getCanvas()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/writeTo(java.io.OutputStream)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/PrintedPdfDocument(android.content.Context,android.print.PrintAttributes)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#java/io/FileOutputStream/FileOutputStream(java.io.FileDescriptor)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$Page/getInfo()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/RectF/RectF(android.graphics.Rect)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Bitmap/getHeight()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/PrintDocumentAdapter$WriteResultCallback/onWriteFailed(java.lang.CharSequence)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/close()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/os/ParcelFileDescriptor/close()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/Bitmap/getWidth()
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/finishPage(android.graphics.pdf.PdfDocument$Page)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/PrintDocumentAdapter$WriteResultCallback/onWriteFinished(android.print.PageRange[])
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/print/pdf/PrintedPdfDocument/startPage(int)
android/support/v4/print/PrintHelperKitkat$2/onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback)#android/graphics/pdf/PdfDocument$PageInfo/getContentRect()
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/os/AsyncTask/execute(java.lang.Object[])
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/PrintDocumentInfo$Builder(java.lang.String)
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/setContentType(int)
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintAttributes/equals(java.lang.Object)
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/os/CancellationSignal/isCanceled()
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutFinished(android.print.PrintDocumentInfo,boolean)
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/setPageCount(int)
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutCancelled()
android/support/v4/print/PrintHelperKitkat$2/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/build()
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/retainNonConfig()#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/addFragment(android.support.v4.app.Fragment,boolean)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/support/v4/app/FragmentActivity/isFinishing()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setVisibility(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/startAnimation(android.view.animation.Animation)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getBoolean(java.lang.String,boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/animation/Animation/setAnimationListener(android.view.animation.Animation$AnimationListener)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/clearAnimation()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/addView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/res/Resources/getResourceName(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/lang/Runnable/run()
android/support/v4/app/FragmentManagerImpl/execPendingActions()#android/os/Looper/myLooper()
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/execPendingActions()#android/os/Handler/removeCallbacks(java.lang.Runnable)
android/support/v4/app/FragmentManagerImpl/execPendingActions()#android/os/Handler/getLooper()
android/support/v4/app/FragmentManagerImpl/execPendingActions()#java/util/ArrayList/clear()
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/popBackStackState(android.os.Handler,java.lang.String,int,int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#android/support/v4/app/FragmentActivity/getClassLoader()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/io/PrintWriter/PrintWriter(java.io.Writer)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/clear()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,java.util.ArrayList)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/attachFragment(android.support.v4.app.Fragment,int,int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/makeInactive(android.support.v4.app.Fragment)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/toArray()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/lang/Integer/intValue()
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/makeActive(android.support.v4.app.Fragment)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/Integer/intValue()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/Path()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridLineWidth()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridDashPathEffect()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getCertStatus()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/after(java.util.Date)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getNextUpdate()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/BasicOCSPResp/getResponses()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getCertID()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/operator/bc/BcDigestCalculatorProvider/BcDigestCalculatorProvider()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/Date(long)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/X509CertificateHolder/X509CertificateHolder(byte[])
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/CertificateID/matchesIssuer(org.spongycastle.cert.X509CertificateHolder,org.spongycastle.operator.DigestCalculatorProvider)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getThisUpdate()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/getTime()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/CertificateID/getSerialNumber()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/math/BigInteger/equals(java.lang.Object)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/iterator()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/iterator()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfFormField/getIndirectReference()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/HashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfAnnotation/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/get(int)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/invalidate()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/disableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/enableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/lang/Integer/Integer(int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/GeneralSecurityException/GeneralSecurityException(java.lang.Throwable)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/MessageDigest/update(byte[],int,int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#com/itextpdf/text/pdf/PdfSignature/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog/getWindow()
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/view/Window/getAttributes()
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/setCustomTitle(android.view.View)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/create()
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog/setOnDismissListener(android.content.DialogInterface$OnDismissListener)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/setIcon(android.graphics.drawable.Drawable)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog$Builder/setOnKeyListener(android.content.DialogInterface$OnKeyListener)
android/support/v7/internal/view/menu/MenuDialogHelper/show(android.os.IBinder)#android/app/AlertDialog/show()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/Window/getDecorView()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/app/AlertDialog/getWindow()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/content/DialogInterface/dismiss()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/startTracking(android.view.KeyEvent,java.lang.Object)
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/View/getKeyDispatcherState()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getAction()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/isTracking(android.view.KeyEvent)
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getRepeatCount()
android/support/v7/internal/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/isCanceled()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/hasNext()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getKey()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/size()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/next()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/ensureCapacity(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Set/iterator()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getValue()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/entrySet()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Document/getFirstChild()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getOwnerDocument()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/importNode(org.w3c.dom.Node,boolean)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/HorizontalScrollView/onMeasure(int,int)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/internal/widget/ScrollingTabContainerView/setFillViewport(boolean)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/LinearLayout/getChildCount()
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/internal/widget/ScrollingTabContainerView/getMeasuredWidth()
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/LinearLayout/getMeasuredWidth()
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/LinearLayout/measure(int,int)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/data/CandleEntry/getXIndex()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryCount()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLines(float[],android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleData/getYValCount()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getMaxVisibleCount()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryCount()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleData/getDataSets()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.ValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getYChartMax()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/CandleData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/CandleEntry/getXIndex()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlightLines(android.graphics.Canvas,float[],com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getYChartMin()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForXIndex(int)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/List/get(int)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageResource(int)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundColor(int)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/List/size()
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/adapters/AccountListAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/Button/setVisibility(int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/measureChildView(android.view.View,int,int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Class/getSimpleName()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingTop()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/setMeasuredDimension(int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingRight()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getChildAt(int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/getMeasuredWidth()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/setVisibility(int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/measure(int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/internal/widget/ActionBarContextView/getChildCount()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Object/getClass()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v7/internal/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/support/v7/internal/widget/ActionBarContextView/getContext()
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/getParent()
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/support/v7/internal/widget/ActionBarContextView/getChildAt(int)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/support/v7/internal/widget/ActionBarContextView/getChildCount()
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/findViewById(int)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/TextView/setVisibility(int)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/setVisibility(int)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/support/v7/internal/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarContainer/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/support/v7/internal/view/menu/ActionMenuView/getParent()
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/content/Context/getResources()
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarContextView/getContext()
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/support/v7/internal/widget/ActionBarContextView/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/support/v7/internal/view/menu/ActionMenuView/setBackgroundDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActionBarContextView/setSplitActionBar(boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/internal/widget/ActionBarContainer/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/findViewById(int)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/internal/view/menu/ActionMenuView/setBackgroundDrawable(android.graphics.drawable.Drawable)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/content/Context/getResources()
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/internal/widget/ActionBarContextView/getContext()
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/internal/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/internal/widget/ActionBarContextView/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/getParent()
android/support/v7/internal/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingTop()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/positionChildInverse(android.view.View,int,int,int)
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingRight()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/widget/LinearLayout/getVisibility()
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/positionChild(android.view.View,int,int,int)
android/support/v7/internal/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/internal/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/setInputMethodMode(int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS/getSelectedItemPosition()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/setSelection(int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#java/lang/Math/max(int,int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/getBackground()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS/getWidth()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/setHorizontalOffset(int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS/getPaddingRight()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/widget/ListView/setChoiceMode(int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/setContentWidth(int)
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS$DropdownPopup/getListView()
android/support/v7/internal/widget/SpinnerICS$DropdownPopup/show()#android/support/v7/internal/widget/SpinnerICS/getPaddingLeft()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/Principal/getName()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Enumeration/hasMoreElements()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#com/github/mikephil/charting/data/DataSet/getLabel()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/util/List/size()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/toString()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/StringBuffer()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/toString()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/lang/Float/Float(float)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/ArrayList()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/lang/Float/floatValue()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/get(int)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Stack/pop()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Collections/reverse(java.util.List)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/size()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager/newWakeLock(int,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/setReferenceCounted(boolean)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/startService(android.content.Intent)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/getSystemService(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/acquire(long)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/ComponentName/flattenToShortString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/content/Intent/getIntExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/os/PowerManager$WakeLock/release()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/get(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/remove(int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setTicker(java.lang.CharSequence,android.widget.RemoteViews)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setLargeIcon(android.graphics.Bitmap)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setDefaults(int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setProgress(int,int,boolean)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setFullScreenIntent(android.app.PendingIntent,boolean)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setLights(int,int,int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setAutoCancel(boolean)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/getNotification()
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setSound(android.net.Uri,int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setVibrate(long[])
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setOngoing(boolean)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setContentTitle(java.lang.CharSequence)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setContentIntent(android.app.PendingIntent)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setNumber(int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setOnlyAlertOnce(boolean)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setContentText(java.lang.CharSequence)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setContentInfo(java.lang.CharSequence)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/Notification$Builder(android.content.Context)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setContent(android.widget.RemoteViews)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setDeleteIntent(android.app.PendingIntent)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setSmallIcon(int,int)
android/support/v4/app/NotificationCompatIceCreamSandwich/add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean)#android/app/Notification$Builder/setWhen(long)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getPositionDescription()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/app/Activity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/NullPointerException/NullPointerException()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setId(int)
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getTag()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setTag(java.lang.Object)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/view/Window/getDecorView()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/FragmentActivity/getWindow()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getRight()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isHorizontalScrollBarEnabled()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getId()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/StringBuilder/StringBuilder(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/Class/getName()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isEnabled()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/StringBuilder/append(char)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isLongClickable()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/Object/getClass()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getBottom()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/content/res/Resources/getResourcePackageName(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/willNotDraw()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/content/res/Resources/getResourceTypeName(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getVisibility()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isFocusable()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isFocused()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getResources()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isClickable()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isPressed()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/content/res/Resources/getResourceEntryName(int)
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isVerticalScrollBarEnabled()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getTop()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/getLeft()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/viewToString(android.view.View)#android/view/View/isSelected()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#android/text/format/DateFormat/format(java.lang.CharSequence,java.util.Calendar)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#java/util/Calendar/set(int,int,int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#android/widget/DatePicker/getYear()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#android/widget/DatePicker/getMonth()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#android/widget/DatePicker/getDayOfMonth()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/dismiss()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$2/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/findViewById(int)
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/net/URL/toString()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/net/URL/getProtocol()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/io/InputStream/close()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/net/URL/openStream()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/net/URL/getFile()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/io/InputStream/read()
com/itextpdf/text/Image/getInstance(java.net.URL,boolean)#java/lang/NullPointerException/NullPointerException()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/size()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/size()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/Integer/toOctalString(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#java/lang/Integer/intValue()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#java/util/Calendar/set(int,int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#android/widget/TimePicker/getCurrentHour()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#java/lang/Integer/valueOf(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#android/widget/TimePicker/getCurrentMinute()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#android/widget/TimePicker/getHour()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#java/lang/String/format(java.lang.String,java.lang.Object[])
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/AddEntryActivity/findViewById(int)
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#pl/pcz/wimii/mind/mypressure/kaj/KDialog/dismiss()
pl/pcz/wimii/mind/mypressure/AddEntryActivity$3/onClick(android.view.View)#android/widget/TimePicker/getMinute()
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getInt(int,int)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/hasValue(int)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getText(int)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v7/internal/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setChecked(boolean)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setTitleCondensed(java.lang.CharSequence)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/content/Context/isRestricted()
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setVisible(boolean)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setNumericShortcut(char)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setAlphabeticShortcut(char)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setCheckable(boolean)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setEnabled(boolean)
android/support/v7/internal/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setIcon(int)
