com/porterhead/user/UserAuthenticationProvider/supports(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/core/Authentication/getPrincipal()
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/oauth2/common/exceptions/OAuth2Exception/OAuth2Exception(java.lang.String,java.lang.Throwable)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#java/lang/Object/toString()
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/authentication/UsernamePasswordAuthenticationToken/UsernamePasswordAuthenticationToken(java.lang.Object,java.lang.Object,java.util.Collection)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/authentication/AbstractAuthenticationToken/setDetails(java.lang.Object)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#java/lang/Throwable/getMessage()
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#com/porterhead/user/UserService/authenticate(java.lang.String,java.lang.String)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/core/authority/SimpleGrantedAuthority/SimpleGrantedAuthority(java.lang.String)
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#org/springframework/security/core/Authentication/getCredentials()
com/porterhead/user/UserAuthenticationProvider/authenticate(org.springframework.security.core.Authentication)#java/util/Arrays/asList(T[])
com/porterhead/configuration/SupportConfiguration/genericExceptionMapper()#com/porterhead/resource/GenericExceptionMapper/GenericExceptionMapper()
com/porterhead/configuration/SupportConfiguration/validator()#javax/validation/ValidatorFactory/getValidator()
com/porterhead/configuration/SupportConfiguration/validator()#javax/validation/Validation/buildDefaultValidatorFactory()
com/porterhead/configuration/SupportConfiguration/healthCheckResource()#com/porterhead/resource/HealthCheckResource/HealthCheckResource()
com/porterhead/filter/BaseCORSFilter/getAllowedOrigins(java.lang.String)#com/porterhead/filter/BaseCORSFilter/parseAllowedOrigins(java.lang.String)
com/porterhead/filter/BaseCORSFilter/parseAllowedOrigins(java.lang.String)#java/lang/String/split(java.lang.String)
com/porterhead/filter/BaseCORSFilter/parseAllowedOrigins(java.lang.String)#java/util/Arrays/asList(T[])
com/porterhead/filter/BaseCORSFilter/parseAllowedOrigins(java.lang.String)#org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)
com/porterhead/filter/BaseCORSFilter/parseAllowedOrigins(java.lang.String)#java/util/HashSet/HashSet(java.util.Collection)
com/porterhead/configuration/UserConfiguration/verificationTokenService()#com/porterhead/user/VerificationTokenServiceImpl/VerificationTokenServiceImpl(com.porterhead.user.UserRepository,com.porterhead.user.VerificationTokenRepository,com.porterhead.mail.MailSenderService,javax.validation.Validator,org.springframework.security.crypto.password.PasswordEncoder)
com/porterhead/configuration/UserConfiguration/userResource()#com/porterhead/configuration/UserConfiguration/verificationTokenService()
com/porterhead/configuration/UserConfiguration/userResource()#com/porterhead/configuration/UserConfiguration/userService()
com/porterhead/configuration/UserConfiguration/userResource()#com/porterhead/user/resource/UserResource/UserResource(com.porterhead.user.UserService,com.porterhead.user.VerificationTokenService,org.springframework.security.oauth2.provider.token.DefaultTokenServices,org.springframework.security.crypto.password.PasswordEncoder,org.springframework.security.oauth2.provider.ClientDetailsService)
com/porterhead/configuration/UserConfiguration/meResource()#com/porterhead/user/resource/MeResource/MeResource()
com/porterhead/configuration/UserConfiguration/userService()#com/porterhead/user/UserServiceImpl/UserServiceImpl(com.porterhead.user.UserRepository,javax.validation.Validator,org.springframework.security.crypto.password.PasswordEncoder)
com/porterhead/configuration/UserConfiguration/verificationResource()#com/porterhead/user/resource/VerificationResource/VerificationResource()
com/porterhead/configuration/UserConfiguration/passwordResource()#com/porterhead/user/resource/PasswordResource/PasswordResource()
com/porterhead/exception/ValidationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/exception/ValidationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/exception/ValidationException/getResponse()#com/porterhead/exception/ValidationException/getErrorResponse()
com/porterhead/exception/ValidationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
com/porterhead/exception/ValidationException/getResponse()#javax/ws/rs/core/Response/status(int)
com/porterhead/exception/ValidationException/getErrorResponse()#com/porterhead/api/ErrorResponse/setApplicationMessage(java.lang.String)
com/porterhead/exception/ValidationException/getErrorResponse()#com/porterhead/api/ErrorResponse/ErrorResponse()
com/porterhead/exception/ValidationException/getErrorResponse()#com/porterhead/api/ErrorResponse/setValidationErrors(java.util.List)
com/porterhead/exception/ValidationException/getErrorResponse()#com/porterhead/api/ErrorResponse/setConsumerMessage(java.lang.String)
com/porterhead/oauth2/WebConfiguration/requestMappingHandlerMapping()#org/springframework/web/servlet/handler/AbstractHandlerMapping/setAlwaysUseFullPath(boolean)
com/porterhead/oauth2/WebConfiguration/requestMappingHandlerMapping()#org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport/requestMappingHandlerMapping()
com/porterhead/configuration/MailServiceConfiguration/velocityEngine()#org/apache/velocity/app/VelocityEngine/setProperty(java.lang.String,java.lang.Object)
com/porterhead/configuration/MailServiceConfiguration/velocityEngine()#org/apache/velocity/app/VelocityEngine/VelocityEngine()
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/JavaMailSenderImpl()
com/porterhead/configuration/MailServiceConfiguration/mailSender()#java/util/Properties/Properties()
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/setUsername(java.lang.String)
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/setPort(int)
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/setPassword(java.lang.String)
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/setJavaMailProperties(java.util.Properties)
com/porterhead/configuration/MailServiceConfiguration/mailSender()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
com/porterhead/configuration/MailServiceConfiguration/mailSender()#org/springframework/mail/javamail/JavaMailSenderImpl/setHost(java.lang.String)
com/porterhead/configuration/MailServiceConfiguration/mailSenderService()#com/porterhead/configuration/MailServiceConfiguration/velocityEngine()
com/porterhead/configuration/MailServiceConfiguration/mailSenderService()#com/porterhead/configuration/MailServiceConfiguration/mailSender()
com/porterhead/configuration/MailServiceConfiguration/mailSenderService()#com/porterhead/mail/MailSenderServiceImpl/MailSenderServiceImpl(org.springframework.mail.javamail.JavaMailSender,org.apache.velocity.app.VelocityEngine)
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel)#com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel)#java/util/HashMap/HashMap()
com/porterhead/mail/MailSenderServiceImpl/sendRegistrationEmail(com.porterhead.mail.EmailServiceTokenModel)#com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)
com/porterhead/mail/MailSenderServiceImpl/sendRegistrationEmail(com.porterhead.mail.EmailServiceTokenModel)#java/util/HashMap/HashMap()
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#java/lang/Enum/toString()
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#com/porterhead/mail/EmailServiceTokenModel/getEmailAddress()
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#com/porterhead/mail/EmailServiceTokenModel/getTokenType()
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com/porterhead/mail/EmailServiceTokenModel,java/lang/String,java/lang/String,java/util/Map)/$anonymous1/()
com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)#org/springframework/mail/javamail/JavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)
com/porterhead/mail/MailSenderServiceImpl/addInlineResource(org.springframework.mail.javamail.MimeMessageHelper,java.lang.String,java.lang.String)#org/springframework/core/io/ClassPathResource/ClassPathResource(java.lang.String)
com/porterhead/mail/MailSenderServiceImpl/addInlineResource(org.springframework.mail.javamail.MimeMessageHelper,java.lang.String,java.lang.String)#org/springframework/mail/javamail/MimeMessageHelper/addInline(java.lang.String,org.springframework.core.io.Resource)
com/porterhead/mail/MailSenderServiceImpl/sendLostPasswordEmail(com.porterhead.mail.EmailServiceTokenModel)#com/porterhead/mail/MailSenderServiceImpl/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel,java.lang.String,java.lang.String,java.util.Map)
com/porterhead/mail/MailSenderServiceImpl/sendLostPasswordEmail(com.porterhead.mail.EmailServiceTokenModel)#java/util/HashMap/HashMap()
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#javax/ws/rs/WebApplicationException/getResponse()
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#com/porterhead/exception/ApplicationRuntimeException/ApplicationRuntimeException(java.lang.String)
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#org/slf4j/Logger/info(java.lang.String)
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#java/lang/Throwable/getCause()
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#com/porterhead/exception/BaseWebApplicationException/getResponse()
com/porterhead/resource/GenericExceptionMapper/toResponse(java.lang.Exception)#org/slf4j/Logger/error(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#com/porterhead/user/VerificationToken/hasExpired()
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#com/porterhead/user/VerificationTokenRepository/findByToken(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#java/lang/String/String(byte[])
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#org/apache/commons/codec/binary/Base64/decodeBase64(byte[])
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#java/lang/String/getBytes()
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object)
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#com/porterhead/user/exception/TokenHasExpiredException/TokenHasExpiredException()
com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)#com/porterhead/user/exception/TokenNotFoundException/TokenNotFoundException()
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailRegistrationToken(java.lang.String)#com/porterhead/user/VerificationToken/VerificationToken(com.porterhead.user.User,com.porterhead.user.VerificationTokenType,int)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailRegistrationToken(java.lang.String)#com/porterhead/mail/EmailServiceTokenModel/EmailServiceTokenModel(com.porterhead.user.User,com.porterhead.user.VerificationToken,java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailRegistrationToken(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailRegistrationToken(java.lang.String)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailRegistrationToken(java.lang.String)#com/porterhead/mail/MailSenderService/sendRegistrationEmail(com.porterhead.mail.EmailServiceTokenModel)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)#com/porterhead/user/VerificationToken/VerificationToken(com.porterhead.user.User,com.porterhead.user.VerificationTokenType,int)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)#com/porterhead/mail/EmailServiceTokenModel/EmailServiceTokenModel(com.porterhead.user.User,com.porterhead.user.VerificationToken,java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)#com/porterhead/mail/MailSenderService/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/exception/AuthenticationException/AuthenticationException()
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/VerificationToken/getUserId()
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/service/BaseService/validate(java.lang.Object)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/VerificationToken/setVerified(boolean)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#org/springframework/util/Assert/notNull(java.lang.Object)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/User/setVerified(java.lang.Boolean)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/exception/AlreadyVerifiedException/AlreadyVerifiedException()
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#org/springframework/security/crypto/password/PasswordEncoder/encode(java.lang.CharSequence)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/api/PasswordRequest/getPassword()
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/User/setHashedPassword(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#org/springframework/data/repository/CrudRepository/findOne(ID)
com/porterhead/user/VerificationTokenServiceImpl/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/VerificationToken/isVerified()
com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)#com/porterhead/user/UserRepository/findByEmailAddress(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)#com/porterhead/user/exception/UserNotFoundException/UserNotFoundException()
com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
com/porterhead/user/VerificationTokenServiceImpl/ensureUserIsLoaded(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/isValidUuid(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/VerificationToken/getUserId()
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/VerificationToken/setVerified(boolean)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/User/setVerified(java.lang.Boolean)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/loadToken(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/User/isVerified()
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/exception/AlreadyVerifiedException/AlreadyVerifiedException()
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#org/springframework/data/repository/CrudRepository/findOne(ID)
com/porterhead/user/VerificationTokenServiceImpl/verify(java.lang.String)#com/porterhead/user/VerificationToken/isVerified()
com/porterhead/user/VerificationTokenServiceImpl/isValidUuid(java.lang.String)#java/util/regex/Matcher/matches()
com/porterhead/user/VerificationTokenServiceImpl/isValidUuid(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/porterhead/user/VerificationTokenServiceImpl/getActiveToken(java.util.List)#com/porterhead/user/VerificationToken/hasExpired()
com/porterhead/user/VerificationTokenServiceImpl/getActiveToken(java.util.List)#com/porterhead/user/VerificationToken/isVerified()
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/getActiveToken(java.util.List)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/VerificationTokenRepository/findByUserIdAndTokenType(java.lang.String,com.porterhead.user.VerificationTokenType)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/UserRepository/findByEmailAddress(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/exception/UserNotFoundException/UserNotFoundException()
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/VerificationTokenServiceImpl/sendEmailVerificationToken(com.porterhead.user.User)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/mail/EmailServiceTokenModel/EmailServiceTokenModel(com.porterhead.user.User,com.porterhead.user.VerificationToken,java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/mail/MailSenderService/sendVerificationEmail(com.porterhead.mail.EmailServiceTokenModel)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object)
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/User/isVerified()
com/porterhead/user/VerificationTokenServiceImpl/generateEmailVerificationToken(java.lang.String)#com/porterhead/user/exception/AlreadyVerifiedException/AlreadyVerifiedException()
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/VerificationTokenServiceImpl/getActiveToken(java.util.List)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/VerificationTokenRepository/findByUserIdAndTokenType(java.lang.String,com.porterhead.user.VerificationTokenType)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/UserRepository/findByEmailAddress(java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/mail/EmailServiceTokenModel/EmailServiceTokenModel(com.porterhead.user.User,com.porterhead.user.VerificationToken,java.lang.String)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/service/BaseService/validate(java.lang.Object)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/mail/MailSenderService/sendLostPasswordEmail(com.porterhead.mail.EmailServiceTokenModel)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/api/LostPasswordRequest/getEmailAddress()
com/porterhead/user/VerificationTokenServiceImpl/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/VerificationToken/VerificationToken(com.porterhead.user.User,com.porterhead.user.VerificationTokenType,int)
com/porterhead/sample/SampleResource/getSample(javax.ws.rs.core.SecurityContext)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/sample/SampleResource/getSample(javax.ws.rs.core.SecurityContext)#javax/ws/rs/core/Response/ok()
com/porterhead/sample/SampleResource/getSample(javax.ws.rs.core.SecurityContext)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/sample/SampleResource/getSample(javax.ws.rs.core.SecurityContext)#com/porterhead/user/User/getEmailAddress()
com/porterhead/sample/SampleResource/getSample(javax.ws.rs.core.SecurityContext)#com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#org/springframework/util/StringUtils/hasLength(java.lang.String)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/UpdateUserRequest/getEmailAddress()
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#java/lang/String/equals(java.lang.Object)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/getEmailAddress()
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/ApiUser/getId()
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/VerificationTokenService/sendEmailVerificationToken(java.lang.String)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/UserService/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)
com/porterhead/user/resource/UserResource/updateUser(javax.ws.rs.core.SecurityContext,java.lang.String,com.porterhead.user.api.UpdateUserRequest)#javax/ws/rs/core/Response/ok()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/api/CreateUserRequest/getPassword()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/SecurityContext/getUserPrincipal()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/VerificationTokenService/sendEmailRegistrationToken(java.lang.String)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/UserService/createUser(com.porterhead.user.api.CreateUserRequest)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriInfo/getAbsolutePathBuilder()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#java/security/Principal/getName()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/api/ApiUser/getId()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/created(java.net.URI)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/api/PasswordRequest/getPassword()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/api/CreateUserResponse/getApiUser()
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/build(java.lang.Object[])
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#javax/ws/rs/core/UriBuilder/path(java.lang.String)
com/porterhead/user/resource/UserResource/signupUser(com.porterhead.user.api.CreateUserRequest,javax.ws.rs.core.SecurityContext,javax.ws.rs.core.UriInfo)#com/porterhead/user/api/CreateUserResponse/CreateUserResponse(com.porterhead.user.api.ApiUser,org.springframework.security.oauth2.common.OAuth2AccessToken)
com/porterhead/user/resource/UserResource/getUser(java.lang.String,javax.ws.rs.core.SecurityContext)#com/porterhead/user/UserService/getUser(java.lang.String)
com/porterhead/user/resource/UserResource/getUser(java.lang.String,javax.ws.rs.core.SecurityContext)#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/user/resource/UserResource/getUser(java.lang.String,javax.ws.rs.core.SecurityContext)#com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)
com/porterhead/user/resource/UserResource/createOAuth2Request(java.util.Map,java.lang.String,java.util.Collection,boolean,java.util.Collection,java.util.Set,java.lang.String,java.util.Set,java.util.Map)#java/util/LinkedHashSet/LinkedHashSet(java.util.Collection)
com/porterhead/user/resource/UserResource/createOAuth2Request(java.util.Map,java.lang.String,java.util.Collection,boolean,java.util.Collection,java.util.Set,java.lang.String,java.util.Set,java.util.Map)#org/springframework/security/oauth2/provider/OAuth2Request/OAuth2Request(java.util.Map,java.lang.String,java.util.Collection,boolean,java.util.Set,java.util.Set,java.lang.String,java.util.Set,java.util.Map)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/oauth2/provider/token/DefaultTokenServices/createAccessToken(org.springframework.security.oauth2.provider.OAuth2Authentication)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/crypto/password/PasswordEncoder/encode(java.lang.CharSequence)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/oauth2/provider/ClientDetailsService/loadClientByClientId(java.lang.String)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/oauth2/provider/OAuth2Authentication/OAuth2Authentication(org.springframework.security.oauth2.provider.OAuth2Request,org.springframework.security.core.Authentication)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#com/porterhead/user/resource/UserResource/createOAuth2Request(java.util.Map,java.lang.String,java.util.Collection,boolean,java.util.Collection,java.util.Set,java.lang.String,java.util.Set,java.util.Map)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/core/authority/SimpleGrantedAuthority/SimpleGrantedAuthority(java.lang.String)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/oauth2/provider/ClientDetails/getScope()
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#java/lang/Enum/toString()
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#org/springframework/security/authentication/UsernamePasswordAuthenticationToken/UsernamePasswordAuthenticationToken(java.lang.Object,java.lang.Object,java.util.Collection)
com/porterhead/user/resource/UserResource/createTokenForNewUser(java.lang.String,java.lang.String,java.lang.String)#java/util/Collections/singleton(T)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/getAccessToken(org.springframework.security.oauth2.provider.OAuth2Authentication)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByAuthenticationId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/getAccessToken(org.springframework.security.oauth2.provider.OAuth2Authentication)#com/porterhead/oauth2/OAuth2AuthenticationAccessToken/getoAuth2AccessToken()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/getAccessToken(org.springframework.security.oauth2.provider.OAuth2Authentication)#org/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator/extractKey(org.springframework.security.oauth2.provider.OAuth2Authentication)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken)#org/springframework/security/oauth2/common/OAuth2AccessToken/getValue()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken)#org/springframework/data/repository/CrudRepository/delete(T)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessTokenUsingRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByRefreshToken(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessTokenUsingRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#org/springframework/data/repository/CrudRepository/delete(T)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeAccessTokenUsingRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#org/springframework/security/oauth2/common/OAuth2RefreshToken/getValue()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readRefreshToken(java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2RefreshTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readRefreshToken(java.lang.String)#com/porterhead/oauth2/OAuth2AuthenticationRefreshToken/getoAuth2RefreshToken()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAccessToken(java.lang.String)#com/porterhead/oauth2/OAuth2AuthenticationAccessToken/getoAuth2AccessToken()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAccessToken(java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#com/porterhead/oauth2/mongodb/OAuth2RefreshTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#org/springframework/data/repository/CrudRepository/delete(T)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/removeRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#org/springframework/security/oauth2/common/OAuth2RefreshToken/getValue()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/extractAccessTokens(java.util.List)#java/util/ArrayList/ArrayList()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/extractAccessTokens(java.util.List)#com/porterhead/oauth2/OAuth2AuthenticationAccessToken/getoAuth2AccessToken()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/extractAccessTokens(java.util.List)#java/util/List/add(E)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/storeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)#com/porterhead/oauth2/OAuth2AuthenticationAccessToken/OAuth2AuthenticationAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication,java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/storeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)#org/springframework/security/oauth2/provider/token/AuthenticationKeyGenerator/extractKey(org.springframework.security.oauth2.provider.OAuth2Authentication)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/storeAccessToken(org.springframework.security.oauth2.common.OAuth2AccessToken,org.springframework.security.oauth2.provider.OAuth2Authentication)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthenticationForRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#org/springframework/security/oauth2/common/OAuth2RefreshToken/getValue()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthenticationForRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#com/porterhead/oauth2/mongodb/OAuth2RefreshTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthenticationForRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken)#com/porterhead/oauth2/OAuth2AuthenticationRefreshToken/getAuthentication()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/findTokensByClientIdAndUserName(java.lang.String,java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByClientIdAndUserName(java.lang.String,java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/findTokensByClientIdAndUserName(java.lang.String,java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/extractAccessTokens(java.util.List)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthentication(java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByTokenId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthentication(java.lang.String)#com/porterhead/oauth2/OAuth2AuthenticationAccessToken/getAuthentication()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/storeRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken,org.springframework.security.oauth2.provider.OAuth2Authentication)#com/porterhead/oauth2/OAuth2AuthenticationRefreshToken/OAuth2AuthenticationRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken,org.springframework.security.oauth2.provider.OAuth2Authentication)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/storeRefreshToken(org.springframework.security.oauth2.common.OAuth2RefreshToken,org.springframework.security.oauth2.provider.OAuth2Authentication)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/findTokensByClientId(java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2AccessTokenRepository/findByClientId(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/findTokensByClientId(java.lang.String)#com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/extractAccessTokens(java.util.List)
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthentication(org.springframework.security.oauth2.common.OAuth2AccessToken)#org/springframework/security/oauth2/common/OAuth2AccessToken/getValue()
com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthentication(org.springframework.security.oauth2.common.OAuth2AccessToken)#com/porterhead/oauth2/mongodb/OAuth2RepositoryTokenStore/readAuthentication(java.lang.String)
com/porterhead/configuration/InMemoryMailServiceConfiguration/mailSenderService()#com/porterhead/configuration/InMemoryMailServiceConfiguration/mailSender()
com/porterhead/configuration/InMemoryMailServiceConfiguration/mailSenderService()#com/porterhead/mail/MailSenderServiceImpl/MailSenderServiceImpl(org.springframework.mail.javamail.JavaMailSender,org.apache.velocity.app.VelocityEngine)
com/porterhead/configuration/InMemoryMailServiceConfiguration/mailSenderService()#com/porterhead/configuration/InMemoryMailServiceConfiguration/velocityEngine()
com/porterhead/configuration/InMemoryMailServiceConfiguration/mailSender()#com/porterhead/mail/InMemoryJavaMailSender/InMemoryJavaMailSender()
com/porterhead/configuration/InMemoryMailServiceConfiguration/velocityEngine()#org/apache/velocity/app/VelocityEngine/setProperty(java.lang.String,java.lang.Object)
com/porterhead/configuration/InMemoryMailServiceConfiguration/velocityEngine()#org/apache/velocity/app/VelocityEngine/VelocityEngine()
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/core/MultivaluedMap/getFirst(K)
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerResponseContext/getHeaders()
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/Set/contains(java.lang.Object)
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#java/util/Map/containsKey(java.lang.Object)
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/core/MultivaluedMap/add(K,V)
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#javax/ws/rs/container/ContainerRequestContext/getHeaders()
com/porterhead/filter/jersey/JerseyCrossOriginResourceSharingFilter/filter(javax.ws.rs.container.ContainerRequestContext,javax.ws.rs.container.ContainerResponseContext)#com/porterhead/filter/BaseCORSFilter/getAllowedOrigins(java.lang.String)
com/porterhead/filter/spring/SpringCrossOriginResourceSharingFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)
com/porterhead/filter/spring/SpringCrossOriginResourceSharingFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#javax/servlet/FilterChain/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
com/porterhead/filter/spring/SpringCrossOriginResourceSharingFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#javax/servlet/http/HttpServletResponse/setHeader(java.lang.String,java.lang.String)
com/porterhead/filter/spring/SpringCrossOriginResourceSharingFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#java/util/Set/contains(java.lang.Object)
com/porterhead/filter/spring/SpringCrossOriginResourceSharingFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#com/porterhead/filter/BaseCORSFilter/getAllowedOrigins(java.lang.String)
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#java/lang/String/toLowerCase()
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#com/porterhead/oauth2/AuthorizationException/AuthorizationException(java.lang.String)
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/resource/BaseResource/ensureUserIsAuthorized(javax.ws.rs.core.SecurityContext,java.lang.String)#com/porterhead/user/User/getEmailAddress()
com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)#org/springframework/security/core/Authentication/getPrincipal()
com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)#javax/ws/rs/core/SecurityContext/getUserPrincipal()
com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)#org/springframework/security/oauth2/provider/OAuth2Authentication/getUserAuthentication()
com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)#com/porterhead/user/UserRepository/findById(java.lang.String)
com/porterhead/mail/EmailServiceTokenModel/getEncodedToken()#java/lang/String/String(byte[])
com/porterhead/mail/EmailServiceTokenModel/getEncodedToken()#java/lang/String/getBytes()
com/porterhead/mail/EmailServiceTokenModel/getEncodedToken()#org/apache/commons/codec/binary/Base64/encodeBase64(byte[])
com/porterhead/resource/HealthCheckResource/ping()#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/resource/HealthCheckResource/ping()#javax/ws/rs/core/Response/ok()
com/porterhead/resource/HealthCheckResource/ping()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#com/porterhead/exception/BadClientCredentialsException/BadClientCredentialsException(java.lang.String)
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#javax/servlet/ServletResponse/getOutputStream()
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#javax/servlet/ServletResponse/setContentType(java.lang.String)
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#com/google/gson/Gson/toJson(java.lang.Object)
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#com/google/gson/Gson/Gson()
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#javax/servlet/ServletOutputStream/print(java.lang.String)
com/porterhead/security/OAuthRestEntryPoint/commence(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.AuthenticationException)#javax/servlet/http/HttpServletResponse/setStatus(int)
com/porterhead/exception/BaseWebApplicationException/getErrorResponse()#com/porterhead/api/ErrorResponse/setApplicationMessage(java.lang.String)
com/porterhead/exception/BaseWebApplicationException/getErrorResponse()#com/porterhead/api/ErrorResponse/setConsumerMessage(java.lang.String)
com/porterhead/exception/BaseWebApplicationException/getErrorResponse()#com/porterhead/api/ErrorResponse/ErrorResponse()
com/porterhead/exception/BaseWebApplicationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/exception/BaseWebApplicationException/getResponse()#com/porterhead/exception/BaseWebApplicationException/getErrorResponse()
com/porterhead/exception/BaseWebApplicationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/exception/BaseWebApplicationException/getResponse()#javax/ws/rs/core/Response/ResponseBuilder/type(javax.ws.rs.core.MediaType)
com/porterhead/exception/BaseWebApplicationException/getResponse()#javax/ws/rs/core/Response/status(int)
com/porterhead/user/VerificationToken/hasExpired()#com/porterhead/user/VerificationToken/getExpiryDate()
com/porterhead/user/VerificationToken/hasExpired()#org/joda/time/base/AbstractInstant/isBeforeNow()
com/porterhead/user/VerificationToken/hasExpired()#org/joda/time/DateTime/DateTime(java.lang.Object)
com/porterhead/user/VerificationToken/calculateExpiryDate(int)#org/joda/time/DateTime/plusMinutes(int)
com/porterhead/user/VerificationToken/calculateExpiryDate(int)#org/joda/time/DateTime/DateTime()
com/porterhead/user/VerificationToken/calculateExpiryDate(int)#org/joda/time/base/AbstractInstant/toDate()
com/porterhead/configuration/MongoDbConfiguration/getContextProperty(java.lang.String)#org/springframework/core/env/EnvironmentCapable/getEnvironment()
com/porterhead/configuration/MongoDbConfiguration/getContextProperty(java.lang.String)#org/springframework/core/env/PropertyResolver/getProperty(java.lang.String)
com/porterhead/configuration/MongoDbConfiguration/customConversions()#java/util/ArrayList/ArrayList()
com/porterhead/configuration/MongoDbConfiguration/customConversions()#com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/OAuth2AuthenticationReadConverter()
com/porterhead/configuration/MongoDbConfiguration/customConversions()#java/util/List/add(E)
com/porterhead/configuration/MongoDbConfiguration/customConversions()#org/springframework/data/mongodb/core/convert/CustomConversions/CustomConversions(java.util.List)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/data/mongodb/core/MongoTemplate/MongoTemplate(org.springframework.data.mongodb.MongoDbFactory,org.springframework.data.mongodb.core.convert.MongoConverter)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/data/mongodb/core/SimpleMongoDbFactory/SimpleMongoDbFactory(com.mongodb.Mongo,java.lang.String,org.springframework.data.authentication.UserCredentials)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#com/porterhead/configuration/MongoDbConfiguration/mongo()
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/data/mongodb/core/SimpleMongoDbFactory/SimpleMongoDbFactory(com.mongodb.Mongo,java.lang.String)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/util/StringUtils/isEmpty(java.lang.Object)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/data/mongodb/config/AbstractMongoConfiguration/mappingMongoConverter()
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/springframework/data/authentication/UserCredentials/UserCredentials(java.lang.String,java.lang.String)
com/porterhead/configuration/MongoDbConfiguration/mongoTemplate()#org/slf4j/Logger/info(java.lang.String)
com/porterhead/configuration/MongoDbConfiguration/mongo()#com/mongodb/Mongo/Mongo(java.lang.String,int)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#java/lang/System/getProperty(java.lang.String,java.lang.String)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/core/io/ClassPathResource/ClassPathResource(java.lang.String)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/context/support/PropertySourcesPlaceholderConfigurer/PropertySourcesPlaceholderConfigurer()
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/core/io/FileSystemResource/FileSystemResource(java.lang.String)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/core/io/support/PropertiesLoaderSupport/setIgnoreResourceNotFound(boolean)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/beans/factory/config/PlaceholderConfigurerSupport/setIgnoreUnresolvablePlaceholders(boolean)
com/porterhead/configuration/PropertiesConfiguration/getProperties()#org/springframework/core/io/support/PropertiesLoaderSupport/setLocations(org.springframework.core.io.Resource[])
com/porterhead/service/BaseService/validate(java.lang.Object)#com/porterhead/exception/ValidationException/ValidationException(java.util.Set)
com/porterhead/service/BaseService/validate(java.lang.Object)#java/util/Set/size()
com/porterhead/service/BaseService/validate(java.lang.Object)#javax/validation/Validator/validate(T,java.lang.Class<?>[])
com/porterhead/user/resource/MeResource/getUser(javax.ws.rs.core.SecurityContext)#com/porterhead/user/exception/UserNotFoundException/UserNotFoundException()
com/porterhead/user/resource/MeResource/getUser(javax.ws.rs.core.SecurityContext)#com/porterhead/resource/BaseResource/loadUserFromSecurityContext(javax.ws.rs.core.SecurityContext)
com/porterhead/user/resource/MeResource/getUser(javax.ws.rs.core.SecurityContext)#com/porterhead/user/api/ApiUser/ApiUser(com.porterhead.user.User)
com/porterhead/mail/InMemoryJavaMailSender/clear()#java/util/List/clear()
com/porterhead/mail/InMemoryJavaMailSender/createMimeMessage()#java/util/Properties/Properties()
com/porterhead/mail/InMemoryJavaMailSender/createMimeMessage()#javax/mail/internet/MimeMessage/MimeMessage(javax.mail.Session)
com/porterhead/mail/InMemoryJavaMailSender/createMimeMessage()#javax/mail/Session/getInstance(java.util.Properties)
com/porterhead/mail/InMemoryJavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)#java/io/PrintStream/println(java.lang.String)
com/porterhead/mail/InMemoryJavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/porterhead/mail/InMemoryJavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)#org/springframework/mail/javamail/MimeMessagePreparator/prepare(javax.mail.internet.MimeMessage)
com/porterhead/mail/InMemoryJavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)#java/util/List/add(E)
com/porterhead/mail/InMemoryJavaMailSender/send(org.springframework.mail.javamail.MimeMessagePreparator)#com/porterhead/mail/InMemoryJavaMailSender/createMimeMessage()
com/porterhead/persistence/BaseEntity/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
com/porterhead/persistence/BaseEntity/equals(java.lang.Object)#java/lang/Object/getClass()
com/porterhead/persistence/BaseEntity/hashCode()#java/lang/String/hashCode()
com/porterhead/persistence/BaseEntity/hashCode()#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/user/UserServiceImpl/getUser(java.lang.String)#com/porterhead/user/UserRepository/findById(java.lang.String)
com/porterhead/user/UserServiceImpl/getUser(java.lang.String)#com/porterhead/user/exception/UserNotFoundException/UserNotFoundException()
com/porterhead/user/UserServiceImpl/getUser(java.lang.String)#com/porterhead/user/api/ApiUser/ApiUser(com.porterhead.user.User)
com/porterhead/user/UserServiceImpl/getUser(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object)
com/porterhead/user/UserServiceImpl/loadUserByUsername(java.lang.String)#com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/CreateUserRequest/getPassword()
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#org/springframework/security/crypto/password/PasswordEncoder/encode(java.lang.CharSequence)
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/PasswordRequest/getPassword()
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/CreateUserRequest/getUser()
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/User/User(com.porterhead.user.api.ApiUser,java.lang.String,com.porterhead.user.Role)
com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#org/springframework/security/crypto/password/PasswordEncoder/encode(java.lang.CharSequence)
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#com/porterhead/user/User/getHashedPassword()
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#com/porterhead/user/exception/AuthenticationException/AuthenticationException()
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#com/porterhead/user/api/ApiUser/ApiUser(com.porterhead.user.User)
com/porterhead/user/UserServiceImpl/authenticate(java.lang.String,java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object)
com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)#org/springframework/security/core/userdetails/UsernameNotFoundException/UsernameNotFoundException(java.lang.String)
com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)#java/lang/String/toLowerCase()
com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)#com/porterhead/user/UserRepository/findByEmailAddress(java.lang.String)
com/porterhead/user/UserServiceImpl/locateUser(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/setVerified(java.lang.Boolean)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/setFirstName(java.lang.String)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/setLastName(java.lang.String)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/UserRepository/findById(java.lang.String)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/exception/UserNotFoundException/UserNotFoundException()
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/UpdateUserRequest/getEmailAddress()
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#java/lang/String/equals(java.lang.Object)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/getEmailAddress()
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/service/BaseService/validate(java.lang.Object)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/ApiUser/ApiUser(com.porterhead.user.User)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/UpdateUserRequest/getLastName()
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/api/UpdateUserRequest/getFirstName()
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#org/springframework/data/repository/CrudRepository/save(S)
com/porterhead/user/UserServiceImpl/saveUser(java.lang.String,com.porterhead.user.api.UpdateUserRequest)#com/porterhead/user/User/setEmailAddress(java.lang.String)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/exception/DuplicateUserException/DuplicateUserException()
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#java/lang/String/toLowerCase()
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#org/slf4j/Logger/debug(java.lang.String,java.lang.Object)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/UserRepository/findByEmailAddress(java.lang.String)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/UserServiceImpl/insertNewUser(com.porterhead.user.api.CreateUserRequest)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#org/slf4j/Logger/info(java.lang.String)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/CreateUserRequest/getUser()
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/User/getEmailAddress()
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/service/BaseService/validate(java.lang.Object)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/ApiUser/ApiUser(com.porterhead.user.User)
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#com/porterhead/user/api/ApiUser/getEmailAddress()
com/porterhead/user/UserServiceImpl/createUser(com.porterhead.user.api.CreateUserRequest)#org/slf4j/Logger/info(java.lang.String,java.lang.Object)
com/porterhead/user/resource/VerificationResource/verifyToken(java.lang.String)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/VerificationResource/verifyToken(java.lang.String)#javax/ws/rs/core/Response/ok()
com/porterhead/user/resource/VerificationResource/verifyToken(java.lang.String)#com/porterhead/user/VerificationTokenService/verify(java.lang.String)
com/porterhead/user/resource/VerificationResource/sendEmailToken(com.porterhead.user.api.EmailVerificationRequest)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/VerificationResource/sendEmailToken(com.porterhead.user.api.EmailVerificationRequest)#javax/ws/rs/core/Response/ok()
com/porterhead/user/resource/VerificationResource/sendEmailToken(com.porterhead.user.api.EmailVerificationRequest)#com/porterhead/user/VerificationTokenService/generateEmailVerificationToken(java.lang.String)
com/porterhead/user/resource/VerificationResource/sendEmailToken(com.porterhead.user.api.EmailVerificationRequest)#com/porterhead/user/api/EmailVerificationRequest/getEmailAddress()
com/porterhead/user/resource/PasswordResource/sendEmailToken(com.porterhead.user.api.LostPasswordRequest)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/PasswordResource/sendEmailToken(com.porterhead.user.api.LostPasswordRequest)#javax/ws/rs/core/Response/ok()
com/porterhead/user/resource/PasswordResource/sendEmailToken(com.porterhead.user.api.LostPasswordRequest)#com/porterhead/user/VerificationTokenService/sendLostPasswordToken(com.porterhead.user.api.LostPasswordRequest)
com/porterhead/user/resource/PasswordResource/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/user/resource/PasswordResource/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#javax/ws/rs/core/Response/ok()
com/porterhead/user/resource/PasswordResource/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)#com/porterhead/user/VerificationTokenService/resetPassword(java.lang.String,com.porterhead.user.api.PasswordRequest)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#org/bson/BSONObject/get(java.lang.String)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#org/springframework/security/authentication/UsernamePasswordAuthenticationToken/UsernamePasswordAuthenticationToken(java.lang.Object,java.lang.Object,java.util.Collection)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#org/springframework/security/oauth2/provider/OAuth2Authentication/OAuth2Authentication(org.springframework.security.oauth2.provider.OAuth2Request,org.springframework.security.core.Authentication)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#org/springframework/security/oauth2/provider/OAuth2Request/OAuth2Request(java.util.Map,java.lang.String,java.util.Collection,boolean,java.util.Set,java.util.Set,java.lang.String,java.util.Set,java.util.Map)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getPrincipalObject(java.lang.Object)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/convert(com.mongodb.DBObject)#java/util/HashSet/HashSet(java.util.Collection)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getPrincipalObject(java.lang.Object)#com/porterhead/user/User/User(com.mongodb.DBObject)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)#java/util/HashSet/HashSet(int)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)#java/util/Map/get(java.lang.Object)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)#java/util/List/size()
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)#java/util/Set/add(E)
com/porterhead/oauth2/mongodb/OAuth2AuthenticationReadConverter/getAuthorities(java.util.List)#org/springframework/security/core/authority/SimpleGrantedAuthority/SimpleGrantedAuthority(java.lang.String)
com/porterhead/user/User/deSerializeRoles(java.util.List)#com/porterhead/user/Role/valueOf(java.lang.String)
com/porterhead/user/User/deSerializeRoles(java.util.List)#com/porterhead/user/User/addRole(com.porterhead.user.Role)
com/porterhead/user/User/getUsername()#com/porterhead/persistence/BaseEntity/getId()
com/porterhead/user/User/getAuthorities()#java/lang/Enum/name()
com/porterhead/user/User/getAuthorities()#java/util/Set/add(E)
com/porterhead/user/User/getAuthorities()#com/porterhead/user/User/getRoles()
com/porterhead/user/User/getAuthorities()#org/springframework/security/core/authority/SimpleGrantedAuthority/SimpleGrantedAuthority(java.lang.String)
com/porterhead/user/User/getAuthorities()#java/util/HashSet/HashSet()
com/porterhead/user/User/hasRole(com.porterhead.user.Role)#java/util/List/contains(java.lang.Object)
com/porterhead/user/User/getRoles()#java/util/Collections/unmodifiableList(java.util.List)
com/porterhead/user/User/addRole(com.porterhead.user.Role)#java/util/List/add(E)
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#javax/ws/rs/core/Response/ResponseBuilder/build()
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#java/lang/Throwable/getMessage()
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#javax/ws/rs/core/Response/ResponseBuilder/entity(java.lang.Object)
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#javax/ws/rs/core/Response/ResponseBuilder/type(java.lang.String)
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#com/porterhead/api/ErrorResponse/ErrorResponse(java.lang.String,java.lang.String,java.lang.String)
com/porterhead/exception/AccessDeniedExceptionMapper/toResponse(org.springframework.security.access.AccessDeniedException)#javax/ws/rs/core/Response/status(javax.ws.rs.core.Response.Status)
com/porterhead/user/api/ApiUser/setEmailAddress(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
com/porterhead/user/api/ApiUser/setId(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
com/porterhead/user/api/ApiUser/setLastName(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
com/porterhead/user/api/ApiUser/setFirstName(java.lang.String)#org/springframework/util/Assert/notNull(java.lang.Object,java.lang.String)
com/porterhead/user/api/ApiUser/getName()#com/porterhead/user/api/ApiUser/getEmailAddress()
com/porterhead/filter/StaticContentFilter/doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)#javax/servlet/RequestDispatcher/forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)
com/porterhead/filter/StaticContentFilter/init(javax.servlet.FilterConfig)#javax/servlet/ServletContext/getNamedDispatcher(java.lang.String)
com/porterhead/filter/StaticContentFilter/init(javax.servlet.FilterConfig)#javax/servlet/FilterConfig/getServletContext()
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#org/springframework/security/core/GrantedAuthority/getAuthority()
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#org/springframework/security/access/annotation/Jsr250Voter/supports(org.springframework.security.access.ConfigAttribute)
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#com/porterhead/security/HierarchicalJsr250Voter/extractAuthorities(org.springframework.security.core.Authentication)
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#org/springframework/security/access/SecurityConfig/equals(java.lang.Object)
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#java/lang/String/equals(java.lang.Object)
com/porterhead/security/HierarchicalJsr250Voter/vote(org.springframework.security.core.Authentication,java.lang.Object,java.util.Collection)#org/springframework/security/access/ConfigAttribute/getAttribute()
com/porterhead/security/HierarchicalJsr250Voter/extractAuthorities(org.springframework.security.core.Authentication)#org/springframework/security/access/hierarchicalroles/RoleHierarchy/getReachableGrantedAuthorities(java.util.Collection)
com/porterhead/security/HierarchicalJsr250Voter/extractAuthorities(org.springframework.security.core.Authentication)#org/springframework/security/core/Authentication/getAuthorities()
