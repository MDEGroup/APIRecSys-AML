com/github/jakz/nit/gui/SearchPanel/LanguageCellRenderer/customRendering(javax.swing.JLabel,com.github.jakz.nit.gui.Language)#javax/swing/JLabel/setText(java.lang.String)
com/github/jakz/nit/gui/SearchPanel/LanguageCellRenderer/customRendering(javax.swing.JLabel,com.github.jakz.nit.gui.Language)#javax/swing/JLabel/setIcon(javax.swing.Icon)
com/github/jakz/nit/config/Config/PlatformDeserializer/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#com/google/gson/JsonDeserializationContext/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
com/github/jakz/nit/scripts/Script/execute(com.github.jakz.nit.scripts.ScriptEnvironment)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/scripts/Script/length()#java/util/List/size()
com/github/jakz/nit/parser/HeaderParser/start(java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/ArrayList/ArrayList()
com/github/jakz/nit/parser/HeaderParser/start(java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/parser/HeaderParser/start(java.lang.String,java.lang.String,org.xml.sax.Attributes)#com/github/jakz/nit/data/header/Rule/Type/valueOf(java.lang.String)
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#com/github/jakz/nit/data/header/Rule/Rule(com.github.jakz.nit.data.header.Rule.Type,long,long,com.github.jakz.nit.data.header.Test[])
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#java/util/List/toArray(T[])
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#com/github/jakz/nit/data/header/TestData/TestData(long,byte[],boolean)
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#java/util/List/size()
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#java/util/List/add(E)
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/github/jakz/nit/parser/HeaderParser/end(java.lang.String,java.lang.String)#com/github/jakz/nit/data/header/Header/Header(java.lang.String,java.lang.String,java.lang.String,com.github.jakz.nit.data.header.Rule[])
com/github/jakz/nit/gui/GameListPanel/populateByClones()#javax/swing/tree/DefaultMutableTreeNode/DefaultMutableTreeNode()
com/github/jakz/nit/gui/GameListPanel/populateByClones()#java/util/stream/Collectors/toList()
com/github/jakz/nit/gui/GameListPanel/populateByClones()#java/util/List/addAll(java.util.Collection)
com/github/jakz/nit/gui/GameListPanel/populateByClones()#javax/swing/tree/DefaultTreeModel/setRoot(javax.swing.tree.TreeNode)
com/github/jakz/nit/gui/GameListPanel/populateByClones()#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/gui/GameListPanel/populateBySingleGame()#javax/swing/tree/DefaultMutableTreeNode/DefaultMutableTreeNode()
com/github/jakz/nit/gui/GameListPanel/populateBySingleGame()#javax/swing/tree/DefaultTreeModel/setRoot(javax.swing.tree.TreeNode)
com/github/jakz/nit/gui/GameListPanel/createNodeForClone(com.github.jakz.nit.gui.GameClone)#com/github/jakz/nit/gui/GameListPanel/CloneNode/CloneNode(com.github.jakz.nit.gui.GameClone)
com/github/jakz/nit/gui/GameListPanel/createNodeForClone(com.github.jakz.nit.gui.GameClone)#com/github/jakz/nit/gui/GameListPanel/createNodeForGame(com.github.jakz.nit.parser.Game,boolean)
com/github/jakz/nit/gui/GameListPanel/createNodeForGame(com.github.jakz.nit.parser.Game,boolean)#com/github/jakz/nit/gui/GameListPanel/RomNode/RomNode(com.github.jakz.nit.parser.Rom)
com/github/jakz/nit/gui/GameListPanel/createNodeForGame(com.github.jakz.nit.parser.Game,boolean)#com/github/jakz/nit/gui/GameListPanel/GameNode/GameNode(com.github.jakz.nit.parser.Game,boolean)
com/github/jakz/nit/gui/GameListPanel/createNodeForGame(com.github.jakz.nit.parser.Game,boolean)#javax/swing/tree/DefaultMutableTreeNode/add(javax.swing.tree.MutableTreeNode)
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/gui/GameListPanel/populateByClones()
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/gui/GameListPanel/populateBySingleGame()
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#javax/swing/JLabel/setText(java.lang.String)
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#javax/swing/JTree/setModel(javax.swing.tree.TreeModel)
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#javax/swing/AbstractButton/isSelected()
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/gui/SearchPanel/buildSearchPredicate()
com/github/jakz/nit/gui/GameListPanel/populate(com.github.jakz.nit.parser.GameSet)#javax/swing/tree/DefaultTreeModel/DefaultTreeModel(javax.swing.tree.TreeNode)
com/github/jakz/nit/gui/GameSetListPanel/SetOptions/update(com.github.jakz.nit.parser.GameSet)#javax/swing/AbstractButton/setEnabled(boolean)
com/github/jakz/nit/gui/SearchPanel/LocationCellRenderer/customRendering(javax.swing.JLabel,com.github.jakz.nit.gui.Location)#javax/swing/JLabel/setText(java.lang.String)
com/github/jakz/nit/gui/SearchPanel/LocationCellRenderer/customRendering(javax.swing.JLabel,com.github.jakz.nit.gui.Location)#javax/swing/JLabel/setIcon(javax.swing.Icon)
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/util/Collection/stream()
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/util/stream/Collectors/joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/nio/file/Path/getFileName()
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/nio/file/Path/toString()
com/github/jakz/nit/emitter/GameSetCreator/FolderAsArchiveEntry/toString()#java/util/stream/Stream/collect(java.util.stream.Collector)
com/github/jakz/nit/emitter/GameSetCreator/ArchiveEntry/toString()#java/nio/file/Path/toString()
com/github/jakz/nit/emitter/GameSetCreator/ArchiveEntry/toString()#java/nio/file/Path/getFileName()
com/github/jakz/nit/scanner/Renamer/rename(java.util.List)#java/util/HashMap/HashMap()
com/github/jakz/nit/persistence/HandleSerializer/RomHandleSerializer/serialize(com.github.jakz.nit.merger.Handle,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Number)
com/github/jakz/nit/persistence/HandleSerializer/RomHandleSerializer/serialize(com.github.jakz.nit.merger.Handle,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)#com/google/gson/JsonArray/JsonArray()
com/github/jakz/nit/persistence/HandleSerializer/RomHandleSerializer/serialize(com.github.jakz.nit.merger.Handle,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)#com/google/gson/JsonSerializationContext/serialize(java.lang.Object)
com/github/jakz/nit/persistence/HandleSerializer/RomHandleSerializer/serialize(com.github.jakz.nit.merger.Handle,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)#com/google/gson/JsonPrimitive/JsonPrimitive(java.lang.Boolean)
com/github/jakz/nit/persistence/HandleSerializer/RomHandleSerializer/serialize(com.github.jakz.nit.merger.Handle,java.lang.reflect.Type,com.google.gson.JsonSerializationContext)#com/google/gson/JsonArray/add(com.google.gson.JsonElement)
com/github/jakz/nit/gui/SearchPanel/setComboBoxSelectedBackground(javax.swing.JComboBox)#java/awt/Color/Color(int,int,int)
com/github/jakz/nit/gui/SearchPanel/setComboBoxSelectedBackground(javax.swing.JComboBox)#javax/swing/plaf/basic/BasicComboPopup/getList()
com/github/jakz/nit/gui/SearchPanel/setComboBoxSelectedBackground(javax.swing.JComboBox)#javax/swing/JComboBox/getAccessibleContext()
com/github/jakz/nit/gui/SearchPanel/setComboBoxSelectedBackground(javax.swing.JComboBox)#javax/swing/JList/setSelectionBackground(java.awt.Color)
com/github/jakz/nit/gui/SearchPanel/setComboBoxSelectedBackground(javax.swing.JComboBox)#javax/accessibility/AccessibleContext/getAccessibleChild(int)
com/github/jakz/nit/gui/SearchPanel/invokeRefresh()#java/lang/Runnable/run()
com/github/jakz/nit/gui/SearchPanel/buildSearchPredicate()#com/github/jakz/nit/data/Searcher/buildPredicate(java.lang.String)
com/github/jakz/nit/merger/TitleNormalizer/normalize(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/github/jakz/nit/merger/TitleNormalizer/normalize(java.lang.String)#java/lang/String/trim()
com/github/jakz/nit/merger/TitleNormalizer/normalize(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/github/jakz/nit/gui/FrameSet/get(java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/jakz/nit/gui/FrameSet/add(java.lang.String,javax.swing.JFrame)#java/util/Map/put(K,V)
com/github/jakz/nit/persistence/HandleSerializer/serialize(com.github.jakz.nit.merger.Handle)#java/util/Base64/getEncoder()
com/github/jakz/nit/persistence/HandleSerializer/serialize(com.github.jakz.nit.merger.Handle)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/github/jakz/nit/persistence/HandleSerializer/serialize(com.github.jakz.nit.merger.Handle)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/github/jakz/nit/persistence/HandleSerializer/serialize(com.github.jakz.nit.merger.Handle)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/LogPanel/LogPanel(int,int)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/SimpleFrame/SimpleFrame(java.lang.String,T,boolean)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/GameSetListPanel/GameSetListPanel(java.util.List,java.util.Map)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/util/HashMap/HashMap()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#javax/swing/JFrame/setJMenuBar(javax.swing.JMenuBar)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/awt/Window/setVisible(boolean)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/SimpleFrame/panel()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/awt/Window/setLocationRelativeTo(java.awt.Component)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/FrameSet/add(java.lang.String,javax.swing.JFrame)
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/util/Collection/stream()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#java/util/stream/Collectors/toList()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/FrameSet/FrameSet()
com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)#com/github/jakz/nit/gui/GameSetMenu/GameSetMenu()
com/github/jakz/nit/Operations/openConsole()#com/github/jakz/nit/scripts/ConsolePanel/setMySize(int,int)
com/github/jakz/nit/Operations/openConsole()#com/github/jakz/nit/gui/FrameSet/get(java.lang.String)
com/github/jakz/nit/Operations/openConsole()#com/github/jakz/nit/scripts/ConsolePanel/ConsolePanel()
com/github/jakz/nit/Operations/openConsole()#com/github/jakz/nit/gui/SimpleFrame/SimpleFrame(java.lang.String,T,boolean)
com/github/jakz/nit/Operations/openConsole()#java/awt/Window/setVisible(boolean)
com/github/jakz/nit/Operations/openConsole()#java/awt/Window/setLocationRelativeTo(java.awt.Component)
com/github/jakz/nit/Operations/openConsole()#com/github/jakz/nit/gui/FrameSet/add(java.lang.String,javax.swing.JFrame)
com/github/jakz/nit/Operations/consolidateGameSet(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/emitter/ClrMameProEmitter/generate(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/Operations/consolidateGameSet(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/github/jakz/nit/Operations/consolidateGameSet(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/emitter/ClrMameProEmitter/ClrMameProEmitter()
com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)#java/util/concurrent/atomic/AtomicInteger/get()
com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger()
com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)#java/lang/Object/Object()
com/github/jakz/nit/Operations/openLogFrame()#com/github/jakz/nit/gui/FrameSet/get(java.lang.String)
com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)#java/util/ArrayList/ArrayList()
com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)#java/util/Collection/stream()
com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)#java/lang/Object/Object()
com/github/jakz/nit/Operations/createGameSet(com.github.jakz.nit.emitter.CreatorOptions)#com/github/jakz/nit/Operations/printStatistics(com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/Operations/createGameSet(com.github.jakz.nit.emitter.CreatorOptions)#com/github/jakz/nit/emitter/GameSetCreator/create()
com/github/jakz/nit/Operations/createGameSet(com.github.jakz.nit.emitter.CreatorOptions)#com/github/jakz/nit/emitter/GameSetCreator/GameSetCreator(com.github.jakz.nit.emitter.CreatorOptions)
com/github/jakz/nit/Operations/guessFormat(com.github.jakz.nit.Options)#java/nio/file/Path/toString()
com/github/jakz/nit/Operations/guessFormat(com.github.jakz.nit.Options)#java/lang/String/endsWith(java.lang.String)
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#com/github/jakz/nit/Options/mergePath()
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/io/PrintWriter/println(char[])
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/io/PrintWriter/PrintWriter(java.io.Writer)
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/lang/Long/toHexString(long)
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/nio/file/Files/isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/nio/file/Path/getParent()
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/nio/file/Path/resolve(java.lang.String)
com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/util/ArrayList/ArrayList()
com/github/jakz/nit/Operations/loadClrMameGameSet(com.github.jakz.nit.Options)#com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)
com/github/jakz/nit/Operations/loadClrMameGameSet(com.github.jakz.nit.Options)#com/github/jakz/nit/parser/ClrMameProParserDat/ClrMameProParserDat(com.github.jakz.nit.Options)
com/github/jakz/nit/Operations/loadLogiqxDat(com.github.jakz.nit.Options)#java/lang/Object/Object()
com/github/jakz/nit/Operations/cleanMergePath(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#com/github/jakz/nit/Options/mergePath()
com/github/jakz/nit/Operations/cleanMergePath(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/util/stream/Collectors/toSet()
com/github/jakz/nit/Operations/cleanMergePath(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/util/Set/removeAll(java.util.Collection)
com/github/jakz/nit/Operations/cleanMergePath(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)#com/github/jakz/nit/Operations/guessFormat(com.github.jakz.nit.Options)
com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)#com/github/jakz/nit/Operations/loadCloneSetFromXMDB(com.github.jakz.nit.parser.GameSet,java.nio.file.Path)
com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)#com/github/jakz/nit/Operations/loadClrMameGameSet(com.github.jakz.nit.Options)
com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)#com/github/jakz/nit/Operations/loadLogiqxDat(com.github.jakz.nit.Options)
com/github/jakz/nit/data/header/SkippingStream/read(byte[])#java/io/InputStream/read(byte[])
com/github/jakz/nit/data/header/SkippingStream/read()#java/io/InputStream/read(byte[],int,int)
com/github/jakz/nit/data/header/SkippingStream/read()#java/util/Arrays/equals(byte[],byte[])
com/github/jakz/nit/data/header/SkippingStream/read()#java/io/InputStream/read()
com/github/jakz/nit/data/header/SkippingStream/read(byte[],int,int)#java/io/InputStream/read(byte[],int,int)
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/Throwable/printStackTrace()
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/Throwable/getMessage()
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/StackTraceElement/getMethodName()
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/batch/BatchOptions/BatchOptions()
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/Object/Object()
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/StackTraceElement/getLineNumber()
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/StackTraceElement/getClassName()
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/Options/Options()
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/util/Arrays/asList(T[])
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/nio/file/Paths/get(java.lang.String,java.lang.String[])
com/github/jakz/nit/DevMain/main(java.lang.String[])#java/lang/Throwable/printStackTrace(java.io.PrintStream)
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/Main/initializeSevenZip()
com/github/jakz/nit/DevMain/main(java.lang.String[])#com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)
com/github/jakz/nit/gui/GameSetComparePanel/TableModel/findEquivalentGame(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.parser.Game)#java/util/stream/IntStream/range(int,int)
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#java/nio/file/Path/toString()
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#java/nio/file/Files/createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute<?>[])
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#com/github/jakz/nit/merger/Merger/mergeToOneArchivePerGame(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#com/github/jakz/nit/Options/doesMergeInPlace()
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)#com/github/jakz/nit/merger/Merger/mergeUncompressed(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Optional/get()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Map/size()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/HashMap/HashMap()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/stream/Stream/filter(java.util.function.Predicate)
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Map/compute(K,java.util.function.BiFunction)
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/lang/Object/Object()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Collection/stream()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/stream/Collectors/toList()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/stream/Stream/findAny()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Map/values()
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#com/github/jakz/nit/merger/TitleNormalizer/normalize(java.lang.String)
com/github/jakz/nit/merger/Merger/mergeToCloneArchives(java.nio.file.Path)#java/util/Optional/isPresent()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/merger/ArchiveInfo/stream()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Files/deleteIfExists(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/stream/Stream/filter(java.util.function.Predicate)
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Path/getFileName()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Path/getParent()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Path/toString()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute<?>[])
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/stream/Stream/forEach(java.util.function.Consumer)
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/merger/ArchiveInfo/entries()
com/github/jakz/nit/merger/Merger/createArchive(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Files/delete(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#net/sf/sevenzipjbinding/IInArchive/getNumberOfItems()
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#net/sf/sevenzipjbinding/SevenZip/openInArchive(net.sf.sevenzipjbinding.ArchiveFormat,net.sf.sevenzipjbinding.IInStream)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/stream/Stream/forEach(java.util.function.Consumer)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#net/sf/sevenzipjbinding/impl/RandomAccessFileInStream/RandomAccessFileInStream(java.io.RandomAccessFile)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/Map/put(K,V)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/stream/Stream/allMatch(java.util.function.Predicate)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/lang/Integer/toUnsignedLong(int)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/Map/get(java.lang.Object)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/merger/ArchiveInfo/stream()
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/Options/doesMergeInPlace()
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/util/HashMap/HashMap()
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#net/sf/sevenzipjbinding/IInArchive/getProperty(int,net.sf.sevenzipjbinding.PropID)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#com/github/jakz/nit/merger/ArchiveInfo/size()
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/merger/Merger/checkExistingArchiveStatus(java.nio.file.Path,com.github.jakz.nit.merger.ArchiveInfo)#java/nio/file/Path/toFile()
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/nio/file/Path/resolve(java.lang.String)
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/nio/file/Path/toString()
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/util/stream/Collectors/toList()
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#com/github/jakz/nit/Options/doesMergeInPlace()
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/lang/String/substring(int,int)
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/lang/String/lastIndexOf(int)
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/nio/file/Files/delete(java.nio.file.Path)
com/github/jakz/nit/merger/Merger/mergeToSingleArchive(java.nio.file.Path)#java/nio/file/Path/getFileName()
com/github/jakz/nit/config/Config/verifyThatPathExists(java.nio.file.Path,boolean,java.lang.String)#java/nio/file/Path/toString()
com/github/jakz/nit/config/Config/verifyThatPathExists(java.nio.file.Path,boolean,java.lang.String)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/config/Config/verifyThatPathExists(java.nio.file.Path,boolean,java.lang.String)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#java/nio/file/Files/newBufferedReader(java.nio.file.Path)
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/google/gson/GsonBuilder/registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/github/jakz/nit/config/Config/verify()
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/google/gson/GsonBuilder/GsonBuilder()
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/google/gson/Gson/fromJson(java.io.Reader,java.lang.Class)
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/google/gson/GsonBuilder/create()
com/github/jakz/nit/config/Config/load(java.nio.file.Path)#com/github/jakz/nit/config/Config/PlatformDeserializer/PlatformDeserializer()
com/github/jakz/nit/config/Config/verify()#com/github/jakz/nit/config/Config/verifyThatPathExists(java.nio.file.Path,boolean,java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String,int)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#javax/xml/bind/annotation/adapters/HexBinaryAdapter/unmarshal(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#com/github/jakz/nit/parser/ClrMameProParserDat/setValueForKey(java.lang.String,java.lang.Object)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/parser/ClrMameProParserDat/pair(java.lang.String,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/util/Optional/get()
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/nio/file/Path/toString()
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/util/stream/Stream/findAny()
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/util/stream/Stream/filter(java.util.function.Predicate)
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/nio/file/Path/getFileName()
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/util/Optional/isPresent()
com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])#java/util/Arrays/stream(T[])
com/github/jakz/nit/parser/ClrMameProParserDat/pushState()#java/util/Stack/push(E)
com/github/jakz/nit/parser/ClrMameProParserDat/pushState()#java/util/HashMap/HashMap()
com/github/jakz/nit/parser/ClrMameProParserDat/valueMap()#java/util/Stack/peek()
com/github/jakz/nit/parser/ClrMameProParserDat/value(java.lang.String)#com/github/jakz/nit/parser/ClrMameProParserDat/valueMap()
com/github/jakz/nit/parser/ClrMameProParserDat/value(java.lang.String)#java/util/Map/get(java.lang.Object)
com/github/jakz/nit/parser/ClrMameProParserDat/setValueForKey(java.lang.String,java.lang.Object)#com/github/jakz/nit/parser/ClrMameProParserDat/valueMap()
com/github/jakz/nit/parser/ClrMameProParserDat/setValueForKey(java.lang.String,java.lang.Object)#java/util/Map/put(K,V)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/util/ArrayList/ArrayList()
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#com/github/jakz/nit/parser/ClrMameProParserDat/value(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/lang/String/indexOf(int,int)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/lang/Object/Object()
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/util/Set/add(E)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#com/github/jakz/nit/parser/ClrMameProParserDat/checkPresenceOfValues(java.lang.String[])
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#com/github/jakz/nit/parser/ClrMameProParserDat/pushState()
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#java/lang/String/substring(int,int)
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#com/github/jakz/nit/parser/ClrMameProParserDat/popState()
com/github/jakz/nit/parser/ClrMameProParserDat/scope(java.lang.String,boolean)#com/github/jakz/nit/parser/ClrMameProParserDat/valueOrDefault(java.lang.String,T)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#com/github/jakz/nit/parser/HeaderParser/HeaderParser()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/nio/file/Path/resolve(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/Stack/Stack()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#com/github/jakz/nit/parser/ClrMameProParserDat/value(java.lang.String)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/Collection/stream()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/stream/Collectors/joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/Set/add(E)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/nio/file/Files/isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/Set/contains(java.lang.Object)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/nio/file/Files/newInputStream(java.nio.file.Path,java.nio.file.OpenOption[])
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#com/github/jakz/nit/parser/ClrMameProParserDat/popState()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/nio/file/Path/getParent()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/util/TreeSet/TreeSet()
com/github/jakz/nit/parser/ClrMameProParserDat/load(java.nio.file.Path)#java/lang/Object/Object()
com/github/jakz/nit/parser/ClrMameProParserDat/popState()#java/util/Stack/pop()
com/github/jakz/nit/parser/ClrMameProParserDat/valueOrDefault(java.lang.String,T)#com/github/jakz/nit/parser/ClrMameProParserDat/value(java.lang.String)
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/scan(java.nio.file.Path)#java/nio/file/Path/toString()
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/scan(java.nio.file.Path)#java/nio/file/Files/isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/scan(java.nio.file.Path)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/scan(java.nio.file.Path)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/scan(java.nio.file.Path)#com/github/jakz/nit/emitter/GameSetCreator/FileScanner/innerScan(java.nio.file.Path)
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/innerScan(java.nio.file.Path)#java/nio/file/Files/newDirectoryStream(java.nio.file.Path)
com/github/jakz/nit/emitter/GameSetCreator/FileScanner/innerScan(java.nio.file.Path)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/batch/BatchOperations/loadExpectedGameSetList(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/Collections/emptySet()
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)#java/util/Set/size()
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)#java/util/stream/Stream/count()
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)#java/util/Collection/stream()
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)#java/util/stream/Stream/filter(java.util.function.Predicate)
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)#com/github/jakz/nit/batch/BatchVerifyResult/getFoundRomCount()
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/ASCIITablePrinter(java.io.Writer)
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#java/time/ZonedDateTime/now()
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/StatsWriter/writeln(java.lang.String,java.lang.Object[])
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/StatsWriter/StatsWriter(java.io.Writer)
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/clear()
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#java/time/format/DateTimeFormatter/ofLocalizedTime(java.time.format.FormatStyle)
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#java/time/format/DateTimeFormatter/format(java.time.temporal.TemporalAccessor)
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/setRowPadding(com.github.jakz.nit.batch.BatchOperations.ASCIITablePrinter.Padding[])
com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/addColumn(java.lang.String[])
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Path/toString()
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOptions/getPathMatcher()
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/lang/Throwable/getMessage()
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/HashMap/HashMap()
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Path/resolve(java.nio.file.Path)
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Path/getParent()
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/Options/Options(com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/TreeSet/TreeSet(java.util.Comparator)
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Paths/get(java.net.URI)
com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Files/delete(java.nio.file.Path)
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)#java/util/Map/get(java.lang.Object)
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)#java/util/stream/Collectors/toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)#java/util/TreeMap/TreeMap()
com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)#java/lang/String/equals(java.lang.Object)
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOptions/getRomPath(com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchVerifyResult/BatchVerifyResult(com.github.jakz.nit.parser.GameSet,java.nio.file.Path,boolean)
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Path/toString()
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/Collections/singletonList(T)
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/nio/file/Path/resolve(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/loadExpectedGameSetList(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/printStatisticsOnResults(java.util.Set)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/saveStatisticsOnFile(java.util.Set,java.util.Set,java.util.Set,java.nio.file.Path)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/scanAndVerifySet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/batchLoadGameSetsFromFolder(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/printMissingRoms(java.util.Set)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/Set/add(E)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchVerifyResult/computeStats()
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/batch/BatchOperations/printStatisticsOnGameSets(java.util.Set,java.util.Set)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#com/github/jakz/nit/Options/Options(com.github.jakz.nit.Options)
com/github/jakz/nit/batch/BatchOperations/batchScanAndVerify(com.github.jakz.nit.batch.BatchOptions,com.github.jakz.nit.Options)#java/util/TreeSet/TreeSet(java.util.Comparator)
com/github/jakz/nit/batch/BatchOperations/printMissingRoms(java.util.Set)#java/lang/Long/toHexString(long)
com/github/jakz/nit/batch/BatchOperations/printMissingRoms(java.util.Set)#com/github/jakz/nit/batch/BatchVerifyResult/getFoundRomCount()
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/Parser/atLeast(int)
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/Parser/between(org.codehaus.jparsec.Parser,org.codehaus.jparsec.Parser)
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/pattern/Pattern/toScanner(java.lang.String)
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/Parser/map(org.codehaus.jparsec.functors.Map)
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/Parser/next(org.codehaus.jparsec.Parser)
com/github/jakz/nit/scripts/ScriptParser/script()#com/github/jakz/nit/scripts/ScriptParser/statement()
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/Parser/skipMany()
com/github/jakz/nit/scripts/ScriptParser/script()#org/codehaus/jparsec/pattern/Patterns/among(java.lang.String)
com/github/jakz/nit/scripts/ScriptParser/statement()#com/github/jakz/nit/scripts/ScriptParser/exitStatement()
com/github/jakz/nit/scripts/ScriptParser/exitStatement()#org/codehaus/jparsec/pattern/Pattern/toScanner(java.lang.String)
com/github/jakz/nit/scripts/ScriptParser/exitStatement()#org/codehaus/jparsec/Parser/map(org.codehaus.jparsec.functors.Map)
com/github/jakz/nit/scripts/ScriptParser/exitStatement()#org/codehaus/jparsec/pattern/Patterns/stringCaseInsensitive(java.lang.String)
com/github/jakz/nit/scripts/ScriptParser/exitStatement()#org/codehaus/jparsec/Parser/cast()
com/github/jakz/nit/scripts/ScriptParser/ExitStatement/execute(com.github.jakz.nit.scripts.ScriptEnvironment)#java/lang/System/exit(int)
com/github/jakz/nit/scripts/ConsolePanel/syntaxError(java.lang.String)#javax/swing/JTextArea/append(java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/syntaxError(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/append(java.lang.String)#javax/swing/JTextArea/append(java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/appendPrompt()#javax/swing/text/JTextComponent/setCaretPosition(int)
com/github/jakz/nit/scripts/ConsolePanel/appendPrompt()#javax/swing/JTextArea/append(java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/appendPrompt()#java/lang/String/length()
com/github/jakz/nit/scripts/ConsolePanel/appendPrompt()#javax/swing/text/JTextComponent/getText()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#com/github/jakz/nit/scripts/ConsolePanel/syntaxError(java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#java/lang/Throwable/printStackTrace()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#javax/swing/text/JTextComponent/getText(int,int)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#java/io/PrintStream/println(java.lang.String)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#org/codehaus/jparsec/Parser/parse(java.lang.CharSequence)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#java/lang/String/length()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#com/github/jakz/nit/scripts/Script/execute(com.github.jakz.nit.scripts.ScriptEnvironment)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#com/github/jakz/nit/scripts/ScriptEnvironment/ScriptEnvironment(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.scripts.ScriptStdout)
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#com/github/jakz/nit/scripts/ConsolePanel/appendPrompt()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#java/awt/event/KeyEvent/getKeyChar()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#java/lang/Throwable/getMessage()
com/github/jakz/nit/scripts/ConsolePanel/keyReleased(java.awt.event.KeyEvent)#javax/swing/text/JTextComponent/getText()
com/github/jakz/nit/batch/BatchOperations/StatsWriter/writeln(java.lang.String,java.lang.Object[])#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/StatsWriter/writeln(java.lang.String,java.lang.Object[])#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/batch/BatchOperations/StatsWriter/write(java.lang.String,java.lang.Object[])#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/StatsWriter/write(java.lang.String,java.lang.Object[])#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/batch/BatchOperations/StatsWriter/ln()#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/gui/LogPanel/startProgress(com.github.jakz.nit.Log,java.lang.String)#java/lang/Throwable/printStackTrace()
com/github/jakz/nit/gui/LogPanel/startProgress(com.github.jakz.nit.Log,java.lang.String)#javax/swing/SwingUtilities/invokeAndWait(java.lang.Runnable)
com/github/jakz/nit/gui/LogPanel/startProgress(com.github.jakz.nit.Log,java.lang.String)#java/lang/Thread/start()
com/github/jakz/nit/gui/LogPanel/startProgress(com.github.jakz.nit.Log,java.lang.String)#java/lang/Thread/Thread(java.lang.Runnable)
com/github/jakz/nit/gui/LogPanel/appendLog(com.github.jakz.nit.Log,java.lang.String)#javax/swing/JTextArea/append(java.lang.String)
com/github/jakz/nit/gui/LogPanel/endProgress()#javax/swing/SwingUtilities/invokeLater(java.lang.Runnable)
com/github/jakz/nit/gui/LogPanel/rebuildLog()#javax/swing/text/JTextComponent/setText(java.lang.String)
com/github/jakz/nit/gui/LogPanel/rebuildLog()#com/github/jakz/nit/gui/LogPanel/appendLog(com.github.jakz.nit.Log,java.lang.String)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#javax/swing/table/TableCellRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#javax/swing/JComponent/setFont(java.awt.Font)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#javax/swing/JLabel/setHorizontalAlignment(int)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#java/awt/Font/deriveFont(int)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#javax/swing/JComponent/setBorder(javax.swing.border.Border)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#javax/swing/JLabel/setIcon(javax.swing.Icon)
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#java/awt/Component/getFont()
com/github/jakz/nit/gui/GameSetListPanel/SetTableRenderer/getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)#com/github/jakz/nit/gui/GameSetListPanel/SetTableModel/getRowCount()
com/github/jakz/nit/emitter/ClrMameProEmitter/generate(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#java/io/PrintWriter/PrintWriter(java.io.Writer)
com/github/jakz/nit/emitter/ClrMameProEmitter/generate(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#java/io/PrintWriter/printf(java.lang.String,java.lang.Object[])
com/github/jakz/nit/emitter/ClrMameProEmitter/generate(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#java/nio/file/Files/newBufferedWriter(java.nio.file.Path,java.nio.file.OpenOption[])
com/github/jakz/nit/emitter/ClrMameProEmitter/generate(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)#java/io/PrintWriter/print(java.lang.String)
com/github/jakz/nit/Main/main(java.lang.String[])#com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)
com/github/jakz/nit/Main/initializeSevenZip()#net/sf/sevenzipjbinding/SevenZip/initSevenZipFromPlatformJAR()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/lang/Throwable/printStackTrace()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/openConsole()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/consolidateGameSet(com.github.jakz.nit.emitter.CreatorOptions,com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Options/Options(net.sourceforge.argparse4j.inf.Namespace)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/verifySuccessfulMerge(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/gui/SimpleFrame/SimpleFrame(java.lang.String,T,boolean)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/List/size()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/Arrays/asList(T[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/config/Config/load(java.nio.file.Path)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/Namespace/getAttrs()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/merger/Merger/Merger(com.github.jakz.nit.parser.GameSet,java.util.function.Predicate,com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/ArgumentParserException/ArgumentParserException(java.lang.String,net.sourceforge.argparse4j.inf.ArgumentParser)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/createGameSet(com.github.jakz.nit.emitter.CreatorOptions)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/ArgumentParser/handleError(net.sourceforge.argparse4j.inf.ArgumentParserException)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/Namespace/getList(java.lang.String)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Args/generateParser()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/saveStatusOnTextFiles(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/prepareGUIMode(com.github.jakz.nit.config.Config)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/Namespace/get(java.lang.String)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/merger/Merger/merge(java.nio.file.Path)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/nio/file/Path/toString()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/scanner/Renamer/rename(java.util.List)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Options/mergePath()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/ArgumentParser/parseArgs(java.lang.String[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/stream/Stream/collect(java.util.stream.Collector)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/printStatistics(com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/emitter/CreatorOptions/CreatorOptions(java.util.Map)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/io/PrintStream/println(java.lang.String)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/lang/StackTraceElement/getLineNumber()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/scanner/Renamer/Renamer(com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/lang/StackTraceElement/getClassName()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/verifyGameSet(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.HandleSet,com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/Collection/stream()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/util/stream/Collectors/toList()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/nio/file/Paths/get(java.lang.String,java.lang.String[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/nio/file/Files/isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/awt/Window/setVisible(boolean)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#net/sourceforge/argparse4j/inf/Namespace/getString(java.lang.String)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/nio/file/Files/exists(java.nio.file.Path,java.nio.file.LinkOption[])
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Main/initializeSevenZip()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/scanEntriesForGameSet(com.github.jakz.nit.parser.GameSet,java.util.List,com.github.jakz.nit.ScannerOptions,boolean)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/io/PrintStream/println(java.lang.Object)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#java/lang/StackTraceElement/getMethodName()
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/cleanMergePath(com.github.jakz.nit.parser.GameSet,com.github.jakz.nit.Options)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/gui/GameSetComparePanel/GameSetComparePanel(java.util.List)
com/github/jakz/nit/Main/executeCLI(java.lang.String[],boolean)#com/github/jakz/nit/Operations/loadGameSet(com.github.jakz.nit.Options,com.github.jakz.nit.DatType)
com/github/jakz/nit/batch/BatchOptions/getPathMatcher()#java/nio/file/FileSystem/getPathMatcher(java.lang.String)
com/github/jakz/nit/batch/BatchOptions/getPathMatcher()#java/nio/file/FileSystems/getDefault()
com/github/jakz/nit/batch/BatchOptions/getRomPath(com.github.jakz.nit.parser.GameSet)#com/github/jakz/nit/batch/SetToPathMapper/getRompath(com.github.jakz.nit.parser.GameSet)
com/github/jakz/nit/gui/LogPanel/LoggerReceiver/doLog(com.github.jakz.nit.Log,java.lang.String,com.github.jakz.nit.gui.LogAttribute)#javax/swing/SwingUtilities/invokeLater(java.lang.Runnable)
com/github/jakz/nit/merger/ArchiveInfo/relocate(java.nio.file.Path)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/merger/ArchiveInfo/add(java.util.Collection)#java/util/List/addAll(java.util.Collection)
com/github/jakz/nit/merger/ArchiveInfo/stream()#java/util/Collection/stream()
com/github/jakz/nit/merger/ArchiveInfo/size()#java/util/List/size()
com/github/jakz/nit/merger/ArchiveInfo/add(com.github.jakz.nit.merger.ArchiveEntry)#java/util/List/add(E)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Argument/setDefault(java.lang.Object)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Argument/setConst(java.lang.Object)
com/github/jakz/nit/Args/generateParser()#com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)
com/github/jakz/nit/Args/generateParser()#com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)
com/github/jakz/nit/Args/generateParser()#com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/ArgumentParsers/newArgumentParser(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Argument/dest(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Subparsers/help(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Subparsers/addParser(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Argument/action(net.sourceforge.argparse4j.inf.ArgumentAction)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/ArgumentParser/addSubparsers()
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Argument/help(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/ArgumentParser/addArgument(java.lang.String[])
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/ArgumentParser/description(java.lang.String)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/impl/Arguments/storeConst()
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/Subparser/help(java.lang.String)
com/github/jakz/nit/Args/generateParser()#com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)
com/github/jakz/nit/Args/generateParser()#net/sourceforge/argparse4j/inf/ArgumentParser/defaultHelp(boolean)
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/required(boolean)
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/type(java.lang.Class)
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/help(java.lang.String)
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/dest(java.lang.String)
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/addArgument(java.lang.String[])
com/github/jakz/nit/Args/generateGuiParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/setDefault(java.lang.String,java.lang.Object)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/setDefault(java.lang.Object)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/required(boolean)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#java/util/stream/Stream/toArray(java.util.function.IntFunction)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#com/github/jakz/nit/config/MergeOptions/Mode/values()
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/choices(E[])
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/help(java.lang.String)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/dest(java.lang.String)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/metavar(java.lang.String[])
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#com/github/jakz/nit/DatType/values()
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/impl/Arguments/storeConst()
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#java/util/Arrays/stream(T[])
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/nargs(java.lang.String)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/setConst(java.lang.Object)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/type(java.lang.Class)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/action(net.sourceforge.argparse4j.inf.ArgumentAction)
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/addArgument(java.lang.String[])
com/github/jakz/nit/Args/generateVerifierParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/setDefault(java.lang.String,java.lang.Object)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/nargs(java.lang.String)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/required(boolean)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/type(java.lang.Class)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/help(java.lang.String)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/dest(java.lang.String)
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/addArgument(java.lang.String[])
com/github/jakz/nit/Args/generateDatCompareParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/setDefault(java.lang.String,java.lang.Object)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/setDefault(java.lang.Object)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/required(boolean)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#com/github/jakz/nit/emitter/CreatorOptions/Mode/values()
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/choices(E[])
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/help(java.lang.String)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/dest(java.lang.String)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/impl/Arguments/storeConst()
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/nargs(java.lang.String)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/setConst(java.lang.Object)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/type(java.lang.Class)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/Argument/action(net.sourceforge.argparse4j.inf.ArgumentAction)
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/addArgument(java.lang.String[])
com/github/jakz/nit/Args/generateDatCreateParser(net.sourceforge.argparse4j.inf.ArgumentParser)#net/sourceforge/argparse4j/inf/ArgumentParser/setDefault(java.lang.String,java.lang.Object)
com/github/jakz/nit/gui/SearchPanel/CustomCellRenderer/getListCellRendererComponent(javax.swing.JList,T,int,boolean,boolean)#com/github/jakz/nit/gui/SearchPanel/CustomCellRenderer/customRendering(javax.swing.JLabel,T)
com/github/jakz/nit/gui/SearchPanel/CustomCellRenderer/getListCellRendererComponent(javax.swing.JList,T,int,boolean,boolean)#javax/swing/plaf/basic/BasicComboBoxRenderer/getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)
com/github/jakz/nit/emitter/GameSetCreator/analyze()#java/util/Collection/stream()
com/github/jakz/nit/emitter/GameSetCreator/analyze()#java/util/stream/BaseStream/parallel()
com/github/jakz/nit/emitter/GameSetCreator/analyze()#java/util/stream/Stream/forEach(java.util.function.Consumer)
com/github/jakz/nit/emitter/GameSetCreator/prescanFiles()#java/util/Collection/stream()
com/github/jakz/nit/emitter/GameSetCreator/prescanFiles()#java/util/stream/BaseStream/parallel()
com/github/jakz/nit/emitter/GameSetCreator/prescanFiles()#java/util/stream/Stream/forEach(java.util.function.Consumer)
com/github/jakz/nit/emitter/GameSetCreator/create()#java/util/concurrent/atomic/AtomicInteger/set(int)
com/github/jakz/nit/emitter/GameSetCreator/create()#com/github/jakz/nit/emitter/GameSetCreator/prescanFiles()
com/github/jakz/nit/emitter/GameSetCreator/create()#java/util/Set/size()
com/github/jakz/nit/emitter/GameSetCreator/create()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/emitter/GameSetCreator/create()#com/github/jakz/nit/emitter/GameSetCreator/analyze()
com/github/jakz/nit/emitter/GameSetCreator/create()#java/util/Set/clear()
com/github/jakz/nit/emitter/GameSetCreator/create()#java/lang/Object/Object()
com/github/jakz/nit/emitter/GameSetCreator/analyzeEntry(com.github.jakz.nit.emitter.GameSetCreator.MultipleEntry,com.github.jakz.nit.emitter.GameSetCreator.CreatorEntry)#java/nio/file/Path/toString()
com/github/jakz/nit/emitter/GameSetCreator/analyzeEntry(com.github.jakz.nit.emitter.GameSetCreator.MultipleEntry,com.github.jakz.nit.emitter.GameSetCreator.CreatorEntry)#java/nio/file/Files/size(java.nio.file.Path)
com/github/jakz/nit/emitter/GameSetCreator/analyzeEntry(com.github.jakz.nit.emitter.GameSetCreator.MultipleEntry,com.github.jakz.nit.emitter.GameSetCreator.CreatorEntry)#java/nio/file/Path/getFileName()
com/github/jakz/nit/emitter/GameSetCreator/analyzeEntry(com.github.jakz.nit.emitter.GameSetCreator.MultipleEntry,com.github.jakz.nit.emitter.GameSetCreator.CreatorEntry)#java/lang/Object/Object()
com/github/jakz/nit/emitter/GameSetCreator/analyzeEntry(com.github.jakz.nit.emitter.GameSetCreator.MultipleEntry,com.github.jakz.nit.emitter.GameSetCreator.CreatorEntry)#java/lang/Iterable/forEach(java.util.function.Consumer)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#javax/swing/tree/DefaultTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#javax/swing/JComponent/setForeground(java.awt.Color)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#javax/swing/JLabel/setText(java.lang.String)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#com/github/jakz/nit/merger/TitleNormalizer/normalize(java.lang.String)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#javax/swing/JLabel/setIcon(javax.swing.Icon)
com/github/jakz/nit/gui/GameListPanel/MyTreeCellRenderer/getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)#javax/swing/tree/DefaultMutableTreeNode/getUserObject()
com/github/jakz/nit/Options/simpleDatLoad(java.nio.file.Path)#com/github/jakz/nit/Options/Options()
com/github/jakz/nit/Options/doesMergeInPlace()#java/lang/Object/equals(java.lang.Object)
com/github/jakz/nit/Options/getCompressorOptions()#java/lang/Object/Object()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printSeparator()#java/io/PrintWriter/write(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printSeparator()#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printSeparator()#java/util/List/size()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printSeparator()#java/util/List/get(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/addRow(java.util.List)#java/util/List/add(E)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printSeparator()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#java/util/stream/Stream/collect(java.util.stream.Collector)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#java/util/Collection/stream()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTable()#java/util/stream/Collectors/toList()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/ln()#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/clear()#java/util/List/clear()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/pad(int)#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Stream/map(java.util.function.Function)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Stream/of(T)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Stream/collect(java.util.stream.Collector)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Stream/concat(java.util.stream.Stream,java.util.stream.Stream)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/List/size()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/List/get(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Stream/mapToInt(java.util.function.ToIntFunction)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/Collection/stream()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/recomputeWidths()#java/util/stream/Collectors/toList()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/util/function/Function/apply(T)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/io/PrintWriter/write(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/lang/String/length()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/util/List/size()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/util/List/get(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/pad(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/ln()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/printTableRow(java.util.List,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/setRowPadding(com.github.jakz.nit.batch.BatchOperations.ASCIITablePrinter.Padding[])#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/setRowPadding(com.github.jakz.nit.batch.BatchOperations.ASCIITablePrinter.Padding[])#java/util/List/size()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/setRowPadding(com.github.jakz.nit.batch.BatchOperations.ASCIITablePrinter.Padding[])#java/util/List/get(int)
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/addColumn(java.lang.String[])#com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/ColumnSpec/ColumnSpec()
com/github/jakz/nit/batch/BatchOperations/ASCIITablePrinter/addColumn(java.lang.String[])#java/util/List/add(E)
com/github/jakz/nit/emitter/GameSetCreator/BinaryEntry/toString()#java/nio/file/Path/toString()
com/github/jakz/nit/emitter/GameSetCreator/BinaryEntry/toString()#java/nio/file/Path/getFileName()
