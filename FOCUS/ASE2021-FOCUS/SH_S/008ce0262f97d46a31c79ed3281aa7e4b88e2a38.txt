br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/isValidData(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/setup(org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/mapreduce/JobContext/getConfiguration()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/setup(org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/conf/Configuration/get(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/io/FloatWritable/FloatWritable(float)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/String/split(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#br/edu/utfpr/medicaoMeteorologica/MedicaoType/getOrder(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/io/Text/toString()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/commons/lang/math/NumberUtils/isNumber(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/format(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/getMedicao(java.lang.String[],java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/mapreduce/TaskInputOutputContext/write(KEYOUT,VALUEOUT)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/map(java.lang.Object,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/Float/valueOf(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/format(java.lang.String)#java/lang/String/trim()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/getMedicao(java.lang.String[],java.lang.String)#java/lang/String/split(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/getMedicao(java.lang.String[],java.lang.String)#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/isValidData(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/getMedicao(java.lang.String[],java.lang.String)#br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/MedicaoWritable(java.lang.String,java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/getMedicao(java.lang.String[],java.lang.String)#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaMapper/format(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaReducer/reduce(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/io/FloatWritable/FloatWritable(float)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaReducer/reduce(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/io/FloatWritable/get()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaReducer/reduce(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/Math/max(float,float)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaReducer/reduce(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/mapreduce/TaskInputOutputContext/write(KEYOUT,VALUEOUT)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/Comparator/compare(byte[],int,int,byte[],int,int)#org/apache/hadoop/io/WritableComparator/readVInt(byte[],int)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/Comparator/compare(byte[],int,int,byte[],int,int)#org/apache/hadoop/io/Text/Comparator/compare(byte[],int,int,byte[],int,int)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/Comparator/compare(byte[],int,int,byte[],int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.Throwable)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/Comparator/compare(byte[],int,int,byte[],int,int)#org/apache/hadoop/io/WritableUtils/decodeVIntSize(byte)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/hashCode()#org/apache/commons/lang/builder/HashCodeBuilder/append(java.lang.Object)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/hashCode()#org/apache/commons/lang/builder/HashCodeBuilder/toHashCode()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/hashCode()#org/apache/commons/lang/builder/HashCodeBuilder/HashCodeBuilder()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/compareTo(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable)#org/apache/commons/lang/builder/CompareToBuilder/append(java.lang.Object,java.lang.Object)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/compareTo(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable)#org/apache/commons/lang/builder/CompareToBuilder/CompareToBuilder()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/compareTo(br.edu.utfpr.medicaoMeteorologica.MedicaoWritable)#org/apache/commons/lang/builder/CompareToBuilder/toComparison()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/write(java.io.DataOutput)#org/apache/hadoop/io/Text/writeString(java.io.DataOutput,java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/readFields(java.io.DataInput)#org/apache/hadoop/io/Text/readString(java.io.DataInput)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/toString()#java/lang/String/substring(int,int)
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/equals(java.lang.Object)#org/apache/commons/lang/builder/EqualsBuilder/isEquals()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/equals(java.lang.Object)#org/apache/commons/lang/builder/EqualsBuilder/EqualsBuilder()
br/edu/utfpr/medicaoMeteorologica/MedicaoWritable/equals(java.lang.Object)#org/apache/commons/lang/builder/EqualsBuilder/append(java.lang.Object,java.lang.Object)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setMapOutputKeyClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setMapOutputValueClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setOutputFormatClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/lib/input/FileInputFormat/addInputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/conf/Configuration/Configuration()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/Job(org.apache.hadoop.conf.Configuration)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/conf/Configuration/set(java.lang.String,java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#java/lang/System/exit(int)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/run(java.lang.String[])#org/apache/hadoop/fs/Path/Path(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/main(java.lang.String[])#br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/MedicaoMeteorologicaManager()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/main(java.lang.String[])#org/apache/hadoop/util/ToolRunner/run(org.apache.hadoop.util.Tool,java.lang.String[])
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])#org/apache/hadoop/fs/FileSystem/get(java.net.URI,org.apache.hadoop.conf.Configuration)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])#org/apache/hadoop/fs/Path/toUri()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])#org/apache/hadoop/fs/Path/Path(java.lang.String)
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])#org/apache/hadoop/conf/Configured/getConf()
br/edu/utfpr/medicaoMeteorologica/MedicaoMeteorologicaManager/deleteOutputFileIfExists(java.lang.String[])#org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)
