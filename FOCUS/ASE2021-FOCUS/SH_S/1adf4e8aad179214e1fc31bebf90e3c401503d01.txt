org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getColor()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/isConnected(int)
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)#java/util/List/add(E)
org/okbqa/rocknrole/transforming/Rule/addAction(java.lang.String)#java/util/List/add(E)
org/okbqa/rocknrole/transforming/Rule/getSubgraphs(org.okbqa.rocknrole.graph.Graph,java.lang.String)#org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/getSubgraphs(org.okbqa.rocknrole.graph.Graph,java.lang.String)#org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/transforming/Rule/setMode(org.okbqa.rocknrole.transforming.Rule.Mode)#org/okbqa/rocknrole/transforming/Rule/resetDeleteMatch()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/List/isEmpty()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/Map/put(K,V)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/lang/String/matches(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/regex/Matcher/group(int)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/setPOS(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Pair/getRight()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Rule/getSubgraphs(org.okbqa.rocknrole.graph.Graph,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/setForm(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/regex/Pattern/compile(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/setLabel(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/lang/String/toLowerCase()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/HashMap/HashMap()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Pair/getLeft()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/regex/Matcher/find()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/List/get(int)
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/okbqa/rocknrole/transforming/Rule/toString()#java/lang/Object/toString()
org/okbqa/rocknrole/transforming/Rule/addMatch(java.lang.String)#java/util/List/add(E)
org/okbqa/rocknrole/transforming/Rule/isId(java.lang.String)#java/lang/String/matches(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#org/okbqa/rocknrole/transforming/Rule/isId(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#org/okbqa/rocknrole/graph/Graph/getMaxId()
org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Edge/Edge(org.okbqa.rocknrole.graph.Edge.Color,int,java.lang.String,int)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/transforming/Rule/getId(org.okbqa.rocknrole.graph.Graph,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/regex/Matcher/group(int)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Node/setPOS(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Node/setForm(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/transforming/Rule/isId(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/lang/String/trim()
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/regex/Matcher/find()
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/Map/put(K,V)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/transforming/Rule/applyAction(org.okbqa.rocknrole.graph.Graph,java.util.Map,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/toString(boolean)
pipeline/NLQ/main(java.lang.String[])#java/lang/Throwable/printStackTrace()
pipeline/NLQ/main(java.lang.String[])#java/util/logging/Logger/getLogger(java.lang.String)
pipeline/NLQ/main(java.lang.String[])#java/io/File/File(java.lang.String)
pipeline/NLQ/main(java.lang.String[])#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Parser/parse(java.lang.String,java.util.Set)
pipeline/NLQ/main(java.lang.String[])#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/Graph2Template()
pipeline/NLQ/main(java.lang.String[])#java/util/HashSet/HashSet()
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ETRI/ETRI()
pipeline/NLQ/main(java.lang.String[])#java/lang/String/trim()
pipeline/NLQ/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()
pipeline/NLQ/main(java.lang.String[])#java/lang/Class/getName()
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/Transformer(java.lang.String)
pipeline/NLQ/main(java.lang.String[])#org/okbqa/rocknrole/template/Template/toString()
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/toString(boolean)
pipeline/QALD3_ko/main(java.lang.String[])#java/lang/Throwable/printStackTrace()
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toString_withPOS()
pipeline/QALD3_ko/main(java.lang.String[])#java/util/logging/Logger/getLogger(java.lang.String)
pipeline/QALD3_ko/main(java.lang.String[])#java/io/File/File(java.lang.String)
pipeline/QALD3_ko/main(java.lang.String[])#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Parser/parse(java.lang.String,java.util.Set)
pipeline/QALD3_ko/main(java.lang.String[])#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/Graph2Template()
pipeline/QALD3_ko/main(java.lang.String[])#java/util/HashSet/HashSet()
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ETRI/ETRI()
pipeline/QALD3_ko/main(java.lang.String[])#java/lang/String/trim()
pipeline/QALD3_ko/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()
pipeline/QALD3_ko/main(java.lang.String[])#java/lang/Class/getName()
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/Transformer(java.lang.String)
pipeline/QALD3_ko/main(java.lang.String[])#org/okbqa/rocknrole/template/Template/toString()
pipeline/Interactive_ko/main(java.lang.String[])#pipeline/Interactive_ko/test()
pipeline/Interactive_ko/test()#java/io/PrintStream/print(java.lang.String)
pipeline/Interactive_ko/test()#java/util/Scanner/Scanner(java.io.InputStream,java.lang.String)
pipeline/Interactive_ko/test()#java/lang/System/exit(int)
pipeline/Interactive_ko/test()#java/lang/String/isEmpty()
pipeline/Interactive_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/TemplatorPipeline(java.lang.String)
pipeline/Interactive_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()
pipeline/Interactive_ko/test()#java/util/HashSet/HashSet()
pipeline/Interactive_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
pipeline/Interactive_ko/test()#java/util/Scanner/nextLine()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/setPOS(java.lang.String)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#java/util/Arrays/asList(T[])
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#java/util/List/add(E)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges(java.lang.String)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getPOS()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/copy()
org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Pruning/apply(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Preprocessing/apply(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/transforming/Transformer/debugMode()#org/okbqa/rocknrole/transforming/RuleApplication/debugMode()
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/STRING()
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String,java.lang.String)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/STRING(int)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)#java/lang/Integer/parseInt(java.lang.String)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/STRING()
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#org/okbqa/rocknrole/graph/Edge/Edge(org.okbqa.rocknrole.graph.Edge.Color,int,java.lang.String,int)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/STRING(int)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/EdgeContext/STRING()
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/interpreter/GraphConstructor/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)#java/lang/Integer/parseInt(java.lang.String)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/edge()#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/EdgeContext/EdgeContext(org.okbqa.rocknrole.graph.interpreter.grammar.ParserRuleContext,int)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/edge()#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/node()
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/graph()#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/edge()
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/graph()#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/GraphContext/GraphContext(org.okbqa.rocknrole.graph.interpreter.grammar.ParserRuleContext,int)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/node()#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/NodeContext(org.okbqa.rocknrole.graph.interpreter.grammar.ParserRuleContext,int)
org/okbqa/rocknrole/graph/Graph/findEdgesBetween(java.lang.Integer,java.lang.Integer)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/graph/Graph/findEdgesBetween(java.lang.Integer,java.lang.Integer)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/findEdgesBetween(java.lang.Integer,java.lang.Integer)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/findEdgesBetween(java.lang.Integer,java.lang.Integer)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/findEdgesBetween(java.lang.Integer,java.lang.Integer)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Edge/setDependent(int)
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Node/setId(int)
org/okbqa/rocknrole/graph/Graph/renameNode(int,int)#org/okbqa/rocknrole/graph/Edge/setHead(int)
org/okbqa/rocknrole/graph/Graph/copy()#org/okbqa/rocknrole/graph/Node/copy()
org/okbqa/rocknrole/graph/Graph/copy()#org/okbqa/rocknrole/graph/Edge/copy()
org/okbqa/rocknrole/graph/Graph/copy()#org/okbqa/rocknrole/graph/Graph/Graph()
org/okbqa/rocknrole/graph/Graph/copy()#org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/Graph/copy()#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/findNode(java.lang.String)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/graph/Graph/findNode(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/findNode(java.lang.String)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/getMatchingNode(org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/containsEdgeBetween(java.lang.Integer,java.lang.Integer)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/containsEdgeBetween(java.lang.Integer,java.lang.Integer)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/Graph/delete(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Node/setForm(java.lang.String)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Graph/renameNode(int,int)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#java/util/HashSet/HashSet(java.util.Collection)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/collapseEdges(java.util.List)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/toString()#org/okbqa/rocknrole/graph/Graph/toString(boolean)
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/toString(boolean)#java/lang/String/trim()
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Node/getPOS()
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Graph/isConnected(int)
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/toString(boolean)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)#java/util/List/remove(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)#java/util/List/remove(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/setDependent(int)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#java/util/HashMap/HashMap()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/setId(int)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/setHead(int)
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getMaxId()
org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)#java/util/Map/put(K,V)
org/okbqa/rocknrole/graph/Graph/getEdges(java.lang.String)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/graph/Graph/getEdges(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/getEdges(java.lang.String)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/graph/Graph/getEdges(java.lang.String)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)
org/okbqa/rocknrole/graph/Graph/getNode(int)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/getMaxId()#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)#org/okbqa/rocknrole/graph/Graph/deleteNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node,boolean)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/graph/Graph/contains(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/contains(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/graph/Graph/contains(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/contains(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/contains(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/graph/Graph/containsEdge(org.okbqa.rocknrole.graph.Edge)#org/okbqa/rocknrole/graph/Edge/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Pair/Pair(L,R)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/List/addAll(java.util.Collection)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/Graph()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/HashMap/HashMap()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/addEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/List/add(E)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)#java/util/Map/put(K,V)
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addPOS(int,int,java.lang.String)
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/ParseResult()
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/graph/Pair/getRight()
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addToken(int,int,java.lang.String)
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addSentence(int,java.lang.String)
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/graph/Pair/getLeft()
org/okbqa/rocknrole/parsing/Stanford/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addParse(int,java.lang.String)
org/okbqa/rocknrole/parsing/ParseResult/addToken(int,int,java.lang.String)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/addToken(int,int,java.lang.String)#java/util/TreeMap/TreeMap()
org/okbqa/rocknrole/parsing/ParseResult/addToken(int,int,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/addToken(int,int,java.lang.String)#java/util/Map/put(K,V)
org/okbqa/rocknrole/parsing/ParseResult/toString_withPOS()#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/toString_withPOS()#java/util/Map/keySet()
org/okbqa/rocknrole/parsing/ParseResult/toString_withPOS()#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/addParse(int,java.lang.String)#java/util/Map/put(K,V)
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String,java.lang.String)
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#java/util/Map/keySet()
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#org/okbqa/rocknrole/graph/Graph/addNode(org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/parsing/ParseResult/toGraph()#org/okbqa/rocknrole/graph/Graph/Graph()
org/okbqa/rocknrole/parsing/ParseResult/addPOS(int,int,java.lang.String)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/addPOS(int,int,java.lang.String)#java/util/TreeMap/TreeMap()
org/okbqa/rocknrole/parsing/ParseResult/addPOS(int,int,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/addPOS(int,int,java.lang.String)#java/util/Map/put(K,V)
org/okbqa/rocknrole/parsing/ParseResult/addSentence(int,java.lang.String)#java/util/Map/put(K,V)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/Node/setPOS(java.lang.String)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#java/util/Map/keySet()
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/Graph/Graph()
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/Graph/merge(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()#org/okbqa/rocknrole/graph/Graph/getNodes()
pipeline/Test_ko/main(java.lang.String[])#pipeline/Test_ko/test()
pipeline/Test_ko/test()#java/io/PrintStream/println(java.lang.String)
pipeline/Test_ko/test()#java/util/Arrays/asList(T[])
pipeline/Test_ko/test()#java/lang/System/exit(int)
pipeline/Test_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/TemplatorPipeline(java.lang.String)
pipeline/Test_ko/test()#java/util/Scanner/Scanner(java.io.InputStream)
pipeline/Test_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()
pipeline/Test_ko/test()#java/lang/String/equals(java.lang.Object)
pipeline/Test_ko/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
pipeline/Test_ko/test()#java/util/Scanner/nextLine()
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#java/lang/Throwable/printStackTrace()
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#org/okbqa/rocknrole/graph/Pair/Pair(L,R)
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#java/util/Set/add(E)
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/okbqa/rocknrole/main/ProcessRequest/process(org.okbqa.rocknrole.main.Representation)#java/util/HashSet/HashSet()
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/toString(boolean)
pipeline/QALD6_en/main(java.lang.String[])#java/lang/Throwable/printStackTrace()
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toString_withPOS()
pipeline/QALD6_en/main(java.lang.String[])#java/util/logging/Logger/getLogger(java.lang.String)
pipeline/QALD6_en/main(java.lang.String[])#java/io/File/File(java.lang.String)
pipeline/QALD6_en/main(java.lang.String[])#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Parser/parse(java.lang.String,java.util.Set)
pipeline/QALD6_en/main(java.lang.String[])#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/pipeline/Graph2Template/Graph2Template()
pipeline/QALD6_en/main(java.lang.String[])#java/util/HashSet/HashSet()
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Stanford/Stanford()
pipeline/QALD6_en/main(java.lang.String[])#java/lang/String/trim()
pipeline/QALD6_en/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()
pipeline/QALD6_en/main(java.lang.String[])#java/lang/Class/getName()
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/transforming/Transformer/Transformer(java.lang.String)
pipeline/QALD6_en/main(java.lang.String[])#org/okbqa/rocknrole/template/Template/toString()
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesLexer/DependenciesLexer(org.okbqa.rocknrole.graph.interpreter.grammar.CharStream)
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/DependenciesParser(org.okbqa.rocknrole.graph.interpreter.grammar.TokenStream)
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#org/okbqa/rocknrole/graph/interpreter/GraphConstructor/GraphConstructor()
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#java/lang/Throwable/printStackTrace(java.io.PrintStream)
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#java/lang/String/getBytes(java.nio.charset.Charset)
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#org/okbqa/rocknrole/graph/Graph/Graph()
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/graph()
org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)#java/lang/String/isEmpty()
pipeline/Test_en/test()#java/io/PrintStream/println(java.lang.String)
pipeline/Test_en/test()#java/util/Arrays/asList(T[])
pipeline/Test_en/test()#java/lang/System/exit(int)
pipeline/Test_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/TemplatorPipeline(java.lang.String)
pipeline/Test_en/test()#java/util/Scanner/Scanner(java.io.InputStream)
pipeline/Test_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()
pipeline/Test_en/test()#java/lang/String/equals(java.lang.Object)
pipeline/Test_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
pipeline/Test_en/test()#java/util/Scanner/nextLine()
pipeline/Test_en/main(java.lang.String[])#pipeline/Test_en/test()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#org/okbqa/rocknrole/transforming/Rule/addAction(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/BufferedReader/close()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/ClassLoader/getResource(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/PrintStream/print(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#org/okbqa/rocknrole/transforming/Rule/addMatch(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/trim()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#org/okbqa/rocknrole/transforming/Rule/Rule()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/net/URL/toURI()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/util/List/size()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/nio/file/Path/toFile()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#org/okbqa/rocknrole/transforming/Rule/setMode(org.okbqa.rocknrole.transforming.Rule.Mode)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/split(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#org/okbqa/rocknrole/transforming/Rule/resetDeleteMatch()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/isEmpty()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/nio/file/Paths/get(java.net.URI)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/io/BufferedReader/readLine()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/util/List/add(E)
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/Object/getClass()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/Class/getClassLoader()
org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/BufferedReader/close()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/lang/ClassLoader/getResource(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/PrintStream/print(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/lang/String/trim()
org/okbqa/rocknrole/transforming/RuleApplication/init()#org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/net/URL/toURI()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/nio/file/Path/toFile()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/lang/String/isEmpty()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/FileInputStream/FileInputStream(java.io.File)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/nio/file/Paths/get(java.net.URI)
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/io/BufferedReader/readLine()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/lang/Object/getClass()
org/okbqa/rocknrole/transforming/RuleApplication/init()#java/lang/Class/getClassLoader()
org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/toString(boolean)
org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)#java/lang/Object/toString()
org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)#java/io/PrintStream/println(java.lang.String)
org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/transforming/Rule/apply(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/graph/Pair/equals(java.lang.Object)#org/okbqa/rocknrole/graph/Pair/getRight()
org/okbqa/rocknrole/graph/Pair/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Pair/equals(java.lang.Object)#org/okbqa/rocknrole/graph/Pair/getLeft()
org/okbqa/rocknrole/graph/Pair/hashCode()#java/lang/Object/hashCode()
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/toString(boolean)
transformer/RuleApplicationTest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/transforming/RuleApplication/readFile(java.lang.String)
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/GraphReader()
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/transforming/RuleApplication/execute(org.okbqa.rocknrole.graph.Graph)
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/transforming/RuleApplication/RuleApplication(java.lang.String)
transformer/RuleApplicationTest/main(java.lang.String[])#org/okbqa/rocknrole/transforming/RuleApplication/debugMode()
org/okbqa/rocknrole/graph/Edge/copy()#org/okbqa/rocknrole/graph/Edge/Edge(org.okbqa.rocknrole.graph.Edge.Color,int,java.lang.String,int)
org/okbqa/rocknrole/graph/Edge/hashCode()#java/util/Objects/hashCode(java.lang.Object)
org/okbqa/rocknrole/graph/Edge/matches(org.okbqa.rocknrole.graph.Edge)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/graph/Edge/matches(org.okbqa.rocknrole.graph.Edge)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Edge/matches(org.okbqa.rocknrole.graph.Edge)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/graph/Edge/matches(org.okbqa.rocknrole.graph.Edge)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/graph/Edge/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/okbqa/rocknrole/graph/Edge/equals(java.lang.Object)#java/lang/Object/getClass()
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/getParses()
graph/ParserTest/main(java.lang.String[])#java/lang/Object/toString()
graph/ParserTest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/GraphReader()
graph/ParserTest/main(java.lang.String[])#java/util/Map/values()
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Parser/parse(java.lang.String,java.util.Set)
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/parsing/ParseResult/toGraph()
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/parsing/Stanford/Stanford()
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)
graph/ParserTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/toString()
graph/ParserTest/main(java.lang.String[])#java/util/HashSet/HashSet()
org/okbqa/rocknrole/pipeline/NL2Graph/debugMode()#org/okbqa/rocknrole/transforming/Transformer/debugMode()
org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)#org/okbqa/rocknrole/graph/Graph/toString(boolean)
org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)#java/io/PrintStream/println(java.lang.String)
org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/toDependencyGraph()
org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/Parser/parse(java.lang.String,java.util.Set)
org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)#org/okbqa/rocknrole/transforming/Transformer/transform(org.okbqa.rocknrole.graph.Graph)
pipeline/Interactive_en/test()#java/io/PrintStream/print(java.lang.String)
pipeline/Interactive_en/test()#java/lang/System/exit(int)
pipeline/Interactive_en/test()#java/lang/String/isEmpty()
pipeline/Interactive_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/TemplatorPipeline(java.lang.String)
pipeline/Interactive_en/test()#java/util/Scanner/Scanner(java.io.InputStream)
pipeline/Interactive_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()
pipeline/Interactive_en/test()#java/util/HashSet/HashSet()
pipeline/Interactive_en/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
pipeline/Interactive_en/test()#java/util/Scanner/nextLine()
pipeline/Interactive_en/main(java.lang.String[])#pipeline/Interactive_en/test()
pipeline/Test_NE/main(java.lang.String[])#pipeline/Test_NE/test()
pipeline/Test_NE/test()#org/okbqa/rocknrole/graph/Pair/Pair(L,R)
pipeline/Test_NE/test()#java/util/Set/add(E)
pipeline/Test_NE/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)
pipeline/Test_NE/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/TemplatorPipeline(java.lang.String)
pipeline/Test_NE/test()#org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()
pipeline/Test_NE/test()#java/util/HashSet/HashSet()
org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)#java/lang/String/toLowerCase()
org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getPOS()
org/okbqa/rocknrole/graph/Node/matches(org.okbqa.rocknrole.graph.Node)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Node/copy()#org/okbqa/rocknrole/graph/Node/Node(int,java.lang.String,java.lang.String)
org/okbqa/rocknrole/graph/Node/hashCode()#java/util/Objects/hashCode(java.lang.Object)
org/okbqa/rocknrole/graph/Node/hasProperForm()#java/lang/Enum/name()
org/okbqa/rocknrole/graph/Node/hasProperForm()#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/graph/Node/hasProperForm()#org/okbqa/rocknrole/template/SlotType/values()
org/okbqa/rocknrole/graph/Node/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/okbqa/rocknrole/graph/Node/equals(java.lang.Object)#java/lang/Object/getClass()
org/okbqa/rocknrole/graph/Node/getForm()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#org/okbqa/rocknrole/template/Template/toJSON()
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#org/okbqa/rocknrole/pipeline/NL2Graph/constructGraph(java.lang.String,java.util.Set)
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#java/io/PrintStream/println(char[])
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#org/okbqa/rocknrole/template/Template/toString()
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#java/lang/String/trim()
org/okbqa/rocknrole/pipeline/TemplatorPipeline/run(java.lang.String,java.util.Set)#java/io/PrintStream/println(java.lang.String)
org/okbqa/rocknrole/pipeline/TemplatorPipeline/debugMode()#org/okbqa/rocknrole/pipeline/NL2Graph/debugMode()
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/exitRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/exitNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/NodeContext/enterRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/enterNode(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.NodeContext)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/GraphContext/enterRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/enterGraph(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.GraphContext)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/GraphContext/exitRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/exitGraph(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.GraphContext)
org/okbqa/rocknrole/parsing/ETRI/request(java.lang.String,java.lang.String)#java/lang/String/getBytes(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/request(java.lang.String,java.lang.String)#java/lang/Exception/Exception(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/ParseResult()
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#java/lang/String/split(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addSentence(int,java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)
org/okbqa/rocknrole/parsing/ETRI/parse(java.lang.String,java.util.Set)#org/okbqa/rocknrole/parsing/ParseResult/addParse(int,java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/BufferedReader/close()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/Throwable/printStackTrace()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/String/trim()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/net/Socket/shutdownOutput()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/FilterOutputStream/write(byte[])
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/net/Socket/getOutputStream()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/FilterOutputStream/close()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/net/InetAddress/getByName(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/net/Socket/getInputStream()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/net/Socket/Socket(java.net.InetAddress,int)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/BufferedOutputStream/flush()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/StringBuffer/toString()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/io/BufferedReader/readLine()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/String/getBytes()
org/okbqa/rocknrole/parsing/ETRI/socket(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/lang/Throwable/printStackTrace()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/lang/String/trim()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/Map/get(java.lang.Object)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/lang/String/isEmpty()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/Map/containsKey(java.lang.Object)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/lang/String/startsWith(java.lang.String)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#org/okbqa/rocknrole/graph/Pair/getRight()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/HashMap/HashMap()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/Map/keySet()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/List/add(E)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#org/okbqa/rocknrole/graph/Pair/getLeft()
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/parsing/ETRI/convertToStanfordFormat(java.lang.String,java.util.Set)#java/util/Map/put(K,V)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/SlotType/valueOf(java.lang.String)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Slot/Slot(java.lang.String,java.lang.String,org.okbqa.rocknrole.template.SlotType)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Template/containsSlotFor(java.lang.String)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/hasProperForm()
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/pipeline/Graph2Template/varString(int)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getPOS()
org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Slot/Slot(java.lang.String,java.lang.String,org.okbqa.rocknrole.template.SlotType)
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/hasProperForm()
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/pipeline/Graph2Template/fresh()
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/pipeline/Graph2Template/varString(int)
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#java/lang/Object/Object()
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)
org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)#org/okbqa/rocknrole/template/Template/addTriple(org.okbqa.rocknrole.template.Triple)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/assemble()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/pipeline/Graph2Template/add(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/pipeline/Graph2Template/addClassTriple(org.okbqa.rocknrole.template.Template,org.okbqa.rocknrole.graph.Node)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNodes()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/Template()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getEdges()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/addSolutionModifier(java.lang.String)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/pipeline/Graph2Template/varString(int)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getDependent()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Slot/Slot(java.lang.String,java.lang.String,org.okbqa.rocknrole.template.SlotType)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/deleteEdge(org.okbqa.rocknrole.graph.Edge)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/addProjVar(java.lang.String)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/pipeline/Graph2Template/fresh()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getHead()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getId()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Edge/getLabel()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#java/util/List/add(E)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#java/util/List/contains(java.lang.Object)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getNode(int)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Graph/getMaxId()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/graph/Node/getForm()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/addCountVar(java.lang.String)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#java/lang/Object/Object()
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)
org/okbqa/rocknrole/pipeline/Graph2Template/constructTemplate(org.okbqa.rocknrole.graph.Graph)#org/okbqa/rocknrole/template/Template/addTriple(org.okbqa.rocknrole.template.Triple)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/EdgeContext/exitRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/exitEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)
org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesParser/EdgeContext/enterRule(org.okbqa.rocknrole.graph.interpreter.grammar.ParseTreeListener)#org/okbqa/rocknrole/graph/interpreter/grammar/DependenciesListener/enterEdge(org.okbqa.rocknrole.graph.interpreter.grammar.DependenciesParser.EdgeContext)
org/okbqa/rocknrole/template/Template/clone()#org/okbqa/rocknrole/template/Template/Template()
org/okbqa/rocknrole/template/Template/clone()#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/clone()#java/util/HashSet/HashSet()
org/okbqa/rocknrole/template/Template/clone()#java/lang/Object/Object()
org/okbqa/rocknrole/template/Template/clone()#java/util/Set/addAll(java.util.Collection)
org/okbqa/rocknrole/template/Template/clone()#org/okbqa/rocknrole/template/Slot/clone()
org/okbqa/rocknrole/template/Template/removeSlot(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/template/Template/removeSlot(java.lang.String)#java/util/Set/remove(java.lang.Object)
org/okbqa/rocknrole/template/Template/removeSlot(java.lang.String)#org/okbqa/rocknrole/template/Slot/getVar()
org/okbqa/rocknrole/template/Template/addProjVar(java.lang.String)#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/addCountVar(java.lang.String)#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/assemble()#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/template/Template/assemble()#java/lang/String/split(java.lang.String)
org/okbqa/rocknrole/template/Template/assemble()#java/util/Set/removeAll(java.util.Collection)
org/okbqa/rocknrole/template/Template/assemble()#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/assemble()#java/util/Set/contains(java.lang.Object)
org/okbqa/rocknrole/template/Template/assemble()#java/util/List/add(E)
org/okbqa/rocknrole/template/Template/assemble()#java/lang/String/startsWith(java.lang.String)
org/okbqa/rocknrole/template/Template/assemble()#org/okbqa/rocknrole/template/Template/score()
org/okbqa/rocknrole/template/Template/assemble()#org/okbqa/rocknrole/template/Slot/getVar()
org/okbqa/rocknrole/template/Template/assemble()#java/util/HashSet/HashSet()
org/okbqa/rocknrole/template/Template/assemble()#java/lang/Object/Object()
org/okbqa/rocknrole/template/Template/hashCode()#java/util/Objects/hashCode(java.lang.Object)
org/okbqa/rocknrole/template/Template/containsSlotFor(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/okbqa/rocknrole/template/Template/containsSlotFor(java.lang.String)#org/okbqa/rocknrole/template/Slot/getVar()
org/okbqa/rocknrole/template/Template/toJSON()#java/lang/Double/toString(double)
org/okbqa/rocknrole/template/Template/toJSON()#org/okbqa/rocknrole/template/Slot/toListofJSONObjects()
org/okbqa/rocknrole/template/Template/toJSON()#org/okbqa/rocknrole/template/Template/sanityCheck(java.lang.String)
org/okbqa/rocknrole/template/Template/toJSON()#java/lang/Object/Object()
org/okbqa/rocknrole/template/Template/addSolutionModifier(java.lang.String)#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/okbqa/rocknrole/template/Template/equals(java.lang.Object)#java/lang/Object/getClass()
org/okbqa/rocknrole/template/Template/score()#org/okbqa/rocknrole/template/Slot/getForm()
org/okbqa/rocknrole/template/Template/score()#java/util/Set/size()
org/okbqa/rocknrole/template/Template/score()#org/okbqa/rocknrole/template/Template/containsSlotFor(java.lang.String)
org/okbqa/rocknrole/template/Template/score()#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/score()#java/util/Set/isEmpty()
org/okbqa/rocknrole/template/Template/score()#java/util/HashSet/HashSet()
org/okbqa/rocknrole/template/Template/score()#org/okbqa/rocknrole/template/Slot/isSortal()
org/okbqa/rocknrole/template/Template/score()#java/lang/String/isEmpty()
org/okbqa/rocknrole/template/Template/score()#java/util/Set/contains(java.lang.Object)
org/okbqa/rocknrole/template/Template/toString()#org/okbqa/rocknrole/template/Slot/toString()
org/okbqa/rocknrole/template/Template/sanityCheck(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)#org/okbqa/rocknrole/template/Template/containsSlotFor(java.lang.String)
org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)#java/util/Set/add(E)
org/okbqa/rocknrole/template/Template/addSlot(org.okbqa.rocknrole.template.Slot)#org/okbqa/rocknrole/template/Slot/getVar()
org/okbqa/rocknrole/main/RestletApp/createInboundRoot()#java/lang/Object/Object()
graph/SubgraphMatchingTest/main(java.lang.String[])#java/io/PrintStream/println(int)
graph/SubgraphMatchingTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/GraphReader()
graph/SubgraphMatchingTest/main(java.lang.String[])#java/util/List/size()
graph/SubgraphMatchingTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/interpreter/GraphReader/interpret(java.lang.String)
graph/SubgraphMatchingTest/main(java.lang.String[])#org/okbqa/rocknrole/graph/Graph/subGraphMatches(org.okbqa.rocknrole.graph.Graph)
org/okbqa/rocknrole/main/StartWebService/main(java.lang.String[])#org/okbqa/rocknrole/main/RestletApp/RestletApp()
org/okbqa/rocknrole/template/Slot/hashCode()#java/util/Objects/hashCode(java.lang.Object)
org/okbqa/rocknrole/template/Slot/toListofJSONObjects()#java/util/ArrayList/ArrayList()
org/okbqa/rocknrole/template/Slot/toListofJSONObjects()#java/lang/String/isEmpty()
org/okbqa/rocknrole/template/Slot/toListofJSONObjects()#org/okbqa/rocknrole/template/SlotType/toString()
org/okbqa/rocknrole/template/Slot/clone()#org/okbqa/rocknrole/template/Slot/Slot(java.lang.String,java.lang.String,org.okbqa.rocknrole.template.SlotType)
org/okbqa/rocknrole/template/Slot/isSortal()#java/lang/Enum/equals(java.lang.Object)
org/okbqa/rocknrole/template/Slot/toString()#java/lang/String/isEmpty()
org/okbqa/rocknrole/template/Slot/equals(java.lang.Object)#java/util/Objects/equals(java.lang.Object,java.lang.Object)
org/okbqa/rocknrole/template/Slot/equals(java.lang.Object)#java/lang/Object/getClass()
