com/ml/bus/controller/CrawlController/crawlRatingList(java.lang.String)#com/ml/bus/service/UserDataCrawler/crawlRatingList(com.ml.db.IBaseDB,java.lang.String)
com/ml/bus/controller/CrawlController/transferBlankMovie()#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/controller/CrawlController/transferBlankMovie()#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/controller/CrawlController/transferBlankMovie()#java/util/List/size()
com/ml/bus/controller/CrawlController/transferBlankMovie()#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/transferBlankMovie()#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/controller/CrawlController/transferBlankMovie()#com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)
com/ml/bus/controller/CrawlController/transferBlankMovie()#java/io/PrintStream/println(int)
com/ml/bus/controller/CrawlController/transferBlankMovie()#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/controller/CrawlController/crawlMovie()#com/ml/bus/service/UserDataCrawler/preprocess(java.util.List)
com/ml/bus/controller/CrawlController/crawlMovie()#java/util/List/size()
com/ml/bus/controller/CrawlController/crawlMovie()#com/ml/bus/service/UserDataCrawler/crawlMovie(com.ml.db.IBaseDB)
com/ml/bus/controller/CrawlController/crawlMovie()#java/io/PrintStream/println(int)
com/ml/bus/controller/CrawlController/crawlMovie()#com/ml/db/IBaseDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/model/DoubanUser/getId()
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#java/util/List/get(int)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/db/IBaseDB/delete(java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/model/DoubanUser/DoubanUser(java.lang.String,java.lang.Integer,java.lang.String)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#java/lang/Throwable/getMessage()
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#java/util/List/size()
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/controller/CrawlController/crawlRatingLists(java.lang.String[])#com/ml/bus/service/UserDataCrawler/crawlRatingList(com.ml.db.IBaseDB,java.lang.String)
com/ml/bus/controller/CrawlController/crawlUser(java.lang.String)#com/ml/bus/service/UserDataCrawler/crawlUser(com.ml.db.IBaseDB,java.lang.String)
com/ml/bus/controller/CrawlController/transferUser()#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/controller/CrawlController/transferUser()#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/controller/CrawlController/transferUser()#com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)
com/ml/bus/controller/CrawlController/transferUser()#java/util/List/size()
com/ml/bus/controller/CrawlController/transferUser()#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/transferUser()#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/controller/CrawlController/transferUser()#java/io/PrintStream/println(int)
com/ml/bus/controller/CrawlController/transferUser()#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/controller/CrawlController/transferMovie()#com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)
com/ml/bus/controller/CrawlController/transferMovie()#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/controller/CrawlController/transferMovie()#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/controller/CrawlController/transferMovie()#java/util/List/size()
com/ml/bus/controller/CrawlController/transferMovie()#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/controller/CrawlController/transferMovie()#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/controller/CrawlController/transferMovie()#java/io/PrintStream/println(int)
com/ml/bus/controller/CrawlController/transferMovie()#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/movie/recommender/MovieUserBasedRecommender/getDataModel()#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/getDataModel()
com/ml/movie/recommender/MovieUserBasedRecommender/estimatePreference(long,long)#org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender/estimatePreference(long,long)
com/ml/movie/recommender/MovieUserBasedRecommender/setPreference(long,long,float)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/setPreference(long,long,float)
com/ml/movie/recommender/MovieUserBasedRecommender/removePreference(long,long)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/removePreference(long,long)
com/ml/movie/recommender/MovieUserBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)
com/ml/movie/recommender/MovieUserBasedRecommender/mostSimilarUserIDs(long,int)#org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender/mostSimilarUserIDs(long,int)
com/ml/movie/recommender/MovieUserBasedRecommender/refresh(java.util.Collection)#org/apache/mahout/cf/taste/impl/recommender/GenericUserBasedRecommender/refresh(java.util.Collection)
com/ml/movie/recommender/MovieUserBasedRecommender/recommend(long,int)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/recommend(long,int)
com/ml/bus/controller/PreferenceResource/findById(java.lang.String,java.lang.String,java.lang.String)#com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/ArrayList/ArrayList()
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#com/ml/bus/service/MemoryService/getRecommendbuilder()
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/Throwable/getMessage()
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/List/add(E)
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#com/ml/movie/recommender/GeneralRecommendBuilder/refreshData(java.lang.String,java.lang.Iterable,boolean)
com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)#org/slf4j/Logger/info(java.lang.String)
com/ml/bus/controller/PreferenceResource/deletePreference(java.lang.String,java.lang.String)#com/ml/bus/controller/PreferenceResource/refreshPreference(java.lang.String,java.lang.String,java.lang.String,boolean)
com/ml/bus/controller/MovieController/findById(java.lang.String)#java/util/List/get(int)
com/ml/bus/controller/MovieController/findById(java.lang.String)#com/ml/bus/service/MovieService/findById(java.lang.String)
com/ml/bus/controller/MovieController/findByRelated(java.lang.String)#com/ml/bus/service/MovieService/findById(java.lang.String)
com/ml/bus/controller/MovieController/findByName(java.lang.String)#com/ml/bus/service/MovieService/findByName(java.lang.String)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalPage()
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#javax/servlet/ServletRequest/getParameter(java.lang.String)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalCount()
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#java/lang/String/equals(java.lang.Object)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/Pagination(javax.servlet.http.HttpServletRequest)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getCurrentPage()
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#java/util/Map/put(K,V)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getItems()
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#java/util/HashMap/HashMap()
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/bus/service/MovieService/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)
com/ml/bus/controller/MovieController/getMovie(javax.servlet.http.HttpServletRequest)#com/ml/bus/service/MovieService/findByPage(com.ml.util.Pagination)
com/ml/bus/controller/MovieController/getMovie()#com/ml/bus/service/MovieService/findAll()
com/ml/bus/controller/MovieController/getGenres()#com/ml/bus/service/MemoryService/getMovieGenres()
com/ml/model/RecommendItems/toString()#java/util/Arrays/toString(long[])
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#org/slf4j/Logger/error(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#com/ml/movie/recommender/GeneralRecommendBuilder/GeneralRecommendBuilder()
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#com/ml/movie/recommender/GeneralRecommendBuilder/start(com.ml.movie.recommender.MongoDBDataModel,double,int,int,java.lang.String,java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#com/ml/movie/recommender/MongoDBDataModel/MongoDBDataModel(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,java.text.DateFormat,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/initialized()#com/ml/movie/recommender/MongoDBDataModel/MongoDBDataModel(java.lang.String,int,java.lang.String,java.lang.String,boolean,boolean,java.text.DateFormat,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/util/Properties/getProperty(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/lang/Boolean/parseBoolean(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#org/slf4j/Logger/info(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/lang/Integer/parseInt(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/util/Properties/load(java.io.InputStream)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/io/FileInputStream/FileInputStream(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/lang/Double/parseDouble(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/lang/String/equals(java.lang.Object)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/util/Properties/Properties()
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/ml/movie/recommender/MovieRecommenderInitiator/getParameters()#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/ml/bus/service/UserDataCrawler/crawlUser(com.ml.db.IBaseDB,java.lang.String)#com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)
com/ml/bus/service/UserDataCrawler/crawlUser(com.ml.db.IBaseDB,java.lang.String)#com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)
com/ml/bus/service/UserDataCrawler/crawlUser(com.ml.db.IBaseDB,java.lang.String)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#com/ml/model/DoubanUser/getId()
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#com/ml/model/DoubanUser/DoubanUser(java.lang.String,java.lang.Integer,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/delete(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/select/Elements/attr(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/select/Elements/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/nodes/Element/text()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/text/DateFormat/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/substring(int)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/Integer/doubleValue()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/nodes/Element/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/util/Date/getTime()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/nodes/Node/attr(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/nodes/Element/children()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/Jsoup/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/jsoup/select/Elements/text()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/split(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/trim()
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#com/ml/model/DoubanRatings/DoubanRatings(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Long,java.lang.String,java.util.List,java.lang.Double)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
com/ml/bus/service/UserDataCrawler/crawlMovie(com.ml.db.IBaseDB)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/crawlMovie(com.ml.db.IBaseDB)#com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)
com/ml/bus/service/UserDataCrawler/crawlMovie(com.ml.db.IBaseDB)#com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getDbID()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getId()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getImdbID()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getPicUrl()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/String/equals(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/Integer/doubleValue()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getGenres()
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/Movie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.util.List)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/delete(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferBlankMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getId()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/String/split(java.lang.String)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getPicUrl()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/lang/String/equals(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getRating()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/getImdbID()
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/model/Movie/Movie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.util.List)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/db/IBaseDB/delete(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/transferMovie(com.ml.db.IBaseDB,java.util.List)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#org/jsoup/Jsoup/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#org/jsoup/select/Elements/text()
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#java/lang/String/trim()
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#org/jsoup/nodes/Element/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/getMultiPage(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ml/bus/service/UserDataCrawler/preprocess(java.util.List)#com/ml/model/Movie/getImdbID()
com/ml/bus/service/UserDataCrawler/preprocess(java.util.List)#java/util/List/size()
com/ml/bus/service/UserDataCrawler/preprocess(java.util.List)#java/util/HashMap/HashMap(int)
com/ml/bus/service/UserDataCrawler/preprocess(java.util.List)#java/util/Map/put(K,V)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#java/lang/Throwable/toString()
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#com/ml/bus/service/UserDataCrawler/transferUser(com.ml.db.IBaseDB,java.util.List)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#com/ml/db/MongoDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#java/util/Properties/Properties()
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#com/ml/db/MongoDB/MongoDB(java.util.Properties)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#java/util/Properties/load(java.io.InputStream)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/service/UserDataCrawler/main(java.lang.String[])#com/ml/bus/service/UserDataCrawler/UserDataCrawler()
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#org/jsoup/nodes/Element/text()
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#org/jsoup/select/Elements/size()
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#org/jsoup/nodes/Element/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#org/jsoup/select/Elements/get(int)
com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)#org/jsoup/Jsoup/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/select/Elements/attr(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/lang/String/split(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/select/Elements/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Element/text()
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/lang/String/substring(int)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/lang/Integer/doubleValue()
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Element/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Node/attr(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Element/children()
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/Jsoup/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#com/ml/model/Movie/Movie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.util.List)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/parseMovie(java.lang.String,com.ml.db.IBaseDB)#java/lang/String/contains(java.lang.CharSequence)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/codehaus/jackson/map/ObjectMapper/ObjectMapper()
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/select/Elements/attr(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#java/lang/String/split(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/select/Elements/first()
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/select/Elements/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Element/select(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#com/ml/model/DoubanUser/DoubanUser(java.lang.String,java.lang.Integer,java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/nodes/Element/children()
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/jsoup/Jsoup/parse(java.lang.String)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataCrawler/parseUser(java.lang.String,com.ml.db.IBaseDB)#org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)
com/ml/bus/service/UserDataCrawler/crawlRatingList(com.ml.db.IBaseDB,java.lang.String)#com/ml/bus/service/UserDataCrawler/getSimplePage(java.lang.String)
com/ml/bus/service/UserDataCrawler/crawlRatingList(com.ml.db.IBaseDB,java.lang.String)#com/ml/bus/service/UserDataCrawler/parseUserRatedMovies(java.lang.String,com.ml.db.IBaseDB,java.lang.String)
com/ml/bus/service/UserDataCrawler/crawlRatingList(com.ml.db.IBaseDB,java.lang.String)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/movie/recommender/MongoDBDataModel/getItemIDs()#org/apache/mahout/cf/taste/model/DataModel/getItemIDs()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#java/util/regex/Matcher/matches()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#org/apache/mahout/cf/taste/common/NoSuchUserException/NoSuchUserException()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#com/google/common/base/Preconditions/checkNotNull(T)
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#java/lang/String/isEmpty()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#com/google/common/base/Preconditions/checkArgument(boolean)
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#java/util/List/get(int)
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#org/apache/mahout/cf/taste/common/NoSuchItemException/NoSuchItemException()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/isIDInModel(java.lang.String,boolean)
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/lang/Object/toString()
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/lang/Class/getName()
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/text/DateFormat/parse(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/util/Date/Date(long)
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/lang/Object/getClass()
com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)#java/lang/String/contains(java.lang.CharSequence)
com/ml/movie/recommender/MongoDBDataModel/getNumUsersWithPreferenceFor(long,long)#org/apache/mahout/cf/taste/model/DataModel/getNumUsersWithPreferenceFor(long,long)
com/ml/movie/recommender/MongoDBDataModel/hasPreferenceValues()#org/apache/mahout/cf/taste/model/DataModel/hasPreferenceValues()
com/ml/movie/recommender/MongoDBDataModel/getPreferenceTime(long,long)#org/apache/mahout/cf/taste/model/DataModel/getPreferenceTime(long,long)
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#java/util/Date/Date()
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#com/mongodb/DBCollection/insert(com.mongodb.DBObject[])
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#org/slf4j/Logger/info(java.lang.String,java.lang.Object[])
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#java/util/Date/getTime()
com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)#com/mongodb/BasicDBObject/BasicDBObject()
com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)#org/bson/types/ObjectId/toStringMongod()
com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)#java/lang/Object/toString()
com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)#java/lang/Class/getName()
com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)#java/lang/Object/getClass()
com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)#java/lang/String/contains(java.lang.CharSequence)
com/ml/movie/recommender/MongoDBDataModel/getPreferenceValue(long,long)#org/apache/mahout/cf/taste/model/DataModel/getPreferenceValue(long,long)
com/ml/movie/recommender/MongoDBDataModel/removePreference(long,long)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
com/ml/movie/recommender/MongoDBDataModel/getNumUsersWithPreferenceFor(long)#org/apache/mahout/cf/taste/model/DataModel/getNumUsersWithPreferenceFor(long)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/mongodb/DBCollection/remove(com.mongodb.DBObject)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/mongodb/WriteResult/toString()
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#java/util/Date/Date()
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/mongodb/BasicDBObject/BasicDBObject()
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#org/slf4j/Logger/info(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)#com/mongodb/DBCollection/update(com.mongodb.DBObject,com.mongodb.DBObject)
com/ml/movie/recommender/MongoDBDataModel/getUserIDs()#org/apache/mahout/cf/taste/model/DataModel/getUserIDs()
com/ml/movie/recommender/MongoDBDataModel/setPreference(long,long,float)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
com/ml/movie/recommender/MongoDBDataModel/getMinPreference()#org/apache/mahout/cf/taste/model/DataModel/getMinPreference()
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/setValue(int,float)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#com/ml/movie/recommender/MongoDBDataModel/addMongoUserItem(java.lang.String,java.lang.String,java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/common/FastByIDMap/put(long,V)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#java/lang/Long/toString(long)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/common/FastByIDMap/get(long)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericDataModel/getRawUserData()
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#java/lang/Float/toString(float)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/length()
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/set(int,org.apache.mahout.cf.taste.model.Preference)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray/GenericUserPreferenceArray(int)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/get(int)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#java/lang/Float/parseFloat(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericDataModel/GenericDataModel(org.apache.mahout.cf.taste.impl.common.FastByIDMap)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/setUserID(int,long)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/getItemID(int)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/setItemID(int,long)
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#org/slf4j/Logger/info(java.lang.String,java.lang.Object[])
com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)#java/util/List/get(int)
com/ml/movie/recommender/MongoDBDataModel/getPreferencesFromUser(long)#org/apache/mahout/cf/taste/model/DataModel/getPreferencesFromUser(long)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/common/FastByIDMap/put(long,V)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/util/Map/get(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/model/GenericDataModel/GenericDataModel(org.apache.mahout.cf.taste.impl.common.FastByIDMap)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/bson/BSONObject/toMap()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/common/FastByIDMap/FastByIDMap()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/lang/String/toCharArray()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/common/FastByIDMap/get(long)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DBCollection/find()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DB/getCollection(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/Mongo/getDB(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/Mongo/Mongo(java.lang.String,int)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/model/GenericDataModel/toDataMap(org.apache.mahout.cf.taste.impl.common.FastByIDMap,boolean)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/google/common/collect/Lists/newArrayListWithCapacity(int)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/util/Date/compareTo(java.util.Date)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#org/apache/mahout/cf/taste/impl/model/GenericPreference/GenericPreference(long,long,float)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DB/authenticate(java.lang.String,char[])
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/util/Map/containsKey(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/util/Date/Date(long)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DBCursor/addOption(int)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DBCursor/hasNext()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#java/util/Collection/add(E)
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/mongodb/DBCursor/next()
com/ml/movie/recommender/MongoDBDataModel/buildModel()#com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/getNumItems()#org/apache/mahout/cf/taste/model/DataModel/getNumItems()
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/addUserItem(long,java.lang.Iterable)
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#java/util/concurrent/locks/ReentrantLock/unlock()
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/checkData(java.lang.String,java.lang.Iterable,boolean)
com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)#java/util/concurrent/locks/ReentrantLock/tryLock()
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/common/FastByIDMap/put(long,V)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/getItemID(int)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#java/util/List/get(int)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/common/FastByIDMap/get(long)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericDataModel/getRawUserData()
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/length()
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericUserPreferenceArray/GenericUserPreferenceArray(int)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/get(int)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#java/lang/Long/toString(long)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#com/ml/movie/recommender/MongoDBDataModel/removeMongoUserItem(java.lang.String,java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/model/GenericDataModel/GenericDataModel(org.apache.mahout.cf.taste.impl.common.FastByIDMap)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/set(int,org.apache.mahout.cf.taste.model.Preference)
com/ml/movie/recommender/MongoDBDataModel/removeUserItem(long,java.lang.Iterable)#org/apache/mahout/cf/taste/impl/common/FastByIDMap/remove(long)
com/ml/movie/recommender/MongoDBDataModel/getNumUsers()#org/apache/mahout/cf/taste/model/DataModel/getNumUsers()
com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)#com/mongodb/DBCollection/findOne(com.mongodb.DBObject)
com/ml/movie/recommender/MongoDBDataModel/isUserItemInDB(java.lang.String,java.lang.String)#com/mongodb/BasicDBObject/BasicDBObject()
com/ml/movie/recommender/MongoDBDataModel/getItemIDsFromUser(long)#org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#org/slf4j/Logger/warn(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/ml/movie/recommender/MongoDBDataModel/getID(java.lang.Object,boolean)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#org/bson/BasicBSONObject/put(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/Date/compareTo(java.util.Date)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#org/bson/BSONObject/toMap()
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/ml/movie/recommender/MongoDBDataModel/getDate(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/lang/Float/toString(float)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/google/common/collect/Lists/newArrayList()
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/Map/get(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/Map/containsKey(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/Date/Date(long)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/mongodb/DBCollection/find(com.mongodb.DBObject)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/mongodb/DBCursor/hasNext()
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/List/add(E)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#java/util/Collection/add(E)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/mongodb/DBCursor/next()
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/refresh(java.util.Collection)#com/mongodb/BasicDBObject/BasicDBObject()
com/ml/movie/recommender/MongoDBDataModel/getMaxPreference()#org/apache/mahout/cf/taste/model/DataModel/getMaxPreference()
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Object/toString()
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Float/parseFloat(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Class/getName()
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Double/valueOf(java.lang.String)
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Double/floatValue()
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/Object/getClass()
com/ml/movie/recommender/MongoDBDataModel/getPreference(java.lang.Object)#java/lang/String/contains(java.lang.CharSequence)
com/ml/movie/recommender/MongoDBDataModel/isIDInModel(java.lang.String,boolean)#com/mongodb/DBCollection/findOne(com.mongodb.DBObject)
com/ml/movie/recommender/MongoDBDataModel/isIDInModel(java.lang.String,boolean)#com/mongodb/BasicDBObject/BasicDBObject(java.lang.String,java.lang.Object)
com/ml/movie/recommender/MongoDBDataModel/getPreferencesForItem(long)#org/apache/mahout/cf/taste/model/DataModel/getPreferencesForItem(long)
com/ml/bus/controller/RecommendController/getRecommendedUsers(java.lang.String)#com/ml/bus/service/MemoryService/getRecommendbuilder()
com/ml/bus/controller/RecommendController/getRecommendedUsers(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/ArrayList/ArrayList()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/MemoryService/getRecommendItemsInStore()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#javax/servlet/ServletRequest/getParameter(java.lang.String)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/size()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/lang/String/equals(java.lang.Object)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/RecommendService/findByPageAndId(com.ml.util.Pagination,java.lang.String)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/Pagination(javax.servlet.http.HttpServletRequest)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/add(E)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/lang/String/valueOf(long)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/RecommendItems/getUserSimilarity()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/MovieService/findById(java.lang.String)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalPage()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/ArrayList/ArrayList(int)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/controller/RecommendController/getRecommendedItems(java/lang/String,javax/servlet/http/HttpServletRequest)/$anonymous1/()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/RecommendItems/getCommons()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/addAll(java.util.Collection)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getItems()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/HashMap/HashMap()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/RecommendItems/getRecoomendItems()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalCount()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getCurrentPage()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/RecommendItems/getSimilarUserID()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/get(int)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/contains(java.lang.Object)
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/Movie/getGenres()
com/ml/bus/controller/RecommendController/getRecommendedItems(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/Map/put(K,V)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/count(java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/skip(int)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalPage(int)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortOrder()
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/limit(int)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setItems(java.util.List)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortField()
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getLimitSize()
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getStartIndex()
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalCount(int)
com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
com/ml/bus/dao/UserDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/UserDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/UserDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/UserDAO/findByName(java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/UserDAO/findAll()#com/ml/db/IBaseDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/db/IBaseDB/count(java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/limit(int)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#java/lang/String/equals(java.lang.Object)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/skip(int)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setTotalPage(int)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getSortOrder()
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setItems(java.util.List)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getSortField()
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getLimitSize()
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getStartIndex()
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setTotalCount(int)
com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
com/ml/bus/dao/UserDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/UserDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/UserDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/UserDAO/findById(java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/UserDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/movie/recommender/MovieRecommenderMain/main(java.lang.String[])#com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)
com/ml/movie/recommender/MovieRecommenderMain/main(java.lang.String[])#org/apache/mahout/cf/taste/recommender/Recommender/recommend(long,int)
com/ml/movie/recommender/MovieRecommenderMain/main(java.lang.String[])#com/ml/movie/recommender/MovieUserBasedRecommender/MovieUserBasedRecommender()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/print(java.lang.String)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/println(java.lang.String)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/print(int)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/println()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/println(long)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/print(char)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/recommender/Recommender/getDataModel()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/Preference/getItemID()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/println(java.lang.Object)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/sortByValueReversed()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/io/PrintStream/print(float)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/recommender/RecommendedItem/getValue()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/get(int)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/recommender/RecommendedItem/getItemID()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/DataModel/getPreferencesFromUser(long)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/clone()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#java/lang/Math/min(int,int)
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/Preference/getValue()
com/ml/movie/recommender/MovieRecommenderMain/writeDebugRecommendations(long,java.lang.Iterable)#org/apache/mahout/cf/taste/model/PreferenceArray/length()
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#com/google/common/io/Closeables/close(java.io.Closeable,boolean)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#org/apache/mahout/common/iterator/FileLineIterable/FileLineIterable(java.io.File,boolean)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/File/exists()
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/File/File(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/lang/String/substring(int,int)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/IOException/IOException(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/lang/System/getProperty(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/Writer/write(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/lang/String/lastIndexOf(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/Writer/write(int)
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/File/delete()
com/ml/movie/recommender/MovieFileDataModel/convertGLFile(java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#com/google/common/io/Resources/getResource(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#java/io/File/File(java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#com/google/common/io/Files/copy(com.google.common.io.InputSupplier,java.io.File)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#com/google/common/io/Resources/newInputStreamSupplier(java.net.URL)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#com/google/common/io/Files/newInputStreamSupplier(java.io.File)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#java/io/File/createTempFile(java.lang.String,java.lang.String)
com/ml/movie/recommender/MovieFileDataModel/readResourceToTempFile(java.lang.String)#java/io/File/deleteOnExit()
com/ml/util/Test/main(java.lang.String[])#org/apache/commons/io/FileUtils/readLines(java.io.File)
com/ml/util/Test/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/ml/util/Test/main(java.lang.String[])#java/io/File/File(java.lang.String)
com/ml/util/Test/main(java.lang.String[])#java/lang/String/startsWith(java.lang.String)
com/ml/util/Test/main(java.lang.String[])#java/util/Map/put(K,V)
com/ml/util/Test/main(java.lang.String[])#java/lang/String/contains(java.lang.CharSequence)
com/ml/util/Test/main(java.lang.String[])#java/lang/String/endsWith(java.lang.String)
com/ml/util/Test/main(java.lang.String[])#java/util/TreeMap/TreeMap()
com/ml/util/Test/main(java.lang.String[])#java/util/Map/keySet()
com/ml/bus/service/UserService/findByName(java.lang.String)#com/ml/bus/dao/UserDAO/findByName(java.lang.String)
com/ml/bus/service/UserService/findByPage(com.ml.util.Pagination)#com/ml/bus/dao/UserDAO/findByPage(com.ml.util.Pagination)
com/ml/bus/service/UserService/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/bus/dao/UserDAO/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)
com/ml/bus/service/UserService/findById(java.lang.String)#com/ml/bus/dao/UserDAO/findById(java.lang.String)
com/ml/bus/service/UserService/findAll()#com/ml/bus/dao/UserDAO/findAll()
com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/regex(java.lang.String)
com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/MoviesDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/MoviesDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/MoviesDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/MoviesDAO/findById(java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/MoviesDAO/findAll()#com/ml/db/IBaseDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/count(java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/limit(int)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/skip(int)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/in(java.lang.Object[])
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalPage(int)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortOrder()
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setItems(java.util.List)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortField()
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getLimitSize()
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getStartIndex()
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalCount(int)
com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/db/IBaseDB/count(java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/limit(int)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#java/lang/String/equals(java.lang.Object)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/skip(int)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setTotalPage(int)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getSortOrder()
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setItems(java.util.List)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getSortField()
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getLimitSize()
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/getStartIndex()
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#com/ml/util/Pagination/setTotalCount(int)
com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommender/mostSimilarItems(long[],int,org.apache.mahout.cf.taste.recommender.Rescorer)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/impl/common/FastIDSet/toArray()
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/getDataModel()
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/model/DataModel/getItemIDsFromUser(long)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/removePreference(long,long)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/removePreference(long,long)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/refresh(java.util.Collection)#org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommender/refresh(java.util.Collection)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int)#com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/estimatePreference(long,long)#org/apache/mahout/cf/taste/impl/recommender/GenericItemBasedRecommender/estimatePreference(long,long)
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/getDataModel()#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/getDataModel()
com/ml/movie/recommender/MovieItemBasedRecommender/EmbededItemBasedRecommender/setPreference(long,long,float)#org/apache/mahout/cf/taste/impl/recommender/AbstractRecommender/setPreference(long,long,float)
com/ml/db/MongoDB/count(java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/count(org.springframework.data.mongodb.core.query.Query,java.lang.String)
com/ml/db/MongoDB/insert(java.util.Collection,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/insert(java.util.Collection,java.lang.String)
com/ml/db/MongoDB/delete(java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/remove(java.lang.Object,java.lang.String)
com/ml/db/MongoDB/findOne(java.lang.Object,java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/findOne(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
com/ml/db/MongoDB/update(java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/save(java.lang.Object,java.lang.String)
com/ml/db/MongoDB/find(java.lang.Object,java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class,java.lang.String)
com/ml/db/MongoDB/find(java.lang.Object,java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/find(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
com/ml/db/MongoDB/findOne(java.lang.Object,java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/findOne(org.springframework.data.mongodb.core.query.Query,java.lang.Class)
com/ml/db/MongoDB/findAll(java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/findAll(java.lang.Class)
com/ml/db/MongoDB/save(java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/save(java.lang.Object,java.lang.String)
com/ml/db/MongoDB/save(java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/save(java.lang.Object)
com/ml/db/MongoDB/findAll(java.lang.Object,java.lang.String)#org/springframework/data/mongodb/core/MongoTemplate/findAll(java.lang.Class,java.lang.String)
com/ml/db/MongoDB/update(java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/save(java.lang.Object)
com/ml/db/MongoDB/delete(java.lang.Object)#org/springframework/data/mongodb/core/MongoTemplate/remove(java.lang.Object)
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#com/ml/model/DoubanUser/getUserID()
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#com/ml/model/Movie/getImdbID()
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#java/util/List/size()
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#java/util/HashMap/HashMap(int)
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#com/ml/model/DoubanUser/getId()
com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)#java/util/Map/put(K,V)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#com/ml/model/Movie/getId()
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/lang/String/valueOf(java.lang.Object)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/io/PrintStream/println(int)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/util/List/size()
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/util/HashMap/HashMap(int)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#com/ml/db/MongoDB/delete(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/util/Map/put(K,V)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/UserDataTranslater/processDup(com.ml.db.MongoDB,java.util.List,java.util.List)#com/ml/model/UserRattedMovies/getMovieID()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/ArrayList/ArrayList(int)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/Movie/getId()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getImdbID()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/List/size()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getUserID()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getDoubanUrl()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/List/add(E)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/Map/put(K,V)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getGenres()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getDoubanTitle()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getTimestamp()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/ArrayList/ArrayList()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/lang/Long/parseLong(java.lang.String)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/db/MongoDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/Movie/Movie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.util.List)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getPicUrl()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getDoubanRate()
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/UserRattedMovies/UserRattedMovies(java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Long)
com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)#com/ml/model/DoubanRatings/getUserRate()
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#com/ml/bus/service/UserDataTranslater/UserDataTranslater()
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#com/ml/db/MongoDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#java/util/Properties/Properties()
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#com/ml/db/MongoDB/MongoDB(java.util.Properties)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#com/ml/bus/service/UserDataTranslater/translate(com.ml.db.MongoDB,java.util.List)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#java/util/Properties/load(java.io.InputStream)
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#java/lang/Throwable/toString()
com/ml/bus/service/UserDataTranslater/main(java.lang.String[])#com/ml/bus/service/UserDataTranslater/preprocess(java.util.List,java.util.List)
com/ml/bus/service/RecommendService/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#org/apache/mahout/cf/taste/impl/common/FastIDSet/add(long)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/bus/service/MemoryService/getRecommendItemsInStore()
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/bus/service/MemoryService/getRecommendbuilder()
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/util/List/size()
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/util/List/get(int)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/bus/dao/RecommendDAO/save(com.ml.model.RecommendItems)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/lang/String/valueOf(long)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/lang/Throwable/printStackTrace()
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/model/RecommendItems/RecommendItems(java.lang.String,java.lang.String,java.lang.String,long[],long[])
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/mostSimilarUserIDs(java.lang.String)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/getUserSimilarity(long,long)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#org/apache/mahout/cf/taste/impl/common/FastIDSet/FastIDSet(int)
com/ml/bus/service/RecommendService/recommendAndSave(java.lang.String)#java/util/List/add(E)
com/ml/bus/dao/RecommendDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/RecommendDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/RecommendDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/RecommendDAO/findById(java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/RecommendDAO/findById(java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/count(java.lang.Object,java.lang.String)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/where(java.lang.String)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Order/Order(org.springframework.data.domain.Sort.Direction,java.lang.String)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/db/IBaseDB/find(java.lang.Object,java.lang.Object,java.lang.String)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/skip(int)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/addCriteria(org.springframework.data.mongodb.core.query.Criteria)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalPage(int)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortOrder()
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/limit(int)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Criteria/is(java.lang.Object)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setItems(java.util.List)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/Query()
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getSortField()
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getLimitSize()
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/getStartIndex()
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/domain/Sort/Sort(org.springframework.data.domain.Sort.Order[])
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#com/ml/util/Pagination/setTotalCount(int)
com/ml/bus/dao/RecommendDAO/findByPageAndId(com.ml.util.Pagination,java.lang.String)#org/springframework/data/mongodb/core/query/Query/with(org.springframework.data.domain.Sort)
com/ml/bus/dao/RecommendDAO/findAll()#com/ml/db/IBaseDB/findAll(java.lang.Object,java.lang.String)
com/ml/bus/dao/RecommendDAO/save(com.ml.model.RecommendItems)#com/ml/db/IBaseDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/MemoryService/initRecommendBuilder()#com/ml/movie/recommender/MovieRecommenderInitiator/initialized()
com/ml/bus/service/MemoryService/initRecommendBuilder()#com/ml/movie/recommender/MovieRecommenderInitiator/getRecommendBuilder()
com/ml/bus/service/MemoryService/initRecommendBuilder()#com/ml/bus/service/MemoryService/setRecommendbuilder(com.ml.movie.recommender.GeneralRecommendBuilder)
com/ml/bus/service/MemoryService/initRecommendBuilder()#com/ml/movie/recommender/MovieRecommenderInitiator/MovieRecommenderInitiator()
com/ml/bus/service/MemoryService/initMovieGenres()#java/util/ArrayList/ArrayList()
com/ml/bus/service/MemoryService/initMovieGenres()#java/util/List/add(E)
com/ml/bus/service/MemoryService/init()#java/util/ArrayList/ArrayList()
com/ml/bus/service/MemoryService/init()#com/ml/bus/service/MemoryService/initMovieGenres()
com/ml/bus/service/MemoryService/init()#com/ml/bus/service/MemoryService/initRecommendBuilder()
com/ml/bus/controller/UserController/getUserId(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/ml/bus/controller/UserController/getUserId(java.lang.String)#java/util/HashMap/HashMap(int)
com/ml/bus/controller/UserController/getUserId(java.lang.String)#java/util/Map/put(K,V)
com/ml/bus/controller/UserController/getUserId(java.lang.String)#com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/UserRattedMovies/getRating()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/UserService/findRatedByPageAndId(com.ml.util.Pagination,java.lang.String)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/size()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalCount()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/Pagination(javax.servlet.http.HttpServletRequest)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/add(E)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/Map/put(K,V)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/UserRattedMovies/getMovieID()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/bus/service/MovieService/findById(java.lang.String)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalPage()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/ArrayList/ArrayList(int)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/lang/String/valueOf(java.lang.Object)
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/model/UserRattedMovies/getTimestamp()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getItems()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/HashMap/HashMap()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getCurrentPage()
com/ml/bus/controller/UserController/getUserRatedMovies(java.lang.String,javax.servlet.http.HttpServletRequest)#java/util/List/get(int)
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalPage()
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/bus/service/UserService/findByPage(com.ml.util.Pagination)
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getTotalCount()
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/Pagination(javax.servlet.http.HttpServletRequest)
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getCurrentPage()
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#java/util/Map/put(K,V)
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#com/ml/util/Pagination/getItems()
com/ml/bus/controller/UserController/getUser(javax.servlet.http.HttpServletRequest)#java/util/HashMap/HashMap()
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#com/ml/model/UserTaggedMovies/UserTaggedMovies(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#java/io/File/File(java.lang.String)
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#java/lang/Long/parseLong(java.lang.String)
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#java/lang/String/split(java.lang.String)
com/ml/bus/service/DataImporter/userTaggedMoviesImport(com.ml.db.MongoDB)#com/ml/db/MongoDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#java/lang/Double/parseDouble(java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#java/io/File/File(java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#com/ml/model/UserRattedMovies/UserRattedMovies(java.lang.Long,java.lang.Long,java.lang.Double,java.lang.Long)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#java/lang/Long/parseLong(java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#java/lang/String/split(java.lang.String)
com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)#com/ml/db/MongoDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/DataImporter/processGenres()#java/util/ArrayList/ArrayList()
com/ml/bus/service/DataImporter/processGenres()#java/lang/String/split(java.lang.String)
com/ml/bus/service/DataImporter/processGenres()#java/util/Map/get(java.lang.Object)
com/ml/bus/service/DataImporter/processGenres()#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
com/ml/bus/service/DataImporter/processGenres()#java/io/File/File(java.lang.String)
com/ml/bus/service/DataImporter/processGenres()#java/util/List/add(E)
com/ml/bus/service/DataImporter/processGenres()#java/util/Map/put(K,V)
com/ml/bus/service/DataImporter/processGenres()#java/io/PrintStream/println(java.lang.Object)
com/ml/bus/service/DataImporter/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/ml/bus/service/DataImporter/main(java.lang.String[])#java/lang/Throwable/toString()
com/ml/bus/service/DataImporter/main(java.lang.String[])#com/ml/bus/service/DataImporter/userRatedMoviesImport(com.ml.db.MongoDB)
com/ml/bus/service/DataImporter/main(java.lang.String[])#java/io/FileInputStream/FileInputStream(java.lang.String)
com/ml/bus/service/DataImporter/main(java.lang.String[])#java/util/Properties/Properties()
com/ml/bus/service/DataImporter/main(java.lang.String[])#com/ml/db/MongoDB/MongoDB(java.util.Properties)
com/ml/bus/service/DataImporter/main(java.lang.String[])#java/util/Properties/load(java.io.InputStream)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#org/apache/commons/io/FileUtils/readLines(java.io.File,java.lang.String)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#java/lang/Double/parseDouble(java.lang.String)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#java/io/File/File(java.lang.String)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#com/ml/bus/service/DataImporter/processGenres()
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#java/lang/String/contains(java.lang.CharSequence)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#java/lang/String/split(java.lang.String)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#com/ml/db/MongoDB/save(java.lang.Object,java.lang.String)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#com/ml/model/Movie/Movie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.util.List)
com/ml/bus/service/DataImporter/movieImport(com.ml.db.MongoDB)#java/util/Map/get(java.lang.Object)
com/ml/bus/service/MovieService/findAll()#com/ml/bus/dao/MoviesDAO/findAll()
com/ml/bus/service/MovieService/findByName(java.lang.String)#com/ml/bus/dao/MoviesDAO/findByName(java.lang.String)
com/ml/bus/service/MovieService/findById(java.lang.String)#com/ml/bus/dao/MoviesDAO/findById(java.lang.String)
com/ml/bus/service/MovieService/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)#com/ml/bus/dao/MoviesDAO/findByPageAndGenres(com.ml.util.Pagination,java.lang.String)
com/ml/bus/service/MovieService/findByPage(com.ml.util.Pagination)#com/ml/bus/dao/MoviesDAO/findByPage(com.ml.util.Pagination)
com/ml/movie/recommender/MovieItemBasedRecommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)#org/apache/mahout/cf/taste/recommender/Recommender/recommend(long,int,org.apache.mahout.cf.taste.recommender.IDRescorer)
com/ml/movie/recommender/MovieItemBasedRecommender/setPreference(long,long,float)#org/apache/mahout/cf/taste/recommender/Recommender/setPreference(long,long,float)
com/ml/movie/recommender/MovieItemBasedRecommender/estimatePreference(long,long)#org/apache/mahout/cf/taste/recommender/Recommender/estimatePreference(long,long)
com/ml/movie/recommender/MovieItemBasedRecommender/getDataModel()#org/apache/mahout/cf/taste/recommender/Recommender/getDataModel()
com/ml/movie/recommender/MovieItemBasedRecommender/removePreference(long,long)#org/apache/mahout/cf/taste/recommender/Recommender/removePreference(long,long)
com/ml/movie/recommender/MovieItemBasedRecommender/recommend(long,int)#org/apache/mahout/cf/taste/recommender/Recommender/recommend(long,int)
com/ml/movie/recommender/MovieItemBasedRecommender/refresh(java.util.Collection)#org/apache/mahout/cf/taste/common/Refreshable/refresh(java.util.Collection)
com/ml/util/CrawlUtil/handleResponse(java.lang.String,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
com/ml/util/CrawlUtil/handleResponse(java.lang.String,java.io.InputStream)#org/apache/commons/io/IOUtils/toString(java.io.InputStream,java.lang.String)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/HttpURLConnection/disconnect()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/lang/Thread/sleep(long)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#com/ml/util/CrawlUtil/handleResponse(java.lang.String,java.io.InputStream)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/util/Map/keySet()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/URLConnection/getInputStream()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/io/InputStream/close()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/lang/Throwable/printStackTrace()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/URL/openConnection()
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
com/ml/util/CrawlUtil/crawl(java.lang.String,java.util.Map)#java/net/URL/URL(java.lang.String)
com/ml/movie/recommender/GeneralRecommendBuilder/refreshData(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#java/util/ArrayList/ArrayList()
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#org/apache/mahout/cf/taste/recommender/RecommendedItem/getValue()
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#java/util/List/add(E)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#java/lang/String/valueOf(long)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#java/lang/Float/toString(float)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#org/apache/mahout/cf/taste/recommender/RecommendedItem/getItemID()
com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)#com/ml/movie/recommender/MovieUserBasedRecommender/recommend(long,int)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/GeneralRecommendBuilder/recommendItems(long)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/refreshData(java.lang.String,java.lang.Iterable,boolean)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#java/util/List/get(int)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#org/apache/mahout/cf/taste/impl/common/FastIDSet/contains(long)
com/ml/movie/recommender/GeneralRecommendBuilder/recommend(java.lang.String,java.lang.Iterable,boolean)#com/ml/movie/recommender/MongoDBDataModel/getItemIDsFromUser(long)
com/ml/movie/recommender/GeneralRecommendBuilder/start(com.ml.movie.recommender.MongoDBDataModel,double,int,int,java.lang.String,java.lang.String)#com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/start(com.ml.movie.recommender.MongoDBDataModel)#com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/mostSimilarUserIDs(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/ml/movie/recommender/GeneralRecommendBuilder/mostSimilarUserIDs(java.lang.String)#org/apache/mahout/cf/taste/neighborhood/UserNeighborhood/getUserNeighborhood(long)
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/remove(long)
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/iterator()
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#java/util/Iterator/next()
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/size()
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#com/ml/movie/recommender/MongoDBDataModel/getItemIDsFromUser(long)
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/retainAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)
com/ml/movie/recommender/GeneralRecommendBuilder/getRecommendItems(org.apache.mahout.cf.taste.impl.common.FastIDSet,long)#java/util/Iterator/hasNext()
com/ml/movie/recommender/GeneralRecommendBuilder/getUserSimilarity(long,long)#org/apache/mahout/cf/taste/similarity/UserSimilarity/userSimilarity(long,long)
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/iterator()
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#java/util/Iterator/next()
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/size()
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#com/ml/movie/recommender/MongoDBDataModel/getItemIDsFromUser(long)
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#org/apache/mahout/cf/taste/impl/common/FastIDSet/retainAll(org.apache.mahout.cf.taste.impl.common.FastIDSet)
com/ml/movie/recommender/GeneralRecommendBuilder/getCommonItems(long,long)#java/util/Iterator/hasNext()
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/similarity/TanimotoCoefficientSimilarity/TanimotoCoefficientSimilarity(org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/similarity/SpearmanCorrelationSimilarity/SpearmanCorrelationSimilarity(org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/similarity/EuclideanDistanceSimilarity/EuclideanDistanceSimilarity(org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/similarity/LogLikelihoodSimilarity/LogLikelihoodSimilarity(org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/neighborhood/NearestNUserNeighborhood/NearestNUserNeighborhood(int,org.apache.mahout.cf.taste.similarity.UserSimilarity,org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/neighborhood/ThresholdUserNeighborhood/ThresholdUserNeighborhood(double,org.apache.mahout.cf.taste.similarity.UserSimilarity,org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#java/lang/String/equals(java.lang.Object)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#com/ml/movie/recommender/MovieUserBasedRecommender/MovieUserBasedRecommender(org.apache.mahout.cf.taste.model.DataModel,org.apache.mahout.cf.taste.neighborhood.UserNeighborhood,org.apache.mahout.cf.taste.similarity.UserSimilarity)
com/ml/movie/recommender/GeneralRecommendBuilder/build(com.ml.movie.recommender.MongoDBDataModel)#org/apache/mahout/cf/taste/impl/similarity/PearsonCorrelationSimilarity/PearsonCorrelationSimilarity(org.apache.mahout.cf.taste.model.DataModel)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)#java/util/ArrayList/ArrayList()
com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)#com/ml/movie/recommender/MovieUserBasedRecommender/mostSimilarUserIDs(long,int)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)#org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)#java/util/List/add(E)
com/ml/movie/recommender/GeneralRecommendBuilder/recommendUsers(long)#java/lang/String/valueOf(long)
