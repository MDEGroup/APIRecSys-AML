com/mytest/myproject/service/task/TaskService/getUserTask(java.lang.Long,java.util.Map,int,int,java.lang.String)#com/mytest/myproject/service/task/TaskService/buildPageRequest(int,int,java.lang.String)
com/mytest/myproject/service/task/TaskService/getUserTask(java.lang.Long,java.util.Map,int,int,java.lang.String)#com/mytest/myproject/service/task/TaskService/buildSpecification(java.lang.Long,java.util.Map)
com/mytest/myproject/service/task/TaskService/buildPageRequest(int,int,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/mytest/myproject/service/task/TaskService/buildPageRequest(int,int,java.lang.String)#java/lang/Object/Object()
com/mytest/myproject/service/task/TaskService/buildSpecification(java.lang.Long,java.util.Map)#java/lang/Object/Object()
com/mytest/myproject/functional/gui/SecurityFT/userTryToManageUsers()#com/mytest/myproject/functional/BaseSeleniumTestCase/loginAsUserIfNecessary()
com/mytest/myproject/data/TaskData/randomTask()#com/mytest/myproject/entity/Task/Task()
com/mytest/myproject/data/TaskData/randomTask()#com/mytest/myproject/data/TaskData/randomTitle()
com/mytest/myproject/data/TaskData/randomTask()#com/mytest/myproject/entity/Task/setTitle(java.lang.String)
com/mytest/myproject/data/TaskData/randomTask()#com/mytest/myproject/entity/Task/setUser(com.mytest.myproject.entity.User)
com/mytest/myproject/data/TaskData/randomTask()#com/mytest/myproject/entity/User/User(java.lang.Long)
com/mytest/myproject/data/UserData/randomNewUser()#com/mytest/myproject/entity/User/setName(java.lang.String)
com/mytest/myproject/data/UserData/randomNewUser()#com/mytest/myproject/entity/User/setLoginName(java.lang.String)
com/mytest/myproject/data/UserData/randomNewUser()#com/mytest/myproject/entity/User/User()
com/mytest/myproject/data/UserData/randomNewUser()#com/mytest/myproject/entity/User/setPlainPassword(java.lang.String)
com/mytest/myproject/functional/BaseSeleniumTestCase/init()#com/mytest/myproject/functional/BaseSeleniumTestCase/createSeleniumOnce()
com/mytest/myproject/functional/BaseSeleniumTestCase/init()#com/mytest/myproject/functional/BaseSeleniumTestCase/loginAsUserIfNecessary()
com/mytest/myproject/functional/BaseSeleniumTestCase/createSeleniumOnce()#java/lang/Object/Object()
com/mytest/myproject/functional/BaseSeleniumTestCase/loginAsUserIfNecessary()#java/lang/String/equals(java.lang.Object)
com/mytest/myproject/functional/QuickStartServer/main(java.lang.String[])#java/lang/Throwable/printStackTrace()
com/mytest/myproject/functional/QuickStartServer/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mytest/myproject/functional/QuickStartServer/main(java.lang.String[])#java/lang/System/setProperty(java.lang.String,java.lang.String)
com/mytest/myproject/functional/QuickStartServer/main(java.lang.String[])#java/lang/System/exit(int)
com/mytest/myproject/functional/QuickStartServer/main(java.lang.String[])#java/io/InputStream/read()
com/mytest/myproject/repository/TaskDaoTest/findTasksByUserId()#java/lang/Long/Long(long)
com/mytest/myproject/repository/TaskDaoTest/findTasksByUserId()#com/mytest/myproject/repository/TaskDao/findByUserId(java.lang.Long,com.mytest.myproject.repository.Pageable)
com/mytest/myproject/repository/TaskDaoTest/findTasksByUserId()#java/lang/Object/Object()
com/mytest/myproject/web/account/ProfileController/updateForm(com.mytest.myproject.web.account.Model)#com/mytest/myproject/service/account/AccountService/getUser(java.lang.Long)
com/mytest/myproject/web/account/ProfileController/updateForm(com.mytest.myproject.web.account.Model)#com/mytest/myproject/web/account/ProfileController/getCurrentUserId()
com/mytest/myproject/web/account/ProfileController/update(com.mytest.myproject.entity.User)#com/mytest/myproject/service/account/AccountService/updateUser(com.mytest.myproject.entity.User)
com/mytest/myproject/web/account/ProfileController/update(com.mytest.myproject.entity.User)#com/mytest/myproject/web/account/ProfileController/updateCurrentUserName(java.lang.String)
com/mytest/myproject/web/account/ProfileController/update(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/getName()
com/mytest/myproject/web/account/ProfileController/getUser(java.lang.Long)#com/mytest/myproject/service/account/AccountService/getUser(java.lang.Long)
com/mytest/myproject/web/account/RegisterController/register(com.mytest.myproject.entity.User,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/entity/User/getLoginName()
com/mytest/myproject/web/account/RegisterController/register(com.mytest.myproject.entity.User,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/account/AccountService/registerUser(com.mytest.myproject.entity.User)
com/mytest/myproject/web/account/RegisterController/checkLoginName(java.lang.String)#com/mytest/myproject/service/account/AccountService/findUserByLoginName(java.lang.String)
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/entity/IdEntity/getId()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/entity/User/getSalt()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/service/account/AccountService/findUserByLoginName(java.lang.String)
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/entity/User/getLoginName()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/service/account/ShiroDbRealm/ShiroUser/ShiroUser(java.lang.Long,java.lang.String,java.lang.String)
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/entity/User/getPassword()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#java/lang/Object/Object()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthenticationInfo(com.mytest.myproject.service.account.AuthenticationToken)#com/mytest/myproject/entity/User/getName()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthorizationInfo(com.mytest.myproject.service.account.PrincipalCollection)#com/mytest/myproject/entity/User/getRoleList()
com/mytest/myproject/service/account/ShiroDbRealm/doGetAuthorizationInfo(com.mytest.myproject.service.account.PrincipalCollection)#com/mytest/myproject/service/account/AccountService/findUserByLoginName(java.lang.String)
com/mytest/myproject/service/account/AccountService/findUserByLoginName(java.lang.String)#com/mytest/myproject/repository/UserDao/findByLoginName(java.lang.String)
com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/getPlainPassword()
com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/setSalt(java.lang.String)
com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/setPassword(java.lang.String)
com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)#java/lang/String/getBytes()
com/mytest/myproject/service/account/AccountService/registerUser(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/setRegisterDate(java.util.Date)
com/mytest/myproject/service/account/AccountService/registerUser(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/setRoles(java.lang.String)
com/mytest/myproject/service/account/AccountService/registerUser(com.mytest.myproject.entity.User)#com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)
com/mytest/myproject/service/account/AccountService/updateUser(com.mytest.myproject.entity.User)#com/mytest/myproject/entity/User/getPlainPassword()
com/mytest/myproject/service/account/AccountService/updateUser(com.mytest.myproject.entity.User)#com/mytest/myproject/service/account/AccountService/entryptPassword(com.mytest.myproject.entity.User)
com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)#com/mytest/myproject/service/account/AccountService/isSupervisor(java.lang.Long)
com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)#com/mytest/myproject/service/ServiceException/ServiceException(java.lang.String)
com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)#com/mytest/myproject/repository/TaskDao/deleteByUserId(java.lang.Long)
com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)#com/mytest/myproject/service/account/AccountService/getCurrentUserName()
com/mytest/myproject/functional/gui/TaskGuiFT/createAndUpdateTask()#com/mytest/myproject/entity/Task/getTitle()
com/mytest/myproject/functional/gui/TaskGuiFT/createAndUpdateTask()#com/mytest/myproject/data/TaskData/randomTask()
com/mytest/myproject/functional/gui/TaskGuiFT/createAndUpdateTask()#com/mytest/myproject/data/TaskData/randomTitle()
com/mytest/myproject/rest/TaskRestController/get(java.lang.Long)#com/mytest/myproject/service/task/TaskService/getTask(java.lang.Long)
com/mytest/myproject/rest/TaskRestController/get(java.lang.Long)#java/lang/Object/Object()
com/mytest/myproject/rest/TaskRestController/update(com.mytest.myproject.entity.Task)#com/mytest/myproject/service/task/TaskService/saveTask(com.mytest.myproject.entity.Task)
com/mytest/myproject/rest/TaskRestController/update(com.mytest.myproject.entity.Task)#java/lang/Object/Object()
com/mytest/myproject/rest/TaskRestController/list()#com/mytest/myproject/service/task/TaskService/getAllTask()
com/mytest/myproject/rest/TaskRestController/delete(java.lang.Long)#com/mytest/myproject/service/task/TaskService/deleteTask(java.lang.Long)
com/mytest/myproject/rest/TaskRestController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.rest.UriComponentsBuilder)#com/mytest/myproject/entity/IdEntity/getId()
com/mytest/myproject/rest/TaskRestController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.rest.UriComponentsBuilder)#com/mytest/myproject/service/task/TaskService/saveTask(com.mytest.myproject.entity.Task)
com/mytest/myproject/rest/TaskRestController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.rest.UriComponentsBuilder)#java/lang/Object/Object()
com/mytest/myproject/web/task/TaskController/getTask(java.lang.Long)#com/mytest/myproject/service/task/TaskService/getTask(java.lang.Long)
com/mytest/myproject/web/task/TaskController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/web/task/TaskController/getCurrentUserId()
com/mytest/myproject/web/task/TaskController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/entity/Task/setUser(com.mytest.myproject.entity.User)
com/mytest/myproject/web/task/TaskController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/task/TaskService/saveTask(com.mytest.myproject.entity.Task)
com/mytest/myproject/web/task/TaskController/create(com.mytest.myproject.entity.Task,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/entity/User/User(java.lang.Long)
com/mytest/myproject/web/task/TaskController/list(java.lang.String,int,com.mytest.myproject.web.account.Model,com.mytest.myproject.web.task.ServletRequest)#com/mytest/myproject/service/task/TaskService/getUserTask(java.lang.Long,java.util.Map,int,int,java.lang.String)
com/mytest/myproject/web/task/TaskController/list(java.lang.String,int,com.mytest.myproject.web.account.Model,com.mytest.myproject.web.task.ServletRequest)#com/mytest/myproject/web/task/TaskController/getCurrentUserId()
com/mytest/myproject/web/task/TaskController/updateForm(java.lang.Long,com.mytest.myproject.web.account.Model)#com/mytest/myproject/service/task/TaskService/getTask(java.lang.Long)
com/mytest/myproject/web/task/TaskController/delete(java.lang.Long,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/task/TaskService/deleteTask(java.lang.Long)
com/mytest/myproject/web/task/TaskController/createForm(com.mytest.myproject.web.account.Model)#com/mytest/myproject/entity/Task/Task()
com/mytest/myproject/web/task/TaskController/update(com.mytest.myproject.entity.Task,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/task/TaskService/saveTask(com.mytest.myproject.entity.Task)
com/mytest/myproject/service/account/AccountServiceTest/updateUser()#com/mytest/myproject/service/account/AccountService/updateUser(com.mytest.myproject.entity.User)
com/mytest/myproject/service/account/AccountServiceTest/updateUser()#com/mytest/myproject/data/UserData/randomNewUser()
com/mytest/myproject/service/account/AccountServiceTest/updateUser()#com/mytest/myproject/entity/User/getSalt()
com/mytest/myproject/service/account/AccountServiceTest/updateUser()#com/mytest/myproject/entity/User/setPlainPassword(java.lang.String)
com/mytest/myproject/service/account/AccountServiceTest/deleteUser()#com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)
com/mytest/myproject/service/account/AccountServiceTest/setUp()#com/mytest/myproject/service/account/ShiroDbRealm/ShiroUser/ShiroUser(java.lang.Long,java.lang.String,java.lang.String)
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/entity/User/getRoles()
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/entity/User/getRegisterDate()
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/data/UserData/randomNewUser()
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/entity/User/getSalt()
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/entity/User/getPassword()
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/service/account/AccountService/registerUser(com.mytest.myproject.entity.User)
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#com/mytest/myproject/service/account/AccountService/setDateProvider(com.mytest.myproject.service.account.DateProvider)
com/mytest/myproject/service/account/AccountServiceTest/registerUser()#java/util/Date/Date()
com/mytest/myproject/functional/BaseFunctionalTestCase/startJettyOnce()#java/net/URL/URL(java.lang.String)
com/mytest/myproject/functional/BaseFunctionalTestCase/startJettyOnce()#java/net/URL/getPort()
com/mytest/myproject/functional/BaseFunctionalTestCase/startJettyOnce()#java/lang/System/setProperty(java.lang.String,java.lang.String)
com/mytest/myproject/functional/BaseFunctionalTestCase/buildDataSourceOnce()#java/lang/Class/forName(java.lang.String)
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#com/mytest/myproject/functional/BaseFunctionalTestCase/startJettyOnce()
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#java/net/URL/URL(java.lang.String)
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#java/lang/String/equals(java.lang.Object)
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#java/net/URL/getHost()
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#com/mytest/myproject/functional/BaseFunctionalTestCase/reloadSampleData()
com/mytest/myproject/functional/BaseFunctionalTestCase/beforeClass()#com/mytest/myproject/functional/BaseFunctionalTestCase/buildDataSourceOnce()
com/mytest/myproject/functional/rest/TaskRestFT/invalidInput()#com/mytest/myproject/entity/Task/Task()
com/mytest/myproject/functional/rest/TaskRestFT/invalidInput()#java/util/Map/get(java.lang.Object)
com/mytest/myproject/functional/rest/TaskRestFT/invalidInput()#java/util/Map/size()
com/mytest/myproject/functional/rest/TaskRestFT/invalidInput()#com/mytest/myproject/entity/IdEntity/setId(java.lang.Long)
com/mytest/myproject/functional/rest/TaskRestFT/getTask()#com/mytest/myproject/entity/Task/getTitle()
com/mytest/myproject/functional/rest/TaskRestFT/listTasks()#com/mytest/myproject/entity/Task/getTitle()
com/mytest/myproject/functional/rest/TaskRestFT/listTasks()#java/util/ArrayList/size()
com/mytest/myproject/functional/rest/TaskRestFT/listTasks()#java/util/ArrayList/get(int)
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#com/mytest/myproject/entity/Task/getTitle()
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#com/mytest/myproject/data/TaskData/randomTask()
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#java/io/PrintStream/println(java.lang.String)
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#java/net/URI/toString()
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#com/mytest/myproject/data/TaskData/randomTitle()
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#com/mytest/myproject/entity/Task/setTitle(java.lang.String)
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#java/lang/Long/Long(java.lang.String)
com/mytest/myproject/functional/rest/TaskRestFT/createUpdateAndDeleteTask()#com/mytest/myproject/entity/IdEntity/setId(java.lang.Long)
com/mytest/myproject/web/account/UserAdminController/list(com.mytest.myproject.web.account.Model)#com/mytest/myproject/service/account/AccountService/getAllUser()
com/mytest/myproject/web/account/UserAdminController/delete(java.lang.Long,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/account/AccountService/deleteUser(java.lang.Long)
com/mytest/myproject/web/account/UserAdminController/delete(java.lang.Long,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/account/AccountService/getUser(java.lang.Long)
com/mytest/myproject/web/account/UserAdminController/delete(java.lang.Long,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/entity/User/getLoginName()
com/mytest/myproject/web/account/UserAdminController/updateForm(java.lang.Long,com.mytest.myproject.web.account.Model)#com/mytest/myproject/service/account/AccountService/getUser(java.lang.Long)
com/mytest/myproject/web/account/UserAdminController/getUser(java.lang.Long)#com/mytest/myproject/service/account/AccountService/getUser(java.lang.Long)
com/mytest/myproject/web/account/UserAdminController/update(com.mytest.myproject.entity.User,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/service/account/AccountService/updateUser(com.mytest.myproject.entity.User)
com/mytest/myproject/web/account/UserAdminController/update(com.mytest.myproject.entity.User,com.mytest.myproject.web.account.RedirectAttributes)#com/mytest/myproject/entity/User/getLoginName()
