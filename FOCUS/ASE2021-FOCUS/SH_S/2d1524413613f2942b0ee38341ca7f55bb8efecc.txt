com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/ArrayList/ArrayList()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/Properties/getProperty(java.lang.String)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/StringBuilder/append(java.lang.String)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/AbstractStringBuilder/setLength(int)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/StringBuilder/StringBuilder()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/mapreduce/TaskInputOutputContext/write(KEYOUT,VALUEOUT)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/ArrayList/get(int)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/StringBuilder/toString()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/Thread/currentThread()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/io/Text/set(java.lang.String)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/ArrayList/size()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#org/apache/hadoop/io/Text/toString()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/StringTokenizer/hasMoreElements()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/StringTokenizer/nextToken()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/io/PrintStream/println(java.lang.Object)
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/StackTraceElement/getMethodName()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/lang/Thread/getStackTrace()
com/trigram/mapred/TrigramMapper/map(org.apache.hadoop.io.LongWritable,org.apache.hadoop.io.Text,org.apache.hadoop.mapreduce.Mapper.Context)#java/util/ArrayList/add(E)
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#com/trigram/model/Trigram/getValue()
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#com/trigram/model/Trigram/incrementOffset()
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#org/apache/log4j/Category/warn(java.lang.Object)
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#java/lang/StackTraceElement/getMethodName()
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#java/lang/Thread/getStackTrace()
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#java/util/Map/get(java.lang.Object)
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#java/lang/Thread/currentThread()
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/trigram/dao/TrigramDao/hasData()#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/dao/TrigramDao/hasData()#java/lang/StackTraceElement/getMethodName()
com/trigram/dao/TrigramDao/hasData()#java/lang/Thread/getStackTrace()
com/trigram/dao/TrigramDao/hasData()#java/util/Map/isEmpty()
com/trigram/dao/TrigramDao/hasData()#java/lang/Thread/currentThread()
com/trigram/dao/TrigramDao/getKeyRandomly()#java/util/Collection/toArray()
com/trigram/dao/TrigramDao/getKeyRandomly()#java/lang/Thread/currentThread()
com/trigram/dao/TrigramDao/getKeyRandomly()#java/util/Random/nextInt(int)
com/trigram/dao/TrigramDao/getKeyRandomly()#java/util/Map/values()
com/trigram/dao/TrigramDao/getKeyRandomly()#com/trigram/model/Trigram/getKey()
com/trigram/dao/TrigramDao/getKeyRandomly()#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/dao/TrigramDao/getKeyRandomly()#java/lang/StackTraceElement/getMethodName()
com/trigram/dao/TrigramDao/getKeyRandomly()#java/lang/Thread/getStackTrace()
com/trigram/mapred/BookReader/close()#java/io/InputStream/close()
com/trigram/mapred/BookReader/readLine(org.apache.hadoop.io.Text,int,int)#com/trigram/mapred/BookReader/readDefaultBlock(org.apache.hadoop.io.Text,int,int)
com/trigram/mapred/BookReader/fillBuffer(java.io.InputStream,byte[],boolean)#java/io/InputStream/read(byte[])
com/trigram/mapred/BookReader/readDefaultBlock(org.apache.hadoop.io.Text,int,int)#java/io/IOException/IOException(java.lang.String)
com/trigram/mapred/BookReader/readDefaultBlock(org.apache.hadoop.io.Text,int,int)#org/apache/hadoop/io/Text/append(byte[],int,int)
com/trigram/mapred/BookReader/readDefaultBlock(org.apache.hadoop.io.Text,int,int)#org/apache/hadoop/io/Text/clear()
com/trigram/mapred/BookReader/readDefaultBlock(org.apache.hadoop.io.Text,int,int)#com/trigram/mapred/BookReader/fillBuffer(java.io.InputStream,byte[],boolean)
com/trigram/mapred/BookInputFormat/createRecordReader(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#com/trigram/mapred/BookRecordReader/BookRecordReader()
com/trigram/dao/TrigramDaoTest/setup()#java/lang/Class/getResource(java.lang.String)
com/trigram/dao/TrigramDaoTest/setup()#com/trigram/dao/TrigramDao/TrigramDao(java.lang.String)
com/trigram/dao/TrigramDaoTest/setup()#java/net/URL/getPath()
com/trigram/dao/TrigramDaoTest/setup()#java/lang/Object/getClass()
com/trigram/dao/TrigramDaoTest/testConstructor()#java/lang/Class/getResource(java.lang.String)
com/trigram/dao/TrigramDaoTest/testConstructor()#com/trigram/dao/TrigramDao/TrigramDao(java.lang.String)
com/trigram/dao/TrigramDaoTest/testConstructor()#java/net/URL/getPath()
com/trigram/dao/TrigramDaoTest/testConstructor()#com/trigram/dao/TrigramDao/hasData()
com/trigram/dao/TrigramDaoTest/testConstructor()#java/lang/Object/getClass()
com/trigram/dao/TrigramDaoTest/testHasData()#com/trigram/dao/TrigramDao/hasData()
com/trigram/dao/TrigramDaoTest/testGetTrigramBySecondKey()#com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)
com/trigram/dao/TrigramDaoTest/testGetKeyRandomly()#com/trigram/dao/TrigramDao/getKeyRandomly()
com/trigram/dao/TrigramDaoTest/testGetKeyRandomly()#java/lang/String/matches(java.lang.String)
com/trigram/dao/TrigramDaoTest/testGetTrigramByFirstKey()#com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)
com/trigram/mapred/BookRecordReader/close()#org/apache/hadoop/io/compress/CodecPool/returnDecompressor(org.apache.hadoop.io.compress.Decompressor)
com/trigram/mapred/BookRecordReader/close()#com/trigram/mapred/BookReader/close()
com/trigram/mapred/BookRecordReader/getFilePosition()#org/apache/hadoop/fs/Seekable/getPos()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/io/compress/CompressionCodec/createInputStream(java.io.InputStream,org.apache.hadoop.io.compress.Decompressor)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#com/trigram/mapred/BookReader/BookReader(java.io.InputStream,org.apache.hadoop.conf.Configuration,byte[])
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/io/compress/CompressionCodecFactory/getCodec(org.apache.hadoop.fs.Path)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/io/compress/CompressionCodecFactory/CompressionCodecFactory(org.apache.hadoop.conf.Configuration)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/mapreduce/lib/input/FileSplit/getLength()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/mapreduce/JobContext/getConfiguration()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/fs/FileSystem/open(org.apache.hadoop.fs.Path)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/io/Text/Text()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/io/compress/CodecPool/getDecompressor(org.apache.hadoop.io.compress.CompressionCodec)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/conf/Configuration/getInt(java.lang.String,int)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/fs/FSDataInputStream/seek(long)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/mapreduce/lib/input/FileSplit/getStart()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#com/trigram/mapred/BookRecordReader/maxBytesToConsume(long)
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#org/apache/hadoop/mapreduce/lib/input/FileSplit/getPath()
com/trigram/mapred/BookRecordReader/initialize(org.apache.hadoop.mapreduce.InputSplit,org.apache.hadoop.mapreduce.TaskAttemptContext)#com/trigram/mapred/BookReader/readLine(org.apache.hadoop.io.Text,int,int)
com/trigram/mapred/BookRecordReader/getProgress()#java/lang/Math/min(float,float)
com/trigram/mapred/BookRecordReader/getProgress()#com/trigram/mapred/BookRecordReader/getFilePosition()
com/trigram/mapred/BookRecordReader/nextKeyValue()#com/trigram/mapred/BookRecordReader/maxBytesToConsume(long)
com/trigram/mapred/BookRecordReader/nextKeyValue()#java/lang/Math/max(int,int)
com/trigram/mapred/BookRecordReader/nextKeyValue()#org/apache/commons/logging/Log/info(java.lang.Object)
com/trigram/mapred/BookRecordReader/nextKeyValue()#com/trigram/mapred/BookReader/readLine(org.apache.hadoop.io.Text,int,int)
com/trigram/mapred/BookRecordReader/nextKeyValue()#com/trigram/mapred/BookRecordReader/getFilePosition()
com/trigram/mapred/BookRecordReader/nextKeyValue()#org/apache/hadoop/io/LongWritable/set(long)
com/trigram/mapred/BookRecordReader/nextKeyValue()#org/apache/hadoop/io/Text/Text()
com/trigram/mapred/BookRecordReader/nextKeyValue()#org/apache/hadoop/io/LongWritable/LongWritable()
com/trigram/mapred/BookRecordReader/maxBytesToConsume(long)#java/lang/Math/min(long,long)
com/trigram/model/Trigram/getValue()#org/apache/log4j/Category/warn(java.lang.Object)
com/trigram/main/Kata14/generateNewBook()#java/lang/String/split(java.lang.String)
com/trigram/main/Kata14/generateNewBook()#com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)
com/trigram/main/Kata14/generateNewBook()#java/lang/Thread/currentThread()
com/trigram/main/Kata14/generateNewBook()#java/lang/AbstractStringBuilder/setLength(int)
com/trigram/main/Kata14/generateNewBook()#java/lang/StringBuilder/StringBuilder()
com/trigram/main/Kata14/generateNewBook()#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/main/Kata14/generateNewBook()#com/trigram/dao/TrigramDao/hasData()
com/trigram/main/Kata14/generateNewBook()#java/lang/StackTraceElement/getMethodName()
com/trigram/main/Kata14/generateNewBook()#java/lang/StringBuilder/toString()
com/trigram/main/Kata14/generateNewBook()#java/lang/StringBuilder/append(java.lang.String)
com/trigram/main/Kata14/generateNewBook()#java/io/PrintStream/println(java.lang.String)
com/trigram/main/Kata14/generateNewBook()#java/lang/Thread/getStackTrace()
com/trigram/main/Kata14/generateNewBook()#com/trigram/dao/TrigramDao/getKeyRandomly()
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#com/trigram/mapred/TrigramDriver/TrigramDriver()
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#java/lang/Thread/currentThread()
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#java/lang/StackTraceElement/getMethodName()
com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)#java/lang/Thread/getStackTrace()
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/util/Properties/getProperty(java.lang.String)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#org/apache/log4j/Category/error(java.lang.Object)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/lang/Throwable/getMessage()
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/io/Writer/write(java.lang.String)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/lang/StringBuilder/toString()
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/io/File/File(java.lang.String)
com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)#java/io/BufferedWriter/close()
com/trigram/main/Kata14/main(java.lang.String[])#com/trigram/main/Kata14/generateNewBook()
com/trigram/main/Kata14/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/trigram/main/Kata14/main(java.lang.String[])#java/io/PrintStream/println()
com/trigram/main/Kata14/main(java.lang.String[])#com/trigram/main/Kata14/writeFile(java.lang.StringBuilder,java.lang.String)
com/trigram/main/Kata14/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
com/trigram/main/Kata14/main(java.lang.String[])#com/trigram/main/Kata14/Kata14()
com/trigram/main/Kata14/main(java.lang.String[])#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/main/Kata14/main(java.lang.String[])#java/lang/Thread/getStackTrace()
com/trigram/main/Kata14/main(java.lang.String[])#com/trigram/main/Kata14/generateTrigrams(java.lang.String,java.lang.String)
com/trigram/main/Kata14/main(java.lang.String[])#java/lang/Thread/currentThread()
com/trigram/main/Kata14/main(java.lang.String[])#com/trigram/main/Kata14/loadTrigrams(java.lang.String)
com/trigram/main/Kata14/main(java.lang.String[])#java/lang/System/currentTimeMillis()
com/trigram/main/Kata14/main(java.lang.String[])#java/lang/StackTraceElement/getMethodName()
com/trigram/main/Kata14/loadTrigrams(java.lang.String)#java/lang/Thread/currentThread()
com/trigram/main/Kata14/loadTrigrams(java.lang.String)#com/trigram/dao/TrigramDao/TrigramDao(java.lang.String)
com/trigram/main/Kata14/loadTrigrams(java.lang.String)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/main/Kata14/loadTrigrams(java.lang.String)#java/lang/StackTraceElement/getMethodName()
com/trigram/main/Kata14/loadTrigrams(java.lang.String)#java/lang/Thread/getStackTrace()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/io/Text/toString()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/StringBuilder/StringBuilder()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/mapreduce/TaskInputOutputContext/write(KEYOUT,VALUEOUT)
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/StackTraceElement/getMethodName()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/Thread/getStackTrace()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/StringBuilder/toString()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/StringBuilder/append(java.lang.String)
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/String/trim()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#java/lang/Thread/currentThread()
com/trigram/mapred/TrigramReducer/reduce(org.apache.hadoop.io.Text,java.lang.Iterable,org.apache.hadoop.mapreduce.Reducer.Context)#org/apache/hadoop/io/Text/set(java.lang.String)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/fs/Path/getFileSystem(org.apache.hadoop.conf.Configuration)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setReducerClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#java/lang/Thread/currentThread()
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setOutputValueClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/log4j/Category/debug(java.lang.Object)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/lib/input/FileInputFormat/setInputPaths(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path[])
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#java/lang/StackTraceElement/getMethodName()
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setMapperClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setInputFormatClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/waitForCompletion(boolean)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/conf/Configuration/Configuration(boolean)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setJarByClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/conf/Configuration/setInt(java.lang.String,int)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/getInstance(org.apache.hadoop.conf.Configuration)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/lib/output/FileOutputFormat/setOutputPath(org.apache.hadoop.mapreduce.Job,org.apache.hadoop.fs.Path)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#java/lang/Thread/getStackTrace()
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/fs/FileSystem/delete(org.apache.hadoop.fs.Path,boolean)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/mapreduce/Job/setOutputKeyClass(java.lang.Class)
com/trigram/mapred/TrigramDriver/runMapReduce(java.lang.String,java.lang.String)#org/apache/hadoop/fs/Path/Path(java.lang.String)
com/trigram/model/TrigramTest/testGetValue()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/trigram/model/TrigramTest/testGetValue()#com/trigram/model/Trigram/getValue()
com/trigram/model/TrigramTest/testGetValue()#com/trigram/model/Trigram/setValues(java.lang.String[])
com/trigram/model/TrigramTest/testGetValue()#com/trigram/model/Trigram/incrementOffset()
com/trigram/model/TrigramTest/testGetKey()#com/trigram/model/Trigram/setKey(java.lang.String)
com/trigram/model/TrigramTest/testGetKey()#com/trigram/model/Trigram/getKey()
com/trigram/model/TrigramTest/testOffset()#com/trigram/model/Trigram/incrementOffset()
com/trigram/model/TrigramTest/testOffset()#com/trigram/model/Trigram/getOffset()
com/trigram/model/TrigramTest/setup()#com/trigram/model/Trigram/Trigram(java.lang.String,java.lang.String)
com/trigram/main/Kata14Test/testWriteFile()#java/lang/reflect/AccessibleObject/setAccessible(boolean)
com/trigram/main/Kata14Test/testWriteFile()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class<?>[])
com/trigram/main/Kata14Test/testWriteFile()#java/net/URL/getFile()
com/trigram/main/Kata14Test/testWriteFile()#java/lang/Class/getResource(java.lang.String)
com/trigram/main/Kata14Test/testWriteFile()#java/io/File/File(java.lang.String)
com/trigram/main/Kata14Test/testWriteFile()#java/net/URL/getPath()
com/trigram/main/Kata14Test/testWriteFile()#java/lang/Object/getClass()
com/trigram/main/Kata14Test/testWriteFile()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/trigram/main/Kata14Test/testWriteFile()#java/io/File/exists()
com/trigram/main/Kata14Test/testWriteFile()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/trigram/main/Kata14Test/setup()#com/trigram/main/Kata14/Kata14()
com/trigram/main/Kata14Test/setup()#org/easymock/EasyMock/createMock(java.lang.Class)
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/reflect/AccessibleObject/setAccessible(boolean)
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class<?>[])
com/trigram/main/Kata14Test/testGenerateNewBook()#org/easymock/EasyMock/reset(java.lang.Object[])
com/trigram/main/Kata14Test/testGenerateNewBook()#org/easymock/EasyMock/expect(T)
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/Object/getClass()
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/StringBuilder/toString()
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/Class/getDeclaredField(java.lang.String)
com/trigram/main/Kata14Test/testGenerateNewBook()#com/trigram/dao/TrigramDao/getTrigramByKey(java.lang.String)
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
com/trigram/main/Kata14Test/testGenerateNewBook()#com/trigram/dao/TrigramDao/hasData()
com/trigram/main/Kata14Test/testGenerateNewBook()#org/easymock/IExpectationSetters/andReturn(T)
com/trigram/main/Kata14Test/testGenerateNewBook()#org/easymock/EasyMock/replay(java.lang.Object[])
com/trigram/main/Kata14Test/testGenerateNewBook()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/trigram/main/Kata14Test/testGenerateNewBook()#com/trigram/dao/TrigramDao/getKeyRandomly()
