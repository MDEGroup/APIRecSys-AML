mldemo/DCTDemo/main(java.lang.String[])#java/util/Arrays/asList(T[])
mldemo/DCTDemo/main(java.lang.String[])#java/lang/Object/Object()
mldemo/JavaPCAExample/main(java.lang.String[])#java/util/Arrays/asList(T[])
mldemo/JavaPCAExample/main(java.lang.String[])#java/lang/Object/Object()
kafka/New/Consumer/doWork()#java/util/Collections/singletonList(T)
kafka/New/Consumer/doWork()#java/io/PrintStream/println(char[])
mldemo/JavaRandomForestRegressorExample/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
mldemo/JavaRandomForestRegressorExample/main(java.lang.String[])#java/io/PrintStream/println(char[])
kafka/KafkaProducerDemo/main(java.lang.String[])#kafka/KafkaProducerDemo/KafkaProducerDemo()
kafka/KafkaProducerDemo/main(java.lang.String[])#kafka/KafkaProducerDemo/produce()
kafka/KafkaProducerDemo/produce()#java/lang/Throwable/printStackTrace()
kafka/KafkaProducerDemo/produce()#java/lang/Thread/sleep(long)
kafka/KafkaProducerDemo/produce()#java/io/PrintStream/println(java.lang.String)
kafka/KafkaProducerDemo/produce()#java/lang/String/valueOf(int)
mldemo/JavaRandomForestClassifierExample/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
mldemo/JavaRandomForestClassifierExample/main(java.lang.String[])#java/io/PrintStream/println(char[])
kafka/New/KafkaProducerMain/main(java.lang.String[])#kafka/New/KafkaProducerMain/multiProducer()
kafka/New/KafkaProducerMain/SingleProducer()#java/lang/Thread/start()
kafka/New/KafkaProducerMain/SingleProducer()#kafka/New/Producer/Producer(java.lang.String,java.lang.Boolean)
kafka/New/KafkaProducerMain/multiProducer()#java/lang/Thread/start()
kafka/New/KafkaProducerMain/multiProducer()#kafka/New/Producer/Producer(java.lang.String,java.lang.Boolean)
kafka/New/KafkaConsumerMain/main(java.lang.String[])#kafka/New/Consumer/Consumer(java.lang.String)
kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)#java/io/PrintStream/println(java.lang.String)
kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)#java/nio/ByteBuffer/get(byte[])
kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)#java/lang/String/String(byte[],java.lang.String)
kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)#java/nio/Buffer/limit()
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/Map/Entry/getValue()
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/Collections/singletonList(T)
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/io/PrintStream/println(java.lang.String)
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/HashMap/HashMap()
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/Map/Entry/getKey()
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/Map/put(K,V)
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/io/PrintStream/println(java.lang.Object)
kafka/New/SimpleConsumerDemo/multiFetch(kafka.New.SimpleConsumer)#java/util/Map/entrySet()
kafka/New/SimpleConsumerDemo/SingleMultiFetch(kafka.New.SimpleConsumer)#java/io/PrintStream/println(java.lang.String)
kafka/New/SimpleConsumerDemo/SingleMultiFetch(kafka.New.SimpleConsumer)#kafka/New/SimpleConsumerDemo/printMessage(kafka.New.ByteBufferMessageSet)
kafka/New/SimpleConsumerDemo/main(java.lang.String[])#kafka/New/SimpleConsumerDemo/SingleMultiFetch(kafka.New.SimpleConsumer)
kafka/KafkaStreamingReceiveDemo/main(java.lang.String[])#java/lang/String/split(java.lang.String)
kafka/KafkaStreamingReceiveDemo/main(java.lang.String[])#java/util/HashMap/HashMap()
kafka/KafkaStreamingReceiveDemo/main(java.lang.String[])#java/util/Map/put(K,V)
kafka/KafkaStreamingReceiveDemo/main(java.lang.String[])#java/lang/Object/Object()
mldemo/JavaCorrelationsExample/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
mldemo/JavaCorrelationsExample/main(java.lang.String[])#java/util/Arrays/asList(T[])
mldemo/JavaCorrelationsExample/main(java.lang.String[])#java/io/PrintStream/println(char[])
mldemo/JavaCorrelationsExample/main(java.lang.String[])#java/lang/Object/Object()
kafka/New/Producer/run()#java/lang/Throwable/printStackTrace()
kafka/New/Producer/run()#java/lang/Thread/sleep(long)
kafka/New/Producer/run()#java/io/PrintStream/println(java.lang.String)
kafka/New/Producer/run()#kafka/New/Producer/DemoCallBack/DemoCallBack(long,int,java.lang.String)
kafka/New/Producer/run()#java/lang/System/currentTimeMillis()
kafka/New/Producer/DemoCallBack/onCompletion(kafka.New.RecordMetadata,java.lang.Exception)#java/lang/Throwable/printStackTrace()
kafka/New/Producer/DemoCallBack/onCompletion(kafka.New.RecordMetadata,java.lang.Exception)#java/io/PrintStream/println(char[])
kafka/New/Producer/DemoCallBack/onCompletion(kafka.New.RecordMetadata,java.lang.Exception)#java/lang/System/currentTimeMillis()
mldemo/TFIDFDemo/main(java.lang.String[])#java/util/Arrays/asList(T[])
mldemo/TFIDFDemo/main(java.lang.String[])#java/io/PrintStream/println(char[])
mldemo/TFIDFDemo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
mldemo/TFIDFDemo/main(java.lang.String[])#java/lang/Object/Object()
mldemo/LogisticRegressionDemo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
mldemo/LogisticRegressionDemo/main(java.lang.String[])#java/io/PrintStream/println(char[])
hbase/HttpRequest/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
hbase/HttpRequest/main(java.lang.String[])#hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/io/BufferedReader/close()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.String)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/util/Map/keySet()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URLConnection/getInputStream()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URLConnection/getHeaderFields()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/lang/Throwable/printStackTrace()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URLConnection/connect()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URL/openConnection()
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/net/URL/URL(java.lang.String)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
hbase/HttpRequest/sendGet(java.lang.String,java.lang.String)#java/io/BufferedReader/readLine()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/BufferedReader/close()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URLConnection/setDoInput(boolean)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.String)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/PrintWriter/close()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URL/URL(java.lang.String)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URLConnection/getOutputStream()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URLConnection/getInputStream()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/PrintWriter/flush()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/PrintWriter/print(java.lang.String)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/lang/Throwable/printStackTrace()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URL/openConnection()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/BufferedReader/readLine()
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URLConnection/setDoOutput(boolean)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/io/PrintWriter/PrintWriter(java.io.OutputStream)
hbase/HttpRequest/sendPost(java.lang.String,java.lang.String)#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
hbase/KeyToString/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
hbase/KeyToString/main(java.lang.String[])#hbase/KeyToString/generateRowkey(java.lang.String)
hbase/KeyToString/generateRowkey(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
hbase/KeyToString/generateRowkey(java.lang.String)#hbase/KeyToString/flowid(java.lang.String)
hbase/KeyToString/flowid(java.lang.String)#java/security/MessageDigest/digest()
hbase/KeyToString/flowid(java.lang.String)#java/math/BigInteger/add(java.math.BigInteger)
hbase/KeyToString/flowid(java.lang.String)#java/math/BigInteger/valueOf(long)
hbase/KeyToString/flowid(java.lang.String)#java/math/BigInteger/remainder(java.math.BigInteger)
hbase/KeyToString/flowid(java.lang.String)#java/math/BigInteger/intValue()
hbase/KeyToString/flowid(java.lang.String)#java/lang/String/getBytes()
hbase/KeyToString/flowid(java.lang.String)#java/security/MessageDigest/getInstance(java.lang.String)
hbase/KeyToString/flowid(java.lang.String)#java/math/BigInteger/multiply(java.math.BigInteger)
hbase/KeyToString/flowid(java.lang.String)#java/security/MessageDigest/update(byte[])
mldemo/JavaNaiveBayesExample/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
kafka/KafkaConsumerDemo/main(java.lang.String[])#kafka/KafkaConsumerDemo/KafkaConsumerDemo()
kafka/KafkaConsumerDemo/main(java.lang.String[])#kafka/KafkaConsumerDemo/consume()
kafka/KafkaConsumerDemo/consume()#java/lang/Integer/Integer(int)
kafka/KafkaConsumerDemo/consume()#java/util/HashMap/HashMap()
kafka/KafkaConsumerDemo/consume()#java/io/PrintStream/println(char[])
kafka/KafkaConsumerDemo/consume()#java/util/Map/put(K,V)
kafka/KafkaConsumerDemo/consume()#java/lang/Object/Object()
mldemo/JavaGradientBoostedTreeRegressorExample/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
mldemo/JavaGradientBoostedTreeRegressorExample/main(java.lang.String[])#java/io/PrintStream/println(char[])
mldemo/PolynomialExpansionDemo/main(java.lang.String[])#java/util/Arrays/asList(T[])
mldemo/PolynomialExpansionDemo/main(java.lang.String[])#java/io/PrintStream/println(char[])
mldemo/PolynomialExpansionDemo/main(java.lang.String[])#java/lang/Object/Object()
socketdemo/ServerDemo/main(java.lang.String[])#java/net/InetAddress/getLocalHost()
socketdemo/ServerDemo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
socketdemo/ServerDemo/main(java.lang.String[])#java/lang/String/equals(java.lang.Object)
socketdemo/ServerDemo/main(java.lang.String[])#java/io/PrintWriter/flush()
socketdemo/ServerDemo/main(java.lang.String[])#java/net/Socket/getOutputStream()
socketdemo/ServerDemo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
socketdemo/ServerDemo/main(java.lang.String[])#java/net/ServerSocket/accept()
socketdemo/ServerDemo/main(java.lang.String[])#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
socketdemo/ServerDemo/main(java.lang.String[])#java/net/ServerSocket/ServerSocket(int)
socketdemo/ServerDemo/main(java.lang.String[])#java/io/BufferedReader/BufferedReader(java.io.Reader)
socketdemo/ServerDemo/main(java.lang.String[])#java/net/Socket/close()
socketdemo/ServerDemo/main(java.lang.String[])#java/io/BufferedReader/readLine()
socketdemo/ServerDemo/main(java.lang.String[])#java/io/PrintWriter/PrintWriter(java.io.OutputStream)
socketdemo/ServerDemo/main(java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
