com/mdeng/common/utils/Xmls/obj2Xml(java.lang.Object,com.mdeng.common.utils.SortableFieldKeySorter)#java/lang/Object/getClass()
com/mdeng/common/utils/Xmls/obj2Xml(java.lang.Object,com.mdeng.common.utils.SortableFieldKeySorter)#com/mdeng/common/utils/Xmls/obj2Xml(java.lang.Object)
com/mdeng/common/utils/Xmls/obj2Xml(java.lang.Object,com.mdeng.common.utils.SortableFieldKeySorter)#java/lang/Object/Object()
com/mdeng/common/utils/Xmls/obj2Xml(java.lang.Object)#java/lang/Object/getClass()
com/mdeng/quiz/pattern/FactoryPattern/ConcreteFactoryA/create()#com/mdeng/quiz/pattern/FactoryPattern/ConcreteProductA/ConcreteProductA()
com/mdeng/quiz/pattern/AdapterPattern/ClassAdapter/request()#com/mdeng/quiz/pattern/AdapterPattern/Adaptee/specificRequest()
com/mdeng/quiz/search/BinaryTree/inOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/inOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/inOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/Stack()
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Vector/isEmpty()
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/peek()
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/push(E)
com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/pop()
com/mdeng/quiz/search/BinaryTree/insert2(com.mdeng.quiz.search.BinaryTree.Node,T)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinaryTree/insert2(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/Node/Node(T)
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/Stack()
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Vector/isEmpty()
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/peek()
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/push(E)
com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/pop()
com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/Stack()
com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Vector/isEmpty()
com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/push(E)
com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)#java/util/Stack/pop()
com/mdeng/quiz/search/BinaryTree/preOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/preOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/preOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/find(com.mdeng.quiz.search.BinaryTree.Node,T)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinaryTree/insert(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/insert(com.mdeng.quiz.search.BinaryTree.Node,T)
com/mdeng/quiz/search/BinaryTree/insert(com.mdeng.quiz.search.BinaryTree.Node,T)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinaryTree/insert(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/Node/Node(T)
com/mdeng/quiz/search/BinaryTree/delete(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/min(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/delete(com.mdeng.quiz.search.BinaryTree.Node,T)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinaryTree/delete(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/delete(com.mdeng.quiz.search.BinaryTree.Node,T)
com/mdeng/quiz/search/BinaryTree/delete2(com.mdeng.quiz.search.BinaryTree.Node,T)#com/mdeng/quiz/search/BinaryTree/min(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/delete2(com.mdeng.quiz.search.BinaryTree.Node,T)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/inOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/inOrder2(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/postOrder2(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#java/io/PrintStream/println()
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/BinaryTree()
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/postOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/Node/Node(T)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/preOrder2(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/main(java.lang.String[])#com/mdeng/quiz/search/BinaryTree/preOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/postOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/postOrder(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/search/BinaryTree/postOrder(com.mdeng.quiz.search.BinaryTree.Node)#com/mdeng/quiz/search/BinaryTree/visit(com.mdeng.quiz.search.BinaryTree.Node)
com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorA/operation()#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorA/decoratorOperation()
com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorA/operation()#com/mdeng/quiz/pattern/DecoratorPattern/Component/operation()
com/mdeng/common/dataimport/excel/ExcelImporterTest/SmallFunction/apply(com.mdeng.common.dataimport.excel.Row)#java/io/PrintStream/println(char[])
com/mdeng/quiz/pattern/BuilderPattern/Director/build()#com/mdeng/quiz/pattern/BuilderPattern/Builder/buildPart()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#java/io/File/getName()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SheetContentsRowHandler()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#java/io/InputStream/close()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#org/xml/sax/XMLReader/parse(org.xml.sax.InputSource)
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#org/xml/sax/XMLReader/setContentHandler(org.xml.sax.ContentHandler)
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#java/lang/Object/Object()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#java/util/Iterator/hasNext()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#org/xml/sax/helpers/XMLReaderFactory/createXMLReader(java.lang.String)
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#java/util/Iterator/next()
com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/run()#org/xml/sax/InputSource/InputSource(java.io.InputStream)
com/mdeng/serank/keyword/provider/FileKeywordProvider/init()#java/io/File/File(java.lang.String)
com/mdeng/serank/keyword/provider/FileKeywordProvider/init()#java/io/File/listFiles()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#com/mdeng/serank/keyword/KeywordRank/setGroup(int)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#java/lang/String/trim()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#com/mdeng/serank/keyword/provider/FileKeywordProvider/hasNextKeyword(int)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#java/util/List/get(int)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#com/mdeng/serank/keyword/KeywordRank/setKeyword(java.lang.String)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextKeyword(int)#com/mdeng/serank/keyword/KeywordRank/KeywordRank()
com/mdeng/serank/keyword/provider/FileKeywordProvider/hasNextKeyword(int)#java/util/List/size()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/lang/String/split(java.lang.String)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/nio/file/Path/toString()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/lang/Throwable/getMessage()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/nio/file/Paths/get(java.lang.String,java.lang.String[])
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/io/File/getAbsolutePath()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/nio/file/Path/getFileName()
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/nio/charset/Charset/forName(java.lang.String)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/nio/file/Files/readAllLines(java.nio.file.Path,java.nio.charset.Charset)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#java/lang/Integer/valueOf(java.lang.String)
com/mdeng/serank/keyword/provider/FileKeywordProvider/nextGroup()#com/mdeng/serank/keyword/provider/FileKeywordProvider/hasNextGroup()
com/mdeng/quiz/pattern/FactoryPattern/ConcreteFactoryB/create()#com/mdeng/quiz/pattern/FactoryPattern/ConcreteProductA/ConcreteProductA()
com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorB/operation()#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorB/decoratorOperation()
com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorB/operation()#com/mdeng/quiz/pattern/DecoratorPattern/Component/operation()
com/mdeng/quiz/pattern/BridgePattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BridgePattern/XPDrawImpl/XPDrawImpl()
com/mdeng/quiz/pattern/BridgePattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BridgePattern/TransientWindows/TransientWindows(com.mdeng.quiz.pattern.BridgePattern.WindowsDrawImpl)
com/mdeng/quiz/pattern/BridgePattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BridgePattern/TransientWindows/drawCloseBox()
com/mdeng/quiz/pattern/BridgePattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BridgePattern/BridgePattern()
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/ArrayList/ArrayList(int)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/HashSet/HashSet(int)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/Collection/size()
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/Collection/add(E)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)#java/util/Collections/shuffle(java.util.List)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/ArrayList/ArrayList()
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/ArrayList/ArrayList(int)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/HashSet/HashSet(int)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/Collection/size()
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/Collections/shuffle(java.util.List)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/List/add(E)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/Collection/add(E)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/mdeng/common/utils/Randoms/rand(java.util.Collection,int,E[])#java/util/List/contains(java.lang.Object)
com/mdeng/note/storage/impl/HdfsNotebookStorage/get()#com/mdeng/note/storage/impl/HdfsStorage/getFS()
com/mdeng/note/storage/impl/HdfsNotebookStorage/get()#java/util/List/add(E)
com/mdeng/note/storage/impl/HdfsNotebookStorage/get()#com/mdeng/note/storage/impl/HdfsStorage/readFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Class)
com/mdeng/note/storage/impl/HdfsNotebookStorage/delete(com.mdeng.note.entities.Notebook)#com/mdeng/note/storage/impl/HdfsStorage/getFS()
com/mdeng/note/storage/impl/HdfsNotebookStorage/delete(com.mdeng.note.entities.Notebook)#com/mdeng/note/entities/Notebook/getId()
com/mdeng/note/storage/impl/HdfsNotebookStorage/create(java.lang.String)#com/mdeng/note/entities/Notebook/Notebook()
com/mdeng/note/storage/impl/HdfsNotebookStorage/create(java.lang.String)#com/mdeng/note/storage/impl/HdfsStorage/getFS()
com/mdeng/note/storage/impl/HdfsNotebookStorage/create(java.lang.String)#com/mdeng/note/entities/Notebook/setName(java.lang.String)
com/mdeng/note/storage/impl/HdfsNotebookStorage/create(java.lang.String)#com/mdeng/note/storage/impl/HdfsStorage/writeFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Object)
com/mdeng/note/storage/impl/HdfsNotebookStorage/create(java.lang.String)#com/mdeng/note/entities/Notebook/getId()
com/mdeng/quiz/pattern/CompositePattern/Composite/remove(com.mdeng.quiz.pattern.CompositePattern.Component)#java/util/Collection/remove(java.lang.Object)
com/mdeng/quiz/pattern/CompositePattern/Composite/getChild()#java/util/Collection/size()
com/mdeng/quiz/pattern/CompositePattern/Composite/add(com.mdeng.quiz.pattern.CompositePattern.Component)#java/util/Collection/add(E)
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/ObjectAdapter/request()
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/ClassAdapter/ClassAdapter()
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/ObjectAdapter/ObjectAdapter(com.mdeng.quiz.pattern.AdapterPattern.Adaptee)
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/ClassAdapter/request()
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/Adaptee/Adaptee()
com/mdeng/quiz/pattern/AdapterPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AdapterPattern/AdapterPattern()
com/mdeng/quiz/pattern/BridgePattern/TransientWindows/drawCloseBox()#com/mdeng/quiz/pattern/BridgePattern/Windows/drawRect()
com/mdeng/quiz/graph/astar/Demo/reset()#java/util/PriorityQueue/clear()
com/mdeng/quiz/graph/astar/Demo/h(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#java/lang/Math/abs(int)
com/mdeng/quiz/graph/astar/Demo/h2(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/reset()
com/mdeng/quiz/graph/astar/Demo/h2(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#java/io/PrintStream/println(int)
com/mdeng/quiz/graph/astar/Demo/h2(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)
com/mdeng/quiz/graph/astar/Demo/h2(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/h2(com/mdeng/quiz/graph/astar/Demo,com/mdeng/quiz/graph/astar/N,com/mdeng/quiz/graph/astar/N)/$anonymous1/()
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#java/util/Random/nextInt(int)
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#com/mdeng/quiz/graph/astar/Demo/Demo()
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#java/lang/System/exit(int)
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#java/util/Random/Random()
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#com/mdeng/quiz/graph/astar/Demo/h2(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#com/mdeng/quiz/graph/astar/Demo/init()
com/mdeng/quiz/graph/astar/Demo/main(java.lang.String[])#com/mdeng/quiz/graph/astar/Demo/h1(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)
com/mdeng/quiz/graph/astar/Demo/print(com.mdeng.quiz.graph.astar.N)#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/graph/astar/Demo/print(com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/print(com.mdeng.quiz.graph.astar.N)
com/mdeng/quiz/graph/astar/Demo/init()#java/util/Random/Random()
com/mdeng/quiz/graph/astar/Demo/init()#com/mdeng/quiz/graph/astar/N/N()
com/mdeng/quiz/graph/astar/Demo/init()#java/util/Random/nextInt(int)
com/mdeng/quiz/graph/astar/Demo/h1(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/reset()
com/mdeng/quiz/graph/astar/Demo/h1(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#java/io/PrintStream/println(int)
com/mdeng/quiz/graph/astar/Demo/h1(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)
com/mdeng/quiz/graph/astar/Demo/h1(com.mdeng.quiz.graph.astar.Demo,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)#com/mdeng/quiz/graph/astar/Demo/h1(com/mdeng/quiz/graph/astar/Demo,com/mdeng/quiz/graph/astar/N,com/mdeng/quiz/graph/astar/N)/$anonymous1/()
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#com/mdeng/quiz/graph/astar/H/h(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N)
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#java/util/PriorityQueue/contains(java.lang.Object)
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#java/util/PriorityQueue/offer(E)
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#java/util/AbstractCollection/isEmpty()
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#com/mdeng/quiz/graph/astar/Demo/isValid(int,int)
com/mdeng/quiz/graph/astar/Demo/astar(com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.N,com.mdeng.quiz.graph.astar.H)#java/util/PriorityQueue/poll()
com/mdeng/serank/proxy/HttpProxyPool/monitor()#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/mdeng/serank/proxy/HttpProxyPool/monitor()#java/util/concurrent/Executors/newScheduledThreadPool(int)
com/mdeng/serank/proxy/HttpProxyPool/monitor()#com/mdeng/serank/proxy/HttpProxyPool/monitor()/$anonymous1/()
com/mdeng/serank/proxy/HttpProxyPool/checkProxy(com.mdeng.serank.proxy.HttpHost)#com/mdeng/common/http/HttpRequestBuilder/get(java.lang.String)
com/mdeng/serank/proxy/HttpProxyPool/checkProxy(com.mdeng.serank.proxy.HttpHost)#com/mdeng/common/http/HttpRequestBuilder/config(com.mdeng.common.http.RequestConfig)
com/mdeng/serank/proxy/HttpProxyPool/checkProxy(com.mdeng.serank.proxy.HttpHost)#com/mdeng/common/http/HttpRequestBuilder/create()
com/mdeng/serank/proxy/HttpProxyPool/init()#com/mdeng/serank/proxy/ProxyProvider/getProxies(int)
com/mdeng/serank/proxy/HttpProxyPool/getProxy()#java/util/Random/nextInt(int)
com/mdeng/serank/proxy/HttpProxyPool/getProxy()#java/util/Random/Random()
com/mdeng/oceanusex/orm/OceanusSupports/getSupport(java.lang.Class)#java/util/Map/get(java.lang.Object)
com/mdeng/oceanusex/orm/OceanusSupports/getSupport(java.lang.Class)#java/util/Map/put(K,V)
com/mdeng/oceanusex/orm/OceanusSupports/getSupport(java.lang.Class)#com/bj58/oceanus/client/orm/OceanusSupportImpl/OceanusSupportImpl(java.lang.Class)
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ProxyPattern/RealSubject/RealSubject()
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ProxyPattern/ProxySubject/ProxySubject(com.mdeng.quiz.pattern.ProxyPattern.Subject)
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ProxyPattern/DynamicProxy/DynamicProxy(java.lang.Object)
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#java/lang/Class/getClassLoader()
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ProxyPattern/Subject/request()
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ProxyPattern/ProxyPattern()
com/mdeng/quiz/pattern/ProxyPattern/main(java.lang.String[])#java/lang/reflect/Proxy/newProxyInstance(java.lang.ClassLoader,java.lang.Class<?>[],java.lang.reflect.InvocationHandler)
com/mdeng/quiz/RevertInt/main(java.lang.String[])#com/mdeng/quiz/RevertInt/revert(int)
com/mdeng/quiz/RevertInt/main(java.lang.String[])#java/io/PrintStream/println(long)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#com/mdeng/quiz/thread/ThreadPool/TaskA/TaskA()
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/io/PrintStream/println(boolean)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/util/concurrent/ExecutorService/shutdown()
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/lang/Thread/sleep(long)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#com/mdeng/quiz/thread/ThreadPool/TaskB/TaskB()
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/util/concurrent/Executors/newFixedThreadPool(int)
com/mdeng/quiz/thread/ThreadPool/main(java.lang.String[])#java/util/concurrent/Future/isDone()
com/mdeng/quiz/pattern/AdapterPattern/ObjectAdapter/request()#com/mdeng/quiz/pattern/AdapterPattern/Adaptee/specificRequest()
com/mdeng/quiz/graph/DFS1/dfs(int,int)#com/mdeng/quiz/graph/DFS1/printPath(java.util.List)
com/mdeng/quiz/graph/DFS1/dfs(int,int)#com/mdeng/quiz/graph/DFS1/dfs(int,int)
com/mdeng/quiz/graph/DFS1/dfs(int,int)#java/util/List/add(E)
com/mdeng/quiz/graph/DFS1/dfs(int,int)#com/mdeng/quiz/graph/DFS1/Point/Point(int,int)
com/mdeng/quiz/graph/DFS1/dfs(int,int)#java/util/List/remove(java.lang.Object)
com/mdeng/quiz/graph/DFS1/init()#com/mdeng/quiz/graph/DFS1/Point/Point(int,int)
com/mdeng/quiz/graph/DFS1/main(java.lang.String[])#com/mdeng/quiz/graph/DFS1/DFS1()
com/mdeng/quiz/graph/DFS1/main(java.lang.String[])#com/mdeng/quiz/graph/DFS1/dfs(int,int)
com/mdeng/quiz/graph/DFS1/main(java.lang.String[])#java/util/List/add(E)
com/mdeng/quiz/graph/DFS1/main(java.lang.String[])#com/mdeng/quiz/graph/DFS1/Point/Point(int,int)
com/mdeng/quiz/graph/DFS1/printPath(java.util.List)#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/graph/DFS1/printPath(java.util.List)#java/io/PrintStream/println()
com/mdeng/quiz/graph/DFS1/printPath(java.util.List)#com/mdeng/quiz/graph/DFS1/Point/toString()
com/mdeng/serank/executor/SERankExtractor/extract(int)#com/mdeng/serank/spider/AbstractSERankSpider/setGroup(int)
com/mdeng/serank/executor/SERankExtractor/extract(int)#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/mdeng/serank/executor/SERankExtractor/extract(int)#java/util/concurrent/Executors/newCachedThreadPool()
com/mdeng/serank/executor/StrategyExecutor/execute()#com/mdeng/serank/executor/ExecuteStrategy/execute()
com/mdeng/serank/executor/StrategyExecutor/execute()#java/lang/Class/toString()
com/mdeng/serank/executor/StrategyExecutor/execute()#java/lang/String/equals(java.lang.Object)
com/mdeng/serank/executor/StrategyExecutor/execute()#java/lang/String/substring(int)
com/mdeng/serank/executor/StrategyExecutor/execute()#java/lang/Object/getClass()
com/mdeng/serank/executor/StrategyExecutor/execute()#java/lang/String/lastIndexOf(java.lang.String)
com/mdeng/quiz/pattern/ProxyPattern/ProxySubject/request()#com/mdeng/quiz/pattern/ProxyPattern/Subject/request()
com/mdeng/quiz/poj/Pots/nextPair(com.mdeng.quiz.poj.Pots.Pair,int)#com/mdeng/quiz/poj/Pots/Pair/Pair(int,int)
com/mdeng/quiz/poj/Pots/print(int,com.mdeng.quiz.poj.Pots.Node)#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/poj/Pots/print(int,com.mdeng.quiz.poj.Pots.Node)#com/mdeng/quiz/poj/Pots/print(int,com.mdeng.quiz.poj.Pots.Node)
com/mdeng/quiz/poj/Pots/print(int,com.mdeng.quiz.poj.Pots.Node)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/isValid(com.mdeng.quiz.poj.Pots.Pair,int)
com/mdeng/quiz/poj/Pots/find(int,int,int)#java/util/Queue/add(E)
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/Node/Node(com.mdeng.quiz.poj.Pots.Pair,int)
com/mdeng/quiz/poj/Pots/find(int,int,int)#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/Pair/Pair()
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/nextPair(com.mdeng.quiz.poj.Pots.Pair,int)
com/mdeng/quiz/poj/Pots/find(int,int,int)#java/util/Collection/isEmpty()
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/hasVisited(com.mdeng.quiz.poj.Pots.Pair)
com/mdeng/quiz/poj/Pots/find(int,int,int)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/getCost(com.mdeng.quiz.poj.Pots.Pair)
com/mdeng/quiz/poj/Pots/find(int,int,int)#com/mdeng/quiz/poj/Pots/print(int,com.mdeng.quiz.poj.Pots.Node)
com/mdeng/quiz/poj/Pots/find(int,int,int)#java/util/Queue/remove()
com/mdeng/quiz/poj/Pots/main(java.lang.String[])#java/lang/Math/max(int,int)
com/mdeng/quiz/poj/Pots/main(java.lang.String[])#com/mdeng/quiz/poj/Pots/find(int,int,int)
com/mdeng/quiz/poj/Pots/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/poj/Pots/main(java.lang.String[])#com/mdeng/quiz/poj/Pots/Pots()
com/mdeng/serank/mapreduce/SERankMapper/map(java.lang.Object,com.mdeng.serank.mapreduce.Text,com.mdeng.serank.mapreduce.Context)#java/lang/String/equals(java.lang.Object)
com/mdeng/serank/mapreduce/SERankMapper/map(java.lang.Object,com.mdeng.serank.mapreduce.Text,com.mdeng.serank.mapreduce.Context)#java/lang/Integer/valueOf(java.lang.String)
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getModifiedTime()
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getCreatedTime()
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getTags()
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getTitle()
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getContent()
com/mdeng/note/es/metadata/NoteMetadata/getSource()#com/mdeng/note/entities/Note/getId()
com/mdeng/note/es/metadata/NoteMetadata/getId()#com/mdeng/note/entities/Note/getId()
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#java/util/Stack/Stack()
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#com/mdeng/quiz/graph/Graph/Vertex/nextNonVisited()
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#java/util/Vector/isEmpty()
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#java/util/Stack/peek()
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#java/util/Stack/push(E)
com/mdeng/quiz/graph/Graph/dfs_visit2(com.mdeng.quiz.graph.Graph.Vertex)#java/util/Stack/pop()
com/mdeng/quiz/graph/Graph/dfs(java.util.List)#com/mdeng/quiz/graph/Graph/dfs_visit(com.mdeng.quiz.graph.Graph.Vertex)
com/mdeng/quiz/graph/Graph/bfs(java.util.List,com.mdeng.quiz.graph.Graph.Vertex)#java/util/Queue/add(E)
com/mdeng/quiz/graph/Graph/bfs(java.util.List,com.mdeng.quiz.graph.Graph.Vertex)#java/util/Collection/isEmpty()
com/mdeng/quiz/graph/Graph/bfs(java.util.List,com.mdeng.quiz.graph.Graph.Vertex)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/graph/Graph/bfs(java.util.List,com.mdeng.quiz.graph.Graph.Vertex)#java/util/Queue/remove()
com/mdeng/quiz/graph/Graph/dfs_visit(com.mdeng.quiz.graph.Graph.Vertex)#com/mdeng/quiz/graph/Graph/dfs_visit(com.mdeng.quiz.graph.Graph.Vertex)
com/mdeng/quiz/graph/Graph/printPath(com.mdeng.quiz.graph.Graph.Vertex,com.mdeng.quiz.graph.Graph.Vertex)#com/mdeng/quiz/graph/Graph/printPath(com.mdeng.quiz.graph.Graph.Vertex,com.mdeng.quiz.graph.Graph.Vertex)
com/mdeng/quiz/graph/Graph/printPath(com.mdeng.quiz.graph.Graph.Vertex,com.mdeng.quiz.graph.Graph.Vertex)#com/mdeng/quiz/graph/Graph/visit(com.mdeng.quiz.graph.Graph.Vertex)
com/mdeng/quiz/poj/KnightJourney/dfs(int,int)#com/mdeng/quiz/poj/KnightJourney/print()
com/mdeng/quiz/poj/KnightJourney/dfs(int,int)#com/mdeng/quiz/poj/KnightJourney/isValid(int,int)
com/mdeng/quiz/poj/KnightJourney/dfs(int,int)#com/mdeng/quiz/poj/KnightJourney/dfs(int,int)
com/mdeng/quiz/poj/KnightJourney/print()#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/util/Scanner/nextInt()
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/util/Arrays/fill(char[],char)
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/util/Arrays/fill(boolean[],boolean)
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#com/mdeng/quiz/poj/KnightJourney/dfs(int,int)
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/util/Scanner/Scanner(java.io.InputStream)
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/mdeng/quiz/poj/KnightJourney/main(java.lang.String[])#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/OceanusSqlBuilder(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)#com/mdeng/oceanusex/dal/Pagination/getOrderBy()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)#com/mdeng/oceanusex/dal/Pagination/getOrder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)#java/lang/StringBuilder/append(java.lang.Object)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()#java/util/List/size()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()#java/lang/StringBuilder/StringBuilder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select()#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select()#java/lang/StringBuilder/StringBuilder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select()#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()#java/lang/StringBuilder/toString()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])#java/util/Arrays/asList(T[])
com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])#java/util/List/contains(java.lang.Object)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/delete()#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/delete()#java/lang/StringBuilder/StringBuilder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/delete()#java/lang/StringBuilder/append(char)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/bj58/oceanus/client/orm/OceanusSqlBuilder/select(java.lang.String[])#java/lang/StringBuilder/append(char)
com/mdeng/common/http/HttpResponseHandlers/jsonHandler(java.lang.Class)#com/mdeng/common/http/HttpResponseHandlers/JsonEntityHandler/JsonEntityHandler(java.lang.Class)
com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)#java/io/PrintStream/println(int)
com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)#java/lang/String/length()
com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)#com/mdeng/quiz/rk/RK/equal(java.lang.String,java.lang.String,int)
com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)#com/mdeng/quiz/rk/RK/foo(int,int,int)
com/mdeng/quiz/rk/RK/equal(java.lang.String,java.lang.String,int)#java/lang/String/charAt(int)
com/mdeng/quiz/rk/RK/equal(java.lang.String,java.lang.String,int)#java/lang/String/length()
com/mdeng/quiz/rk/RK/main(java.lang.String[])#com/mdeng/quiz/rk/RK/RK()
com/mdeng/quiz/rk/RK/main(java.lang.String[])#com/mdeng/quiz/rk/RK/rk(java.lang.String,java.lang.String)
com/mdeng/quiz/rk/RK/foo(int,int,int)#java/lang/String/charAt(int)
com/mdeng/quiz/rk/RK/foo(int,int,int)#java/lang/Integer/toBinaryString(int)
com/mdeng/quiz/rk/RK/foo(int,int,int)#java/lang/String/length()
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/setCellValue(int,java.lang.String)#com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/cellReference(int)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/setCellValue(int,java.lang.String)#java/util/Map/put(K,V)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/cellReference(int)#java/lang/String/valueOf(char)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/cellReference(int)#com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/getRowIndex()
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/getCellValue(int)#java/util/Map/get(java.lang.Object)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/getCellValue(int)#com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/cellReference(int)
com/mdeng/quiz/pattern/FactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/FactoryPattern/AbstractFactory/create()
com/mdeng/quiz/pattern/FactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/FactoryPattern/FactoryPattern()
com/mdeng/quiz/pattern/FactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/FactoryPattern/ConcreteFactoryA/ConcreteFactoryA()
com/mdeng/quiz/pattern/FactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/FactoryPattern/ConcreteFactoryB/ConcreteFactoryB()
com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)#com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)
com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)#com/mdeng/quiz/sort/MergeSort/merge(T[],int,int,int)
com/mdeng/quiz/sort/MergeSort/merge(T[],int,int,int)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/search/BinarySearch/binarySearch(T[],int,int,T)#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/search/BinarySearch/binarySearch(T[],int,int,T)#java/lang/Comparable/compareTo(T)
com/mdeng/common/dataimport/excel/SmallExcelImporter/waitForComplete()#java/util/concurrent/ExecutorService/shutdown()
com/mdeng/common/dataimport/excel/SmallExcelImporter/waitForComplete()#java/util/concurrent/ExecutorService/awaitTermination(long,java.util.concurrent.TimeUnit)
com/mdeng/common/dataimport/excel/SmallExcelImporter/exec()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/mdeng/common/dataimport/excel/SmallExcelImporter/exec()#com/mdeng/common/dataimport/excel/SmallExcelImporter/Scaner/Scaner(java.io.File)
com/mdeng/quiz/pattern/AbstractFactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AbstractFactoryPattern/AbstractFactoryPattern()
com/mdeng/quiz/pattern/AbstractFactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteFactory1/ConcreteFactory1()
com/mdeng/quiz/pattern/AbstractFactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AbstractFactoryPattern/AbstractFactoty/createProductA()
com/mdeng/quiz/pattern/AbstractFactoryPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/AbstractFactoryPattern/AbstractFactoty/createProductB()
com/mdeng/quiz/graph/astar/N/equals(java.lang.Object)#java/lang/Object/getClass()
com/mdeng/quiz/graph/astar/N/compareTo(com.mdeng.quiz.graph.astar.N)#java/lang/Integer/compareTo(java.lang.Integer)
com/mdeng/quiz/graph/astar/N/compareTo(com.mdeng.quiz.graph.astar.N)#java/lang/Integer/valueOf(int)
com/mdeng/quiz/graph/Prim/prim(java.util.List,com.mdeng.quiz.graph.Prim.Vertex)#java/util/Queue/add(E)
com/mdeng/quiz/graph/Prim/prim(java.util.List,com.mdeng.quiz.graph.Prim.Vertex)#java/util/Collection/isEmpty()
com/mdeng/quiz/graph/Prim/prim(java.util.List,com.mdeng.quiz.graph.Prim.Vertex)#java/util/PriorityQueue/PriorityQueue()
com/mdeng/quiz/graph/Prim/prim(java.util.List,com.mdeng.quiz.graph.Prim.Vertex)#java/util/Collection/contains(java.lang.Object)
com/mdeng/quiz/graph/Prim/prim(java.util.List,com.mdeng.quiz.graph.Prim.Vertex)#java/util/Queue/remove()
com/mdeng/common/http/HttpRequestBuilder/execute(com.mdeng.common.http.ResponseHandler)#java/lang/Throwable/getMessage()
com/mdeng/common/http/HttpRequestBuilder/execute()#com/mdeng/common/http/HttpRequestBuilder/execute(com.mdeng.common.http.ResponseHandler)
com/mdeng/common/http/HttpRequestBuilder/create()#com/mdeng/common/http/HttpRequestBuilder/HttpRequestBuilder()
com/mdeng/note/storage/impl/HdfsNoteStorage/save(com.mdeng.note.entities.Note)#com/mdeng/note/entities/Note/getPid()
com/mdeng/note/storage/impl/HdfsNoteStorage/save(com.mdeng.note.entities.Note)#com/mdeng/note/storage/impl/HdfsStorage/getFS()
com/mdeng/note/storage/impl/HdfsNoteStorage/save(com.mdeng.note.entities.Note)#com/mdeng/note/entities/Note/getId()
com/mdeng/note/storage/impl/HdfsNoteStorage/save(com.mdeng.note.entities.Note)#com/mdeng/note/storage/impl/HdfsStorage/writeFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Object)
com/mdeng/note/storage/impl/HdfsNoteStorage/main(java.lang.String[])#com/mdeng/note/storage/impl/HdfsNoteStorage/HdfsNoteStorage()
com/mdeng/note/storage/impl/HdfsNoteStorage/main(java.lang.String[])#com/mdeng/note/storage/impl/HdfsNoteStorage/save(com.mdeng.note.entities.Note)
com/mdeng/note/storage/impl/HdfsNoteStorage/main(java.lang.String[])#com/mdeng/note/entities/Note/Note()
com/mdeng/note/storage/impl/HdfsNoteStorage/main(java.lang.String[])#com/mdeng/note/storage/impl/HdfsStorage/setUri(java.lang.String)
com/mdeng/note/storage/impl/HdfsNoteStorage/main(java.lang.String[])#java/lang/System/exit(int)
com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)#java/util/regex/Pattern/compile(java.lang.String,int)
com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)#java/util/regex/Matcher/group(int)
com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)#java/util/regex/Matcher/find()
com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/serank/SERankRegex/matchNonEmptyValue(java.lang.String,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String,int)
com/mdeng/serank/SERankRegex/matchNonEmptyValue(java.lang.String,java.lang.String)#java/util/regex/Matcher/group()
com/mdeng/serank/SERankRegex/matchNonEmptyValue(java.lang.String,java.lang.String)#java/util/regex/Matcher/find()
com/mdeng/serank/SERankRegex/matchNonEmptyValue(java.lang.String,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String,int)
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/regex/Matcher/group()
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/List/add(E)
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/regex/Matcher/find()
com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/quiz/search/BFS/printPath(com.mdeng.quiz.search.BFS.Vertex,com.mdeng.quiz.search.BFS.Vertex)#com/mdeng/quiz/search/BFS/visit(com.mdeng.quiz.search.BFS.Vertex)
com/mdeng/quiz/search/BFS/printPath(com.mdeng.quiz.search.BFS.Vertex,com.mdeng.quiz.search.BFS.Vertex)#com/mdeng/quiz/search/BFS/printPath(com.mdeng.quiz.search.BFS.Vertex,com.mdeng.quiz.search.BFS.Vertex)
com/mdeng/quiz/search/BFS/dfs_visit(com.mdeng.quiz.search.BFS.Vertex)#com/mdeng/quiz/search/BFS/dfs_visit(com.mdeng.quiz.search.BFS.Vertex)
com/mdeng/quiz/search/BFS/dfs(java.util.List)#com/mdeng/quiz/search/BFS/dfs_visit(com.mdeng.quiz.search.BFS.Vertex)
com/mdeng/quiz/search/BFS/bfs(java.util.List,com.mdeng.quiz.search.BFS.Vertex)#java/util/Queue/add(E)
com/mdeng/quiz/search/BFS/bfs(java.util.List,com.mdeng.quiz.search.BFS.Vertex)#java/util/Collection/isEmpty()
com/mdeng/quiz/search/BFS/bfs(java.util.List,com.mdeng.quiz.search.BFS.Vertex)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/search/BFS/bfs(java.util.List,com.mdeng.quiz.search.BFS.Vertex)#java/util/Queue/remove()
com/mdeng/common/dataimport/excel/SmallExcelImporter/Scaner/run()#java/io/File/getName()
com/mdeng/common/dataimport/excel/SmallExcelImporter/Scaner/run()#java/io/FileInputStream/FileInputStream(java.io.File)
com/mdeng/quiz/StackQueue/remove()#java/util/Vector/isEmpty()
com/mdeng/quiz/StackQueue/remove()#java/util/NoSuchElementException/NoSuchElementException()
com/mdeng/quiz/StackQueue/remove()#java/util/Stack/push(E)
com/mdeng/quiz/StackQueue/remove()#java/util/Stack/pop()
com/mdeng/quiz/StackQueue/add(E)#java/util/Stack/push(E)
com/mdeng/quiz/dp/SplitSum/split(int)#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/dp/SplitSum/split(int)#java/io/PrintStream/println()
com/mdeng/quiz/dp/SplitSum/split(int)#java/io/PrintStream/printf(java.lang.String,java.lang.Object[])
com/mdeng/quiz/dp/SplitSum/main(java.lang.String[])#com/mdeng/quiz/dp/SplitSum/split(int)
com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteFactory1/createProductA()#com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteProductA1/ConcreteProductA1()
com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteFactory1/createProductB()#com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteProductB1/ConcreteProductB1()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#java/lang/Throwable/printStackTrace()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#com/mdeng/note/es/NodeManager/getInstance()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#com/mdeng/note/es/metadata/IMetadata/getType()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#com/mdeng/note/es/metadata/IMetadata/getIndex()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#com/mdeng/note/es/metadata/IMetadata/getSource()
com/mdeng/note/es/index/IndexExecutorImpl/index(T)#com/mdeng/note/es/metadata/IMetadata/getId()
com/mdeng/oceanusex/dal/Pagination/setTotal(int)#java/lang/Math/ceil(double)
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/reflect/Field/getName()
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/String/toUpperCase()
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/reflect/Field/getType()
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/String/substring(int,int)
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/String/substring(int)
com/mdeng/common/dataimport/Importable/preprocess()#com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])
com/mdeng/common/dataimport/Importable/preprocess()#com/mdeng/common/dataimport/Importable/processItem(java.lang.String)
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/Object/equals(java.lang.Object)
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class<?>[])
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/Object/getClass()
com/mdeng/common/dataimport/Importable/preprocess()#java/lang/Class/getDeclaredFields()
com/mdeng/common/dataimport/Importable/removeInvalids(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/mdeng/common/dataimport/Importable/removeInvalids(java.lang.String)#com/mdeng/common/dataimport/Importable/regexOfInvalids()
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#java/util/List/toArray(T[])
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#java/lang/String/length()
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#com/mdeng/common/dataimport/Importable/removeInvalids(java.lang.String)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String[])#java/util/List/add(E)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String)#com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String)#com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)
com/mdeng/common/dataimport/Importable/processItem(java.lang.String)#com/mdeng/common/dataimport/Importable/removeInvalids(java.lang.String)
com/mdeng/common/dataimport/Importable/selfCheck()#com/mdeng/common/dataimport/Importable/preprocess()
com/mdeng/quiz/BigSum/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/BigSum/main(java.lang.String[])#com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)
com/mdeng/quiz/BigSum/main(java.lang.String[])#com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/StringBuilder/reverse()
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/String/String(char[])
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/String/length()
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/mdeng/quiz/BigSum/sum(java.lang.String,java.lang.String)#java/lang/String/trim()
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/StringBuilder/reverse()
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/String/String(char[])
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/String/length()
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/mdeng/quiz/BigSum/sub(java.lang.String,java.lang.String)#java/lang/String/trim()
com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteFactory2/createProductA()#com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteProductA2/ConcreteProductA2()
com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteFactory2/createProductB()#com/mdeng/quiz/pattern/AbstractFactoryPattern/ConcreteProductB2/ConcreteProductB2()
com/mdeng/quiz/dp/DPMaxSum/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/dp/DPMaxSum/main(java.lang.String[])#com/mdeng/quiz/dp/DPMaxSum/maxSum2(int[])
com/mdeng/quiz/dp/DPMaxSum/main(java.lang.String[])#com/mdeng/quiz/dp/DPMaxSum/maxSum1(int[])
com/mdeng/quiz/dp/DPMaxSum/main(java.lang.String[])#com/mdeng/quiz/dp/DPMaxSum/DPMaxSum()
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ObjectInputStream/readObject()
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
com/mdeng/common/utils/Copys/deepCopy(T)#java/io/ByteArrayOutputStream/toByteArray()
com/mdeng/quiz/sort/KthMax/kthMax(T[],int,int,int)#com/mdeng/quiz/sort/KthMax/kthMax(T[],int,int,int)
com/mdeng/quiz/sort/KthMax/kthMax(T[],int,int,int)#com/mdeng/quiz/sort/QuickSort/partition(T[],int,int)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/startRow(int)#com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/SimpleRowImpl/SimpleRowImpl(int)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/cell(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/mdeng/common/dataimport/excel/LargeExcelImporter/SheetContentsRowHandler/cell(java.lang.String,java.lang.String)#com/mdeng/common/dataimport/excel/SimpleRow/setCellValue(int,java.lang.String)
com/mdeng/quiz/pattern/TemplateMethodPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/TemplateMethodPattern/Template/operation()
com/mdeng/quiz/pattern/TemplateMethodPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/TemplateMethodPattern/ConcreteA/ConcreteA()
com/mdeng/quiz/pattern/TemplateMethodPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/TemplateMethodPattern/TemplateMethodPattern()
com/mdeng/quiz/thread/ABCABC/A/run()#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/thread/ABCABC/A/run()#java/util/concurrent/BlockingQueue/take()
com/mdeng/quiz/thread/ABCABC/A/run()#java/lang/Throwable/printStackTrace()
com/mdeng/quiz/thread/ABCABC/A/run()#java/util/concurrent/BlockingQueue/put(E)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/lang/ClassLoader/getResource(java.lang.String)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#com/mdeng/common/dataimport/excel/LargeExcelImporter/exec()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#com/mdeng/common/dataimport/excel/LargeExcelImporter/LargeExcelImporter(java.lang.String,com.mdeng.common.dataimport.excel.Function)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/io/File/File(java.net.URI)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/net/URL/toURI()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#com/mdeng/common/dataimport/excel/LargeExcelImporter/waitForComplete()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/io/File/getAbsolutePath()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#com/mdeng/common/dataimport/excel/ExcelImporterTest/LargeFunction/LargeFunction()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/lang/Object/getClass()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testLarge()#java/lang/Class/getClassLoader()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/lang/ClassLoader/getResource(java.lang.String)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#com/mdeng/common/dataimport/excel/SmallExcelImporter/waitForComplete()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#com/mdeng/common/dataimport/excel/SmallExcelImporter/SmallExcelImporter(java.lang.String,com.mdeng.common.dataimport.excel.Function)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/io/File/File(java.net.URI)
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/net/URL/toURI()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#com/mdeng/common/dataimport/excel/SmallExcelImporter/exec()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#com/mdeng/common/dataimport/excel/ExcelImporterTest/SmallFunction/SmallFunction()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/io/File/getAbsolutePath()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/lang/Object/getClass()
com/mdeng/common/dataimport/excel/ExcelImporterTest/testSmall()#java/lang/Class/getClassLoader()
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(T)#com/bj58/oceanus/client/orm/BaseDaoEx/insertAndGetKey(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(T)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(T)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(T)#com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(T)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#java/util/List/toArray()
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/update(T,java.lang.String[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#java/util/List/add(E)
com/bj58/oceanus/client/orm/OceanusSupportImpl/update(T,java.lang.String[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldValue(T)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getByFields(com.bj58.oceanus.client.orm.DBField[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getByFields(com.bj58.oceanus.client.orm.DBField[])#java/util/Arrays/asList(T[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/delete()
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#java/util/List/size()
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/select()
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])#java/util/List/get(int)
com/bj58/oceanus/client/orm/OceanusSupportImpl/exists(java.util.List)#java/util/List/size()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getByFields(com.bj58.oceanus.client.orm.Pagination,com.bj58.oceanus.client.orm.DBField[])#java/util/Arrays/asList(T[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getByFields(com.bj58.oceanus.client.orm.Pagination,com.bj58.oceanus.client.orm.DBField[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(com.bj58.oceanus.client.orm.DBField[])#java/util/Arrays/asList(T[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(com.bj58.oceanus.client.orm.DBField[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/select(java.lang.String[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/lang/String/equalsIgnoreCase(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/util/List/toArray()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/util/Arrays/asList(T[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/util/List/add(E)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/util/List/contains(java.lang.Object)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.Object)#com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.Object)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/delete(java.lang.Object)#com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#java/util/List/toArray()
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#java/util/List/add(E)
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/where(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/select()
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/count(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/checkPgn(com.bj58.oceanus.client.orm.Pagination)
com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSqlBuilder/pagination(com.mdeng.oceanusex.dal.Pagination)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#java/lang/StringBuilder/deleteCharAt(int)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/pagination(java.lang.String,com.bj58.oceanus.client.orm.Pagination,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#java/lang/AbstractStringBuilder/length()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object[])#java/lang/StringBuilder/toString()
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/build()
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/instance(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#java/util/List/size()
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#com/bj58/oceanus/client/orm/OceanusSupportImpl/getFieldsValues(T,java.lang.String[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#java/util/List/add(E)
com/bj58/oceanus/client/orm/OceanusSupportImpl/insert(java.util.List)#com/bj58/oceanus/client/orm/OceanusSqlBuilder/insert()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object)#com/bj58/oceanus/client/orm/OceanusSupportImpl/single(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getById(java.lang.Object)#com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldValue(T)#java/lang/reflect/Field/getName()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldValue(T)#java/lang/String/equals(java.lang.Object)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldValue(T)#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldValue(T)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()#java/lang/reflect/Field/getName()
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()#java/lang/String/equals(java.lang.Object)
com/bj58/oceanus/client/orm/OceanusSupportImpl/getAutoIncrementFieldName()#java/lang/reflect/AccessibleObject/isAnnotationPresent(java.lang.Class)
com/mdeng/quiz/thread/ABCABC/ABC/run()#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/thread/ABCABC/ABC/run()#java/lang/Object/wait()
com/mdeng/quiz/thread/ABCABC/ABC/run()#java/lang/Object/notifyAll()
com/mdeng/quiz/thread/ABCABC/B/run()#java/io/PrintStream/print(java.lang.String)
com/mdeng/quiz/thread/ABCABC/B/run()#java/util/concurrent/BlockingQueue/take()
com/mdeng/quiz/thread/ABCABC/B/run()#java/lang/Throwable/printStackTrace()
com/mdeng/quiz/thread/ABCABC/B/run()#java/util/concurrent/BlockingQueue/put(E)
com/mdeng/serank/executor/SingleTimeExecuteStrategy/execute()#com/mdeng/serank/executor/SERankExtractor/extract(int)
com/mdeng/serank/executor/SingleTimeExecuteStrategy/execute()#com/mdeng/serank/keyword/provider/KeywordGroupProvider/hasNextGroup()
com/mdeng/serank/executor/SingleTimeExecuteStrategy/execute()#com/mdeng/serank/keyword/provider/KeywordGroupProvider/nextGroup()
com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)#com/mdeng/common/http/HttpRequestBuilder/execute(com.mdeng.common.http.ResponseHandler)
com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)#com/mdeng/common/http/HttpRequestBuilder/get(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)#com/mdeng/common/http/HttpRequestBuilder/config(com.mdeng.common.http.RequestConfig)
com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)#com/mdeng/common/http/HttpRequestBuilder/create()
com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)#com/mdeng/serank/proxy/HttpProxyPool/getProxy()
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/spider/AbstractSERankSpider/getPageContent(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/spider/AbstractSERankSpider/extractRank(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/setResult(com.mdeng.serank.spider.GrabResult)
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/getKeyword()
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/spider/AbstractSERankSpider/getUrl(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#java/util/List/size()
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/spider/AbstractSERankSpider/getDivs(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/addRankInfo(com.mdeng.serank.keyword.Rank)
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#java/lang/String/split(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#java/net/URL/URL(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#java/lang/Throwable/getMessage()
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)#java/net/URL/getHost()
com/mdeng/serank/spider/AbstractSERankSpider/run()#java/lang/Enum/equals(java.lang.Object)
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/KeywordRank/getKeyword()
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/KeywordRank/getResult()
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/provider/KeywordProvider/nextKeyword(int)
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/KeywordRank/setKeyword(java.lang.String)
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/KeywordRank/setResult(com.mdeng.serank.spider.GrabResult)
com/mdeng/serank/spider/AbstractSERankSpider/run()#java/lang/String/trim()
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/consumer/KeywordRankConsumer/consume(com.mdeng.serank.keyword.KeywordRank)
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/spider/AbstractSERankSpider/grab(com.mdeng.serank.keyword.KeywordRank)
com/mdeng/serank/spider/AbstractSERankSpider/run()#com/mdeng/serank/keyword/provider/KeywordProvider/hasNextKeyword(int)
com/mdeng/quiz/pattern/StrategyPattern/ConcreteStrategyA/calculate(java.lang.Object)#java/lang/Object/toString()
com/mdeng/quiz/thread/ThreadPool/TaskA/run()#java/io/PrintStream/println(java.lang.String)
com/mdeng/serank/keyword/KeywordRank/addRankInfo(com.mdeng.serank.keyword.Rank)#java/util/List/add(E)
com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/common/utils/Charsets/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/common/utils/Charsets/main(java.lang.String[])#com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)
com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)#java/lang/String/getBytes(java.lang.String)
com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)#java/lang/String/String(byte[],java.nio.charset.Charset)
com/mdeng/common/utils/Charsets/remove4BytesUTF8Char(java.lang.String)#java/util/Arrays/copyOf(byte[],int)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/lang/String/split(java.lang.String)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#com/mdeng/common/http/HttpRequestBuilder/execute(com.mdeng.common.http.ResponseHandler)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/lang/String/trim()
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#com/mdeng/common/http/HttpRequestBuilder/get(java.lang.String)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/lang/Throwable/getMessage()
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/io/StringReader/StringReader(java.lang.String)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/lang/Integer/parseInt(java.lang.String)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#com/mdeng/common/http/HttpRequestBuilder/create()
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/mdeng/serank/proxy/TaobaoProxyProvider/getProxies(int)#java/io/BufferedReader/readLine()
com/mdeng/serank/executor/FixedRateExecuteStrategy/execute()#java/util/concurrent/Executors/newScheduledThreadPool(int)
com/mdeng/serank/executor/FixedRateExecuteStrategy/execute()#java/util/concurrent/ScheduledExecutorService/scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)
com/mdeng/serank/executor/FixedRateExecuteStrategy/execute()#com/mdeng/serank/executor/FixedRateExecuteStrategy/execute()/$anonymous1/()
com/mdeng/quiz/thread/ThreadPool/TaskB/call()#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/thread/ToInterrutedException/Task/run()#java/lang/Thread/sleep(long)
com/mdeng/quiz/thread/ToInterrutedException/Task/run()#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/thread/ToInterrutedException/Task/run()#java/lang/Thread/currentThread()
com/mdeng/quiz/thread/ToInterrutedException/Task/run()#java/lang/Thread/interrupt()
com/mdeng/quiz/pattern/StrategyPattern/ConcreteStrategyB/calculate(java.lang.Object)#java/lang/Object/hashCode()
com/mdeng/quiz/GeneralTest/integerTest2()#java/nio/file/Files/write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])
com/mdeng/quiz/GeneralTest/integerTest2()#java/nio/file/Files/createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute<?>[])
com/mdeng/quiz/GeneralTest/integerTest2()#java/lang/String/getBytes()
com/bj58/oceanus/client/orm/BaseDaoEx/insertAndGetKey(java.lang.String,java.lang.Object[])#java/sql/PreparedStatement/executeUpdate()
com/bj58/oceanus/client/orm/BaseDaoEx/insertAndGetKey(java.lang.String,java.lang.Object[])#java/sql/Connection/prepareStatement(java.lang.String)
com/bj58/oceanus/client/orm/BaseDaoEx/insertAndGetKey(java.lang.String,java.lang.Object[])#java/sql/PreparedStatement/setObject(int,java.lang.Object)
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/util/List/size()
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/sql/Statement/executeBatch()
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/util/List/get(int)
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/sql/Connection/prepareStatement(java.lang.String)
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/sql/PreparedStatement/setObject(int,java.lang.Object)
com/bj58/oceanus/client/orm/BaseDaoEx/batch(java.lang.String,java.util.List)#java/sql/PreparedStatement/addBatch()
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/ResultSet/next()
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/ResultSet/getInt(int)
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/PreparedStatement/executeQuery()
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/SQLException/SQLException(java.lang.String)
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/Connection/prepareStatement(java.lang.String)
com/bj58/oceanus/client/orm/BaseDaoEx/excuteCount(java.lang.String,java.lang.Object[])#java/sql/PreparedStatement/setObject(int,java.lang.Object)
com/mdeng/quiz/sort/HeapSort/maintainHeap(T[],int)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/sort/HeapSort/main(java.lang.String[])#com/mdeng/quiz/sort/HeapSort/HeapSort()
com/mdeng/quiz/sort/HeapSort/main(java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
com/mdeng/quiz/sort/HeapSort/main(java.lang.String[])#com/mdeng/quiz/sort/HeapSort/sort(T[])
com/mdeng/quiz/sort/HeapSort/buildHeap(T[])#com/mdeng/quiz/sort/HeapSort/maintainHeap(T[],int)
com/mdeng/quiz/sort/HeapSort/sort(T[])#com/mdeng/quiz/sort/HeapSort/maintainHeap(T[],int)
com/mdeng/quiz/sort/HeapSort/sort(T[])#com/mdeng/quiz/sort/HeapSort/buildHeap(T[])
com/mdeng/quiz/dp/CnmTest/test()#com/mdeng/quiz/search/Cnm/cnm(int[],int)
com/mdeng/quiz/dp/CnmTest/test()#com/mdeng/quiz/search/Cnm/Cnm()
com/mdeng/common/dataimport/excel/ExcelImporterTest/LargeFunction/apply(com.mdeng.common.dataimport.excel.SimpleRow)#java/io/PrintStream/println(java.lang.String)
com/mdeng/common/dataimport/excel/ExcelImporterTest/LargeFunction/apply(com.mdeng.common.dataimport.excel.SimpleRow)#com/mdeng/common/dataimport/excel/SimpleRow/getRowIndex()
com/mdeng/quiz/pattern/ObserverPattern/main(java.lang.String[])#java/util/Observable/notifyObservers()
com/mdeng/quiz/pattern/ObserverPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ObserverPattern/ObserverPattern()
com/mdeng/quiz/pattern/ObserverPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ObserverPattern/ConcreteSubject/ConcreteSubject()
com/mdeng/quiz/pattern/ObserverPattern/main(java.lang.String[])#java/util/Observable/addObserver(java.util.Observer)
com/mdeng/quiz/pattern/ObserverPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/ObserverPattern/ConcreteObserver/ConcreteObserver()
com/ideng/common/utils/StopwatchTest/test()#com/mdeng/common/utils/Stopwatch/Stopwatch()
com/ideng/common/utils/StopwatchTest/test()#com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)
com/ideng/common/utils/StopwatchTest/test()#com/mdeng/common/utils/Stopwatch/start()
com/ideng/common/utils/StopwatchTest/test()#java/util/concurrent/TimeUnit/sleep(long)
com/ideng/common/utils/StopwatchTest/test()#com/mdeng/common/utils/Stopwatch/mark()
com/ideng/common/utils/StopwatchTest/test()#java/util/List/get(int)
com/mdeng/serank/application/SERankApplication/main(java.lang.String[])#com/mdeng/serank/executor/StrategyExecutor/execute()
com/mdeng/quiz/pattern/BridgePattern/Windows/drawText()#com/mdeng/quiz/pattern/BridgePattern/WindowsDrawImpl/drawText()
com/mdeng/quiz/pattern/BridgePattern/Windows/drawRect()#com/mdeng/quiz/pattern/BridgePattern/WindowsDrawImpl/drawLine()
com/mdeng/common/dataimport/excel/LargeExcelImporter/exec()#com/mdeng/common/dataimport/excel/LargeExcelImporter/Scaner/Scaner(java.io.File)
com/mdeng/common/dataimport/excel/LargeExcelImporter/exec()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/mdeng/common/dataimport/excel/LargeExcelImporter/waitForComplete()#java/util/concurrent/ExecutorService/shutdown()
com/mdeng/common/dataimport/excel/LargeExcelImporter/waitForComplete()#java/util/concurrent/ExecutorService/awaitTermination(long,java.util.concurrent.TimeUnit)
com/mdeng/quiz/MinMax/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/MinMax/main(java.lang.String[])#com/mdeng/quiz/MinMax/getMinMax(int[])
com/mdeng/quiz/MinMax/main(java.lang.String[])#com/mdeng/quiz/MinMax/MinMax()
com/mdeng/quiz/dp/LIS/main(java.lang.String[])#com/mdeng/quiz/dp/LIS/lis2(int[])
com/mdeng/quiz/dp/LIS/main(java.lang.String[])#java/io/PrintStream/println(int)
com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)#java/util/Calendar/setTime(java.util.Date)
com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)#java/text/DateFormat/parse(java.lang.String)
com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)#com/mdeng/common/utils/Dates/now()
com/mdeng/common/utils/Dates/isValid(java.lang.String,java.lang.String)#com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)
com/mdeng/common/utils/Dates/format(java.util.Calendar,java.lang.String)#java/util/Calendar/getTime()
com/mdeng/common/utils/Dates/format(java.util.Calendar,java.lang.String)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/mdeng/common/utils/Dates/format(java.util.Calendar,java.lang.String)#java/text/DateFormat/format(java.util.Date)
com/mdeng/common/utils/Dates/before(java.util.Calendar,long)#java/util/Calendar/setTimeInMillis(long)
com/mdeng/common/utils/Dates/before(java.util.Calendar,long)#java/util/Calendar/getTimeInMillis()
com/mdeng/common/utils/Dates/afterNow(long)#com/mdeng/common/utils/Dates/now()
com/mdeng/common/utils/Dates/afterNow(long)#com/mdeng/common/utils/Dates/after(java.util.Calendar,long)
com/mdeng/common/utils/Dates/now(java.lang.String)#com/mdeng/common/utils/Dates/parse(java.lang.String,java.lang.String)
com/mdeng/common/utils/Dates/now(java.lang.String)#com/mdeng/common/utils/Dates/formatNow(java.lang.String)
com/mdeng/common/utils/Dates/now()#java/util/Calendar/getInstance()
com/mdeng/common/utils/Dates/after(java.util.Calendar,long)#java/util/Calendar/setTimeInMillis(long)
com/mdeng/common/utils/Dates/after(java.util.Calendar,long)#java/util/Calendar/getTimeInMillis()
com/mdeng/common/utils/Dates/formatNow(java.lang.String)#com/mdeng/common/utils/Dates/format(java.util.Calendar,java.lang.String)
com/mdeng/common/utils/Dates/formatNow(java.lang.String)#com/mdeng/common/utils/Dates/now()
com/mdeng/common/utils/Dates/beforeNow(long)#com/mdeng/common/utils/Dates/before(java.util.Calendar,long)
com/mdeng/common/utils/Dates/beforeNow(long)#com/mdeng/common/utils/Dates/now()
com/mdeng/quiz/pattern/ProxyPattern/DynamicProxy/invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/mdeng/quiz/pattern/TemplateMethodPattern/Template/operation()#com/mdeng/quiz/pattern/TemplateMethodPattern/Template/step1()
com/mdeng/quiz/pattern/TemplateMethodPattern/Template/operation()#com/mdeng/quiz/pattern/TemplateMethodPattern/Template/step2()
com/mdeng/quiz/pattern/StrategyPattern/Context/operation(java.lang.Object)#com/mdeng/quiz/pattern/StrategyPattern/Strategy/calculate(java.lang.Object)
com/mdeng/quiz/pattern/DecoratorPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorB/operation()
com/mdeng/quiz/pattern/DecoratorPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/DecoratorPattern/DecoratorPattern()
com/mdeng/quiz/pattern/DecoratorPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteComponent/ConcreteComponent()
com/mdeng/quiz/pattern/DecoratorPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorB/ConcreteDecoratorB(com.mdeng.quiz.pattern.DecoratorPattern.Component)
com/mdeng/quiz/pattern/DecoratorPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/DecoratorPattern/ConcreteDecoratorA/ConcreteDecoratorA(com.mdeng.quiz.pattern.DecoratorPattern.Component)
com/mdeng/quiz/poj/CatchCow/main(java.lang.String[])#java/util/Scanner/nextInt()
com/mdeng/quiz/poj/CatchCow/main(java.lang.String[])#java/io/PrintStream/println(int)
com/mdeng/quiz/poj/CatchCow/main(java.lang.String[])#com/mdeng/quiz/poj/CatchCow/minTime2(int,int)
com/mdeng/quiz/poj/CatchCow/main(java.lang.String[])#java/util/Scanner/Scanner(java.io.InputStream)
com/mdeng/quiz/poj/CatchCow/main(java.lang.String[])#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/lang/Integer/intValue()
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/util/Queue/add(E)
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/util/Collection/isEmpty()
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/lang/Integer/valueOf(int)
com/mdeng/quiz/poj/CatchCow/minTime2(int,int)#java/util/Queue/remove()
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/lang/Integer/intValue()
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/util/Queue/add(E)
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/util/Collection/isEmpty()
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/lang/Integer/valueOf(int)
com/mdeng/quiz/poj/CatchCow/minTime(int,int)#java/util/Queue/remove()
com/ideng/common/utils/RandomsTest/randTest()#java/util/ArrayList/ArrayList()
com/ideng/common/utils/RandomsTest/randTest()#com/mdeng/common/utils/Randoms/rand(java.util.Collection,int)
com/ideng/common/utils/RandomsTest/randTest()#java/util/Collection/size()
com/ideng/common/utils/RandomsTest/randTest()#java/util/List/add(E)
com/ideng/common/utils/RandomsTest/randTest()#java/util/List/get(int)
com/mdeng/quiz/pattern/BuilderPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BuilderPattern/ConcreteBuilder/ConcreteBuilder()
com/mdeng/quiz/pattern/BuilderPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BuilderPattern/BuilderPattern()
com/mdeng/quiz/pattern/BuilderPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BuilderPattern/Director/Director(com.mdeng.quiz.pattern.BuilderPattern.Builder)
com/mdeng/quiz/pattern/BuilderPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BuilderPattern/Director/build()
com/mdeng/quiz/pattern/BuilderPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/BuilderPattern/ConcreteBuilder/getResult()
com/mdeng/quiz/pattern/StrategyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/StrategyPattern/StrategyPattern()
com/mdeng/quiz/pattern/StrategyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/StrategyPattern/ConcreteStrategyA/ConcreteStrategyA()
com/mdeng/quiz/pattern/StrategyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/StrategyPattern/ConcreteStrategyB/ConcreteStrategyB()
com/mdeng/quiz/pattern/StrategyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/StrategyPattern/Context/Context(com.mdeng.quiz.pattern.StrategyPattern.Strategy)
com/mdeng/quiz/pattern/StrategyPattern/main(java.lang.String[])#com/mdeng/quiz/pattern/StrategyPattern/Context/operation(java.lang.Object)
com/mdeng/common/http/HttpResponseHandlers/JsonEntityHandler/handleResponse(com.mdeng.common.http.HttpResponse)#java/lang/Throwable/printStackTrace()
com/mdeng/common/http/HttpResponseHandlers/JsonEntityHandler/handleResponse(com.mdeng.common.http.HttpResponse)#com/mdeng/common/utils/Jsons/json2Obj(java.io.InputStream,java.lang.Class)
com/mdeng/quiz/graph/GraphTest/test()#java/util/Queue/add(E)
com/mdeng/quiz/graph/GraphTest/test()#java/io/PrintStream/println(int)
com/mdeng/quiz/graph/GraphTest/test()#java/util/Collection/isEmpty()
com/mdeng/quiz/graph/GraphTest/test()#java/util/PriorityQueue/PriorityQueue()
com/mdeng/quiz/graph/GraphTest/test()#com/mdeng/quiz/graph/GraphTest/foo(com.mdeng.quiz.graph.A)
com/mdeng/quiz/graph/GraphTest/test()#com/mdeng/quiz/graph/A/A(int)
com/mdeng/quiz/graph/GraphTest/test()#java/util/Queue/remove()
com/mdeng/quiz/graph/GraphTest/test1()#java/io/PrintStream/println(int)
com/mdeng/quiz/graph/GraphTest/test1()#com/mdeng/quiz/graph/GraphTest/f(int)
com/mdeng/quiz/graph/GraphTest/foo(com.mdeng.quiz.graph.A)#com/mdeng/quiz/graph/A/A(int)
com/mdeng/quiz/poj/PrimePath/main(java.lang.String[])#java/util/Scanner/nextByte()
com/mdeng/quiz/poj/PrimePath/main(java.lang.String[])#java/util/Scanner/nextShort()
com/mdeng/quiz/poj/PrimePath/main(java.lang.String[])#java/util/Scanner/Scanner(java.io.InputStream)
com/mdeng/quiz/poj/PrimePath/main(java.lang.String[])#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/mdeng/quiz/poj/PrimePath/main(java.lang.String[])#com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/util/Queue/add(E)
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/io/PrintStream/println(int)
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/util/Collection/isEmpty()
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/lang/Integer/shortValue()
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#com/mdeng/quiz/poj/PrimePath/isPrime(int)
com/mdeng/quiz/poj/PrimePath/findMinPrimePath(int,int)#java/util/Queue/remove()
com/mdeng/quiz/pattern/SingletonB/getInstance()#com/mdeng/quiz/pattern/SingletonB/SingletonB()
com/mdeng/quiz/pattern/FacadePattern/Compiler/compile()#com/mdeng/quiz/pattern/FacadePattern/Scanner/scan()
com/mdeng/quiz/pattern/FacadePattern/Compiler/compile()#com/mdeng/quiz/pattern/FacadePattern/Parser/parse()
com/mdeng/quiz/poj/NonzeroMultiple/main(java.lang.String[])#java/util/Scanner/nextByte()
com/mdeng/quiz/poj/NonzeroMultiple/main(java.lang.String[])#java/util/Scanner/Scanner(java.io.InputStream)
com/mdeng/quiz/poj/NonzeroMultiple/main(java.lang.String[])#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/mdeng/quiz/poj/NonzeroMultiple/main(java.lang.String[])#com/mdeng/quiz/poj/NonzeroMultiple/find(byte)
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/util/Queue/add(E)
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/lang/Long/valueOf(long)
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/util/Collection/isEmpty()
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/util/LinkedList/LinkedList()
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/io/PrintStream/println(java.lang.Object)
com/mdeng/quiz/poj/NonzeroMultiple/find(byte)#java/util/Queue/remove()
com/mdeng/quiz/graph/Dijkstra/dijkstra(java.util.List,com.mdeng.quiz.graph.Dijkstra.Vertex)#java/util/Queue/add(E)
com/mdeng/quiz/graph/Dijkstra/dijkstra(java.util.List,com.mdeng.quiz.graph.Dijkstra.Vertex)#java/util/Collection/isEmpty()
com/mdeng/quiz/graph/Dijkstra/dijkstra(java.util.List,com.mdeng.quiz.graph.Dijkstra.Vertex)#java/util/PriorityQueue/PriorityQueue()
com/mdeng/quiz/graph/Dijkstra/dijkstra(java.util.List,com.mdeng.quiz.graph.Dijkstra.Vertex)#java/util/Queue/remove()
com/mdeng/quiz/sort/SortTest/test()#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test()#com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test1()#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test1()#com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test3()#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test3()#com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test4()#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test4()#com/mdeng/quiz/sort/MergeSort/sort(T[],int,int)
com/mdeng/quiz/sort/SortTest/test5()#com/mdeng/quiz/sort/KthMax/kthMax(T[],int,int,int)
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/getGroup()
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/getKeyword()
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/Rank/getHost()
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/KeywordRank/getRankInfos()
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/serank/keyword/Rank/getRank()
com/mdeng/serank/keyword/consumer/KeywordRankLogConsumer/consume(com.mdeng.serank.keyword.KeywordRank)#com/mdeng/common/utils/Dates/formatNow(java.lang.String)
com/mdeng/common/utils/Pinyins/fullPinyin(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
com/mdeng/common/utils/Pinyins/fullPinyin(java.lang.String)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/mdeng/common/utils/Pinyins/fullPinyin(java.lang.String)#java/lang/String/charAt(int)
com/mdeng/common/utils/Pinyins/fullPinyin(java.lang.String)#java/lang/String/length()
com/mdeng/common/utils/Pinyins/fullPinyin(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/common/utils/Pinyins/shortPinyin(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
com/mdeng/common/utils/Pinyins/shortPinyin(java.lang.String)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/mdeng/common/utils/Pinyins/shortPinyin(java.lang.String)#java/lang/String/charAt(int)
com/mdeng/common/utils/Pinyins/shortPinyin(java.lang.String)#java/lang/String/length()
com/mdeng/common/utils/Pinyins/shortPinyin(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/mdeng/serank/mapreduce/SERankMRTest/testReducer()#java/util/ArrayList/ArrayList()
com/mdeng/serank/mapreduce/SERankMRTest/setUp()#com/mdeng/serank/mapreduce/SERankReducer/SERankReducer()
com/mdeng/serank/mapreduce/SERankMRTest/setUp()#com/mdeng/serank/mapreduce/SERankMapper/SERankMapper()
com/mdeng/serank/mapreduce/SERankMRTest/testMapper2()#java/lang/Object/Object()
com/mdeng/serank/mapreduce/SERankMRTest/testMapper()#java/lang/Object/Object()
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/common/utils/Charsets/removeHtml(java.lang.String)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#java/util/ArrayList/ArrayList()
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#java/lang/String/trim()
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/SERankRegex/matchNthValue(java.lang.String,java.lang.String,int)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#java/util/List/add(E)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/keyword/Rank/setHost(java.lang.String)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/keyword/Rank/Rank()
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/keyword/Rank/setRank(int)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/spider/AbstractSERankSpider/getMainHost(java.lang.String)
com/mdeng/serank/spider/BaiduRankSpider/extractRank(java.lang.String)#com/mdeng/serank/SERankRegex/matchNonEmptyValue(java.lang.String,java.lang.String)
com/mdeng/serank/spider/BaiduRankSpider/getDivs(java.lang.String)#com/mdeng/serank/SERankRegex/matchValues(java.lang.String,java.lang.String)
com/mdeng/quiz/dp/LCS/lcs(T[],T[])#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/dp/LCS/lcs2(T[],T[])#java/lang/Comparable/compareTo(T)
com/mdeng/common/utils/Jsons/json2List(java.lang.String,java.lang.Class)#java/util/Arrays/asList(T[])
com/mdeng/note/storage/impl/HdfsStorage/getFS()#java/net/URI/URI(java.lang.String)
com/mdeng/note/storage/impl/HdfsStorage/writeFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Object)#java/lang/String/getBytes(java.nio.charset.Charset)
com/mdeng/note/storage/impl/HdfsStorage/writeFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Object)#java/nio/charset/Charset/forName(java.lang.String)
com/mdeng/note/storage/impl/HdfsStorage/writeFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Object)#com/mdeng/common/utils/Jsons/obj2Json(java.lang.Object)
com/mdeng/note/storage/impl/HdfsStorage/readFile(com.mdeng.note.storage.impl.FileSystem,java.lang.String,java.lang.Class)#com/mdeng/common/utils/Jsons/json2Obj(java.lang.String,java.lang.Class)
com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)#com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)
com/mdeng/quiz/sort/QuickSort/sort(T[],int,int)#com/mdeng/quiz/sort/QuickSort/partition(T[],int,int)
com/mdeng/quiz/sort/QuickSort/partition(T[],int,int)#java/lang/Comparable/compareTo(T)
com/mdeng/quiz/poj/BitsOfFactorial/foo(java.lang.String)#java/lang/String/charAt(int)
com/mdeng/quiz/poj/BitsOfFactorial/foo(java.lang.String)#java/lang/String/length()
com/mdeng/quiz/poj/BitsOfFactorial/foo(java.lang.String)#java/lang/Exception/Exception(java.lang.String)
com/mdeng/quiz/poj/BitsOfFactorial/main(java.lang.String[])#com/mdeng/quiz/poj/BitsOfFactorial/foo(java.lang.String)
com/mdeng/quiz/poj/BitsOfFactorial/main(java.lang.String[])#java/io/PrintStream/println(char)
com/mdeng/quiz/poj/BitsOfFactorial/main(java.lang.String[])#com/mdeng/quiz/poj/BitsOfFactorial/BitsOfFactorial()
com/mdeng/quiz/StackQueueTest/test1()#java/io/PrintStream/println(java.lang.String)
com/mdeng/quiz/StackQueueTest/test1()#java/io/PrintStream/println(int)
com/mdeng/quiz/StackQueueTest/test1()#java/lang/Integer/toBinaryString(int)
com/mdeng/quiz/StackQueueTest/test()#com/mdeng/quiz/StackQueue/remove()
com/mdeng/quiz/StackQueueTest/test()#java/lang/Integer/intValue()
com/mdeng/quiz/StackQueueTest/test()#com/mdeng/quiz/StackQueue/add(E)
com/mdeng/quiz/StackQueueTest/test()#com/mdeng/quiz/StackQueue/StackQueue()
com/mdeng/quiz/thread/ToInterrutedException/main(java.lang.String[])#com/mdeng/quiz/thread/ToInterrutedException/Task/Task()
com/mdeng/quiz/thread/ToInterrutedException/main(java.lang.String[])#java/lang/Thread/start()
com/mdeng/quiz/thread/ToInterrutedException/main(java.lang.String[])#java/lang/Thread/interrupt()
com/mdeng/quiz/thread/ToInterrutedException/main(java.lang.String[])#java/lang/Thread/Thread(java.lang.Runnable)
com/mdeng/quiz/thread/ABCABC/main(java.lang.String[])#java/lang/Thread/start()
com/mdeng/quiz/thread/ABCABC/main(java.lang.String[])#java/lang/Thread/Thread(java.lang.Runnable)
com/mdeng/quiz/thread/ABCABC/main(java.lang.String[])#java/util/concurrent/SynchronousQueue/SynchronousQueue()
com/mdeng/quiz/thread/ABCABC/main(java.lang.String[])#com/mdeng/quiz/thread/ABCABC/ABC/ABC(int)
com/mdeng/quiz/search/Cnm/cnm(int[],int)#com/mdeng/quiz/search/Cnm/cnm_dp(int[],int,int,int)
com/mdeng/quiz/search/Cnm/print()#java/io/PrintStream/print(int)
com/mdeng/quiz/search/Cnm/print()#java/io/PrintStream/println()
com/mdeng/quiz/search/Cnm/cnm_dp(int[],int,int,int)#com/mdeng/quiz/search/Cnm/print()
com/mdeng/quiz/search/Cnm/cnm_dp(int[],int,int,int)#com/mdeng/quiz/search/Cnm/cnm_dp(int[],int,int,int)
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/util/List/isEmpty()
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/util/List/add(E)
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/lang/Enum/equals(java.lang.Object)
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/util/concurrent/TimeUnit/values()
com/mdeng/common/utils/Stopwatch/getDuration(java.util.concurrent.TimeUnit)#java/util/ArrayList/ArrayList()
com/mdeng/common/utils/Stopwatch/start()#java/lang/System/currentTimeMillis()
com/mdeng/common/utils/Stopwatch/mark()#java/util/List/add(E)
com/mdeng/common/utils/Stopwatch/mark()#java/lang/System/currentTimeMillis()
