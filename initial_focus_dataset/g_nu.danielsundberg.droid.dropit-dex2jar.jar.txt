com/badlogic/gdx/input/RemoteInput/run()#java/io/IOException/printStackTrace()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/getInputStream()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readFloat()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setSoTimeout(int)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/toString()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readBoolean()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/io/PrintStream/println(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readInt()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readChar()
com/badlogic/gdx/input/RemoteInput/run()#java/net/ServerSocket/accept()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setTcpNoDelay(boolean)
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/List/size()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/glutils/FrameBuffer/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteOrder/nativeOrder()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#com/badlogic/gdx/graphics/GL20/glBindTexture(int,int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/IntBuffer/get(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/IntBuffer/flip()
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/IntBuffer/put(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/allocateDirect(int)
com/badlogic/gdx/graphics/glutils/FrameBuffer/build()#java/nio/ByteBuffer/asIntBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/put(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteOrder/nativeOrder()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/allocate(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asCharBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/put(long)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/put(byte)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/put(double)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/put(char)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asLongBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asFloatBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/LongBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asShortBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/IntBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/rewind()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/CharBuffer/order()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/position()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asIntBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/limit()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/DoubleBuffer/get()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/FloatBuffer/put(float)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ByteBuffer/asDoubleBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/toByteBuffer(int,java.nio.Buffer)#java/nio/ShortBuffer/put(short)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/ByteBuffer/get(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/lang/Integer/toString(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/IntBuffer/get(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/ByteBuffer/asIntBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/lang/Float/toString(float)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/ShortBuffer/get(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/FloatBuffer/get(int)
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/ByteBuffer/asFloatBuffer()
com/badlogic/gdx/backends/android/surfaceview/GLLogWrapper/doArrayElement(java.lang.StringBuilder,boolean,java.lang.String,com.badlogic.gdx.backends.android.surfaceview.GLLogWrapper$PointerInfo,int)#java/nio/ByteBuffer/asShortBuffer()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog/setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#nu/danielsundberg/droid/dropit/DropIt/getIntent()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#java/lang/Object/toString()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/content/Intent/getAction()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/os/Bundle/get(java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/content/Intent/getDataString()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder(java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog$Builder/create()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#com/badlogic/gdx/backends/android/AndroidApplication/onCreate(android.os.Bundle)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog/setView(android.view.View)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/os/PowerManager/newWakeLock(int,java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog/setMessage(java.lang.CharSequence)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#nu/danielsundberg/droid/dropit/DropIt/initialize(com.badlogic.gdx.ApplicationListener,boolean)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog/show()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#nu/danielsundberg/droid/dropit/DropIt/getSystemService(java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#nu/danielsundberg/droid/dropit/DropIt/getResources()
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/app/AlertDialog/setIcon(android.graphics.drawable.Drawable)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/util/Log/d(java.lang.String,java.lang.String)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/widget/EditText/EditText(android.content.Context)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/content/res/Resources/getDrawable(int)
nu/danielsundberg/droid/dropit/DropIt/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/OutputStream/close()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/HttpURLConnection/disconnect()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/URL/openConnection()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/MalformedURLException/printStackTrace()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/InputStream/close()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/graphics/Bitmap/getHeight()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/IOException/printStackTrace()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/lang/Math/round(double)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/os/Environment/getExternalStorageDirectory()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/graphics/Bitmap/getWidth()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/OutputStream/flush()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/URL/URL(java.lang.String)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/content/ContentResolver/openInputStream(android.net.Uri)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/File/getAbsolutePath()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/net/Uri/parse(java.lang.String)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/io/InputStreamReader/close()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/graphics/Bitmap/createScaledBitmap(android.graphics.Bitmap,int,int,boolean)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/graphics/BitmapFactory/decodeStream(java.io.InputStream)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#android/content/Context/getContentResolver()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/HttpURLConnection/getInputStream()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/lang/Math/log(double)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/lang/Math/pow(double,double)
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/HttpURLConnection/connect()
nu/danielsundberg/droid/dropit/DropItEngine/downloadFile(java.lang.String)#java/net/HttpURLConnection/setDoInput(boolean)
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#java/util/ArrayList/remove(int)
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#java/lang/Object/wait()
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#java/lang/Object/notifyAll()
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView/getHolder()
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#java/util/ArrayList/isEmpty()
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#java/lang/Runnable/run()
com/badlogic/gdx/backends/android/surfaceview/GLBaseSurfaceView$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onDrawFrame(javax.microedition.khronos.opengles.GL10)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Animator/update(float)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#[S/clone()
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/util/ArrayList/size()
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#[F/clone()
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/util/ArrayList/get(int)
com/badlogic/gdx/graphics/g3d/keyframed/KeyframedModel/sampleAnimationFromMD5(com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Model,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Renderer,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animator,com.badlogic.gdx.graphics.g3d.loaders.md5.MD5Animation,float,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/flip()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/clear()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/put(float[],int,int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/ByteBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/FloatBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/setVertices(float[],int,int)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#com/badlogic/gdx/graphics/GL11/glEnableClientState(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/nio/ByteBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#com/badlogic/gdx/graphics/GL11/glClientActiveTexture(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/nio/FloatBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/VertexBufferObject/bind()#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/lang/Class/getResourceAsStream(java.lang.String)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/InputStream/read(byte[])
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/File/exists()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/File/getAbsolutePath()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/File/mkdirs()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/FileOutputStream/close()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/FileOutputStream/write(byte[],int,int)
com/badlogic/gdx/utils/GdxNativesLoader/extractLibrary(java.lang.String,java.lang.String)#java/io/InputStream/close()
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/lang/Class/getResourceAsStream(java.lang.String)
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/io/InputStream/read(byte[])
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/lang/Long/toString(long)
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/util/zip/CRC32/CRC32()
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/io/InputStream/close()
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/util/zip/CRC32/update(byte[],int,int)
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/GdxNativesLoader/crc(java.lang.String)#java/util/zip/CRC32/getValue()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/Short/parseShort(java.lang.String)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/util/List/get(int)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/String/contains(java.lang.CharSequence)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/util/ArrayList/ArrayList(int)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/util/List/size()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/Exception/printStackTrace()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadModel(java.io.InputStream,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/util/ArrayList/ArrayList()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/util/List/get(int)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/util/List/size()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/Exception/printStackTrace()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loaders/md5/MD5Loader/loadAnimation(java.io.InputStream)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/io/File/getName()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/io/File/File(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/String/replace(char,char)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/String/lastIndexOf(int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/List/size()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/List/size()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/List/size()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/glutils/ShaderProgram/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/files/FileHandle/read()#java/lang/Class/getResourceAsStream(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/isDirectory()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/exists()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/read()#java/lang/String/replace(char,char)
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/read()#java/io/FileInputStream/FileInputStream(java.io.File)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/getPath()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/toString()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(char[],int,int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/read(char[])
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/close()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(java.lang.String,int)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetManager/openFd(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/path()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(android.content.res.AssetFileDescriptor,int)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.io.FileDescriptor,long,long)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetManager/openFd(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/prepare()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/path()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getStartOffset()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/MediaPlayer()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getFileDescriptor()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getLength()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/String/split(java.lang.String,int)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/util/StringTokenizer/nextToken()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont/init(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Integer/intValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getKey()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#android/content/SharedPreferences$Editor/commit()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map/entrySet()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Boolean/booleanValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Long/longValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Float/floatValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#android/content/SharedPreferences/edit()
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/append(char[],int,int)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/Math/min(int,int)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/String/String(char[],int,int)
com/badlogic/gdx/utils/Xml/parse(char[],int,int)#java/lang/StringBuilder/setLength(int)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/util/Iterator/hasNext()
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/nio/FloatBuffer/clear()
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/lang/Float/floatValue()
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/nio/FloatBuffer/position(int)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#com/badlogic/gdx/graphics/GL10/glClear(int)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/nio/FloatBuffer/put(float[])
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/lang/Float/Float(float)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#com/badlogic/gdx/graphics/GL10/glClearColor(float,float,float,float)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/util/Iterator/next()
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#com/badlogic/gdx/graphics/GL10/glEnable(int)
nu/danielsundberg/droid/dropit/rendering/MyRenderer/onDrawFrame(com.badlogic.gdx.graphics.GL10,com.badlogic.gdx.graphics.GLU)#java/util/List/iterator()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/flip()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/clear()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/put(float[],int,int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/ByteBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/FloatBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/setVertices(float[],int,int)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#com/badlogic/gdx/graphics/GL11/glEnableClientState(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/nio/ByteBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#com/badlogic/gdx/graphics/GL11/glClientActiveTexture(int)
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/nio/FloatBuffer/limit()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData/bind()#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setSingleLine()
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setText(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/EditText(android.content.Context)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setView(android.view.View)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/show()
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/get(int)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/size()
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/Stack/push(java.lang.Object)
com/badlogic/gdx/graphics/g2d/tiled/TiledLoader$1/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/Integer/intValue()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/flip()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/util/ArrayList/toArray(java.lang.Object[])
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/util/ArrayList/clear()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/util/ArrayList/size()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/limit(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/util/ArrayList/get(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL10/glViewport(int,int,int,int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL20/glViewport(int,int,int,int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL20/glEnable(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL10/glEnable(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL10/glDisable(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL10/glDepthMask(boolean)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL20/glDepthMask(boolean)
com/badlogic/gdx/graphics/g2d/SpriteCache/begin()#com/badlogic/gdx/graphics/GL20/glDisable(int)
