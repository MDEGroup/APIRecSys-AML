net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/StringBuffer/append(java.lang.Object)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#net/java/games/input/OSXEnvironmentPlugin/logln(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/StringBuffer/toString()
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/System/getProperty(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/Integer/parseInt(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/util/StringTokenizer/nextToken()
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/isMacOSXEqualsOrBetterThan(int,int)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#net/java/games/input/OSXEnvironmentPlugin/log(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/io/IOException/getMessage()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/lang/StringBuffer/StringBuffer()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/util/ArrayList/ArrayList()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/util/List/size()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#net/java/games/input/OSXEnvironmentPlugin/logln(java.lang.String)
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/util/List/toArray(java.lang.Object[])
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/lang/StringBuffer/toString()
net/java/games/input/OSXEnvironmentPlugin/enumerateControllers()#java/lang/StringBuffer/append(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/setText(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/text/Document/addDocumentListener(javax.swing.event.DocumentListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/getValue()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/JOptionPane(java.lang.Object,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JPanel/add(java.awt.Component,int)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JDialog/setVisible(boolean)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JPanel/add(java.awt.Component)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JDialog/addWindowFocusListener(java.awt.event.WindowFocusListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#java/awt/FlowLayout/FlowLayout()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JLabel/setBorder(javax.swing.border.Border)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/selectInitialValue()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/border/EmptyBorder/EmptyBorder(java.awt.Insets)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/setComponentOrientation(java.awt.ComponentOrientation)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/OverlayLayout/OverlayLayout(java.awt.Container)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/getBorder()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#java/lang/Integer/intValue()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JPanel/JPanel(java.awt.LayoutManager)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/getRootFrame()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JLabel/JLabel(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#java/awt/Frame/getComponentOrientation()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/setInitialValue(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JOptionPane/createDialog(java.awt.Component,java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/getDocument()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/border/Border/getBorderInsets(java.awt.Component)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JDialog/dispose()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JPanel/setLayout(java.awt.LayoutManager)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JLabel/setAlignmentX(float)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/getText()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/setAlignmentX(float)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JTextField/JTextField(int)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput$3/run()#javax/swing/JLabel/setForeground(java.awt.Color)
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/util/ArrayList/ArrayList()
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/lang/reflect/Array/newInstance(java.lang.Class,int[])
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/util/List/get(int)
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#net/java/games/input/LinuxEnvironmentPlugin/logln(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/util/List/size()
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/util/List/toArray(java.lang.Object[])
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/lang/StringBuffer/toString()
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/lang/StringBuffer/append(int)
net/java/games/input/LinuxEnvironmentPlugin/createComponents(java.util.List,net.java.games.input.LinuxEventDevice)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/input/RemoteInput/run()#java/io/IOException/printStackTrace()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/getInputStream()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readFloat()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setSoTimeout(int)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/toString()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readBoolean()
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/io/PrintStream/println(java.lang.String)
com/badlogic/gdx/input/RemoteInput/run()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readInt()
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/input/RemoteInput/run()#java/io/DataInputStream/readChar()
com/badlogic/gdx/input/RemoteInput/run()#java/net/ServerSocket/accept()
com/badlogic/gdx/input/RemoteInput/run()#java/net/Socket/setTcpNoDelay(boolean)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/Object/toString()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(int)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/String/charAt(int)
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/TextFormatter/simpleFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getX()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/validate()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getY()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Container/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/WidgetGroup/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/validate()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Container/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Container/clipEnd()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexBufferObjectSubData/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Double/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Boolean/valueOf(boolean)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/isInterface()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/ArrayList/ArrayList()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Boolean/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getComponentType()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Double/valueOf(double)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Long/valueOf(long)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Byte/valueOf(byte)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/String/charAt(int)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Byte/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Short/valueOf(short)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Float/valueOf(float)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getName()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Character/valueOf(char)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/util/Collection/add(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Short/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Float/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Integer/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Class/getEnumConstants()
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/Long/valueOf(java.lang.String)
com/badlogic/gdx/utils/Json/readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Iterator/hasNext()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#com/badlogic/gdx/utils/OrderedMap$OrderedMapValues/iterator()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Iterator/next()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/util/Arrays/deepEquals(java.lang.Object[],java.lang.Object[])
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Class/getName()
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/writeFields(java.lang.Object)#java/lang/Object/getClass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isPrimitive()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Set/iterator()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/isArray()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getSuperclass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/hasNext()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getComponentType()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getKey()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Iterator/next()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Object/getClass()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map$Entry/getValue()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Collection/iterator()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/util/Map/entrySet()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/Class/getEnumConstants()
com/badlogic/gdx/utils/Json/writeValue(java.lang.Object,java.lang.Class,java.lang.Class)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/VarInsnNode/getNext()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/InsnList/remove(org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/AbstractInsnNode/getNext()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/lang/ClassFormatError/ClassFormatError(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/InsnList/insert(org.objectweb.asm.tree.AbstractInsnNode,org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/analysis/Frame/getStackSize()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/util/Map/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/AbstractInsnNode/getOpcode()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#java/lang/InternalError/InternalError()
org/lwjgl/util/mapped/MappedObjectTransformer/transformArrayAccess(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.VarInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,int)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/Class/getFields()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/reflect/Field/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/IllegalStateException/IllegalStateException()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/Exception/printStackTrace()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/String/startsWith(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/reflect/Field/getModifiers()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/reflect/Field/getName()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/reflect/Field/getType()
org/lwjgl/util/mapped/MappedObjectTransformer/getClassEnums(java.lang.Class,java.util.Map,java.lang.String[])#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/LdcInsnNode/LdcInsnNode(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/lang/Long/valueOf(long)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/util/Map/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/InsnNode/InsnNode(int)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/FieldInsnNode/getOpcode()
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/InsnList/InsnList()
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/FieldInsnNode/FieldInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#java/lang/InternalError/InternalError()
org/lwjgl/util/mapped/MappedObjectTransformer/generateByteBufferInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,long)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#org/objectweb/asm/tree/FieldInsnNode/getOpcode()
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#org/objectweb/asm/tree/InsnList/InsnList()
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#java/lang/InternalError/InternalError()
org/lwjgl/util/mapped/MappedObjectTransformer/generateSetViewInstructions(org.objectweb.asm.tree.FieldInsnNode)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/analysis/Frame/getStack(int)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/MethodInsnNode/getPrevious()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/Type/getInternalName()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/analysis/Frame/getStackSize()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/util/Map/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/MethodInsnNode/getOpcode()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/InsnList/remove(org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/MethodInsnNode/getNext()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/AbstractInsnNode/getNext()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/Integer/valueOf(int)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/Type/getElementType()
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#java/lang/ClassCastException/ClassCastException(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/transformMethodCall(org.objectweb.asm.tree.InsnList,int,java.util.Map,org.objectweb.asm.tree.MethodInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo,java.util.Map)#org/objectweb/asm/tree/analysis/BasicValue/getType()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/Class/getSimpleName()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/Class/isPrimitive()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/Class/getName()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/ClassFormatError/ClassFormatError(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Field/getModifiers()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/AssertionError/AssertionError()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Field/getName()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Modifier/isVolatile(int)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#sun/misc/Unsafe/addressSize()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Field/getType()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/StringBuilder/append(long)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/registerField(boolean,java.lang.String,long,java.lang.reflect.Field)#org/objectweb/asm/Type/getType(java.lang.Class)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/StringBuilder/append(int)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/Class/getAnnotation(java.lang.Class)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/Math/max(long,long)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/util/HashMap/HashMap()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/Class/getEnclosingClass()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/reflect/Field/getName()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/Class/getModifiers()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/InternalError/InternalError(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/register(java.lang.Class)#java/lang/ClassFormatError/ClassFormatError(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#org/objectweb/asm/tree/InsnList/add(org.objectweb.asm.tree.AbstractInsnNode)
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#org/objectweb/asm/tree/FieldInsnNode/getOpcode()
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#org/objectweb/asm/tree/InsnList/InsnList()
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#java/lang/InternalError/InternalError()
org/lwjgl/util/mapped/MappedObjectTransformer/generateViewInstructions(org.objectweb.asm.tree.FieldInsnNode,org.lwjgl.util.mapped.MappedObjectTransformer$MappedSubtypeInfo)#org/objectweb/asm/tree/MethodInsnNode/MethodInsnNode(int,java.lang.String,java.lang.String,java.lang.String)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/String(char[],int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/io/BufferedReader/read()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/substring(int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/Character/isSpace(char)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/String/substring(int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/Character/digit(char,int)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/utils/PropertiesUtils/load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/io/IOException/IOException(java.lang.String)
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/doubleValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/intValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/byteValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/floatValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/shortValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Object/toString()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Character/charValue()
com/badlogic/gdx/utils/UBJsonWriter/value(java.lang.Object)#java/lang/Number/longValue()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/util/Iterator/hasNext()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TiledMap/getProperties()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#java/util/Iterator/next()
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/TmxMapLoader/loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)#com/badlogic/gdx/maps/tiled/TmxMapLoader/loadImageLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/Math/min(int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/io/DataOutputStream/writeInt(int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/remaining()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/ETC1$ETC1Data/write(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/os/Handler/Handler()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/forName(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/lang/Class/newInstance()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/content/res/Resources/getAssets()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#java/io/File/getAbsolutePath()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#com/badlogic/gdx/backends/android/AndroidFragmentApplication/getResources()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#com/badlogic/gdx/backends/android/AndroidFragmentApplication/getActivity()
com/badlogic/gdx/backends/android/AndroidFragmentApplication/initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)#android/support/v4/app/FragmentActivity/getFilesDir()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/concat(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/String/trim()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PolygonRegionLoader/load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/readLine()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/ArrayList/size()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/logging/Logger/info(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/Collection/add(java.lang.Object)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/Object/getClass()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/StringBuffer/StringBuffer()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/Class/forName(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/ArrayList/iterator()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/logging/Logger/warning(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/ArrayList/ArrayList()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/Throwable/printStackTrace()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/Iterator/hasNext()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/Class/newInstance()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/String/toLowerCase()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/String/trim()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/Iterator/next()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/String/equals(java.lang.Object)
net/java/games/input/DefaultControllerEnvironment/getControllers()#net/java/games/input/DefaultControllerEnvironment/logln(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/Class/getName()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/StringBuffer/toString()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/lang/String/startsWith(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/Collection/contains(java.lang.Object)
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/StringTokenizer/nextToken()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/util/StringTokenizer/hasMoreTokens()
net/java/games/input/DefaultControllerEnvironment/getControllers()#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Class/newInstance()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/StringBuffer/append(java.lang.Object)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/io/File/exists()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/io/File/File(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/util/Collection/add(java.lang.Object)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Throwable/printStackTrace()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#net/java/games/input/DefaultControllerEnvironment/logln(java.lang.String)
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Exception/printStackTrace()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Class/getName()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/StringBuffer/toString()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Object/getClass()
net/java/games/input/DefaultControllerEnvironment/scanControllersAt(java.lang.String)#java/lang/Class/getClassLoader()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Map/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/ClassFormatError/ClassFormatError(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Integer/intValue()
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/setVisible(boolean)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/setName(java.lang.String)
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMap/getLayers()
com/badlogic/gdx/maps/tiled/TideMapLoader/loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/TiledMapTileLayer/getProperties()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/lang/Integer/intValue()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/LinkedHashMap/entrySet()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/LinkedHashMap/isEmpty()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/LinkedHashMap/LinkedHashMap(int)
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/Map$Entry/getKey()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/Iterator/next()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/nio/IntBuffer/put(int)
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/lang/Integer/valueOf(int)
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/Map$Entry/getValue()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/nio/IntBuffer/rewind()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/Iterator/hasNext()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/LinkedHashMap/size()
org/lwjgl/opengl/ContextAttribs/getAttribList()#java/util/Set/iterator()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/String(char[],int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/String(char[])
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Double/parseDouble(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(double)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/io/PrintStream/println(java.lang.String)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/io/PrintStream/println()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/Math/min(int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/utils/JsonReader/parse(char[],int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/length()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(char)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/charAt(int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/Character/toChars(int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/String/substring(int,int)
com/badlogic/gdx/utils/JsonReader/unescape(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/util/Iterator/next()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/g2d/PixmapPackerIO$ImageFormat/ordinal()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/utils/OrderedMap/get(java.lang.Object)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/Pixmap$Format/name()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/io/Writer/close()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/Texture$TextureFilter/name()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/io/Writer/write(java.lang.String)
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/PixmapPackerIO/save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters)#com/badlogic/gdx/graphics/g2d/PixmapPackerIO$ImageFormat/getExtension()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/length()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/toString()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/util/Iterator/hasNext()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/TiledMap/getProperties()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/util/Iterator/next()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/substring(int,int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/String/lastIndexOf(int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/resolve(java.lang.String)
com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver)#com/badlogic/gdx/maps/tiled/AtlasTmxMapLoader/getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexBufferObject/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit()
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#java/awt/Dimension/Dimension(int,int)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#java/awt/EventQueue/invokeLater(java.lang.Runnable)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/setDefaultCloseOperation(int)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/getSize()
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/getContentPane()
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/setLocationRelativeTo(java.awt.Component)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#java/awt/Canvas/setSize(java.awt.Dimension)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/pack()
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#java/awt/Container/setPreferredSize(java.awt.Dimension)
com/badlogic/gdx/backends/lwjgl/LwjglFrame/construct(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.lwjgl.LwjglApplicationConfiguration)#com/badlogic/gdx/backends/lwjgl/LwjglFrame/getLocation()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/io/FileInputStream/read(byte[])
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/io/File/exists()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/io/File/File(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/lang/StringBuffer/toString()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/lang/AssertionError/AssertionError()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/io/File/length()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/lang/StringBuffer/StringBuffer(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/util/StringTokenizer/nextToken()
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
net/java/games/input/PluginClassLoader/loadClassFromDirectory(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/io/InputStream/read(byte[])
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/io/File/listFiles(java.io.FileFilter)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/util/jar/JarEntry/getSize()
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/io/File/File(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/lang/StringBuffer/toString()
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/util/jar/JarFile/JarFile(java.io.File)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/util/jar/JarFile/getJarEntry(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/util/jar/JarFile/getInputStream(java.util.zip.ZipEntry)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/lang/AssertionError/AssertionError()
net/java/games/input/PluginClassLoader/loadClassFromJAR(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/toLowerCase()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/toUpperCase()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/StringBuilder/append(int)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/length()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/equals(java.lang.Object)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/startsWith(java.lang.String)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/StringBuilder/toString()
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/charAt(int)
org/lwjgl/opengl/WindowsDisplay/getAdapter()#java/lang/String/substring(int)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/String/toLowerCase()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/Class/getName()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/Class/getConstructor(java.lang.Class[])
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/String/toLowerCase()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/Class/getName()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/lwjgl/audio/OpenALAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/Class/getConstructor(java.lang.Class[])
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/Exception/printStackTrace()
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/Exception/Exception(java.lang.String)
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/StringBuilder/toString()
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/util/Display/setDisplayMode(org.lwjgl.opengl.DisplayMode[],java.lang.String[])#java/io/PrintStream/println(java.lang.Object)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/lang/StringBuilder/append(int)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/util/ArrayList/toArray(java.lang.Object[])
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/util/ArrayList/add(java.lang.Object)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/util/ArrayList/size()
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/io/PrintStream/println(java.lang.Object)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/lang/StringBuilder/toString()
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/util/ArrayList/ArrayList(int)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/io/PrintStream/println(java.lang.String)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/lwjgl/util/Display/getAvailableDisplayModes(int,int,int,int,int,int,int,int)#java/lang/StringBuilder/StringBuilder()
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/util/ArrayList/ArrayList()
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/io/IOException/getMessage()
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/util/List/add(java.lang.Object)
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/LinuxEventDevice/enumerateRumblers()#net/java/games/input/LinuxEnvironmentPlugin/logln(java.lang.String)
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/util/List/size()
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/util/List/toArray(java.lang.Object[])
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/lang/StringBuffer/toString()
net/java/games/input/LinuxEventDevice/enumerateRumblers()#java/lang/StringBuffer/StringBuffer()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/io/BufferedReader/close()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/lang/Runtime/getRuntime()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/lang/Runtime/exec(java.lang.String[])
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/lang/Process/waitFor()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/lang/Process/getInputStream()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/util/ArrayList/ArrayList()
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/util/List/add(java.lang.Object)
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/lwjgl/opengl/LinuxDisplay$Compiz/run(java.lang.String[])#java/io/BufferedReader/readLine()
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/Long/valueOf(long)
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/Long/longValue()
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/StringBuilder/toString()
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#org/lwjgl/opencl/CLObjectChild/getPointer()
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/opencl/CLObjectRegistry/registerObject(org.lwjgl.opencl.CLObjectChild)#java/lang/Object/getClass()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/util/ArrayList/ArrayList()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/GraphicsEnvironment/getLocalGraphicsEnvironment()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/util/ArrayList/toArray(java.lang.Object[])
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/GraphicsEnvironment/getDefaultScreenDevice()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/DisplayMode/getHeight()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/GraphicsDevice/getDisplayModes()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/util/ArrayList/add(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/util/ArrayList/size()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/DisplayMode/getWidth()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/GraphicsDevice/getDisplayMode()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/util/ArrayList/get(int)
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/DisplayMode/getBitDepth()
com/badlogic/gdx/backends/lwjgl/LwjglApplicationConfiguration/getDisplayModes()#java/awt/DisplayMode/getRefreshRate()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getX()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getY()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getButton3()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getButton4()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getSecondaryButton()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/append(int)
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/RuntimeException/RuntimeException(java.lang.String)
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getPrimaryButton()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getWheel()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/RawMouse/getTertiaryButton()
net/java/games/input/RawMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/toString()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/toLowerCase()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/replace(char,char)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/intValue()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/charAt(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/toString(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/length()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/valueOf(int)
com/badlogic/gdx/graphics/g3d/loader/ObjLoader/loadModelData(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/readInt()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/read(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/put(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/graphics/Pixmap$Format/fromGdx2DPixmapFormat(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/PixmapIO$CIM/read(com.badlogic.gdx.files.FileHandle)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/writeInt(int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/Pixmap$Format/toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[])
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/PixmapIO$CIM/write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/indexOf(int,int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/indexOf(int)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/lang/String/trim()
com/badlogic/gdx/graphics/g2d/TextureAtlas/readTuple(java.io.BufferedReader)#java/io/BufferedReader/readLine()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getUnicodeChar()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/isAltPressed()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/String/charAt(int)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/System/nanoTime()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/lang/String/length()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/View$OnKeyListener/onKey(android.view.View,int,android.view.KeyEvent)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/size()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/get(int)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getAction()
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#java/util/ArrayList/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidInput/onKey(android.view.View,int,android.view.KeyEvent)#android/view/KeyEvent/getCharacters()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/ArrayList/ArrayList(int)
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/Iterator/hasNext()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/List/size()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/Iterator/next()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/List/toArray(java.lang.Object[])
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/List/add(java.lang.Object)
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/List/iterator()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/HashSet/HashSet()
net/java/games/util/plugins/Plugins/getImplementsAny(java.lang.Class[])#java/util/Set/add(java.lang.Object)
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/ArrayList/ArrayList(int)
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/Iterator/hasNext()
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/List/size()
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/Iterator/next()
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/List/toArray(java.lang.Object[])
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/List/iterator()
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/HashSet/HashSet()
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/Set/add(java.lang.Object)
net/java/games/util/plugins/Plugins/getImplementsAll(java.lang.Class[])#java/util/List/add(java.lang.Object)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/jar/JarFile/entries()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/io/File/getName()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/io/PrintStream/println(java.lang.String)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/String/length()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#net/java/games/util/plugins/PluginLoader/loadClass(java.lang.String)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/String/substring(int,int)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/Enumeration/hasMoreElements()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/Enumeration/nextElement()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/StringBuffer/StringBuffer()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/String/endsWith(java.lang.String)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/Exception/printStackTrace()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/Class/getName()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/StringBuffer/toString()
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/jar/JarFile/JarFile(java.io.File)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/lang/String/replace(char,char)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/List/add(java.lang.Object)
net/java/games/util/plugins/Plugins/processJar(java.io.File)#java/util/jar/JarEntry/getName()
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setFocusable(boolean)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/FrameLayout(android.content.Context)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setFocusableInTouchMode(boolean)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setOnKeyListener(android.view.View$OnKeyListener)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/app/Dialog/Dialog(android.content.Context,int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/setOnTouchListener(android.view.View$OnTouchListener)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/getImeOptions()
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/app/Dialog/setContentView(android.view.View)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/TextView/setImeOptions(int)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout/addView(android.view.View)
com/badlogic/gdx/backends/android/AndroidOnscreenKeyboard/createDialog()#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int,int)
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/canWrite()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/isDirectory()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/util/UUID/randomUUID()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/mkdirs()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/getParentFile()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/util/UUID/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/FileOutputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/File/delete()
com/badlogic/gdx/utils/SharedLibraryLoader/canWrite(java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/InputStream/read(byte[])
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/getAbsolutePath()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/write(byte[],int,int)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/InputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/mkdirs()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/FileOutputStream/close()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/extractFile(java.lang.String,java.lang.String,java.io.File)#java/io/File/getParentFile()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/getName()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/exists()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/File(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/File(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/getAbsolutePath()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/createTempFile(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/io/File/delete()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/System/load(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/System/getProperty(java.lang.String)
com/badlogic/gdx/utils/SharedLibraryLoader/loadFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/System/load(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/System/mapLibraryName(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/StringBuffer/toString()
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/UnsatisfiedLinkError/getMessage()
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/System/getProperty(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/UnsatisfiedLinkError/printStackTrace()
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/System/loadLibrary(java.lang.String)
net/java/games/input/LinuxEnvironmentPlugin$1/run()#java/lang/StringBuffer/StringBuffer()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildTarget/newDefaultTarget(com.badlogic.gdx.jnigen.BuildTarget$TargetOs,boolean)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/generate(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/generate(com.badlogic.gdx.jnigen.BuildConfig,com.badlogic.gdx.jnigen.BuildTarget[])
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/BuildConfig/BuildConfig(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/NativeCodeGenerator/NativeCodeGenerator()
com/badlogic/gdx/utils/GdxBuild/main(java.lang.String[])#com/badlogic/gdx/jnigen/AntScriptGenerator/AntScriptGenerator()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/util/ArrayList/remove(int)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Object/wait()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onDrawFrame(javax.microedition.khronos.opengles.GL10)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/ref/WeakReference/get()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/util/ArrayList/isEmpty()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Runnable/run()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#java/lang/Object/notifyAll()
com/badlogic/gdx/backends/android/surfaceview/GLSurfaceViewAPI18$GLThread/guardedRun()#android/opengl/GLSurfaceView$Renderer/onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getRight()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getStage()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setPosition(float,float,int)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getParent()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getX()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getY()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setY(float)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/setX(float)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getY(int)
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getTop()
com/badlogic/gdx/scenes/scene2d/ui/Window/keepWithinStage()#com/badlogic/gdx/scenes/scene2d/ui/Window/getX(int)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadTop()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/setPosition(float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/setSize(float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadLeft()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getColor()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getColor()
com/badlogic/gdx/scenes/scene2d/ui/Window/drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)#com/badlogic/gdx/scenes/scene2d/ui/Window/getPadRight()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/get(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/write(byte[])
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/finish()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/Deflater/reset()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/write(byte[],int,int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/write(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/PixmapIO$PNG$ChunkBuffer/writeByte(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/io/OutputStream/flush()
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/PixmapIO$PNG/write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap)#com/badlogic/gdx/graphics/PixmapIO$PNG$ChunkBuffer/writeInt(int)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/WidgetGroup/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/isTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getY()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipBegin(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/clipEnd()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/validate()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/getX()
com/badlogic/gdx/scenes/scene2d/ui/Table/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Table/isTransform()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/toString()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/deleteCharAt(int)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/StringBuffer()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/lang/StringBuffer/length()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/net/HttpParametersUtils/convertHttpParameters(java.util.Map)#java/util/Map/keySet()
org/lwjgl/J2SESysImplementation/getClipboard()#java/awt/datatransfer/Transferable/isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
org/lwjgl/J2SESysImplementation/getClipboard()#java/awt/datatransfer/Clipboard/getContents(java.lang.Object)
org/lwjgl/J2SESysImplementation/getClipboard()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/J2SESysImplementation/getClipboard()#java/awt/datatransfer/Transferable/getTransferData(java.awt.datatransfer.DataFlavor)
org/lwjgl/J2SESysImplementation/getClipboard()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/J2SESysImplementation/getClipboard()#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/J2SESysImplementation/getClipboard()#java/awt/Toolkit/getSystemClipboard()
org/lwjgl/J2SESysImplementation/getClipboard()#java/awt/Toolkit/getDefaultToolkit()
org/lwjgl/J2SESysImplementation/getClipboard()#java/lang/StringBuilder/toString()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/URL/openConnection()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setReadTimeout(int)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/URL/URL(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setConnectTimeout(int)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Iterator/next()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map$Entry/getValue()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setDoInput(boolean)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map/entrySet()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Iterator/hasNext()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Map$Entry/getKey()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/addRequestProperty(java.lang.String,java.lang.String)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setFollowRedirects(boolean)
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/util/Set/iterator()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/lang/StringBuilder/toString()
com/badlogic/gdx/net/NetJavaImpl/sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)#java/net/HttpURLConnection/setDoOutput(boolean)
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/ByteBuffer/compact()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/CharBuffer/get()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/ByteBuffer/position()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/ByteBuffer/flip()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/CharBuffer/hasRemaining()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/CharBuffer/compact()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/ByteBuffer/remaining()
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)
org/lwjgl/opengl/LinuxKeyboard/lookupStringUnicode(long,int[])#java/nio/CharBuffer/flip()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/validate()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getY()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getColor()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/utils/ArraySelection/first()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/hasParent()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#java/lang/String/length()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getX()
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/Math/min(float,float)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/Float/valueOf(float)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/String/String(byte[],int,int)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/String/equals(java.lang.Object)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/Math/pow(double,double)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/Float/parseFloat(java.lang.String)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/String/split(java.lang.String)
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/Float/floatValue()
javazoom/jl/decoder/Bitstream/parseID3v2Frames(byte[])#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/min(float,float)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/split(java.lang.String,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/max(int,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/length()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/indexOf(int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Math/max(float,float)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/indexOf(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/nextToken()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/util/StringTokenizer/hasMoreTokens()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/BitmapFont$BitmapFontData/load(com.badlogic.gdx.files.FileHandle,boolean)#java/lang/String/endsWith(java.lang.String)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/flip()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/clear()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/position(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/put(java.nio.ShortBuffer)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ShortBuffer/remaining()
com/badlogic/gdx/graphics/glutils/IndexArray/setIndices(java.nio.ShortBuffer)#java/nio/ByteBuffer/position(int)
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getWhen()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getID()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getButton()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/lang/StringBuilder/toString()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/isControlDown()
org/lwjgl/opengl/MouseEventQueue/handleButton(java.awt.event.MouseEvent)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/nio/ByteBuffer/flip()
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/System/setProperty(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/nio/ByteBuffer/allocateDirect(int)
com/badlogic/gdx/backends/lwjgl/LwjglGraphics/setupDisplay()#java/nio/ByteBuffer/limit()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/ArrayList/ArrayList()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/List/size()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/List/toArray(java.lang.Object[])
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/lang/String/substring(int,int)
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/List/add(java.lang.Object)
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/StringTokenizer/nextToken()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/StringTokenizer/hasMoreTokens()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/lang/String/lastIndexOf(java.lang.String)
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/lang/StringBuilder/toString()
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/LWJGLUtil/getLibraryPaths(java.lang.String,java.lang.String[],java.lang.ClassLoader)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/util/Iterator/hasNext()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/reflect/Field/getType()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/Iterable/iterator()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/util/Map/containsKey(java.lang.Object)
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/Integer/valueOf(int)
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/reflect/Field/getName()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/util/Iterator/next()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/util/HashMap/HashMap()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/Class/getDeclaredFields()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/reflect/Field/getModifiers()
org/lwjgl/LWJGLUtil/getClassTokens(org.lwjgl.LWJGLUtil$TokenFilter,java.util.Map,java.lang.Iterable)#java/lang/reflect/Field/getInt(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Long/valueOf(long)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Float/valueOf(float)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Integer/parseInt(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Integer/valueOf(int)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Map$Entry/getValue()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Boolean/parseBoolean(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Map$Entry/getKey()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Properties/entrySet()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Iterator/next()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/HashMap/HashMap()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/lang/Boolean/valueOf(boolean)
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/get()#java/util/Set/iterator()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/lang/Integer/intValue()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Map$Entry/getKey()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/lang/Float/floatValue()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Map/entrySet()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/lang/Boolean/booleanValue()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/lang/Long/longValue()
com/badlogic/gdx/backends/lwjgl/LwjglPreferences/put(java.util.Map)#java/util/Map$Entry/getValue()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitEnd()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/Type/getSort()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/Type/getDescriptor()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitCode()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldSetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitEnd()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateViewAddressGetter()#org/objectweb/asm/MethodVisitor/visitCode()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitEnd()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateCapacity()#org/objectweb/asm/MethodVisitor/visitCode()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitEnd()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/Type/getOpcode(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/Type/getDescriptor()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitCode()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateFieldGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitEnd()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/ClassAdapter/visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitVarInsn(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/Type/getDescriptor()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitInsn(int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitMaxs(int,int)
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#org/objectweb/asm/MethodVisitor/visitCode()
org/lwjgl/util/mapped/MappedObjectTransformer$3/generateByteBufferGetter(java.lang.String,org.lwjgl.util.mapped.MappedObjectTransformer$FieldInfo)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/Canvas/getHeight()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getY()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/Robot/mouseMove(int,int)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/lang/Math/max(int,int)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/Canvas/getLocationOnScreen()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/lang/Math/min(int,int)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/Canvas/isShowing()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/event/MouseEvent/getX()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/checkCatched(java.awt.event.MouseEvent)#java/awt/Canvas/getWidth()
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/setFocusTraversalKeysEnabled(boolean)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/removeMouseWheelListener(java.awt.event.MouseWheelListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/addMouseWheelListener(java.awt.event.MouseWheelListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/addMouseMotionListener(java.awt.event.MouseMotionListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/addMouseListener(java.awt.event.MouseListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/addKeyListener(java.awt.event.KeyListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/removeMouseListener(java.awt.event.MouseListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/removeMouseMotionListener(java.awt.event.MouseMotionListener)
com/badlogic/gdx/backends/lwjgl/LwjglAWTInput/setListeners(java.awt.Canvas)#java/awt/Canvas/removeKeyListener(java.awt.event.KeyListener)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/Object/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/util/Iterator/hasNext()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/util/List/size()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/util/Iterator/next()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/util/List/get(int)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/ClassFormatError/ClassFormatError(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/util/List/iterator()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#org/objectweb/asm/ClassVisitor/visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/StringBuilder/toString()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/StringBuilder/append(int)
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/visitEnd()#org/lwjgl/util/mapped/MappedObjectTransformer$TransformationAdapter$1/accept(org.objectweb.asm.ClassVisitor)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/setText(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/text/Document/addDocumentListener(javax.swing.event.DocumentListener)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/getValue()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/JOptionPane(java.lang.Object,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JPanel/add(java.awt.Component,int)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JDialog/setVisible(boolean)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JPanel/add(java.awt.Component)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JDialog/addWindowFocusListener(java.awt.event.WindowFocusListener)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#java/awt/FlowLayout/FlowLayout()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JLabel/setBorder(javax.swing.border.Border)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/selectInitialValue()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/border/EmptyBorder/EmptyBorder(java.awt.Insets)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/setComponentOrientation(java.awt.ComponentOrientation)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/getBorder()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#java/lang/Integer/intValue()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JPanel/JPanel(java.awt.LayoutManager)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/getRootFrame()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JLabel/JLabel(java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#java/awt/Frame/getComponentOrientation()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/setInitialValue(java.lang.Object)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JOptionPane/createDialog(java.awt.Component,java.lang.String)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/getDocument()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/border/Border/getBorderInsets(java.awt.Component)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JDialog/dispose()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JPanel/setLayout(java.awt.LayoutManager)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JLabel/setAlignmentX(float)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/OverlayLayout/OverlayLayout(java.awt.Container)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/getText()
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/setAlignmentX(float)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JTextField/JTextField(int)
com/badlogic/gdx/backends/lwjgl/LwjglInput$3/run()#javax/swing/JLabel/setForeground(java.awt.Color)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/StringBuilder/StringBuilder()
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/util/List/iterator()
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/String/split(java.lang.String)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/util/Iterator/hasNext()
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/StringBuilder/append(java.lang.String)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/StringBuilder/append(int)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/String/length()
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/Math/max(float,float)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/Math/max(long,long)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/util/Iterator/next()
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/StringBuilder/append(long)
com/smeanox/games/ld34/screens/GameScreen/render(float)#com/smeanox/games/ld34/Icons/draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float)
com/smeanox/games/ld34/screens/GameScreen/render(float)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Texture/getManagedStatus()#java/util/Map/keySet()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/Class/isArray()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/StringBuffer/append(java.lang.Object)
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/StringBuffer/toString()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/util/logging/Logger/info(java.lang.String)
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/Object/getClass()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/Long/longValue()
net/java/games/input/OSXHIDDevice/dumpObject(java.lang.String,java.lang.Object)#java/lang/Long/toHexString(long)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/computeTransform()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#java/lang/Math/max(float,float)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getStage()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/getColor()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/validate()
com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/ScrollPane/resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/io/File/getName()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/io/File/File(java.lang.String)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/substring(int,int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/replace(char,char)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/String/lastIndexOf(int)
com/badlogic/gdx/graphics/g2d/ParticleEffect/loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/Class/getFields()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/util/List/size()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/util/List/add(java.lang.Object)
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/String/startsWith(java.lang.String)
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/reflect/Field/getName()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/util/ArrayList/ArrayList()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/reflect/Field/getType()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/util/List/toArray(java.lang.Object[])
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/reflect/Field/getModifiers()
org/lwjgl/util/jinput/LWJGLKeyboard/createComponents()#java/lang/reflect/Field/getInt(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getFilesDir()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/io/File/getAbsolutePath()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/os/Handler/Handler()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/forName(java.lang.String)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/view/Window/setFlags(int,int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#java/lang/Class/newInstance()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getWindow()
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/requestWindowFeature(int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#android/view/Window/clearFlags(int)
com/badlogic/gdx/backends/android/AndroidApplication/init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)#com/badlogic/gdx/backends/android/AndroidApplication/getAssets()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/position()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/get(float[],int,int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/nio/FloatBuffer/position(int)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getVertices(int,int,float[],int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Mesh/getManagedStatus()#java/util/Map/keySet()
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/awt/image/BufferedImage/BufferedImage(int,int,int)
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/nio/IntBuffer/remaining()
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/nio/IntBuffer/position(int)
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/awt/Point/Point(int,int)
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/awt/image/BufferedImage/setRGB(int,int,int,int,int[],int,int)
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/nio/IntBuffer/position()
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/nio/IntBuffer/get(int[])
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/awt/Toolkit/createCustomCursor(java.awt.Image,java.awt.Point,java.lang.String)
org/lwjgl/opengl/AWTUtil/createCursor(int,int,int,int,int,java.nio.IntBuffer,java.nio.IntBuffer)#java/awt/Toolkit/getDefaultToolkit()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/awt/PointerInfo/getLocation()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/security/AccessController/doPrivileged(java.security.PrivilegedExceptionAction)
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/lang/StringBuilder/toString()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/awt/Component/getGraphicsConfiguration()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/lang/Exception/getCause()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/awt/GraphicsConfiguration/getDevice()
org/lwjgl/opengl/AWTUtil/getPointerLocation(java.awt.Component)#java/awt/PointerInfo/getDevice()
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Error/Error(java.lang.String,java.lang.Throwable)
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Thread/currentThread()
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String)
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Class/getName()
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/reflect/InvocationTargetException/getCause()
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
org/lwjgl/util/mapped/MappedObjectClassLoader/fork(java.lang.Class,java.lang.String[])#java/lang/Thread/getUncaughtExceptionHandler()
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#org/lwjgl/util/mapped/MappedObjectClassLoader/resolveClass(java.lang.Class)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/System/nanoTime()
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/net/URLClassLoader/defineClass(java.lang.String,byte[],int,int)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/length()
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/concat(java.lang.String)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/net/URLClassLoader/loadClass(java.lang.String,boolean)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/indexOf(int)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/Class/getName()
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#org/lwjgl/util/mapped/MappedObjectClassLoader/getResourceAsStream(java.lang.String)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/substring(int)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/replace(char,char)
org/lwjgl/util/mapped/MappedObjectClassLoader/loadClass(java.lang.String,boolean)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/util/zip/InflaterInputStream/InflaterInputStream(java.io.InputStream)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/InputStream/read(byte[])
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/IOException/getMessage()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream,int)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/InputStream/read(byte[],int,int)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/lang/String/trim()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/setX(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/setRotation(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/getTextureRegion()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/setY(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Long/parseLong(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/getProperties()
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Float/valueOf(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/setScaleY(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#com/badlogic/gdx/maps/tiled/objects/TiledMapTileMapObject/setScaleX(float)
com/badlogic/gdx/maps/tiled/BaseTmxMapLoader/loadObject(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)#java/lang/Integer/valueOf(int)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/util/ArrayList/ArrayList()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/IllegalArgumentException/printStackTrace()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/NoSuchFieldException/printStackTrace()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/Class/getField(java.lang.String)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/reflect/Field/get(java.lang.Object)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/SecurityException/printStackTrace()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/StringBuffer/toString()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/StringBuffer/append(int)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/util/List/add(java.lang.Object)
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/IllegalAccessException/printStackTrace()
net/java/games/input/WinTabComponent/createButtons(net.java.games.input.WinTabContext,int,int)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseEvent/getX()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseEvent/getY()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseEvent/getWhen()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/toString()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/AWTMouse/getX()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/util/List/get(int)
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/append(java.lang.String)
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/StringBuffer()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/util/List/remove(int)
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseEvent/getID()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/util/List/isEmpty()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseWheelEvent/getWhen()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/StringBuffer/append(int)
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/AWTMouse/getY()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/lang/RuntimeException/RuntimeException(java.lang.String)
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#net/java/games/input/AWTMouse/getWheel()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseWheelEvent/getWheelRotation()
net/java/games/input/AWTMouse/getNextDeviceEvent(net.java.games.input.Event)#java/awt/event/MouseEvent/getButton()
net/java/games/input/AWTKeyboard/createComponents()#java/lang/Class/getFields()
net/java/games/input/AWTKeyboard/createComponents()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
net/java/games/input/AWTKeyboard/createComponents()#java/util/List/toArray(java.lang.Object[])
net/java/games/input/AWTKeyboard/createComponents()#java/util/List/add(java.lang.Object)
net/java/games/input/AWTKeyboard/createComponents()#java/lang/String/startsWith(java.lang.String)
net/java/games/input/AWTKeyboard/createComponents()#java/lang/reflect/Field/getName()
net/java/games/input/AWTKeyboard/createComponents()#java/util/ArrayList/ArrayList()
net/java/games/input/AWTKeyboard/createComponents()#java/lang/reflect/Field/getType()
net/java/games/input/AWTKeyboard/createComponents()#java/lang/reflect/Modifier/isStatic(int)
net/java/games/input/AWTKeyboard/createComponents()#java/lang/reflect/Field/getModifiers()
net/java/games/input/AWTKeyboard/createComponents()#java/lang/reflect/Field/getInt(java.lang.Object)
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/util/HashSet/HashSet(int)
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/util/Arrays/asList(java.lang.Object[])
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/util/HashSet/addAll(java.util.Collection)
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/lang/StringBuilder/toString()
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/lang/StringBuilder/append(int)
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/util/HashSet/toArray(java.lang.Object[])
org/lwjgl/opengl/Display/getAvailableDisplayModes()#java/util/HashSet/size()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/channels/FileChannel/map(java.nio.channels.FileChannel$MapMode,long,long)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/String/String(byte[],int,int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/length()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/getLong(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/getChannel()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/allocate(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/close()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#android/util/Log/v(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/getInt(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/seek(long)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/position(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/clear()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/IOException/IOException()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/getShort(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/StringBuilder/append(long)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/File/File(java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/io/RandomAccessFile/readFully(byte[])
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/array()
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/get(byte[],int,int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/MappedByteBuffer/getInt(int)
com/badlogic/gdx/backends/android/ZipResourceFile/addPatchFile(java.lang.String)#java/nio/ByteBuffer/getShort(int)
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Vector/size()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/lang/String/length()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Iterator/next()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Vector/Vector()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Vector/toArray(java.lang.Object[])
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Vector/add(java.lang.Object)
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/HashMap/values()
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/lang/String/indexOf(int,int)
com/badlogic/gdx/backends/android/ZipResourceFile/getEntriesAt(java.lang.String)#java/util/Collection/iterator()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/isOverflow()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/CharBuffer/remaining()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/CharBuffer/hasRemaining()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetEncoder/averageBytesPerChar()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetEncoder/reset()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/throwException()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/isUnderflow()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/Charset/newEncoder()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/ByteBuffer/flip()
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
org/lwjgl/MemoryUtil/encode(java.nio.CharBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetEncoder/flush(java.nio.ByteBuffer)
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/isOverflow()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/Charset/newDecoder()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/CharBuffer/put(java.nio.CharBuffer)
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/ByteBuffer/remaining()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetDecoder/flush(java.nio.CharBuffer)
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/throwException()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CoderResult/isUnderflow()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetDecoder/reset()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetDecoder/averageCharsPerByte()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/ByteBuffer/hasRemaining()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/CharBuffer/toString()
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/charset/CharsetDecoder/decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)
org/lwjgl/MemoryUtil/decodeImpl(java.nio.ByteBuffer,java.nio.charset.Charset)#java/nio/CharBuffer/flip()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Canvas/getHeight()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#javax/swing/SwingUtilities/convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Component/getHeight()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Canvas/getLocation()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#javax/swing/SwingUtilities/getRoot(java.awt.Component)
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Point/getX()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Point/getY()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Canvas/getWidth()
org/lwjgl/opengl/MacOSXCanvasPeerInfo/reSetLayerBounds(java.awt.Canvas,java.nio.ByteBuffer)#java/awt/Canvas/getParent()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setY(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/max(float,float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setWidth(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/clearActions()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/min(float,float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setX(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/localToStageCoordinates(com.badlogic.gdx.math.Vector2)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getPrefHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/validate()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/updateVisualScroll()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/utils/ArraySelection/set(java.lang.Object)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/scrollTo(float,float,float,float,boolean,boolean)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getStyle()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/List/isTouchable()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#java/lang/Math/min(int,int)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getScrollBarWidth()
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/setHeight(float)
com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/show(com.badlogic.gdx.scenes.scene2d.Stage)#com/badlogic/gdx/scenes/scene2d/ui/SelectBox$SelectBoxList/getPrefWidth()
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/File/File(java.lang.String)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/String/substring(int,int)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/BufferedOutputStream/write(byte[])
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/Exception/printStackTrace()
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/String/indexOf(java.lang.String)
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/lang/StringBuilder/toString()
org/lwjgl/util/XPMFile/main(java.lang.String[])#java/io/BufferedOutputStream/close()
com/badlogic/gdx/files/FileHandle/read()#java/lang/Class/getResourceAsStream(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/isDirectory()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/exists()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/read()#java/lang/String/replace(char,char)
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/read()#java/io/FileInputStream/FileInputStream(java.io.File)
com/badlogic/gdx/files/FileHandle/read()#java/io/File/getPath()
com/badlogic/gdx/files/FileHandle/read()#java/lang/StringBuilder/toString()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/read(char[])
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/append(char[],int,int)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/files/FileHandle/readString(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#android/os/Environment/getExternalStorageDirectory()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/util/Vector/size()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#android/content/Context/getPackageName()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/io/File/exists()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/io/File/File(java.lang.String)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/util/Vector/toArray(java.lang.Object[])
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/io/File/isFile()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/util/Vector/add(java.lang.Object)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#android/os/Environment/getExternalStorageState()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/util/Vector/Vector()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/APKExpansionSupport/getAPKExpansionFiles(android.content.Context,int,int)#java/io/File/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(java.lang.String,int)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newSound(com.badlogic.gdx.files.FileHandle)#android/media/SoundPool/load(android.content.res.AssetFileDescriptor,int)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.io.FileDescriptor,long,long)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/setDataSource(java.lang.String)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/prepare()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getStartOffset()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/media/MediaPlayer/MediaPlayer()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/close()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getFileDescriptor()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#com/badlogic/gdx/backends/android/AndroidFileHandle/type()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/util/List/add(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidAudio/newMusic(com.badlogic.gdx.files.FileHandle)#android/content/res/AssetFileDescriptor/getLength()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/close()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/toLowerCase()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/length()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/readLine()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/String(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/Float/parseFloat(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/split(java.lang.String)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/charAt(int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/trim()
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/equals(java.lang.Object)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/substring(int)
com/badlogic/gdx/graphics/g3d/loader/MtlLoader/load(com.badlogic.gdx.files.FileHandle)#java/lang/String/replace(char,char)
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#android/util/Log/w(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/io/IOException/printStackTrace()
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/nio/ByteBuffer/getInt(int)
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/io/RandomAccessFile/seek(long)
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/io/IOException/IOException()
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/io/RandomAccessFile/readFully(byte[])
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/nio/ByteBuffer/getShort(int)
com/badlogic/gdx/backends/android/ZipResourceFile$ZipEntryRO/setOffsetFromFile(java.io.RandomAccessFile,java.nio.ByteBuffer)#java/io/FileNotFoundException/printStackTrace()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/MissingResourceException/MissingResourceException(java.lang.String,java.lang.String,java.lang.String)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/List/size()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/List/get(int)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/util/Locale/equals(java.lang.Object)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/utils/I18NBundle/createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getVariant()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/ArrayList/ArrayList(int)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/lang/String/length()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/Locale(java.lang.String)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/List/size()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getCountry()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/getLanguage()
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/Locale/Locale(java.lang.String,java.lang.String)
com/badlogic/gdx/utils/I18NBundle/getCandidateLocales(java.util.Locale)#java/util/List/add(java.lang.Object)
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteOrder/nativeOrder()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/put(byte)
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/asShortBuffer()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/order(java.nio.ByteOrder)
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/rewind()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/allocateDirect(int)
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/wrap(byte[])
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ShortBuffer/put(short)
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/get()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ShortBuffer/hasRemaining()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ByteBuffer/hasRemaining()
org/lwjgl/util/WaveData/convertAudioBytes(byte[],boolean,java.nio.ByteOrder)#java/nio/ShortBuffer/get()
org/lwjgl/util/WaveData/create(java.net.URL)#java/net/URL/openStream()
org/lwjgl/util/WaveData/create(java.net.URL)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/util/WaveData/create(java.net.URL)#com/sun/media/sound/WaveFileReader/getAudioInputStream(java.io.InputStream)
org/lwjgl/util/WaveData/create(java.net.URL)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/util/WaveData/create(java.net.URL)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/lwjgl/util/WaveData/create(java.net.URL)#java/lang/StringBuilder/append(java.lang.Object)
org/lwjgl/util/WaveData/create(java.net.URL)#com/sun/media/sound/WaveFileReader/WaveFileReader()
org/lwjgl/util/WaveData/create(java.net.URL)#java/lang/StringBuilder/toString()
org/lwjgl/util/WaveData/create(java.net.URL)#java/lang/Exception/getMessage()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioInputStream/close()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioInputStream/getFrameLength()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#java/lang/AssertionError/AssertionError(java.lang.Object)
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioFormat/getSampleRate()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioInputStream/read(byte[],int,int)
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioFormat/getChannels()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioInputStream/available()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioFormat/getSampleSizeInBits()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioInputStream/getFormat()
org/lwjgl/util/WaveData/create(javax.sound.sampled.AudioInputStream)#javax/sound/sampled/AudioFormat/isBigEndian()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Integer/intValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getKey()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Float/floatValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map$Entry/getValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Map/entrySet()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Boolean/booleanValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/hasNext()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Iterator/next()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/lang/Long/longValue()
com/badlogic/gdx/backends/android/AndroidPreferences/put(java.util.Map)#java/util/Set/iterator()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/validate()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getOriginX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getOriginY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getScaleY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getY()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getRotation()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getScaleX()
com/badlogic/gdx/scenes/scene2d/ui/Image/draw(com.badlogic.gdx.graphics.g2d.Batch,float)#com/badlogic/gdx/scenes/scene2d/ui/Image/getColor()
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Modifier/isFinal(int)
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Field/setAccessible(boolean)
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Field/getModifiers()
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/Object/equals(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Field/get(java.lang.Object)
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Field/getType()
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/lwjgl/util/mapped/MappedObjectUnsafe/getUnsafeInstance()#java/lang/Class/getDeclaredFields()
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGLDisplay/terminate()
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/PixelFormat/getBestMatch(org.lwjgl.opengles.EGLConfig[])
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGLContext/setDisplay(org.lwjgl.opengles.EGLDisplay)
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGLDisplay/chooseConfig(java.nio.IntBuffer,org.lwjgl.opengles.EGLConfig[],java.nio.IntBuffer)
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGL/eglGetDisplay(long)
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/PixelFormat/getAttribBuffer(org.lwjgl.opengles.EGLDisplay,int,int[])
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGLSurface/destroy()
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/EGLDisplay/createWindowSurface(org.lwjgl.opengles.EGLConfig,long,java.nio.IntBuffer)
org/lwjgl/opengl/DrawableGLES/initialize(long,long,int,org.lwjgl.opengles.PixelFormat)#org/lwjgl/opengles/PixelFormat/setSurfaceAttribs(org.lwjgl.opengles.EGLSurface)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/content/Context/getString(int)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setText(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/EditText(android.content.Context)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/setView(android.view.View)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/show()
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setHint(java.lang.CharSequence)
com/badlogic/gdx/backends/android/AndroidInput$3/run()#android/widget/EditText/setSingleLine()
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Modifier/isFinal(int)
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Field/setAccessible(boolean)
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Field/getModifiers()
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/Object/equals(java.lang.Object)
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Field/get(java.lang.Object)
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Field/getType()
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/reflect/Modifier/isStatic(int)
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/UnsupportedOperationException/UnsupportedOperationException()
org/lwjgl/MemoryUtilSun$AccessorUnsafe/getUnsafeInstance()#java/lang/Class/getDeclaredFields()
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/nio/ByteOrder/nativeOrder()
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/nio/IntBuffer/get(int)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/nio/ByteBuffer/allocateDirect(int)
com/badlogic/gdx/graphics/glutils/GLFrameBuffer/build()#java/nio/ByteBuffer/asIntBuffer()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/Math/max(int,int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/e(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onPause()#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/view/Surface/isValid()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/service/wallpaper/WallpaperService$Engine/onVisibilityChanged(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/isVisible()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/view/SurfaceHolder/getSurface()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onVisibilityChanged(boolean)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/Error/Error(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder/removeCallback(android.view.SurfaceHolder$Callback)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onSurfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceCreated(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/view/Surface/isValid()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/service/wallpaper/WallpaperService$Engine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/isPreview()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/view/SurfaceHolder/getSurface()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceChanged(android.view.SurfaceHolder,int,int,int)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onSurfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onSurfaceDestroyed(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#android/service/wallpaper/WallpaperService$Engine/onCreate(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Thread/currentThread()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/Thread/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onCreate(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/view/SurfaceHolder$Callback/surfaceDestroyed(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/append(boolean)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/Object/hashCode()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/view/SurfaceHolder$Callback/surfaceCreated(android.view.SurfaceHolder)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/getSurfaceHolder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/util/Log/i(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#android/util/Log/d(java.lang.String,java.lang.String)
com/badlogic/gdx/backends/android/AndroidLiveWallpaperService$AndroidWallpaperEngine/onResume()#java/lang/StringBuilder/toString()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getStage()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMinWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/setBounds(float,float,float,float)
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMaxHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMaxWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#java/lang/Math/round(float)
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getParent()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getX()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getWidth()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getMinHeight()
com/badlogic/gdx/scenes/scene2d/ui/Window$3/touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)#com/badlogic/gdx/scenes/scene2d/ui/Window/getY()
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/Integer/toString(int)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/util/StringTokenizer/hasMoreTokens()
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/util/Set/add(java.lang.Object)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/Integer/parseInt(java.lang.String)
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/util/StringTokenizer/nextToken()
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/StringBuilder/toString()
org/lwjgl/opengl/GLContext/getSupportedExtensions(java.util.Set)#java/lang/NumberFormatException/getMessage()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/FilenameFilter/accept(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FilenameFilter)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/FileFilter/accept(java.io.File)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.io.FileFilter)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#android/content/res/AssetManager/list(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/io/File/getPath()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/StringBuilder/toString()
com/badlogic/gdx/backends/android/AndroidFileHandle/list(java.lang.String)#java/lang/String/endsWith(java.lang.String)
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/Class/getFields()
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/util/ArrayList/ArrayList()
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/util/List/toArray(java.lang.Object[])
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/util/List/add(java.lang.Object)
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/reflect/Field/getType()
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/reflect/Modifier/isStatic(int)
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/reflect/Field/getModifiers()
net/java/games/input/RawKeyboard/createKeyboardComponents(net.java.games.input.RawDevice)#java/lang/reflect/Field/getInt(java.lang.Object)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Iterator/hasNext()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Map/get(java.lang.Object)
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Set/iterator()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Iterator/next()
com/badlogic/gdx/graphics/Cubemap/getManagedStatus()#java/util/Map/keySet()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/position()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/getInt(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/readInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/DataInputStream/read(byte[])
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/getInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/wrap(byte[])
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/order()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/put(java.nio.ByteBuffer)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/isDirect()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/capacity()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/get()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/append(java.lang.Object)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/put(byte[],int,int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/nio/ByteBuffer/limit(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/prepare()#java/lang/String/endsWith(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/Math/max(int,int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/IntBuffer/get(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/slice()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/Integer/toHexString(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/getInt()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/position(int)
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/glutils/KTXTextureData/consumeCustomData(int)#java/nio/ByteBuffer/limit(int)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/Runtime/getRuntime()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/io/IOException/getMessage()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/util/List/size()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/Runtime/exec(java.lang.String[])
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/StringBuilder/toString()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/Process/getInputStream()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/util/ArrayList/ArrayList()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/String/equals(java.lang.Object)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/util/List/toArray(java.lang.Object[])
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/util/List/add(java.lang.Object)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/lwjgl/opengl/XRandR/setConfiguration(boolean,org.lwjgl.opengl.XRandR$Screen[])#java/io/BufferedReader/readLine()
org/lwjgl/opengl/XRandR/populate()#java/util/regex/Matcher/group(int)
org/lwjgl/opengl/XRandR/populate()#java/util/regex/Pattern/split(java.lang.CharSequence)
org/lwjgl/opengl/XRandR/populate()#java/lang/Runtime/getRuntime()
org/lwjgl/opengl/XRandR/populate()#java/util/regex/Matcher/matches()
org/lwjgl/opengl/XRandR/populate()#java/lang/Runtime/exec(java.lang.String[])
org/lwjgl/opengl/XRandR/populate()#java/util/HashMap/HashMap()
org/lwjgl/opengl/XRandR/populate()#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/lwjgl/opengl/XRandR/populate()#java/lang/StringBuilder/toString()
org/lwjgl/opengl/XRandR/populate()#java/lang/Process/getInputStream()
org/lwjgl/opengl/XRandR/populate()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/lwjgl/opengl/XRandR/populate()#java/util/ArrayList/ArrayList()
org/lwjgl/opengl/XRandR/populate()#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/XRandR/populate()#java/lang/String/trim()
org/lwjgl/opengl/XRandR/populate()#java/lang/Throwable/getMessage()
org/lwjgl/opengl/XRandR/populate()#java/util/List/size()
org/lwjgl/opengl/XRandR/populate()#java/lang/String/equals(java.lang.Object)
org/lwjgl/opengl/XRandR/populate()#java/util/List/toArray(java.lang.Object[])
org/lwjgl/opengl/XRandR/populate()#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/XRandR/populate()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/lwjgl/opengl/XRandR/populate()#java/util/List/clear()
org/lwjgl/opengl/XRandR/populate()#java/lang/Integer/parseInt(java.lang.String)
org/lwjgl/opengl/XRandR/populate()#java/util/Map/clear()
org/lwjgl/opengl/XRandR/populate()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/lwjgl/opengl/XRandR/populate()#java/io/BufferedReader/readLine()
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/regex/Matcher/group(int)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/String/equals(java.lang.Object)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/StringBuilder/StringBuilder()
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/List/add(java.lang.Object)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/StringBuilder/toString()
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/Arrays/toString(java.lang.Object[])
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/StringBuilder/append(java.lang.String)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/regex/Matcher/matches()
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/Integer/parseInt(java.lang.String)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/util/List/add(int,java.lang.Object)
org/lwjgl/opengl/XRandR/parseScreenModeline(java.util.List,java.util.List,java.lang.String,int,int,java.lang.String[],int[])#java/lang/String/contains(java.lang.CharSequence)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/ArrayList/ArrayList()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/ArrayList/ArrayList(java.util.Collection)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/String/toLowerCase()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/StringBuilder/append(java.lang.String)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/StringBuilder/append(int)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/StringBuilder/StringBuilder()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/Boolean/valueOf(boolean)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/ArrayList/set(int,java.lang.Object)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/String/length()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/Arrays/asList(java.lang.Object[])
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/StringBuilder/append(long)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/ArrayList/add(java.lang.Object)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#com/smeanox/games/ld34/Icons/draw(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float,float)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/util/ArrayList/get(int)
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/Boolean/booleanValue()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#java/lang/StringBuilder/toString()
com/smeanox/games/ld34/screens/MenuScreen/drawMenu()#com/smeanox/games/ld34/Icons/values()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/flip()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(java.lang.String)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/append(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/StringBuilder()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/limit(int)
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/lang/StringBuilder/toString()
com/badlogic/gdx/graphics/g2d/SpriteCache/endCache()#java/nio/FloatBuffer/position(int)
