org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/iterator()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/ArrayList()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/ArrayList(java.util.Collection)
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/Iterator/hasNext()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/size()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/lang/StringBuilder/toString()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/Iterator/next()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/lang/StringBuilder/StringBuilder()
org/scid/android/gamelogic/ChessController$SearchListener/notifyPV(org.scid.android.gamelogic.Position,int,int,int,int,int,boolean,boolean,boolean,java.util.ArrayList)#java/util/ArrayList/get(int)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#android/content/Intent/getAction()
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/lang/String/length()
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#android/app/ListActivity/onCreate(android.os.Bundle)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/io/File/File(java.lang.String)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#org/scid/android/SelectFileActivity/setContentView(int)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/io/File/mkdirs()
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#android/preference/PreferenceManager/getDefaultSharedPreferences(android.content.Context)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/getInt(java.lang.String,int)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#org/scid/android/SelectFileActivity/findViewById(int)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/io/File/exists()
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
org/scid/android/SelectFileActivity/onCreate(android.os.Bundle)#org/scid/android/SelectFileActivity/getIntent()
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileInputStream/read(byte[])
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/lang/SecurityException/getLocalizedMessage()
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileInputStream/close()
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileOutputStream/write(byte[],int,int)
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/IOException/getLocalizedMessage()
org/scid/android/Tools/copyFile(java.io.File,java.io.File)#java/io/FileOutputStream/close()
org/scid/android/Tools/getLinks(java.lang.String)#java/util/regex/Matcher/group(int)
org/scid/android/Tools/getLinks(java.lang.String)#java/util/ArrayList/ArrayList()
org/scid/android/Tools/getLinks(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/scid/android/Tools/getLinks(java.lang.String)#java/lang/String/substring(int,int)
org/scid/android/Tools/getLinks(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/scid/android/Tools/getLinks(java.lang.String)#java/util/List/add(java.lang.Object)
org/scid/android/Tools/getLinks(java.lang.String)#java/util/regex/Matcher/find()
org/scid/android/Tools/getLinks(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/scid/android/Tools/getLinks(java.lang.String)#java/lang/String/lastIndexOf(java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/util/zip/ZipInputStream/ZipInputStream(java.io.InputStream)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/String/toLowerCase()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/File/File(java.lang.String,java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/File/getAbsolutePath()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/util/zip/ZipInputStream/getNextEntry()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/util/zip/ZipEntry/getName()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/BufferedOutputStream/flush()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/BufferedOutputStream/write(byte[],int,int)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/util/zip/ZipInputStream/close()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/util/zip/ZipInputStream/read(byte[],int,int)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/File/delete()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/StringBuilder/toString()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/String/endsWith(java.lang.String)
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/io/BufferedOutputStream/close()
org/scid/android/Tools/unzip(java.lang.String,java.io.File,boolean)#java/lang/Exception/getMessage()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/net/Uri/getScheme()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/io/File/getName()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/io/File/File(java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#org/scid/android/DownloadTask/execute(java.lang.Object[])
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/String/startsWith(java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/StringBuilder/append(java.lang.Object)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/net/Uri/toString()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/app/Activity/getString(int)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/net/Uri/getEncodedPath()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/widget/Toast/show()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#android/util/Log/i(java.lang.String,java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/String/equals(java.lang.Object)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/io/File/File(java.lang.String,java.lang.String)
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/io/File/getAbsolutePath()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/StringBuilder/toString()
org/scid/android/Tools/processUri(android.app.Activity,android.net.Uri,int)#java/lang/String/endsWith(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/MalformedURLException/getMessage()
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URL/openConnection()
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/String/substring(int)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/File/createTempFile(java.lang.String,java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/FileOutputStream/close()
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URL/toString()
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/InputStream/read(byte[])
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/String/trim()
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/FileOutputStream/flush()
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/String/length()
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URL/URL(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URLConnection/getHeaderField(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URLConnection/getInputStream()
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/File/File(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/FileOutputStream/write(byte[],int,int)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/InputStream/close()
org/scid/android/Tools/downloadFile(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/Tools/downloadFile(java.lang.String)#java/io/File/getAbsolutePath()
org/scid/android/Tools/downloadFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/scid/android/Tools/downloadFile(java.lang.String)#java/net/URLConnection/getContentType()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/setButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/io/File/getName()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/io/File/File(java.lang.String)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog$Builder/create()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/setIcon(int)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/setButton2(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/setTitle(java.lang.CharSequence)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/Activity/getString(int)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/setMessage(java.lang.CharSequence)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/io/File/exists()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#android/app/AlertDialog/show()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/StringBuilder/toString()
org/scid/android/Tools/importPgn(android.app.Activity,java.lang.String,int)#java/lang/String/endsWith(java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/io/File/getName()
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/io/File/File(java.lang.String,java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/String/substring(int,int)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/String/lastIndexOf(java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/io/File/renameTo(java.io.File)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/io/File/getAbsolutePath()
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/StringBuilder/toString()
org/scid/android/Tools/importPgnFile(android.app.Activity,java.io.File,int)#java/lang/String/endsWith(java.lang.String)
org/scid/android/EditBoard/initUI()#android/widget/TextView/setFocusable(boolean)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/setFocusable(boolean)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/setOnTrackballListener(org.scid.android.ChessBoard$OnTrackballListener)
org/scid/android/EditBoard/initUI()#org/scid/android/EditBoard/setContentView(int)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/setOnTouchListener(android.view.View$OnTouchListener)
org/scid/android/EditBoard/initUI()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/setOnLongClickListener(android.view.View$OnLongClickListener)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/setClickable(boolean)
org/scid/android/EditBoard/initUI()#org/scid/android/EditBoard/findViewById(int)
org/scid/android/EditBoard/initUI()#android/view/GestureDetector/GestureDetector(android.view.GestureDetector$OnGestureListener)
org/scid/android/EditBoard/initUI()#org/scid/android/ChessBoardEdit/requestFocus()
org/scid/android/EditBoard/onCreateDialog(int)#org/scid/android/EditBoard/getString(int)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setView(android.view.View)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/EditBoard/onCreateDialog(int)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
org/scid/android/EditBoard/onCreateDialog(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/EditBoard/onCreateDialog(int)#android/view/View/findViewById(int)
org/scid/android/EditBoard/onCreateDialog(int)#android/widget/EditText/setOnKeyListener(android.view.View$OnKeyListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/widget/EditText/setText(java.lang.CharSequence)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener)
org/scid/android/EditBoard/onCreateDialog(int)#android/app/AlertDialog$Builder/create()
org/scid/android/EditBoard/onCreateDialog(int)#java/lang/Integer/valueOf(int)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/Thread/sleep(long)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/Thread/setName(java.lang.String)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/String/equals(java.lang.Object)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#android/os/Process/setThreadPriority(int)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/String/length()
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/Thread/currentThread()
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#org/scid/android/engine/UciReadTask/isCancelled()
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#org/scid/android/engine/UciReadTask/publishProgress(java.lang.Object[])
org/scid/android/engine/UciReadTask/doInBackground(java.lang.Void[])#java/lang/System/currentTimeMillis()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/Iterator/hasNext()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/Map/get(java.lang.Object)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/IOException/getMessage()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/List/size()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/contains(java.lang.CharSequence)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/BufferedReader/close()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/HttpResponse/getStatusLine()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/ArrayList/ArrayList()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/HttpEntity/writeTo(java.io.OutputStream)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/split(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/Iterator/next()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/HttpEntity/getContent()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuffer/toString()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/substring(int,int)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/indexOf(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/substring(int)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/impl/client/DefaultHttpClient/DefaultHttpClient()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/Map/containsKey(java.lang.Object)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/StatusLine/getStatusCode()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/List/add(java.lang.Object)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/BufferedReader/readLine()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/List/iterator()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuffer/append(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/lastIndexOf(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/util/LinkedHashMap/LinkedHashMap()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#org/apache/http/HttpResponse/getEntity()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/indexOf(int)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuffer/StringBuffer()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/StringBuilder/toString()
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/lang/String/endsWith(java.lang.String)
org/scid/android/chessok/ChessOkDownloader/parseChessOkSite()#java/io/ByteArrayOutputStream/toString()
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#java/util/ArrayList/ArrayList()
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#android/app/AlertDialog$Builder/setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#android/content/Context/getString(int)
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#java/util/List/size()
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#java/util/List/toArray(java.lang.Object[])
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#java/util/List/add(java.lang.Object)
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#android/app/AlertDialog$Builder/create()
org/scid/android/dialog/MoveListDialog/create(org.scid.android.gamelogic.ChessController)#java/lang/Integer/valueOf(int)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/Checkable/setChecked(boolean)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/text/Editable/length()
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/text/Editable/toString()
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/EditText/setText(java.lang.CharSequence)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/util/List/contains(java.lang.Object)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/AdapterView/getChildAt(int)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/AdapterView/getChildCount()
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/EditText/getText()
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/String/equals(java.lang.Object)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/AdapterView/getFirstVisiblePosition()
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#org/scid/android/AddEngineActivity/findViewById(int)
org/scid/android/AddEngineActivity$ExecutableClickListener/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/AdapterView/getItemAtPosition(int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/app/Activity/finish()
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/app/Activity/getString(int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#org/scid/android/SearchTask/dismissProgress()
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/widget/Toast/show()
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/app/Activity/setResult(int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#java/lang/Integer/valueOf(int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/app/Activity/setResult(int,android.content.Intent)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/app/Activity/getApplicationContext()
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/content/Intent/putExtra(java.lang.String,int)
org/scid/android/SearchTask/onPostExecute(org.scid.database.GameFilter)#android/content/Intent/Intent()
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/io/File/getName()
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/io/File/isDirectory()
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/io/File/File(java.lang.String)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/equals(java.lang.Object)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#org/scid/android/FileListArrayAdapter/getItem(int)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageResource(int)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/endsWith(java.lang.String)
org/scid/android/FileListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/util/Iterator/hasNext()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/IOException/getMessage()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/twic/TwicDownloader/parseTwicSite()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/impl/client/DefaultHttpClient/DefaultHttpClient()
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/client/methods/HttpGet/HttpGet(java.lang.String)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/String/contains(java.lang.CharSequence)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/util/Set/add(java.lang.Object)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/BufferedReader/close()
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/HttpResponse/getStatusLine()
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/HttpEntity/writeTo(java.io.OutputStream)
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/client/HttpClient/execute(org.apache.http.client.methods.HttpUriRequest)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/util/Iterator/next()
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/HttpEntity/getContent()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuffer/toString()
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/StatusLine/getStatusCode()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/BufferedReader/readLine()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/util/List/iterator()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuffer/append(java.lang.String)
org/scid/android/twic/TwicDownloader/parseTwicSite()#org/apache/http/HttpResponse/getEntity()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuffer/StringBuffer()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/StringBuilder/toString()
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/lang/String/endsWith(java.lang.String)
org/scid/android/twic/TwicDownloader/parseTwicSite()#java/io/ByteArrayOutputStream/toString()
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/Process/getInputStream()
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/ProcessBuilder/start()
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/ProcessBuilder/redirectErrorStream(boolean)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/ProcessBuilder/ProcessBuilder(java.lang.String[])
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/StringBuilder/toString()
org/scid/android/engine/PipedProcess/startProcess(org.scid.android.engine.EngineConfig)#java/lang/Process/getOutputStream()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Map$Entry/getKey()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Iterator/next()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/lang/String/equals(java.lang.Object)
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Set/iterator()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/List/add(java.lang.Object)
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Map$Entry/getValue()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/List/iterator()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Map/entrySet()
org/scid/android/gamelogic/GameTree/setHeaders(java.util.Map)#java/util/Iterator/hasNext()
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/util/List/size()
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/util/List/get(int)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/StringBuilder/toString()
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/util/ArrayList/ArrayList()
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/String/equals(java.lang.Object)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/util/List/add(java.lang.Object)
org/scid/android/gamelogic/GameTree/readPGN(java.lang.String,org.scid.android.PGNOptions)#java/lang/StringBuilder/append(char)
org/scid/android/gamelogic/GameTree/toByteArray()#java/lang/Integer/intValue()
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/DataOutputStream/writeInt(int)
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/DataOutputStream/writeUTF(java.lang.String)
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/DataOutputStream/close()
org/scid/android/gamelogic/GameTree/toByteArray()#java/util/List/size()
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/DataOutputStream/flush()
org/scid/android/gamelogic/GameTree/toByteArray()#java/util/List/get(int)
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/ByteArrayOutputStream/close()
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/scid/android/gamelogic/GameTree/toByteArray()#java/io/ByteArrayOutputStream/toByteArray()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/createChooser(android.content.Intent,java.lang.CharSequence)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/res/Resources/getText(int)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/getPackage()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/isEmpty()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/size()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/Iterator/next()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable[])
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/setType(java.lang.String)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/get(int)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/iterator()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/app/Activity/getResources()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/remove(java.lang.Object)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/scid/android/Sharer/createShareIntent(java.lang.String,java.lang.String)#android/content/Intent/Intent(java.lang.String)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#java/util/ArrayList/ArrayList()
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/app/Activity/getPackageManager()
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#java/util/Iterator/hasNext()
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#java/util/Iterator/next()
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/content/Intent/setType(java.lang.String)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/content/Intent/setPackage(java.lang.String)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#java/util/List/iterator()
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/content/pm/PackageManager/queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#java/util/List/add(java.lang.Object)
org/scid/android/Sharer/getTargetIntentsForType(java.lang.String,java.lang.String,android.content.ComponentName)#android/content/Intent/Intent(java.lang.String)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/ArrayAdapter/getItem(int)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/ArrayAdapter/getCount()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/io/File/getParent()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/io/File/isDirectory()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/SharedPreferences$Editor/putInt(java.lang.String,int)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/setAction(java.lang.String)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/io/File/File(java.lang.String)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/String/equals(java.lang.Object)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/io/File/getAbsolutePath()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/SharedPreferences/edit()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/preference/PreferenceManager/getDefaultSharedPreferences(android.content.Context)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/SharedPreferences$Editor/putString(java.lang.String,java.lang.String)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#org/scid/android/SelectFileActivity/setResult(int,android.content.Intent)
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/SharedPreferences$Editor/commit()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/Intent()
org/scid/android/SelectFileActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#org/scid/android/SelectFileActivity/finish()
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/regex/Matcher/appendTail(java.lang.StringBuffer)
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/regex/Matcher/appendReplacement(java.lang.StringBuffer,java.lang.String)
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/Map/get(java.lang.Object)
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/lang/StringBuffer/toString()
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/regex/Matcher/group()
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/regex/Matcher/find()
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/scid/android/chessok/ChessOkCommentReplacer/replace(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/Integer/intValue()
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/length()
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/substring(int)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/indexOf(java.lang.String)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/lang/String/startsWith(java.lang.String)
org/scid/android/gamelogic/Game/handleDrawCmd(java.lang.String,boolean)#java/util/List/get(int)
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/File(java.io.File,java.lang.String)
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/util/Iterator/hasNext()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/exists()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/util/Iterator/next()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#org/scid/android/ScidAndroidActivity/getFilesDir()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/util/List/iterator()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/lang/String/length()
org/scid/android/StartEngineTask/ensureEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/getAbsolutePath()
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/Thread/sleep(long)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/String/length()
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/String/equals(java.lang.Object)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/StringBuilder/toString()
org/scid/android/engine/ComputerPlayer/readUCIOptions()#java/lang/System/currentTimeMillis()
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/ArrayAdapter/getItem(int)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/util/Map/get(java.lang.Object)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/StringBuilder/append(java.lang.Object)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/StringBuilder/toString()
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/chessok/ChessOkLinkMapActivity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#org/scid/android/chessok/ChessOkLinkMapActivity/startActivity(android.content.Intent)
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#java/io/File/getParent()
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#java/lang/String/trim()
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#android/text/Editable/toString()
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#android/content/Intent/setAction(java.lang.String)
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#java/io/File/File(java.lang.String)
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#android/widget/EditText/getText()
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#org/scid/android/ScidAndroidActivity/startActivityForResult(android.content.Intent,int)
org/scid/android/ScidAndroidActivity$15/onClick(android.content.DialogInterface,int)#java/io/File/mkdirs()
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/setMessage(java.lang.CharSequence)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/show()
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/content/Context/getString(int)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/setTitle(java.lang.CharSequence)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/ProgressDialog(android.content.Context)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/app/ProgressDialog/setCancelable(boolean)
org/scid/android/engine/EngineManager$CopyExecutableTask/onPreExecute()#android/content/Context/getString(int,java.lang.Object[])
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#org/scid/android/engine/EngineManager$CopyExecutableTask/isCancelled()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/File/getName()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/String/valueOf(java.lang.Object)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/SecurityException/getLocalizedMessage()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#android/content/Context/getFilesDir()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/File/getAbsolutePath()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/InterruptedException/getMessage()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/StringBuilder/toString()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/Runtime/getRuntime()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/InputStream/read(byte[])
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/util/TreeMap/TreeMap(java.util.Map)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#android/util/Log/i(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/Runtime/exec(java.lang.String[])
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/FileOutputStream/write(byte[],int,int)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/InputStream/close()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#android/util/Log/isLoggable(java.lang.String,int)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/FileInputStream/FileInputStream(java.io.File)
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/IOException/getLocalizedMessage()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/Process/waitFor()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/FileOutputStream/close()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/lang/Boolean/booleanValue()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/File/getPath()
org/scid/android/engine/EngineManager$CopyExecutableTask/doInBackground(java.io.File[])#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/getName()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#android/app/ProgressDialog/isShowing()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/File(java.lang.String,java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#org/scid/android/chessok/PgnLinkListActivity/getString(int)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#android/app/ProgressDialog/dismiss()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/length()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/delete()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/renameTo(java.io.File)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/io/File/getAbsolutePath()
org/scid/android/chessok/PgnLinkListActivity/downloadSuccess(java.io.File)#java/lang/StringBuilder/toString()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#org/scid/android/chessok/PgnLinkListActivity/setListAdapter(android.widget.ListAdapter)
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#java/util/Iterator/hasNext()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#android/app/ProgressDialog/isShowing()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#java/util/Iterator/next()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#org/scid/android/chessok/PgnLinkListActivity/getListView()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#android/app/ProgressDialog/dismiss()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#java/util/List/iterator()
org/scid/android/chessok/PgnLinkListActivity/showList(java.util.List)#android/widget/ArrayAdapter/add(java.lang.Object)
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/FileInputStream/read(byte[])
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/FileInputStream/available()
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/lang/String/String(byte[])
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/FileInputStream/close()
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/FileWriter/FileWriter(java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/BufferedWriter/close()
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#java/io/BufferedWriter/write(java.lang.String)
org/scid/android/chessok/PgnLinkListActivity/replacePgn(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/util/Log/w(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/content/Context/getPackageManager()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/lang/StringBuilder/append(int)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/io/IOException/getMessage()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/util/Iterator/next()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/util/Log/d(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/util/List/iterator()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/lang/StringBuilder/toString()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/util/Iterator/hasNext()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/io/File/exists()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/lang/String/equals(java.lang.Object)
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#java/io/FileNotFoundException/getMessage()
com/kalab/chess/enginesupport/ChessEngineResolver/ensureEngineVersion(java.lang.String,java.lang.String,int,java.io.File)#android/content/Context/getContentResolver()
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#java/lang/String/split(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/content/pm/PackageManager$NameNotFoundException/getMessage()
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/content/res/XmlResourceParser/getName()
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/addEngine(java.util.List,android.content.res.XmlResourceParser,java.lang.String,java.lang.String)#android/content/Context/getPackageManager()
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/content/res/Resources/getXml(int)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/content/pm/PackageManager/getResourcesForApplication(android.content.pm.ApplicationInfo)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/os/Bundle/getString(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#java/lang/StringBuilder/toString()
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/content/Context/getPackageManager()
com/kalab/chess/enginesupport/ChessEngineResolver/resolveEnginesForPackage(java.util.List,android.content.pm.ResolveInfo,java.lang.String)#android/content/pm/PackageManager$NameNotFoundException/getLocalizedMessage()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/ChessBoardEdit/setPosition(org.scid.android.gamelogic.Position)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#android/text/ClipboardManager/getText()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/toString()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/EditBoard/getApplicationContext()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/EditBoard/removeDialog(int)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#android/text/ClipboardManager/setText(java.lang.CharSequence)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/EditBoard/showDialog(int)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#java/lang/CharSequence/toString()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#android/widget/Toast/show()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/ChessBoardEdit/setSelection(int)
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#android/text/ClipboardManager/hasText()
org/scid/android/EditBoard$7/onClick(android.content.DialogInterface,int)#org/scid/android/EditBoard/getSystemService(java.lang.String)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#android/text/SpannableStringBuilder/length()
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#android/text/SpannableStringBuilder/append(char)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#android/text/SpannableStringBuilder/clear()
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#java/lang/String/trim()
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#android/text/SpannableStringBuilder/setSpan(java.lang.Object,int,int,int)
org/scid/android/PgnScreenText/processToken(org.scid.android.gamelogic.GameTree$Node,int,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/util/TreeMap/put(java.lang.Object,java.lang.Object)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/lang/String/trim()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/app/ProgressDialog/show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/text/Editable/toString()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/widget/EditText/getText()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#org/scid/android/SaveGameActivity/setResult(int)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#org/scid/android/SaveGameActivity/setResult(int,android.content.Intent)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#org/scid/android/SaveGameActivity/getApplicationContext()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/content/Intent/Intent()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#org/scid/android/SaveGameActivity/getResources()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/lang/Integer/intValue()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/app/ProgressDialog/isShowing()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/lang/Integer/toString()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#org/scid/android/SaveGameActivity/getString(int)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/lang/String/length()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/widget/Toast/show()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#java/util/TreeMap/TreeMap()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/content/Intent/setAction(java.lang.String)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/view/View/getContext()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/content/res/Resources/getTextArray(int)
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/app/ProgressDialog/dismiss()
org/scid/android/SaveGameActivity/saveGame(android.view.View,java.lang.Integer)#android/widget/Toast/makeText(android.content.Context,int,int)
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#org/scid/android/AddEngineActivity/finish()
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/text/Editable/toString()
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#org/scid/android/AddEngineActivity/findViewById(int)
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,boolean)
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/widget/Checkable/isChecked()
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/widget/EditText/getText()
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,int)
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#org/scid/android/AddEngineActivity/getIntent()
org/scid/android/AddEngineActivity/onOkClick(android.view.View)#org/scid/android/AddEngineActivity/setResult(int,android.content.Intent)
org/scid/android/engine/EngineManager/loadEngineData()#org/xmlpull/v1/XmlPullParser/getEventType()
org/scid/android/engine/EngineManager/loadEngineData()#java/io/File/File(java.io.File,java.lang.String)
org/scid/android/engine/EngineManager/loadEngineData()#java/io/IOException/getMessage()
org/scid/android/engine/EngineManager/loadEngineData()#android/content/Context/getFilesDir()
org/scid/android/engine/EngineManager/loadEngineData()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/engine/EngineManager/loadEngineData()#java/io/File/exists()
org/scid/android/engine/EngineManager/loadEngineData()#org/xmlpull/v1/XmlPullParser/setInput(java.io.Reader)
org/scid/android/engine/EngineManager/loadEngineData()#java/util/TreeMap/TreeMap()
org/scid/android/engine/EngineManager/loadEngineData()#org/xmlpull/v1/XmlPullParserException/getMessage()
org/scid/android/engine/EngineManager/loadEngineData()#android/util/Xml/newPullParser()
org/scid/android/engine/EngineManager/loadEngineData()#org/xmlpull/v1/XmlPullParser/next()
org/scid/android/engine/EngineManager/loadEngineData()#java/io/FileReader/FileReader(java.io.File)
org/scid/android/engine/EngineManager/loadEngineData()#java/io/FileReader/close()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Iterator/hasNext()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/widget/Toast/show()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Iterator/next()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/util/Log/isLoggable(java.lang.String,int)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Set/iterator()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Map$Entry/getValue()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/content/Context/getString(int,java.lang.Object[])
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/TreeMap/TreeMap(java.util.Map)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/util/Log/i(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/io/File/File(java.lang.String)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Map/entrySet()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/io/File/delete()
org/scid/android/engine/EngineManager/removeEngine(java.lang.String)#java/util/Map/remove(java.lang.Object)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/util/TreeMap/put(java.lang.Object,java.lang.Object)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/lang/String/length()
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/util/TreeMap/get(java.lang.Object)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/io/File/exists()
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/io/File/getAbsolutePath()
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#org/xmlpull/v1/XmlPullParser/getAttributeValue(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#org/xmlpull/v1/XmlPullParser/getName()
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/io/File/File(java.lang.String)
org/scid/android/engine/EngineManager/readEngine(org.xmlpull.v1.XmlPullParser,java.util.TreeMap)#java/lang/Integer/parseInt(java.lang.String)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/widget/Toast/show()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/io/IOException/getMessage()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/content/Context/getFilesDir()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/content/Context/getContentResolver()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#java/util/List/iterator()
org/scid/android/engine/EngineManager/addOpenExchangeEngine(java.lang.String,java.lang.String,java.lang.String)#android/content/Context/getString(int,java.lang.Object[])
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/File/File(java.io.File,java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/util/Iterator/hasNext()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#android/util/Xml/newSerializer()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/IOException/getMessage()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/StringWriter/toString()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/util/Collection/iterator()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/FileWriter/FileWriter(java.io.File)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/StringBuilder/append(int)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/startDocument(java.lang.String,java.lang.Boolean)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/FileWriter/close()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/StringWriter/StringWriter(int)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/util/Map/values()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/util/Iterator/next()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/io/FileWriter/write(java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/setOutput(java.io.Writer)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#android/content/Context/getFilesDir()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#android/util/Log/isLoggable(java.lang.String,int)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/endDocument()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/Boolean/valueOf(boolean)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/StringBuilder/toString()
org/scid/android/engine/EngineManager/saveEngineData(java.util.Map)#java/lang/Exception/getMessage()
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#android/content/Context/getFilesDir()
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#android/content/Context/getString(int,java.lang.Object[])
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/File(java.io.File,java.lang.String)
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/util/Map/get(java.lang.Object)
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#android/widget/Toast/show()
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/exists()
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/File(java.lang.String)
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#java/io/File/getAbsolutePath()
org/scid/android/engine/EngineManager/addEngine(java.lang.String,java.lang.String,java.lang.String,int)#org/scid/android/engine/EngineManager$CopyExecutableTask/execute(java.lang.Object[])
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/Integer/toString()
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/length()
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/substring(int,int)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/Integer/valueOf(int)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/StringBuilder/toString()
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/charAt(int)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/equals(java.lang.Object)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/String/substring(int)
org/scid/android/gamelogic/GameTree$Node/parsePgn(org.scid.android.gamelogic.GameTree$PgnScanner,org.scid.android.gamelogic.GameTree$Node,org.scid.android.PGNOptions)#java/lang/Integer/parseInt(java.lang.String)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/length()
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/substring(int)
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/gamelogic/GameTree$Node/extractExtInfo(java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#android/content/SharedPreferences$Editor/commit()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/io/File/File(java.lang.String)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#android/content/SharedPreferences/edit()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#org/scid/android/ScidAndroidActivity/getApplicationContext()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#android/content/SharedPreferences$Editor/putString(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/String/length()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/io/File/exists()
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/createDatabase(java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/File/getName()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/IOException/getMessage()
org/scid/android/ScidAndroidActivity/checkUciEngine()#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/File/getAbsolutePath()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/InterruptedException/getMessage()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/Runtime/getRuntime()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/InputStream/read(byte[])
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/File/exists()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/FileInputStream/FileInputStream(java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/Runtime/exec(java.lang.String[])
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/File/File(java.lang.String)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/FileOutputStream/write(byte[],int,int)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/InputStream/close()
org/scid/android/ScidAndroidActivity/checkUciEngine()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/Process/waitFor()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/io/FileOutputStream/close()
org/scid/android/ScidAndroidActivity/checkUciEngine()#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#android/content/SharedPreferences/getString(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#org/scid/android/ScidAndroidActivity/getText(int)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#java/lang/Integer/parseInt(java.lang.String)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#android/content/SharedPreferences/getBoolean(java.lang.String,boolean)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#java/lang/Double/valueOf(double)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/makeHumanMove(org.scid.android.gamelogic.Move)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/ScidAndroidActivity/createClipboardDialog()#android/app/AlertDialog$Builder/setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/lang/String/length()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#android/text/ClipboardManager/hasText()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/util/List/toArray(java.lang.Object[])
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/util/List/add(java.lang.Object)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#org/scid/android/ScidAndroidActivity/getSystemService(java.lang.String)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#org/scid/android/ScidAndroidActivity/getPackageManager()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/util/ArrayList/ArrayList()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/util/List/size()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/createClipboardDialog()#java/lang/Integer/valueOf(int)
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#org/scid/android/gamelogic/ChessParseError/getMessage()
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#org/scid/android/ScidAndroidActivity/getApplicationContext()
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#java/lang/String/length()
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#android/util/Log/i(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/setPgnFromDataBaseView(int)#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/exportPgn()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/exportPgn()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog/show()
org/scid/android/ScidAndroidActivity/exportPgn()#android/widget/EditText/setText(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/exportPgn()#android/widget/EditText/EditText(android.content.Context)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/exportPgn()#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/exportPgn()#org/scid/android/ScidAndroidActivity/getText(int)
org/scid/android/ScidAndroidActivity/exportPgn()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/exportPgn()#android/app/AlertDialog$Builder/setView(android.view.View)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setMovementMethod(android.text.method.MovementMethod)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/view/GestureDetector/GestureDetector(android.view.GestureDetector$OnGestureListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setOnTouchListener(android.view.View$OnTouchListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ScidAndroidActivity/setContentView(int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ChessBoard/requestFocus()
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/RatingBar/setOnTouchListener(android.view.View$OnTouchListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ScidAndroidActivity/findViewById(int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setTextColor(int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/getTextColors()
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setFocusable(boolean)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/ScrollView/setFocusable(boolean)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ChessBoard/setFocusable(boolean)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ChessBoard/setOnTouchListener(android.view.View$OnTouchListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ScidAndroidActivity/getWindow()
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/text/method/LinkMovementMethod/getInstance()
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ScidAndroidActivity/requestWindowFeature(int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setOnLongClickListener(android.view.View$OnLongClickListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ChessBoard/setOnLongClickListener(android.view.View$OnLongClickListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/TextView/setLinkTextColor(int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/view/Window/setFeatureInt(int,int)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/widget/ImageButton/setOnLongClickListener(android.view.View$OnLongClickListener)
org/scid/android/ScidAndroidActivity/initUI(boolean)#org/scid/android/ChessBoard/setClickable(boolean)
org/scid/android/ScidAndroidActivity/initUI(boolean)#android/content/res/ColorStateList/getDefaultColor()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#org/scid/android/gamelogic/ChessParseError/getMessage()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#android/text/ClipboardManager/getText()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#android/util/Log/i(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#org/scid/android/ScidAndroidActivity/getApplicationContext()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#org/scid/android/ScidAndroidActivity/getSystemService(java.lang.String)
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#java/lang/CharSequence/toString()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/pasteFromClipboard()#android/text/ClipboardManager/hasText()
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/widget/EditText/setInputType(int)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/widget/EditText/EditText(android.content.Context)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/setView(android.view.View)
org/scid/android/ScidAndroidActivity/createGotoGameDialog()#android/app/AlertDialog$Builder/setMessage(int)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#org/scid/android/ScidAndroidActivity/getText(int)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/widget/EditText/EditText(android.content.Context)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/createCreateDatabaseDialog()#android/app/AlertDialog$Builder/setView(android.view.View)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#java/lang/Integer/intValue()
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#java/io/File/exists()
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#java/io/File/File(java.lang.String)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/os/Bundle/getByteArray(java.lang.String)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#java/io/File/mkdirs()
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/media/MediaPlayer/create(android.content.Context,int)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/getString(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(java.lang.String)
org/scid/android/ScidAndroidActivity/onCreate(android.os.Bundle)#android/preference/PreferenceManager/getDefaultSharedPreferences(android.content.Context)
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/content/Intent/setData(android.net.Uri)
org/scid/android/ScidAndroidActivity/handleIncomingContent()#org/scid/android/gamelogic/ChessParseError/getMessage()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/content/Intent/getAction()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/util/Log/i(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/ScidAndroidActivity/handleIncomingContent()#java/lang/String/equals(java.lang.Object)
org/scid/android/ScidAndroidActivity/handleIncomingContent()#org/scid/android/ScidAndroidActivity/getIntent()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#org/scid/android/ScidAndroidActivity/getApplicationContext()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/content/Intent/getData()
org/scid/android/ScidAndroidActivity/handleIncomingContent()#android/content/Intent/getStringExtra(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String,java.lang.Throwable)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getAction()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/content/SharedPreferences/getString(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/String/length()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/widget/Toast/show()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getIntExtra(java.lang.String,int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#org/scid/android/ScidAndroidActivity/getText(int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/io/File/File(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/String/equals(java.lang.Object)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/Integer/parseInt(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/Integer/valueOf(int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/app/AlertDialog$Builder/show()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#org/scid/android/ScidAndroidActivity/getApplicationContext()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#org/scid/android/ScidAndroidActivity/getString(int,java.lang.Object[])
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/widget/Toast/makeText(android.content.Context,int,int)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/io/File/delete()
org/scid/android/ScidAndroidActivity/onActivityResult(int,int,android.content.Intent)#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/MenuItem/setVisible(boolean)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#org/scid/android/ScidAndroidActivity/getPackageManager()
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/Menu/findItem(int)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/text/ClipboardManager/hasText()
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/MenuItem/setEnabled(boolean)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/SubMenu/findItem(int)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/MenuItem/getSubMenu()
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/app/Activity/onPrepareOptionsMenu(android.view.Menu)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#org/scid/android/ScidAndroidActivity/getSystemService(java.lang.String)
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#java/lang/String/length()
org/scid/android/ScidAndroidActivity/onPrepareOptionsMenu(android.view.Menu)#android/view/MenuItem/setChecked(boolean)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#org/scid/android/ScidAndroidActivity/showDialog(int)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/MenuItem/setChecked(boolean)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/content/Intent/setAction(java.lang.String)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/SubMenu/findItem(int)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#org/scid/android/ScidAndroidActivity/removeDialog(int)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/MenuItem/getItemId()
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/util/Log/e(java.lang.String,java.lang.String)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#org/scid/android/ScidAndroidActivity/startActivityForResult(android.content.Intent,int)
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/MenuItem/getSubMenu()
org/scid/android/ScidAndroidActivity/onOptionsItemSelected(android.view.MenuItem)#android/content/Intent/putExtra(java.lang.String,java.lang.String[])
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#android/widget/TextView/setText(java.lang.CharSequence,android.widget.TextView$BufferType)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/util/List/subList(int,int)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/util/List/size()
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#android/widget/TextView/append(java.lang.CharSequence)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/String/indexOf(int)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/StringBuilder/toString()
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/String/valueOf(java.lang.Object)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#android/text/Html/fromHtml(java.lang.String)
org/scid/android/ScidAndroidActivity/updateThinkingInfo()#java/lang/String/length()
org/scid/android/ScidAndroidActivity/createImportDialog()#java/util/ArrayList/ArrayList()
org/scid/android/ScidAndroidActivity/createImportDialog()#android/app/AlertDialog$Builder/setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createImportDialog()#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/ScidAndroidActivity/createImportDialog()#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/createImportDialog()#java/util/List/toArray(java.lang.Object[])
org/scid/android/ScidAndroidActivity/createImportDialog()#java/util/List/add(java.lang.Object)
org/scid/android/ScidAndroidActivity/createImportDialog()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/createImportDialog()#java/util/List/size()
org/scid/android/ScidAndroidActivity/createImportDialog()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/createImportDialog()#java/lang/Integer/valueOf(int)
org/scid/android/ScidAndroidActivity/createSearchDialog()#java/util/ArrayList/ArrayList()
org/scid/android/ScidAndroidActivity/createSearchDialog()#android/app/AlertDialog$Builder/setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener)
org/scid/android/ScidAndroidActivity/createSearchDialog()#android/app/AlertDialog$Builder/setTitle(int)
org/scid/android/ScidAndroidActivity/createSearchDialog()#org/scid/android/ScidAndroidActivity/getString(int)
org/scid/android/ScidAndroidActivity/createSearchDialog()#java/util/List/toArray(java.lang.Object[])
org/scid/android/ScidAndroidActivity/createSearchDialog()#java/util/List/add(java.lang.Object)
org/scid/android/ScidAndroidActivity/createSearchDialog()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
org/scid/android/ScidAndroidActivity/createSearchDialog()#java/util/List/size()
org/scid/android/ScidAndroidActivity/createSearchDialog()#android/app/AlertDialog$Builder/create()
org/scid/android/ScidAndroidActivity/createSearchDialog()#java/lang/Integer/valueOf(int)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/valueOf(java.lang.Object)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#org/scid/android/chessok/LinkListArrayAdapter/getItem(int)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getSystemService(java.lang.String)
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/StringBuilder/toString()
org/scid/android/chessok/LinkListArrayAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/text/Html/fromHtml(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/io/FileNotFoundException/FileNotFoundException()
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#com/kalab/chess/enginesupport/ChessEngineProvider/getContext()
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/content/res/AssetManager/openFd(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/content/res/AssetFileDescriptor/AssetFileDescriptor(android.os.ParcelFileDescriptor,long,long)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/io/IOException/getLocalizedMessage()
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/net/Uri/getLastPathSegment()
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/io/File/File(java.lang.String)
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#java/lang/StringBuilder/toString()
com/kalab/chess/enginesupport/ChessEngineProvider/openAssetFile(android.net.Uri,java.lang.String)#android/content/Context/getAssets()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#org/scid/android/ImportPgnTask/dismissProgress()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/app/Activity/finish()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/app/Activity/getString(int)
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/content/Intent/setAction(java.lang.String)
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/app/Activity/setResult(int,android.content.Intent)
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/content/Intent/Intent()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/app/Activity/getApplicationContext()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#java/lang/String/length()
org/scid/android/ImportPgnTask/onPostExecute(java.lang.String)#android/widget/Toast/show()
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/Character/isWhitespace(char)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/util/List/remove(int)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/String/charAt(int)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/util/List/size()
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/Character/isDigit(char)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/StringBuilder/StringBuilder()
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/StringBuilder/append(char)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/util/List/get(int)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/String/indexOf(int)
org/scid/android/gamelogic/GameTree$PgnScanner/nextToken()#java/lang/StringBuilder/toString()
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/preference/ListPreference/setEntryValues(java.lang.CharSequence[])
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/preference/PreferenceActivity/onCreate(android.os.Bundle)
org/scid/android/Preferences/onCreate(android.os.Bundle)#org/scid/android/Preferences/findPreference(java.lang.CharSequence)
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/content/Intent/getStringArrayExtra(java.lang.String)
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/preference/ListPreference/setDefaultValue(java.lang.Object)
org/scid/android/Preferences/onCreate(android.os.Bundle)#org/scid/android/Preferences/getIntent()
org/scid/android/Preferences/onCreate(android.os.Bundle)#org/scid/android/Preferences/addPreferencesFromResource(int)
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
org/scid/android/Preferences/onCreate(android.os.Bundle)#android/preference/ListPreference/setEntries(java.lang.CharSequence[])
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/text/DateFormat/setTimeZone(java.util.TimeZone)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/util/TimeZone/getTimeZone(java.lang.String)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/util/Date/Date()
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/text/DateFormat/format(java.util.Date)
org/scid/android/gamelogic/ChessController/setPGN(java.lang.String)#java/lang/StringBuilder/toString()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/atan2(double,double)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/hypot(double,double)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/util/ArrayList/size()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/tan(double)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Matrix/postTranslate(float,float)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/min(int,int)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Path/transform(android.graphics.Matrix)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Matrix/postRotate(float)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Path/Path()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Matrix/Matrix()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/util/List/size()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Path/close()
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/sin(double)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/util/List/get(int)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/lang/Math/cos(double)
org/scid/android/ChessBoard/drawMoveHints(android.graphics.Canvas)#java/util/ArrayList/get(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setMessage(java.lang.CharSequence)
org/scid/android/ProgressingTask/onPreExecute()#android/app/Activity/getString(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setTitle(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setIndeterminate(boolean)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/show()
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setProgressStyle(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setMax(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setProgress(int)
org/scid/android/ProgressingTask/onPreExecute()#android/app/ProgressDialog/setCancelable(boolean)
