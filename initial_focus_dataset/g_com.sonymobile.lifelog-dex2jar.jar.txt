com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Iterator/hasNext()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Map$Entry/getKey()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Iterator/next()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/List/add(java.lang.Object)
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/List/get(int)
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Map$Entry/getValue()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Map/entrySet()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/ArrayList/ArrayList(int)
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/List/size()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Map/size()
com/google/gson/internal/bind/MapTypeAdapterFactory$Adapter/write(com.google.gson.stream.JsonWriter,java.util.Map)#java/util/Set/iterator()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/util/Iterator/hasNext()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/String/length()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#android/os/Bundle/getParcelable(java.lang.String)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/util/Iterator/next()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/util/Set/iterator()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/Integer/valueOf(int)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#android/os/Bundle/size()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/append(long)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/PutDataRequest/toString(boolean)#android/os/Bundle/keySet()
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/getApplicationContext()
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/setContentView(int)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/setTitle(java.lang.CharSequence)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/getResources()
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#android/graphics/drawable/ColorDrawable/ColorDrawable(int)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/findViewById(int)
com/sonymobile/lifelog/ui/card/CardListActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/card/CardListActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getWidth()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/ViewGroup/dispatchDraw(android.graphics.Canvas)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#java/util/ArrayList/size()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getHeight()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getLocationOnScreen(int[])
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.Rect)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#java/util/ArrayList/get(int)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#com/sonymobile/flix/components/Scene/setProperty(java.lang.Object,java.lang.Object)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/setColor(int)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/setStrokeJoin(android.graphics.Paint$Join)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/DashPathEffect/DashPathEffect(float[],float)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/Paint(int)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#com/sonymobile/flix/components/Scene/getProperty(java.lang.Object)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#android/content/Context/getResources()
com/sonymobile/flix/components/accessibility/AccessibleButton/setAccessibilityFocus()#com/sonymobile/flix/components/accessibility/AccessibleButton/getScene()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/Long/toBinaryString(long)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/next()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/add(java.lang.Object)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/iterator()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/toString()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/hasNext()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(int)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/Long/toBinaryString(long)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/next()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/add(java.lang.Object)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/iterator()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/toString()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/hasNext()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/isAssignableFrom(java.lang.Class)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/get(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/getType()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/ThreadLocal/set(java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/content/Context/getPackageName()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/Map/get(java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/String/startsWith(java.lang.String)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/String/indexOf(int)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/content/Context/getClassLoader()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/HashMap/HashMap()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/ThreadLocal/get()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/append(char)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/view/View/getVisibility()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/graphics/Rect/equals(java.lang.Object)
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/util/List/size()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/graphics/Rect/isEmpty()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/util/List/get(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/setMeasuredDimension(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/util/List/size()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/util/List/get(int)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getSuperclass()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getAnnotation(java.lang.Class)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getName()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Object/getClass()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getRight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/contains(android.graphics.Rect)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/set(android.graphics.Rect)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/toShortString()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getWidth()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/isEmpty()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getTop()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getHeight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getLeft()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getBottom()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(float,float,float,float,android.graphics.Region$Op)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/round(float)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getBottom()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setColor(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/isOpaque()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setAlpha(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/Paint()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/isRunning()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/cancel()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/start()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getLayoutParams()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Integer/signum(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/support/design/widget/AppBarLayout/getChildAt(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/support/design/widget/AppBarLayout/getChildCount()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getBottom()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Math/abs(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/animation/Interpolator/getInterpolation(float)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Math/round(float)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getTop()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getHeight()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/isEmpty()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/remove()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/Integer/intValue()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Collection/iterator()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createStringArray()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/IBinder/queryLocalInterface(java.lang.String)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/common/internal/IGmsServiceBroker$Stub/getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readStrongBinder()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/hasMessages(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/clear()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/obtainMessage(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/unbindService(android.content.ServiceConnection)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/Intent(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/bindService(android.content.Intent,android.content.ServiceConnection,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Context/getPackageManager()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/containsKey(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/List/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getKey()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/next()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/equals(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/contains(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getValue()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/Intent()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/HashSet/HashSet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/entrySet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/add(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/isEmpty()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/peek()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/lang/Integer/intValue()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/HashMap/entrySet()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/Set/iterator()
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/activityengine/engine/model/ActivityResult/getMostProbableTypeAndScore()#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#com/sonymobile/lifelog/activityengine/engine/model/content/MusicContent$AudioPlayer/fromString(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/Location(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setElapsedRealtimeNanos(long)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setTime(long)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setAltitude(double)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setAccuracy(float)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#com/sonymobile/lifelog/activityengine/engine/model/ActivityType/getFromMotionType(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setLongitude(double)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/model/Session/fromJsonWithSourceInfo(java.lang.String,java.lang.String)#android/location/Location/setLatitude(double)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONObject/JSONObject(java.util.Map)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/List/isEmpty()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONObject/toString()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONObject/putOpt(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#com/sonymobile/lifelog/activityengine/engine/model/ActivityType/getMotionType()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/util/HashMap/HashMap()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONArray/JSONArray()
com/sonymobile/lifelog/activityengine/engine/model/Session/toJSON()#org/json/JSONArray/put(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#org/json/JSONObject/toString()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/append(double)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/append(float)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#android/text/format/DateUtils/formatElapsedTime(long)
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/model/Session/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#android/graphics/Paint/setStrokeCap(android.graphics.Paint$Cap)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#com/sonymobile/lifelog/ui/widget/HintLayout/getContext()
com/sonymobile/lifelog/ui/widget/HintLayout/init()#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#com/sonymobile/lifelog/ui/widget/HintLayout/setWillNotDraw(boolean)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#com/sonymobile/lifelog/ui/widget/HintLayout/setSystemUiVisibility(int)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#com/sonymobile/lifelog/ui/widget/HintLayout/setClickable(boolean)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#com/sonymobile/lifelog/ui/widget/HintLayout/setFitsSystemWindows(boolean)
com/sonymobile/lifelog/ui/widget/HintLayout/init()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/view/View/getLocationOnScreen(int[])
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/view/View/getMeasuredWidth()
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Paint/getStrokeWidth()
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Paint/getAlpha()
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/graphics/Canvas/drawPoint(float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/HintLayout/drawCorners(android.graphics.Canvas,android.view.View,android.graphics.Paint)#android/view/View/getMeasuredHeight()
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/LinearLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/LinearLayout/addView(android.view.View)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/view/ViewTreeObserver/isAlive()
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#com/sonymobile/lifelog/ui/widget/HighlightWrapper/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/TextView/setTextAlignment(int)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#com/sonymobile/lifelog/ui/widget/HintLayout/getViewTreeObserver()
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#com/sonymobile/lifelog/ui/widget/HintLayout/addView(android.view.View)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/LinearLayout/setPadding(int,int,int,int)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/LinearLayout/LinearLayout(android.content.Context)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/TextView/TextView(android.content.Context)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/widget/LinearLayout/setOrientation(int)
com/sonymobile/lifelog/ui/widget/HintLayout/setupContent(android.content.Context)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#android/widget/LinearLayout/setY(float)
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#android/widget/LinearLayout/getMeasuredHeight()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HintLayout/getMeasuredHeight()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#android/graphics/PointF/set(float,float)
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HintLayout/getMeasuredWidth()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HighlightWrapper/setY(float)
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HighlightWrapper/getMeasuredHeight()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HighlightWrapper/getMeasuredWidth()
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#android/widget/LinearLayout/setX(float)
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#com/sonymobile/lifelog/ui/widget/HighlightWrapper/setX(float)
com/sonymobile/lifelog/ui/widget/HintLayout/positionViews()#android/widget/LinearLayout/getMeasuredWidth()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentProviderOperation/newDelete(android.net.Uri)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentProviderOperation$Builder/build()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentProviderOperation/newInsert(android.net.Uri)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/util/List/iterator()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentResolver/applyBatch(java.lang.String,java.util.ArrayList)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentProviderOperation$Builder/withValue(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/Integer/toString(int)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#android/content/ContentProviderOperation$Builder/withSelection(java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/NotificationHandler/updateNotificationsInternal(java.util.List,com.sonymobile.lifelog.model.Notification$DataType)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/lang/Integer/toString(int)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/provider/NotificationHandler/getNotificationsInternal(com.sonymobile.lifelog.model.Notification$DataType,com.sonymobile.lifelog.model.Notification$NotificationType,java.lang.Boolean)#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Map/containsKey(java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Map/values()
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/utils/MusicInfoRetriever/orderItemsByPlayerAndAddHeaders(java.util.List)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/content/Intent/setData(android.net.Uri)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#java/lang/String/startsWith(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/content/Intent/Intent()
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/app/Activity/startActivity(android.content.Intent)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/startPlaybackActivity(android.app.Activity,com.sonymobile.lifelog.logger.model.Track)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/database/Cursor/close()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getLocalContent(java.lang.String)#android/graphics/BitmapFactory/decodeFile(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map/get(java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/List/size()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map/values()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Set/iterator()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/List/get(int)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/List/iterator()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map/entrySet()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/utils/MusicInfoRetriever/getTopTracks(java.util.List,int)#java/util/HashMap/HashMap()
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/String/concat(java.lang.String)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/util/List/get(int)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/String/String(java.lang.String)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/Integer/toString(int)
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/lang/String/length()
com/google/android/gms/wearable/PutDataMapRequest/asPutDataRequest()#java/util/List/size()
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/sql/Date/Date(long)
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/util/Date/getTime()
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/StringBuilder/toString()
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/StringBuilder/StringBuilder()
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/sql/Timestamp/Timestamp(long)
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/DefaultDateTypeAdapter/deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext)#java/lang/Object/getClass()
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/support/v4/view/ViewPager/setAlpha(float)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/support/v4/view/ViewPager/getHeight()
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/support/v4/view/ViewPager/animate()
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/view/ViewPropertyAnimator/translationY(float)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/support/v4/view/ViewPager/setTranslationY(float)
com/sonymobile/lifelog/ui/graph/GraphActivity/setAdapterIfReady()#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ValueAnimator/ofFloat(float[])
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/view/Window/setNavigationBarColor(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/view/Window/setStatusBarColor(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ArgbEvaluator/ArgbEvaluator()
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#com/sonymobile/lifelog/ui/graph/GraphActivity/getWindow()
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ValueAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#android/animation/ValueAnimator/start()
com/sonymobile/lifelog/ui/graph/GraphActivity/setupStartTransition(android.view.View)#com/sonymobile/lifelog/model/ActivityType/getPrimaryDarkColor()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/getApplicationContext()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/view/Window/getDecorView()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getTheme()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/findViewById(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/getIntent()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/setTheme(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/isShareableActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/lang/Long/longValue()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/setContentView(int)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/getWindow()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/os/Bundle/getLong(java.lang.String,long)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphActivity/finish()
com/sonymobile/lifelog/ui/graph/GraphActivity/onCreate(android.os.Bundle)#java/util/Calendar/set(int,int,int,int,int,int)
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/getLongPressTimeout()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/accessibility/AccessibilityManager/isTouchExplorationEnabled()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/accessibility/AccessibilityManager/isEnabled()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/View/removeCallbacks(java.lang.Runnable)
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/content/Context/getSystemService(java.lang.String)
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/View/postDelayed(java.lang.Runnable,long)
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/View/getContext()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/TooltipCompatHandler/onHover(android.view.View,android.view.MotionEvent)#android/view/View/isEnabled()
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/toString()
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/ServerUserProfile/getProfileUserData(java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/toString()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/getNameAvailable(java.lang.String,java.lang.String,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendPath(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/toString()
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/service/ServerUserProfile/setProfileUserData(java.lang.String,com.sonymobile.lifelog.model.User$UserRequest,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addView(android.view.View,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/isLayoutRTL()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addDisappearingView(android.view.View)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getPaddingTop()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getPaddingLeft()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager$LayoutParams/isItemRemoved()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addDisappearingView(android.view.View,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/getLayoutParams()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addView(android.view.View)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/util/Arrays/fill(java.lang.Object[],java.lang.Object)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/append(int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getChildMeasureSpec(int,int,int,int,boolean)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/hasFocusable()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getChildCount()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager$LayoutParams/isItemChanged()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/toString()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingTop()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingLeft()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/setMeasuredDimension(int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingRight()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingBottom()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/chooseSize(int,int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/LinearLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getMinimumHeight()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/height()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/width()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getMinimumWidth()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/view/View/getLayoutParams()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/convertFocusDirectionToLayoutDirection(int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/findContainingItemView(android.view.View)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/view/View/hasFocusable()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/getChildAt(int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/getChildCount()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#java/lang/Math/min(int,int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/isLayoutRTL()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/isViewPartiallyVisible(android.view.View,boolean,boolean)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#java/lang/Math/max(int,int)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/concat(android.graphics.Matrix)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/view/View/draw(android.graphics.Canvas)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/width()
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postTranslate(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postScale(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/height()
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/round(float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/setScaleType(android.widget.ImageView$ScaleType)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/Matrix()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/layout(int,int,int,int)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getScrollX()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getScrollY()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/ImageView(android.content.Context)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getContext()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/mapRect(android.graphics.RectF)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getHeight()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/setTranslate(float,float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getWidth()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#java/lang/Math/round(float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/RectF/RectF(float,float,float,float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/measure(int,int)
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/view/View/getRight()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/support/v7/widget/ListViewCompat/refreshDrawableState()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/view/View/isEnabled()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#java/lang/reflect/Field/getBoolean(java.lang.Object)
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/view/View/getBottom()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#java/lang/IllegalAccessException/printStackTrace()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/view/View/getTop()
android/support/v7/widget/ListViewCompat/positionSelectorCompat(int,android.view.View)#android/view/View/getLeft()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getListPaddingTop()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/generateDefaultLayoutParams()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getListPaddingLeft()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getDividerHeight()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/measure(int,int)
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getAdapter()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getListPaddingRight()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getDivider()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/ListViewCompat/getListPaddingBottom()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/forceLayout()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getCount()
android/support/v7/widget/ListViewCompat/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getItemViewType(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/RectF/width()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#java/lang/Math/min(float,float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/Canvas/drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/Paint/getStrokeWidth()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/Canvas/save()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/RectF/set(android.graphics.RectF)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/Canvas/restore()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/RectF/inset(float,float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawRoundedBar(android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF,float,android.graphics.Paint,android.graphics.Paint)#android/graphics/RectF/height()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isHighlightEnabled()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForXValue(float,float)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/prepareBarHighlight(float,float,float,float,com.github.mikephil.charting.utils.Transformer)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarData/getDataSetByIndex(int)
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/width()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarEntry/getX()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getHighLightColor()
com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/sonymobile/lifelog/ui/graph/TopRoundedBarChartRenderer/setHighlightDrawPos(com.github.mikephil.charting.highlight.Highlight,android.graphics.RectF)
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Iterator/hasNext()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Set/iterator()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/lang/String/substring(int)
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Map/entrySet()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/Iterator/next()
com/google/android/gms/analytics/ecommerce/ProductAction/toString()#java/util/HashMap/HashMap()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/lang/String/toUpperCase(java.util.Locale)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/List/get(int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/List/iterator()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/List/size()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/Iterator/next()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getAllGoals()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#android/content/ContentValues/put(java.lang.String,java.lang.Boolean)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getContentValues(com.sonymobile.lifelog.model.Goal)#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/util/ArrayList/size()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#android/database/Cursor/getCount()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/String/valueOf(long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#java/lang/StringBuilder/length()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfApplicationData(long,long,java.lang.String,int)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/util/ArrayList/size()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#android/database/Cursor/getCount()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/String/valueOf(long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#java/lang/StringBuilder/length()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getNumberOfSessionsWithSpotifyLog(long,long,int)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/lang/String/valueOf(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentProviderOperation$Builder/withValues(android.content.ContentValues)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentProviderOperation$Builder/withSelection(java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentProviderOperation/newUpdate(android.net.Uri)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentProviderOperation$Builder/build()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/updateGoals(java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsIntArray(java.lang.String,int)#java/lang/NumberFormatException/getMessage()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/util/regex/Matcher/replaceAll(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/Float/floatValue()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/Float/valueOf(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultSyncDataHandler/getStringAsFloatArray(java.lang.String,int)#java/lang/NumberFormatException/getMessage()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addView(android.view.View,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addDisappearingView(android.view.View,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingTop()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingRight()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/hasFocusable()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getWidth()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/measureChildWithMargins(android.view.View,int,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addView(android.view.View)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addDisappearingView(android.view.View)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingLeft()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/Class/getName()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/Utils/hasUnresolvableType(java.lang.reflect.Type)#java/lang/Object/getClass()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getGenericDeclaration()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getName()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/String/equals(java.lang.Object)
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
retrofit2/Utils/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/Class/getName()
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/NullPointerException/NullPointerException(java.lang.String)
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/Utils/getRawType(java.lang.reflect.Type)#java/lang/Object/getClass()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/isArray()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/getComponentType()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
retrofit2/Utils/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#[Ljava/lang/reflect/Type;/clone()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/graphics/drawable/Drawable/getBounds()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingTop()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/widget/AppCompatTextView/onMeasure(int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getMeasuredWidth()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/widget/AppCompatTextView/setPadding(int,int,int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingBottom()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingRight()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/graphics/Rect/width()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setTouchInterceptor(android.view.View$OnTouchListener)
android/support/v7/widget/ListPopupWindow/show()#android/view/View/getWidth()
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setOutsideTouchable(boolean)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/isShowing()
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setWidth(int)
android/support/v7/widget/ListPopupWindow/show()#android/os/Handler/post(java.lang.Runnable)
android/support/v7/widget/ListPopupWindow/show()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/update(android.view.View,int,int,int,int)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setHeight(int)
android/support/v7/widget/ListPopupWindow/show()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ListPopupWindow/show()#android/support/v7/widget/DropDownListView/setSelection(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/graphics/Rect/setEmpty()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnScrollListener(android.widget.AbsListView$OnScrollListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setFocusableInTouchMode(boolean)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/getPaddingTop()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getBackground()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/getPaddingBottom()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setAdapter(android.widget.ListAdapter)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int,float)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/setContentView(android.view.View)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/getLayoutParams()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getContentView()
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getInputMethodMode()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setSelector(android.graphics.drawable.Drawable)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setFocusable(boolean)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/measure(int,int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/setOrientation(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/toString()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/content/Context/getResources()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/getMeasuredHeight()
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setTranslationX(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setRotation(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setAlpha(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setRotationY(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setRotationX(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setScaleX(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setTranslationY(float)
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/animate()
com/sonymobile/lifelog/utils/AnimUtils/reset(android.view.View)#android/view/View/setScaleY(float)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#android/os/Handler/removeCallbacksAndMessages(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#android/os/Handler/removeMessages(int)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/stop()#java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#android/os/Handler/hasMessages(int)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#android/os/Handler/sendEmptyMessageDelayed(int,long)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#android/os/Handler/post(java.lang.Runnable)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#android/os/Handler/removeMessages(int)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/activityDetected(com.sonymobile.lifelog.activityengine.engine.model.ActivityResult,long)#com/sonymobile/lifelog/activityengine/engine/model/ActivityType/ordinal()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#android/content/Context/getMainLooper()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/util/concurrent/atomic/AtomicBoolean/set(boolean)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#android/os/Handler/Handler(android.os.Looper)
com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine/start(com.sonymobile.lifelog.activityengine.engine.AbstractActivityEngine$RunningMode)#com/sonymobile/lifelog/activityengine/engine/AbstractActivityEngine$RunningMode/ordinal()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/MatrixCursor/addRow(java.lang.Object[])
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/size()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/provider/GoalProvider/getContext()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/MatrixCursor/MatrixCursor(java.lang.String[])
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/iterator()
com/sonymobile/lifelog/provider/GoalProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/Context/getApplicationContext()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/SleepData/getEndTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType$Category/equals(java.lang.Object)
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/ApplicationData/getStartTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/MusicData/getEndTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType/getActivityType(com.sonymobile.lifelog.logger.model.ActivityData)
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/ApplicationData/getEndTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/lang/Math/max(long,long)
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType/getCategory()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/lang/Math/round(float)
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/PhysicalData/getEndTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/MusicData/getStartTime()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#java/util/List/iterator()
com/sonymobile/lifelog/provider/GoalProvider/getDetails(android.content.Context,com.sonymobile.lifelog.provider.DatabaseHelper,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/logger/model/PhysicalData/getStartTime()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/util/Map/putAll(java.util.Map)
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#android/view/View/getContext()
com/sonymobile/lifelog/ui/graph/GraphFragment/generateDetailsData(com.sonymobile.lifelog.model.ActivityType,int,com.sonymobile.lifelog.ui.graph.GraphData,boolean)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphFragment/getContext()
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphFragment/getArguments()
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/ViewGroup/getContext()
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getString(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/activityengine/analytics/google/ReleaseType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getSerializable(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphFragment/startActivity(android.content.Intent)
com/sonymobile/lifelog/ui/graph/GraphFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#com/sonymobile/lifelog/ui/graph/GraphFragment/getArguments()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#android/os/Bundle/getSerializable(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/List/remove(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#com/sonymobile/lifelog/ui/graph/GraphFragment/isAdded()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#com/sonymobile/lifelog/ui/graph/GraphFragment/isDetached()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphFragment/onActivityEdited(long,long,long,long)#java/util/List/iterator()
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.String)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/Class/getName()
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(char)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/get(int)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/size()
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/Object/getClass()
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/toString()
retrofit2/Retrofit/nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/indexOf(java.lang.Object)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.String)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/Class/getName()
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(char)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/get(int)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/size()
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/Object/getClass()
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/lang/StringBuilder/toString()
retrofit2/Retrofit/nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])#java/util/List/indexOf(java.lang.Object)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.String)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/StringBuilder/StringBuilder(java.lang.String)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/Class/getName()
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(char)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/util/List/get(int)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/util/List/size()
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/Object/getClass()
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/lang/StringBuilder/toString()
retrofit2/Retrofit/nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])#java/util/List/indexOf(java.lang.Object)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/getIntent()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#java/lang/Integer/intValue()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/app/PendingIntent/getIntentSender()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/finish()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/getStrokeWidth()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/centerY()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.Rect)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawOval(android.graphics.RectF,android.graphics.Paint)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/centerX()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/support/design/widget/CircularBorderDrawable/copyBounds(android.graphics.Rect)
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(float[],float[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(boolean[],boolean[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/deepEquals(java.lang.Object[],java.lang.Object[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(int[],int[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/lang/Class/isArray()
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(long[],long[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
com/google/android/gms/internal/wearable/zzq/equals(java.lang.Object)#java/util/Arrays/equals(double[],double[])
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getAnimator()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/RadarData/getDataSetCount()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#java/util/List/clear()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/Thread/sleep(long)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#android/os/Debug/dumpHprofData(java.lang.String)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#android/os/SystemClock/elapsedRealtime()
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/StringBuilder/toString()
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/Runtime/gc()
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/Runtime/getRuntime()
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/StringBuilder/append(int)
com/sonymobile/flix/util/MemoryLeakDetector$LiveObjectsCounter/run()#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/widget/FrameLayout/onLayout(boolean,int,int,int,int)
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/isAltPressed()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/FocusFinder/getInstance()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/graphics/Rect/setEmpty()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/support/v4/widget/NestedScrollView/findFocus()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/isShiftPressed()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/View/requestFocus(int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/support/v4/widget/NestedScrollView/isFocused()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/getAction()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/widget/FrameLayout/scrollTo(int,int)
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/view/View/getWidth()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildMeasureSpec(int,int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/widget/FrameLayout/onMeasure(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/offsetLocation(float,float)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/springBack(int,int,int,int,int,int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getOverScrollMode()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/EdgeEffect/isFinished()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/EdgeEffect/onRelease()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/getContext()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/get(android.content.Context)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setFocusable(boolean)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setWillNotDraw(boolean)
android/support/v4/widget/NestedScrollView/initScrollView()#android/widget/OverScroller/OverScroller(android.content.Context)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setDescendantFocusability(int)
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledMaximumFlingVelocity()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledMinimumFlingVelocity()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/graphics/Rect/height()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/view/View/getBottom()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getVerticalFadingEdgeLength()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/springBack(int,int,int,int,int,int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/computeScrollOffset()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/isFocused()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/FocusFinder/getInstance()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/findFocus()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/requestFocus()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getDescendantFocusability()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/requestFocus(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/setDescendantFocusability(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/getDrawingRect(android.graphics.Rect)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/getBottom()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/scrollBy(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/startScroll(int,int,int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/FrameLayout/draw(android.graphics.Canvas)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/setSize(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getAutoSizeStepGranularity()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setHintTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setLinkTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getContext()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setTypeface(android.graphics.Typeface,int)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getTransformationMethod()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getMax()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getWidth()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getHeight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getPaddingRight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getPaddingLeft()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Integer/intValue()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Character/getNumericValue(char)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/length()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int,int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Integer/valueOf(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/text/DecimalFormat/format(double)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/matches(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/charAt(int)
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/getIntent()
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#android/os/Bundle/Bundle()
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/setContentView(int)
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/findViewById(int)
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/settings/SettingsActivity/getSupportFragmentManager()
com/sonymobile/lifelog/ui/settings/SettingsActivity/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/os/SystemClock/elapsedRealtime()
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/app/AlarmManager/setExact(int,long,android.app.PendingIntent)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,long)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/activityengine/engine/wakeful/WakefulReceiver/registerUpdate(android.content.Context,int,android.os.Handler,java.lang.String)#android/os/Messenger/Messenger(android.os.Handler)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/setName(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/lang/System/currentTimeMillis()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/res/Resources/getString(int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/NotificationChannel(java.lang.String,java.lang.CharSequence,int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/notify(int,android.app.Notification)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/getNotificationChannel(java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/getName()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getApplicationInfo()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getSystemService(java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/createNotificationChannel(android.app.NotificationChannel)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/util/concurrent/atomic/AtomicBoolean/set(boolean)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getResources()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/create()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context,int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/Context/getTheme()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/util/TypedValue/TypedValue()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/res/Resources/getResourceEntryName(int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/Context/getResources()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/getIntent()
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/os/Bundle/getSerializable(java.lang.String)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getEditableActivityTypes()
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/getLayoutInflater()
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/findViewById(int)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/ActivityEditActivity/setContentView(int)
com/sonymobile/lifelog/ui/ActivityEditActivity/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#com/sonymobile/lifelog/ui/ActivityEditActivity/getApplicationContext()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/util/Iterator/next()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#com/sonymobile/lifelog/ui/ActivityEditActivity/finish()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#android/widget/ListView/getCheckedItemPosition()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/ActivityEditActivity/actionDone()#java/util/List/iterator()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#java/lang/Math/min(double,double)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSetCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSets()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getIcon()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/getIntent()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/getApplicationContext()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getInteger(int)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/setContentView(int)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/finish()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/findViewById(int)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/view/View/getBackground()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/setTheme(int)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getTheme()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/view/ScaleGestureDetector/ScaleGestureDetector(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/view/GestureDetector/GestureDetector(android.content.Context,android.view.GestureDetector$OnGestureListener)
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/share/ShareActivity/getResources()
com/sonymobile/lifelog/ui/share/ShareActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/setFocusableInTouchMode(boolean)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/setSelection(int,int)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/setFocusable(boolean)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/text/Editable/length()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/view/inputmethod/InputMethodManager/hideSoftInputFromWindow(android.os.IBinder,int)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/requestFocus()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/getWindowToken()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/postDelayed(java.lang.Runnable,long)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#java/lang/String/trim()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#com/sonymobile/lifelog/ui/share/ShareActivity/getSystemService(java.lang.String)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/setLongClickable(boolean)
com/sonymobile/lifelog/ui/share/ShareActivity/setTitleEditEnabled(boolean)#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/ViewConfiguration/getLongPressTimeout()
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/MotionEvent/getX(int)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#java/util/ArrayList/size()
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/MotionEvent/findPointerIndex(int)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/VelocityTracker/obtain()
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/MotionEvent/getY(int)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/os/Handler/postDelayed(java.lang.Runnable,long)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
com/sonymobile/flix/util/GestureDetector/handleTouchDown(android.view.MotionEvent,int)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/getIntent()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/util/List/isEmpty()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/widget/FrameLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/lang/Class/getSimpleName()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/widget/FrameLayout/FrameLayout(android.content.Context)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/widget/FrameLayout/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/widget/FrameLayout/setSystemUiVisibility(int)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/widget/FrameLayout/setFitsSystemWindows(boolean)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/setContentView(android.view.View)
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#java/lang/Object/getClass()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/finish()
com/sonymobile/lifelog/ui/feature/hint/base/AbstractHintSequenceActivity/onCreate(android.os.Bundle)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/Class/getInterfaces()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/Class/getSuperclass()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Iterator/hasNext()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/Class/getDeclaredMethods()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Map$Entry/getKey()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Set/iterator()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Map$Entry/getValue()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Map/entrySet()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Map/putAll(java.util.Map)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/Iterator/next()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/util/HashMap/HashMap()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/createInfo(java.lang.Class)#java/lang/reflect/Method/getParameterTypes()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/util/Map/get(java.lang.Object)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/Class/getName()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/reflect/Method/getName()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
android/arch/lifecycle/ReflectiveGenericLifecycleObserver/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ReflectiveGenericLifecycleObserver$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/text/SimpleDateFormat/format(java.util.Date)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/Calendar/getTime()
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/text/SimpleDateFormat/setTimeZone(java.util.TimeZone)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/Calendar/getInstance(java.util.TimeZone)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/TimeZone/getDefault()
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/TimeZone/getTimeZone(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/TimestampFormatter/toIso8601(long,int)#java/util/TimeZone/getAvailableIDs(int)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/GregorianCalendar/GregorianCalendar(java.util.TimeZone)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Pattern/pattern()
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/Calendar/set(int,int)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Matcher/matches()
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/lang/String/toLowerCase(java.util.Locale)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/lang/String/indexOf(java.lang.String)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Matcher/usePattern(java.util.regex.Pattern)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/Calendar/getTimeInMillis()
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException()
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Matcher/group(int)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Matcher/region(int,int)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/lang/Integer/parseInt(java.lang.String)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/Calendar/setLenient(boolean)
okhttp3/Cookie/parseExpires(java.lang.String,int,int)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(boolean)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/size()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/add(int,java.lang.Object)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getParent()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/get(int)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/support/v7/widget/RecyclerView/removeCallbacks(java.lang.Runnable)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#java/lang/Runnable/run()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/ValueAnimator/setStartDelay(long)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/view/animation/AccelerateInterpolator/AccelerateInterpolator()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/support/v7/widget/CardView/getTag()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/support/v7/widget/CardView/setTag(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/ValueAnimator/ofFloat(float[])
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/AnimatorSet/playTogether(java.util.Collection)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/ValueAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/AnimatorSet/start()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/animateToCollapsed(android.support.v7.widget.CardView)#android/animation/AnimatorSet/AnimatorSet()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/getBackground()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setColorFilter(android.graphics.ColorFilter)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getIconResourceId(boolean)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/support/v7/widget/CardView/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/inflateCategory(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphAppCategoryView$CategoryData,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#android/util/ArrayMap/get(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#android/util/ArrayMap/ArrayMap()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#android/util/ArrayMap/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView/categorize(java.util.List)#android/util/ArrayMap/values()
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/content/Context/getSystemService(java.lang.Class)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/os/PersistableBundle/PersistableBundle()
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/os/PersistableBundle/putLong(java.lang.String,long)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/app/job/JobInfo$Builder/setExtras(android.os.PersistableBundle)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/content/ComponentName/ComponentName(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/app/job/JobScheduler/schedule(android.app.job.JobInfo)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/app/job/JobInfo$Builder/build()
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/app/job/JobInfo$Builder/setMinimumLatency(long)
com/sonymobile/lifelog/service/LocalInsightsJobService/scheduleJob(android.content.Context,long,long)#android/app/job/JobInfo$Builder/JobInfo$Builder(int,android.content.ComponentName)
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/web/SneiWebLoginActivity/finish()
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/web/SneiWebLoginActivity/getApplicationContext()
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/web/SneiWebLoginActivity/startActivity(android.content.Intent)
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#android/content/Intent/addFlags(int)
com/sonymobile/lifelog/login/web/SneiWebLoginActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#android/app/ProgressDialog/dismiss()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#java/lang/Object/toString()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#com/sonymobile/lifelog/logger/notification/NotificationActionType/name()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#android/widget/Toast/show()
com/sonymobile/lifelog/debug/notifications/DebugNotificationsAdapter$1/onClick(android.view.View)#java/lang/System/currentTimeMillis()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/lang/Integer/toString(int)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/HashMap/HashMap()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
com/google/android/gms/analytics/Tracker/send(java.util.Map)#java/util/Map/clear()
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#android/net/Uri/toString()
com/sonymobile/lifelog/provider/BigQueryHandler/deleteAll(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Math/round(double)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Class/getCanonicalName()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Long/longValue()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Math/pow(double,double)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/String/valueOf(long)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/Math/abs(long)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzcm/zzd(java.lang.Object)#java/lang/String/charAt(int)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#com/google/android/gms/internal/measurement/zzcm/zzc(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/String/charAt(int)
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzcm/zzb(int,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/StringBuilder/length()
com/google/android/gms/internal/measurement/zzcm/zza(java.util.Map,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/Collections/nCopies(int,java.lang.Object)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/List/iterator()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/Arrays/toString(java.lang.Object[])
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/String/length()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/List/size()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/content/ContentValues/put(java.lang.String,byte[])
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/content/ContentValues/ContentValues()
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/tagmanager/zzat/zzb(java.util.List,long)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/util/ArrayList/ArrayList()
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/sqlite/SQLiteException/getMessage()
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/Cursor/getLong(int)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/util/List/add(java.lang.Object)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/Cursor/moveToFirst()
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/valueOf(long)
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/Cursor/moveToNext()
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/Integer/toString(int)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/length()
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzat/zzs(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/tagmanager/zzat/zzs(int)#android/database/Cursor/close()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/View/setBackgroundResource(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/View/setBackgroundColor(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateItems(java.util.List)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/text/TextPaint/measureText(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/widget/TextView/setWidth(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/ui/widget/ExpandableLayout/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/ui/widget/PieProgressView/setMainColor(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/widget/TextView/getPaint()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#com/sonymobile/lifelog/ui/widget/PieProgressView/setProgress(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateStressItems(com.sonymobile.lifelog.ui.graph.component.GraphUtils$StressContent,boolean)#android/content/Context/getApplicationContext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/view/ViewGroup/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateCard(android.view.LayoutInflater,java.lang.String,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Map/get(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/widget/ListView/setFocusable(boolean)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Map/containsKey(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/widget/ListAdapter/getCount()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/widget/ListView/getLayoutParams()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/widget/ListAdapter/getView(int,android.view.View,android.view.ViewGroup)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#com/sonymobile/lifelog/logger/model/ApplicationData/getEndTime()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#com/sonymobile/lifelog/logger/model/ApplicationData/getStartTime()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Map/values()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/List/get(int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/View/measure(int,int)
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/content/Context/getApplicationContext()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#android/view/View/getMeasuredHeight()
com/sonymobile/lifelog/ui/graph/component/GraphStatsView/inflateAppList(com.sonymobile.lifelog.ui.graph.GraphData)#com/sonymobile/lifelog/ui/graph/component/GraphStatsView/getContext()
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/String/length()
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/io/ByteArrayOutputStream/toByteArray()
com/google/android/gms/tagmanager/zzex/zzr(int)#android/content/res/Resources/getResourceName(int)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/tagmanager/zzex/zzr(int)#android/content/res/Resources/openRawResource(int)
com/google/android/gms/tagmanager/zzex/zzr(int)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzex/zzr(int)#android/content/Context/getResources()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/CircleImageView/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/ViewGroup/onMeasure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setVisibility(int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/min(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/getVisibility()
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/abs(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleY(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(double,double)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleX(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/pow(double,double)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/getString(int)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/findViewById(int)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/setContentView(int)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity/getApplicationContext()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/List/size()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/ordinal()
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#java/util/List/get(int)
com/sonymobile/lifelog/ui/TrackingModeActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TrackingModeActivity$1/execute(java.lang.Object[])
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/Iterator/hasNext()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarData/getMaxEntryCountSet()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/List/size()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/Iterator/next()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarData/notifyDataChanged()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/List/iterator()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarEntry/setX(float)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/Double/isNaN(double)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/Double/isInfinite(double)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/StringBuilder/append(double)
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#java/lang/StringBuilder/toString()
com/google/gson/internal/bind/JsonTreeReader/nextDouble()#com/google/gson/internal/bind/JsonTreeReader/isLenient()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/util/concurrent/ExecutorService/execute(java.lang.Runnable)
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/util/concurrent/FutureTask/get()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/util/concurrent/FutureTask/FutureTask(java.util.concurrent.Callable)
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever$GetAllDataSinceLastSync/getInitialData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/fromValue(int)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#android/support/v4/app/FragmentActivity/getApplicationContext()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/String/hashCode()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/Boolean/equals(java.lang.Object)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#android/text/TextUtils/equals(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#com/sonymobile/lifelog/ui/settings/SettingsFragment/getActivity()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#com/sonymobile/lifelog/ui/settings/SettingsFragment/getResources()
com/sonymobile/lifelog/ui/settings/SettingsFragment/onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/util/Set/contains(java.lang.Object)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/util/Set/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/internal/measurement/zzwb/zza(int,com.google.android.gms.internal.measurement.zzi,com.google.android.gms.internal.measurement.zzm[],java.util.Set)#java/lang/Integer/valueOf(int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/Class/getSimpleName()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/view/View/findViewById(int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/toString()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/recycle()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/Object/getClass()
com/google/android/gms/ads/identifier/zza/run()#java/net/URL/openConnection()
com/google/android/gms/ads/identifier/zza/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/ads/identifier/zza/run()#java/util/Iterator/hasNext()
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/append(int)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/buildUpon()
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/toString()
com/google/android/gms/ads/identifier/zza/run()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/net/HttpURLConnection/disconnect()
com/google/android/gms/ads/identifier/zza/run()#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/IndexOutOfBoundsException/getMessage()
com/google/android/gms/ads/identifier/zza/run()#java/util/Map/get(java.lang.Object)
com/google/android/gms/ads/identifier/zza/run()#java/net/URL/URL(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/String/length()
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri$Builder/build()
com/google/android/gms/ads/identifier/zza/run()#java/util/Iterator/next()
com/google/android/gms/ads/identifier/zza/run()#java/util/Map/keySet()
com/google/android/gms/ads/identifier/zza/run()#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/ads/identifier/zza/run()#java/util/Set/iterator()
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/parse(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/toString()
com/google/android/gms/ads/identifier/zza/run()#java/lang/Exception/getMessage()
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Rect/height()
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#java/lang/Math/hypot(double,double)
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/ExpandIndicator/getBounds()
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/ExpandIndicator/getPadding(android.graphics.Rect)
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Rect/width()
com/sonymobile/lifelog/ui/widget/ExpandIndicator/draw(android.graphics.Canvas)#android/graphics/Path/rewind()
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#android/os/PowerManager$WakeLock/acquire()
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/util/concurrent/TimeUnit/toMicros(long)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#android/os/HandlerThread/getLooper()
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#android/os/Handler/Handler(android.os.Looper)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#android/os/HandlerThread/HandlerThread(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/accelerometer/WakefulAccelerometer/start(com.sonymobile.lifelog.activityengine.engine.accelerometer.WakefulAccelerometer$WakefulSensorListener)#android/os/HandlerThread/start()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/getContext()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentUris/parseId(android.net.Uri)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/String/valueOf(long)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/getContext()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/DefaultKeyValueProvider/getContext()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/String/hashCode()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/Object/toString()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#android/widget/Toast/show()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#android/widget/EditText/getText()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter$2/onClick(android.content.DialogInterface,int)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/security/MessageDigest/digest()
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/getBytes()
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/security/MessageDigest/getInstance(java.lang.String)
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/security/MessageDigest/update(byte[])
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzbv/zzd(java.util.Map)#java/lang/String/concat(java.lang.String)
com/sonymobile/flix/components/Component/toShortString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/components/Component/toShortString()#java/lang/Integer/toHexString(int)
com/sonymobile/flix/components/Component/toShortString()#java/lang/Class/getName()
com/sonymobile/flix/components/Component/toShortString()#java/lang/Object/hashCode()
com/sonymobile/flix/components/Component/toShortString()#java/lang/String/substring(int)
com/sonymobile/flix/components/Component/toShortString()#java/lang/StringBuilder/append(char)
com/sonymobile/flix/components/Component/toShortString()#java/lang/Object/getClass()
com/sonymobile/flix/components/Component/toShortString()#java/lang/StringBuilder/toString()
com/sonymobile/flix/components/Component/toShortString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/components/Component/toShortString()#java/lang/String/lastIndexOf(int)
com/sonymobile/flix/components/Component/toLongString()#java/lang/String/valueOf(java.lang.Object)
com/sonymobile/flix/components/Component/toLongString()#java/lang/String/valueOf(boolean)
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/append(int)
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/append(boolean)
com/sonymobile/flix/components/Component/toLongString()#java/util/ArrayList/size()
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/toString()
com/sonymobile/flix/components/Component/toLongString()#com/sonymobile/flix/components/Scene/toShortString()
com/sonymobile/flix/components/Component/toLongString()#java/lang/String/valueOf(float)
com/sonymobile/flix/components/Component/toLongString()#java/lang/StringBuilder/append(float)
com/sonymobile/flix/components/Component/toString()#java/lang/String/valueOf(boolean)
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/append(int)
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/append(boolean)
com/sonymobile/flix/components/Component/toString()#java/util/ArrayList/size()
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/toString()
com/sonymobile/flix/components/Component/toString()#com/sonymobile/flix/components/Scene/toShortString()
com/sonymobile/flix/components/Component/toString()#java/lang/String/valueOf(float)
com/sonymobile/flix/components/Component/toString()#java/lang/StringBuilder/append(float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Canvas/concat(android.graphics.Matrix)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Canvas/translate(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/translate(float,float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/setTranslate(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Canvas/save(int)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/preScale(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/rotateY(float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/postScale(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/restore()
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/preTranslate(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/postRotate(float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#java/lang/Math/sin(double)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/getMatrix(android.graphics.Matrix)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/rotateZ(float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Canvas/restore()
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/rotateX(float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Matrix/postTranslate(float,float)
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#android/graphics/Camera/save()
com/sonymobile/flix/components/Component/draw(android.graphics.Canvas,float,float,com.sonymobile.flix.components.Component$DrawingState)#java/lang/Math/cos(double)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#android/widget/Toast/show()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#android/support/v4/app/FragmentActivity/isFinishing()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getActivity()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#android/widget/Toast/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/showToast(int,int,java.lang.String)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#java/util/List/size()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#java/util/List/get(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getArguments()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/view/inputmethod/InputMethodManager/hideSoftInputFromWindow(android.os.IBinder,int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/app/Activity/isFinishing()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/view/View/getWindowToken()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/widget/EditText/requestFocus()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getActivity()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/app/Activity/isDestroyed()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/app/Activity/getResources()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/handleDone(int)#android/app/Activity/getCurrentFocus()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/ArrayAdapter/setDropDownViewResource(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/requestFocus()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Spinner/setAdapter(android.widget.SpinnerAdapter)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/setFilters(android.text.InputFilter[])
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/view/View/setVisibility(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Spinner/setVisibility(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/view/inputmethod/InputMethodManager/toggleSoftInput(int,int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/setHint(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#java/util/List/size()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Spinner/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/EditText/setVisibility(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/getActivity()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/support/v4/app/FragmentActivity/getSystemService(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/graphics/drawable/Drawable/getConstantState()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/graphics/drawable/Drawable/setColorFilter(int,android.graphics.PorterDuff$Mode)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#java/util/List/get(int)
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Spinner/getBackground()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/graphics/drawable/Drawable$ConstantState/newDrawable()
com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/setUpViews()#android/widget/Spinner/setBackground(android.graphics.drawable.Drawable)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/Iterator/remove()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/ArrayList/ArrayList()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/List/size()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/security/cert/X509Certificate/equals(java.lang.Object)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/Iterator/next()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/List/get(int)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/Deque/removeFirst()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/ArrayDeque/ArrayDeque(java.util.Collection)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/List/add(java.lang.Object)
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/util/Deque/iterator()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/internal/tls/BasicCertificateChainCleaner/clean(java.util.List,java.lang.String)#javax/net/ssl/SSLPeerUnverifiedException/SSLPeerUnverifiedException(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/getHeight()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawColor(int)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/getWidth()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/ascent()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/measureText(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#java/lang/String/length()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/recyclerview/debug/DebugDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/descent()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/toString()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/service/ServerAuth/executePost(java.lang.String,java.lang.String,okhttp3.RequestBody,com.sonymobile.lifelog.model.ServerError)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/Thread/isInterrupted()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/Math/floor(double)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#android/graphics/Bitmap/getWidth()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/Thread/currentThread()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/io/IOException/getMessage()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#android/graphics/BitmapFactory/decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#android/graphics/BitmapFactory$Options/BitmapFactory$Options()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/Math/sqrt(double)
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/io/InputStream/close()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#android/graphics/Bitmap/recycle()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/LoadImageHelper/getImage(android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDimensionPixelOffset(int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getLocationOnScreen(int[])
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/graphics/Rect/height()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getWidth()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getWindowVisibleDisplayFrame(android.graphics.Rect)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getHeight()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/measure(int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/graphics/Rect/width()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/Context/getResources()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getMeasuredHeight()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getLayoutParams()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getBottom()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getMeasuredHeight()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/Throwable/Throwable()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StackTraceElement/toString()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StackTraceElement/getClassName()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/Throwable/getStackTrace()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StackTraceElement/getMethodName()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/Math/min(int,int)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/String/indexOf(int)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#android/os/SystemClock/uptimeMillis()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/String/lastIndexOf(int)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/String/substring(int)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/String/replace(char,char)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/flix/debug/FlixUsageWarnings/usageWarn(int,int,java.lang.String,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeNameResource(int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getFloat(int,float)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getColor(int,int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/StateSet/trimStateSet(int[],int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeBooleanValue(int,boolean)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeCount()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/hasValue(int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/ColorStateList/ColorStateList(int[][],int[])
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/recycle()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/remove(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#android/os/Handler/removeMessages(int,java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/size()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/get(int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/List/remove(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/add(java.lang.Object)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/widget/HorizontalScrollView/onMeasure(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getPaddingBottom()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getMeasuredWidth()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildMeasureSpec(int,int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getPaddingTop()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildAt(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildCount()
android/support/design/widget/TabLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/Integer/intValue()
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/res/Resources/getString(int,java.lang.Object[])
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/ordinal()
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/Math/round(float)
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/PresentationHelper/getUserWalkStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/Context/getResources()
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/res/Resources/getString(int,java.lang.Object[])
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/ordinal()
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/Math/round(float)
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/PresentationHelper/getUserRunStepLengthUnit(android.content.Context,com.sonymobile.lifelog.model.User)#android/content/Context/getResources()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/util/Formatter/toString()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/util/Formatter/close()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/util/Locale/getDefault()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/util/Formatter/Formatter()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/util/Formatter/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/utils/PresentationHelper/getValue(float,boolean)#java/lang/String/indexOf(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#android/database/Cursor/getFloat(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/Math/round(float)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getProfileValue(android.net.Uri,android.content.Context)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getStepsGoalValue(android.content.Context)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getRunGoalValue(android.content.Context)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#android/content/Context/sendBroadcast(android.content.Intent)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#android/content/Intent/Intent(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#android/os/Handler/removeMessages(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#android/os/Handler/sendEmptyMessageDelayed(int,long)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/flush()#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/connecteddevices/SmartWearDataLogger/getWalkingGoalValue(android.content.Context)#android/database/Cursor/moveToNext()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/getTargets()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/containsAll(java.util.Collection)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionAt(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionCount()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/removeTarget(android.view.View)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/addTarget(android.view.View)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/size()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/requestLayout()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/getScaledPagingTouchSlop()
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/get(android.content.Context)
android/support/v4/view/ViewPager/initViewPager()#android/widget/Scroller/Scroller(android.content.Context,android.view.animation.Interpolator)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setFocusable(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setWillNotDraw(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/getContext()
android/support/v4/view/ViewPager/initViewPager()#android/content/res/Resources/getDisplayMetrics()
android/support/v4/view/ViewPager/initViewPager()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setDescendantFocusability(int)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/getScaledMaximumFlingVelocity()
android/support/v4/view/ViewPager/initViewPager()#android/content/Context/getResources()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getHeight()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/finish()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/setSize(int,int)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getOverScrollMode()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/util/ArrayList/isEmpty()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/setFinalX(int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/setMeasuredDimension(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getDefaultSize(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getRight()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildCount()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/canScrollHorizontally(int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollX()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollY()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getBottom()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildAt(int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getTop()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getLeft()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getEdgeFlags()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getParent()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/offsetLeftAndRight(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/os/SystemClock/uptimeMillis()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/obtain(long,long,int,float,float,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/recycle()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Integer/toHexString(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getWindowToken()
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/populate(int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/hasFocus()
android/support/v4/view/ViewPager/populate(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getId()
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getResources()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/populate(int)#android/view/View/requestFocus(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/ViewPager/populate(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/populate(int)#android/content/res/Resources/getResourceName(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/SoundEffectConstants/getContantForFocusDirection(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/requestFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Class/getSimpleName()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/ViewParent/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/getInstance()
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/playSoundEffect(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/Rect()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getBottom()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getBottom()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/lang/Runnable/run()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrY()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/addFocusables(java.util.ArrayList,int,int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getDescendantFocusability()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusableInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusable()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/computeScrollOffset()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getFinalX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/startScroll(int,int,int,int,int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/round(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/getStartX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(int)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/String/length()
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/String/equals(java.lang.Object)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/StringBuilder/StringBuilder()
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/util/TimeZone/getID()
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/String/startsWith(java.lang.String)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/StringBuilder/toString()
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/StringBuilder/append(java.lang.String)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/String/charAt(int)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/Character/isDigit(char)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/String/substring(int)
org/joda/time/DateTimeZone/forTimeZone(java.util.TimeZone)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/util/Iterator/hasNext()
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/util/Iterator/next()
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/StringBuilder()
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/util/List/iterator()
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/toString()
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/Gson/getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)#java/util/List/contains(java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/ThreadLocal/remove()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/Iterator/hasNext()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/Map/get(java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/StringBuilder()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/List/iterator()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/Map/remove(java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/StringBuilder/toString()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/ThreadLocal/set(java.lang.Object)
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/Iterator/next()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/util/HashMap/HashMap()
com/google/gson/Gson/getAdapter(com.google.gson.reflect.TypeToken)#java/lang/ThreadLocal/get()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/URL/openConnection()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/io/IOException/IOException(java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setReadTimeout(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setInstanceFollowRedirects(boolean)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setConnectTimeout(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setDefaultUseCaches(boolean)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL)#java/net/HttpURLConnection/setDoInput(boolean)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/io/OutputStream/close()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/disconnect()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/util/zip/GZIPOutputStream/write(byte[])
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/io/OutputStream/write(byte[])
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/setDoOutput(boolean)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#com/google/android/gms/internal/measurement/zzco/zzcg()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/getOutputStream()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#android/content/Context/getPackageName()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/util/zip/GZIPOutputStream/close()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/String/length()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/addRequestProperty(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/String/String(byte[])
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/setFixedLengthStreamingMode(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/io/ByteArrayOutputStream/toByteArray()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/io/ByteArrayOutputStream/close()
com/google/android/gms/internal/measurement/zzco/zzb(java.net.URL,byte[])#java/net/HttpURLConnection/connect()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/io/OutputStream/close()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/disconnect()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/connect()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/io/OutputStream/write(byte[])
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/setDoOutput(boolean)
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#com/google/android/gms/internal/measurement/zzco/zzcg()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/getOutputStream()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#android/content/Context/getPackageName()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/lang/String/String(byte[])
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzco/zza(java.net.URL,byte[])#java/net/HttpURLConnection/setFixedLengthStreamingMode(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#com/google/android/gms/internal/measurement/zzbq/zzz(java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/Collections/emptyList()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#com/google/android/gms/internal/measurement/zzbk/zzy(java.lang.String)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/List/size()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/Set/isEmpty()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/Set/contains(java.lang.Object)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/util/List/iterator()
com/google/android/gms/internal/measurement/zzco/zzb(java.util.List)#java/lang/String/getBytes()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/lang/String/valueOf(long)
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/internal/measurement/zzco/zza(com.google.android.gms.internal.measurement.zzch,boolean)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/util/List/size()
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/lang/Class/cast(java.lang.Object)
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzacb/zzi(java.util.List)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/Class/newInstance()
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzacb/zzf(com.google.android.gms.internal.measurement.zzabx)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/text/SimpleDateFormat/getDateInstance(int)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/util/Calendar/set(int,int)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/util/Calendar/getTime()
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/util/Calendar/getFirstDayOfWeek()
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/text/DateFormat/format(java.util.Date)
com/sonymobile/lifelog/utils/TimeUtils/getDisplayWeek(long,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/text/SimpleDateFormat/parse(java.lang.String)
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/text/ParseException/getMessage()
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/lang/ThreadLocal/get()
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/util/Date/getTime()
com/sonymobile/lifelog/utils/TimeUtils/parseTimestring(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/lang/Object/equals(java.lang.Object)
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/Calendar/setTimeZone(java.util.TimeZone)
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/Calendar/getTimeZone()
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/TimeZone/getDefault()
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/HashMap/get(java.lang.Object)
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/lang/ThreadLocal/get()
com/sonymobile/lifelog/utils/CalendarCache/getCalendar(java.lang.String,long)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/widget/ImageView/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#com/sonymobile/lifelog/model/ActivityType/isShareableActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#com/sonymobile/lifelog/model/ActivityType/isEditableActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#com/sonymobile/lifelog/model/ActivityType/isDeletableActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#java/util/List/get(int)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/widget/ImageButton/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/widget/ImageButton/setEnabled(boolean)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#com/sonymobile/lifelog/model/ActivityType/isDetailViewActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/ContentDialog/setupButtons(android.view.View,com.sonymobile.lifelog.model.ActivityType,long)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/view/View/setEnabled(boolean)
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getSerializableExtra(java.lang.String)
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#com/sonymobile/lifelog/ui/ContentDialog/getActivity()
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#com/sonymobile/lifelog/ui/ContentDialog$9/execute(java.lang.Object[])
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/app/Activity/isFinishing()
com/sonymobile/lifelog/ui/ContentDialog/onActivityResult(int,int,android.content.Intent)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/lang/String/trim()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/List/get(int)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/List/iterator()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#com/sonymobile/lifelog/model/ActivityType$Category/equals(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/lang/Float/parseFloat(java.lang.String)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/List/isEmpty()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Map/get(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/List/size()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Collection/size()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Map/size()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Map/values()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#com/sonymobile/lifelog/model/ActivityType/getCategory()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Collection/toArray(java.lang.Object[])
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/List/toArray(java.lang.Object[])
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/util/Map/containsKey(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/getData(java.util.List,com.sonymobile.lifelog.model.ActivityType,android.content.Context,com.sonymobile.lifelog.model.HeartRateStats)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#com/sonymobile/lifelog/ui/ContentDialog/startActivity(android.content.Intent)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#com/sonymobile/lifelog/ui/ContentDialog/dismiss()
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#com/sonymobile/lifelog/ui/ContentDialog/getActivity()
com/sonymobile/lifelog/ui/ContentDialog/handleEdit(com.sonymobile.lifelog.logger.model.ActivityData)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#android/widget/TextView/setTextColor(int)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/util/Locale/getDefault()
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/ContentDialog/setupTime(android.view.View,long,long)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ListView/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/lang/Long/longValue()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/lang/Math/min(long,long)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType$Category/equals(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/lang/Math/round(double)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType/isShareableActivityType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/ui/ContentDialog/getFragmentManager()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/FrameLayout/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/util/List/isEmpty()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getCategory()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ImageButton/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ImageButton/setEnabled(boolean)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#com/sonymobile/lifelog/ui/ContentDialog/getActivity()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/RelativeLayout/setBackgroundColor(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/widget/ProgressBar/setVisibility(int)
com/sonymobile/lifelog/ui/ContentDialog/setupAdapter(android.view.View,java.util.List)#android/app/Activity/getResources()
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/util/HashSet/HashSet()
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/Character/valueOf(char)
com/google/android/gms/tagmanager/zzcx/zzd(java.util.Map)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/Character/toString()
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/String/length()
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzcx/zza(java.lang.String,int,java.util.Set)#java/util/Set/iterator()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethods()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getName()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getComponentType()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Object/getClass()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getFields()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/get(java.lang.Object,int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/isArray()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/charAt(int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/getLength(java.lang.Object)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/length()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/length()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.Object)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getType()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int,int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/getName()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getModifiers()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/internal/wearable/zzu/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/setLength(int)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Map/size()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzdc/toString()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Set/iterator()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/Integer/valueOf(int)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Map/entrySet()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/wearable/internal/zzdc/toString()#java/lang/String/length()
com/google/android/gms/wearable/internal/zzdc/toString()#java/util/Map/isEmpty()
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Context/startActivity(android.content.Intent)
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Context/sendBroadcast(android.content.Intent)
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#java/util/Iterator/next()
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#java/util/concurrent/CopyOnWriteArrayList/iterator()
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Intent/Intent(java.lang.String)
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Intent/setFlags(int)
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#com/sonymobile/lifelog/logger/build/ApiVersion/ordinal()
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/service/SyncManager$2/onPostExecute(com.sonymobile.lifelog.logger.build.ApiVersion)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Rect/centerX()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Path/rewind()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/getBounds()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Path/rLineTo(float,float)
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Path/close()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Rect/centerY()
com/sonymobile/lifelog/ui/drawer/DrawerBurgerIndicator/draw(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/iterator()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/ArrayList()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/remove(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/ArrayList(java.util.Collection)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/Iterator/hasNext()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/add(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/Iterator/next()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/size()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/AvailabilityException/getMessage()#android/support/v4/util/ArrayMap/get(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Iterator/next()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Set/iterator()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/List/add(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/AvailabilityException/getMessage()#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/String/length()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/StringBuilder(int)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/support/v7/view/menu/MenuPopup/setCallback(android.support.v7.view.menu.MenuPresenter$Callback)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/Display/getRealSize(android.graphics.Point)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/WindowManager/getDefaultDisplay()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/Context/getResources()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/graphics/Point/Point()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/Display/getSize(android.graphics.Point)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/Context/getSystemService(java.lang.String)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#java/lang/Math/min(int,int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/Context/getPackageManager()
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/net/Uri$Builder/build()
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/os/Bundle/getInt(java.lang.String,int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/net/Uri/buildUpon()
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/app/PendingIntent/getActivity(android.content.Context,int,android.content.Intent,int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#com/google/android/gms/common/internal/GmsClient/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#com/google/android/gms/wearable/internal/zzhg/triggerNotAvailable(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks,int,android.app.PendingIntent)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/Intent/Intent(java.lang.String,android.net.Uri)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/pm/PackageManager/resolveActivity(android.content.Intent,int)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#android/content/Intent/setPackage(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/connect(com.google.android.gms.common.internal.BaseGmsClient$ConnectionProgressReportCallbacks)#com/google/android/gms/wearable/internal/zzhg/getContext()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/ArrayList/ArrayList()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Set/iterator()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/List/add(java.lang.Object)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#com/google/android/gms/wearable/internal/zzhg/getService()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Map$Entry/getKey()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/String/length()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/concurrent/FutureTask/FutureTask(java.util.concurrent.Callable)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/os/ParcelFileDescriptor/createPipe()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#android/content/Context/getContentResolver()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Map$Entry/getValue()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/util/Map/entrySet()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#com/google/android/gms/wearable/internal/zzhg/getContext()
com/google/android/gms/wearable/internal/zzhg/zza(com.google.android.gms.common.api.internal.BaseImplementation$ResultHolder,com.google.android.gms.wearable.PutDataRequest)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacterFrameAnim/setPivotPoint(float,float)
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#java/lang/Runtime/getRuntime()
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#java/lang/Runtime/maxMemory()
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacter/addChild(com.sonymobile.flix.components.Component)
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacter/getScene()
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacterFrameAnim/getListeners()
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacter/removeChild(com.sonymobile.flix.components.Component)
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacterFrameAnim/setVisible(boolean)
com/sonymobile/lifelog/journeyview/MainCharacter/setResourcePack(int)#com/sonymobile/lifelog/journeyview/MainCharacterFrameAnim/setAlpha(float)
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/isEmpty()
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/size()
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/contains(java.lang.Object)
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/iterator()
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/Iterator/hasNext()
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/remove(int)
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/Iterator/next()
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/add(java.lang.Object)
com/sonymobile/locationfilter/dbscan/DBSCAN/expandCluster(com.sonymobile.locationfilter.dbscan.LocationContainer,java.util.List,java.util.List,com.sonymobile.locationfilter.dbscan.Cluster,double,int)#java/util/List/get(int)
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/size()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Iterator/next()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/List/iterator()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/containsAll(java.util.Collection)
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#com/sonymobile/lifelog/ui/drawer/DrawerLoader/getContext()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/Set/clear()
com/sonymobile/lifelog/ui/drawer/DrawerLoader/loadInBackground()#java/util/HashSet/HashSet()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getFontMetrics(android.graphics.Paint$FontMetrics)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Rect/width()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#java/lang/String/length()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/getFontMetrics(android.graphics.Paint$FontMetrics)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/getLineCount()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/getWidth()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getXAxis()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getHeight()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getCenter()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getWidth()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#java/lang/Float/isNaN(float)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/TextView/getText()
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/animation/ValueAnimator/cancel()
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate$ViewHolder/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#java/lang/Float/isInfinite(float)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/util/LruCache/get(java.lang.Object)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/getContext(android.support.v7.widget.RecyclerView$ViewHolder)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/ImageView/getDrawable()
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/util/LruCache/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/dashboard/delegate/TileDelegate$ViewHolder/setOnLongClickListener(android.view.View$OnLongClickListener)
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/isEmpty()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/lang/ref/WeakReference/get()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/next()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/next()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/clear()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/add(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/addAll(java.util.Collection)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/get(int)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/hasNext()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/lang/ref/WeakReference/get()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/size()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/PackageManager/queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Context/getPackageManager()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/Intent(android.content.Intent)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/size()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIntent(android.content.Intent)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/get(int)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIcon(android.graphics.drawable.Drawable)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/expandActionView()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/View/getId()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/support/v7/view/menu/SubMenuBuilder/restoreActionViewStates(android.os.Bundle)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/hasSubMenu()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/getSubMenu()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/getActionView()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/View/restoreHierarchyState(android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/support/v7/view/menu/SubMenuBuilder/saveActionViewStates(android.os.Bundle)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/saveHierarchyState(android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/isActionViewExpanded()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/hasSubMenu()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getSubMenu()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getActionView()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getItemId()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/getId()
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/inflate(android.view.ViewGroup,int)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/view/ViewGroup/removeAllViews()
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#org/json/JSONObject/JSONObject(java.lang.String)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/getContext(android.support.v7.widget.RecyclerView$ViewHolder)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/view/ViewGroup/addView(android.view.View)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/utils/LocalInsightsUtils$Type/ordinal()
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#org/json/JSONObject/getInt(java.lang.String)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/content/Context/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#com/sonymobile/lifelog/ui/card/CardViewHolder/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/dashboard/delegate/SummaryCardDelegate/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent,int,com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder)#android/widget/TextView/setText(int)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/animate()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/getVisibility()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setScaleY(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/scaleY(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setScaleX(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setAlpha(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/scaleX(float)
okhttp3/Headers/of(java.lang.String[])#java/lang/String/length()
okhttp3/Headers/of(java.lang.String[])#[Ljava/lang/String;/clone()
okhttp3/Headers/of(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
okhttp3/Headers/of(java.lang.String[])#java/lang/String/indexOf(int)
okhttp3/Headers/of(java.lang.String[])#java/lang/StringBuilder/toString()
okhttp3/Headers/of(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
okhttp3/Headers/of(java.lang.String[])#java/lang/String/trim()
okhttp3/Headers/of(java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/Headers/of(java.lang.String[])#java/lang/NullPointerException/NullPointerException(java.lang.String)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Object/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.CharSequence)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#android/graphics/Rect/Rect()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Integer/numberOfTrailingZeros(int)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(boolean)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/setScaleType(android.widget.ImageView$ScaleType)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/setBackground(android.graphics.drawable.Drawable)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/setPadding(int,int,int,int)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/ImageView(android.content.Context)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/content/res/ColorStateList/valueOf(int)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/setBackgroundTintList(android.content.res.ColorStateList)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/feature/hint/SleepHintSequenceActivity$1/create(android.content.Context)#android/content/Context/getResources()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Map/size()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Set/iterator()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/Integer/valueOf(int)
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/String/length()
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Map/get(java.lang.Object)
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/Integer/toHexString(int)
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzdd/toString()#java/util/Map/keySet()
com/google/android/gms/wearable/internal/zzdd/toString()#java/lang/Object/hashCode()
com/google/android/gms/wearable/internal/zzdd/toString()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Set/iterator()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Map/entrySet()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#android/os/Bundle/Bundle()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Map$Entry/getKey()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/util/Map$Entry/getValue()
com/google/android/gms/wearable/internal/zzdd/writeToParcel(android.os.Parcel,int)#java/lang/Class/getClassLoader()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setKeyType(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/security/KeyPairGenerator/initialize(java.security.spec.AlgorithmParameterSpec)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setEndDate(java.util.Date)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/util/Calendar/getTime()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setSerialNumber(java.math.BigInteger)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/text/DecimalFormatSymbols/getZeroDigit()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setAlias(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/KeyPairGeneratorSpec$Builder(android.content.Context)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/util/Locale/getDefault()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/text/DecimalFormatSymbols/getInstance()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/security/KeyPairGenerator/getInstance(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setSubject(javax.security.auth.x500.X500Principal)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/security/KeyPairGenerator/generateKeyPair()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/content/Context/getPackageName()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setKeySize(int)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/setStartDate(java.util.Date)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#javax/security/auth/x500/X500Principal/X500Principal(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#android/security/KeyPairGeneratorSpec$Builder/build()
com/sonymobile/lifelog/activityengine/authentication/RSA/generateRSAKeys(java.lang.String,android.content.Context)#java/util/Locale/setDefault(java.util.Locale)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/os/ParcelFileDescriptor$AutoCloseOutputStream/write(byte[])
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/os/ParcelFileDescriptor$AutoCloseOutputStream/close()
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/String/length()
com/google/android/gms/wearable/internal/zzhh/zzd()#android/os/ParcelFileDescriptor$AutoCloseOutputStream/ParcelFileDescriptor$AutoCloseOutputStream(android.os.ParcelFileDescriptor)
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/wearable/internal/zzhh/zzd()#android/os/ParcelFileDescriptor$AutoCloseOutputStream/flush()
com/google/android/gms/wearable/internal/zzhh/zzd()#java/lang/StringBuilder/toString()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getBounds()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getLevel()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/setLevel(int)
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/setBounds(android.graphics.Rect)
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getConstantState()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getState()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/isVisible()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/invalidateSelf()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/optString(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/getBoolean(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/Set/add(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#android/accounts/Account/Account(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONArray/getString(int)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONArray/length()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/getJSONArray(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/ArrayList/size()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/JSONObject()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONArray/JSONArray()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONArray/put(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/ArrayList/get(int)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/put(java.lang.String,boolean)
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Set/iterator()
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Arrays/equals(float[],float[])
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Arrays/equals(long[],long[])
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
com/google/android/gms/wearable/DataMap/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/startAnimation(android.view.animation.Animation)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getHeight()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getContext()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setAnimationListener(android.view.animation.Animation$AnimationListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/AnimationUtils/loadAnimation(android.content.Context,int)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setInterpolator(android.view.animation.Interpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/start()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/startAnimation(android.view.animation.Animation)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getHeight()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getContext()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/setTranslationY(float)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/AnimationUtils/loadAnimation(android.content.Context,int)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/start()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setInterpolator(android.view.animation.Interpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setAnimationListener(android.view.animation.Animation$AnimationListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setDuration(long)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/WeightProvider/getContext()
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/WeightProvider/getContext()
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/WeightProvider/getContext()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/WeightProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/Iterator/hasNext()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/Set/size()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/Iterator/next()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/Set/iterator()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putCharSequenceArray(java.lang.String,java.lang.CharSequence[])
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putStringArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/Bundle()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#java/util/Set/isEmpty()
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putCharSequence(java.lang.String,java.lang.CharSequence)
android/support/v4/app/RemoteInputCompatJellybean/toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput)#android/os/Bundle/putBoolean(java.lang.String,boolean)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/Random/nextInt(int)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/content/res/Resources/getString(int,java.lang.Object[])
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/GoalLevel/translate(int,float)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/os/Bundle/Bundle()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/GoalLevel/ordinal()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/List/size()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/Random/Random()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getNotificationIcon()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getPrimaryDarkColor()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/util/Locale/getDefault()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/content/res/Resources/getStringArray(int)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getShareIcon()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/os/Bundle/putLong(java.lang.String,long)
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#android/content/Context/getResources()
com/sonymobile/lifelog/utils/NotificationUtils/updateGoalNotificationIfEnabled(android.content.Context,java.util.List)#java/lang/String/valueOf(int)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/CharSequence/toString()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/res/Resources/getValue(int,android.util.TypedValue,boolean)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/Context/getTheme()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/TypedValue/TypedValue()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/res/Resources/getXml(int)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/support/v4/util/ArrayMap/isEmpty()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/graphics/drawable/Drawable/setChangingConfigurations(int)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/Context/getResources()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/String/endsWith(java.lang.String)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/concurrent/ExecutorService/isShutdown()
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/Map/get(java.lang.Object)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/Set/contains(java.lang.Object)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/Map/remove(java.lang.Object)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/lang/StringBuilder/toString()
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Dispatcher/performSubmit(com.squareup.picasso.Action,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Iterator/hasNext()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/List/isEmpty()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/List/size()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Map/values()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Iterator/next()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/List/get(int)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Collection/iterator()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Set/add(java.lang.Object)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/util/Iterator/remove()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/Dispatcher/performPauseTag(java.lang.Object)#java/lang/StringBuilder/toString()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/util/Iterator/hasNext()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/util/List/isEmpty()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/util/Iterator/next()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/util/List/get(int)
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/lang/StringBuilder/length()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/util/List/iterator()
com/squareup/picasso/Dispatcher/logBatch(java.util.List)#java/lang/StringBuilder/toString()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Iterator/remove()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/ArrayList/ArrayList()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Iterator/hasNext()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#android/os/Handler/sendMessage(android.os.Message)
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Map/values()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Iterator/next()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Set/remove(java.lang.Object)
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/Collection/iterator()
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/squareup/picasso/Dispatcher/performResumeTag(java.lang.Object)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/SleepData/getEndTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/model/GoalLevel/translate(int,float)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/MusicData/getEndTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/activityengine/sleep/SleepState/valueOf(int)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/PhysicalData/getEndTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/MusicData/getStartTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#java/util/List/iterator()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/model/ActivityType/getActivityType(com.sonymobile.lifelog.logger.model.ActivityData)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/ApplicationData/getEndTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/SleepData/getStartTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/ApplicationData/getStartTime()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#java/lang/Math/max(long,long)
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#java/util/Iterator/next()
com/sonymobile/lifelog/service/GoalChecker/updateGoalWrapper(long,long,com.sonymobile.lifelog.model.GoalWrapper,android.content.Context,boolean)#com/sonymobile/lifelog/logger/model/PhysicalData/getStartTime()
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/List/clear()
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/List/iterator()
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/lang/Math/abs(long)
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/service/GoalChecker/getPhysicalData(com.sonymobile.lifelog.provider.SyncDataHandler,long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/String/length()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/Math/round(float)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getWeightInKilograms(java.lang.String)#java/lang/String/substring(int,int)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/String/length()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/String/substring(int,int)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/Math/round(float)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/parseFeetAndInches(java.lang.String)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/Integer/intValue()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/String/substring(int,int)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/String/length()
com/sonymobile/lifelog/utils/ImperialUnitHelpers/getDistanceInCentimeters(java.lang.String)#java/lang/IllegalArgumentException/getMessage()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map$Entry/getKey()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/isEmpty()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map$Entry/getValue()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/entrySet()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/io/File/File(java.lang.String)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/ViewGroup/getContext()
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getContext()
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/net/Uri/fromFile(java.io.File)
com/sonymobile/lifelog/ui/share/ThumbnailGridAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/close()
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/isEmpty()
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/HashSet/HashSet()
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/add(java.lang.Object)
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getColumnNames()
com/google/android/gms/tagmanager/zzax/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(float[],float[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(boolean[],boolean[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/deepEquals(java.lang.Object[],java.lang.Object[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(int[],int[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/lang/Class/isArray()
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(long[],long[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
com/google/android/gms/internal/measurement/zzacd/equals(java.lang.Object)#java/util/Arrays/equals(double[],double[])
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getAnimator()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/getYMax()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getXAxis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setRenderer(com.github.mikephil.charting.renderer.DataRenderer)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getAxisLeft()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setData(com.github.mikephil.charting.data.ChartData)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/animateY(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setMarker(com.github.mikephil.charting.components.IMarker)
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/ChartFactory/createBarChartFromDataSet(android.content.Context,com.github.mikephil.charting.data.BarDataSet,java.lang.String[],int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getViewPortHandler()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/getAxisLeft()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/setMarker(com.github.mikephil.charting.components.IMarker)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/setData(com.github.mikephil.charting.data.ChartData)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/animateY(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/LineChart/getXAxis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryDarkColor()
com/sonymobile/lifelog/ui/graph/ChartFactory/createCaloriesDayChart(android.content.Context,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/setOnChartGestureListener(com.github.mikephil.charting.listener.OnChartGestureListener)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/getViewPortHandler()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/getRenderer()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/animateX(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/getXAxis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/components/XAxis/setYOffset(float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/LineData/getIndexOfDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setHighlightEnabled(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/getAnimator()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/Entry/getY()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/setDragEnabled(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/getAxisLeft()
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/get(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/set(int,java.lang.Object)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/CombinedChart/setMarker(com.github.mikephil.charting.components.IMarker)
com/sonymobile/lifelog/ui/graph/ChartFactory/createAdditiveDayLineChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/text/DecimalFormat/DecimalFormat(java.lang.String)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/getYMax()
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getXAxis()
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setColors(int[])
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setValueTextSize(float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/getAxisLeft()
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setHighlightEnabled(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setValueTextColor(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setData(com.github.mikephil.charting.data.ChartData)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setDrawValues(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/animateY(int)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/data/BarDataSet/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
com/sonymobile/lifelog/ui/graph/ChartFactory/createStressWeekChart(android.content.Context,int,com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/github/mikephil/charting/charts/BarChart/setDrawMarkers(boolean)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/SessionDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentUris/parseId(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/String/valueOf(long)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/SessionDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/SessionProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteQueryBuilder/SQLiteQueryBuilder()
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/net/Uri/getLastPathSegment()
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteQueryBuilder/appendWhere(java.lang.CharSequence)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/SessionDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/MountainScene/setSize(float,float)
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/HillsLayer/getPointY(float)
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/RepeatingComponent/getY()
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/HillsLayer/moveY(float)
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/flix/components/Typed$Component/getNbrChildren()
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/HillsLayer/setWidth(float)
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/HillsLayer/getY()
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/MountainScene/getPointY(float)
com/sonymobile/lifelog/journeyview/background/MountainScene/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/MountainScene/getPointX(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/graphics/drawable/ColorDrawable/getColor()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/findViewById(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/animation/ValueAnimator/ofFloat(float[])
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/animation/ValueAnimator/setDuration(long)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/widget/Button/setVisibility(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/animation/ValueAnimator/start()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/widget/Button/setEnabled(boolean)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/finish()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/widget/Button/setText(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/view/ViewGroup/setBackgroundResource(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/view/ViewGroup/getBackground()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/switchScreen(int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/setPadding(int,int,int,int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/setContentView(android.view.View)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/getPaddingRight()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/getPaddingLeft()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/setBackgroundResource(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/getPaddingBottom()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/setSystemUiVisibility(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/findViewById(int)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion/onCreate(android.os.Bundle)#android/view/ViewGroup/getPaddingTop()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/clockhourOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/millisOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/secondOfMinute()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/clockhourOfHalfday()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/weekyearOfCentury()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/hourOfHalfday()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GJChronology/getBase()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GregorianChronology/millisOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#java/lang/IllegalArgumentException/IllegalArgumentException()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/minuteOfHour()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/millisOfSecond()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/weekyear()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/yearOfCentury()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/yearOfEra()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/hourOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GregorianChronology/weekyear()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/halfdayOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/weekOfWeekyear()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GregorianChronology/getMinimumDaysInFirstWeek()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/year()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GregorianChronology/year()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/getMinimumDaysInFirstWeek()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/dayOfYear()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/secondOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/minuteOfDay()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/GJChronology/getParam()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/centuryOfEra()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/era()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/monthOfYear()
org/joda/time/chrono/GJChronology/assemble(org.joda.time.chrono.AssembledChronology$Fields)#org/joda/time/chrono/JulianChronology/dayOfMonth()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/hasNext()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/next()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/StringBuilder()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Set/iterator()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getValue()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/toString()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getKey()
retrofit2/ParameterHandler$QueryMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map/entrySet()
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$BigTextStyle/Notification$BigTextStyle()
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setStyle(android.app.Notification$Style)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setVisibility(int)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/build()
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setShowWhen(boolean)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/Notification$Builder(android.content.Context,java.lang.String)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setContentText(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/Notification$Builder(android.content.Context)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setPriority(int)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setAutoCancel(boolean)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setContentTitle(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setContentIntent(android.app.PendingIntent)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setTicker(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$BigTextStyle/bigText(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StatusNotificationHandler/createErrorNotification(int,boolean)#android/app/Notification$Builder/setSmallIcon(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/moveToLast()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/content/ContentResolver/delete(android.net.Uri,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/Integer/toString(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/close()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/deleteFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/close()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/activityengine/analytics/sony/EventStorageHandler/getFirstUsageEvents(android.content.Context,int,android.net.Uri)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/lang/Integer/intValue()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#android/util/SparseArray/get(int)
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Map$Entry/setValue(java.lang.Object)
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Map/entrySet()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Iterator/next()
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/logger/notification/ErrorNotificationItemHandler/checkLocationProviderStatus()#java/util/Set/iterator()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/OutputStream/close()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/FileOutputStream/FileOutputStream(java.io.File,boolean)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/File/File(java.io.File,java.lang.String)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/IOException/getMessage()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/File/exists()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/OutputStream/write(int)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#android/content/Context/getExternalCacheDir()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/io/OutputStream/write(byte[])
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/activityengine/sleep/SonySleepEngine$1/run()#java/lang/StringBuilder/toString()
com/sonymobile/flix/util/U/setup(android.content.Context)#android/view/Display/getHeight()
com/sonymobile/flix/util/U/setup(android.content.Context)#java/lang/Math/max(int,int)
com/sonymobile/flix/util/U/setup(android.content.Context)#android/view/Display/getRealSize(android.graphics.Point)
com/sonymobile/flix/util/U/setup(android.content.Context)#android/graphics/Point/Point()
com/sonymobile/flix/util/U/setup(android.content.Context)#android/view/WindowManager/getDefaultDisplay()
com/sonymobile/flix/util/U/setup(android.content.Context)#android/view/Display/getMetrics(android.util.DisplayMetrics)
com/sonymobile/flix/util/U/setup(android.content.Context)#java/lang/Math/sqrt(double)
com/sonymobile/flix/util/U/setup(android.content.Context)#android/util/DisplayMetrics/DisplayMetrics()
com/sonymobile/flix/util/U/setup(android.content.Context)#android/view/Display/getWidth()
com/sonymobile/flix/util/U/setup(android.content.Context)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/flix/util/U/setup(android.content.Context)#java/lang/Math/min(int,int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setData(android.net.Uri)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/app/SearchableInfo/getSearchActivity()
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/Intent(java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/addFlags(int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.CharSequence)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getWidth()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setContentWidth(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getPaddingLeft()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setHorizontalOffset(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getWidth()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getContext()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getBackground()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/content/Context/getResources()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getPaddingRight()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setInputMethodMode(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner/getSelectedItemPosition()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setSelection(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getListView()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/widget/ListView/setChoiceMode(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner/getViewTreeObserver()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/isShowing()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#java/lang/Boolean/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#java/lang/ref/WeakReference/get()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#com/sonymobile/lifelog/ui/graph/GraphFragment/isAdded()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#com/sonymobile/lifelog/ui/graph/GraphFragment/isDetached()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/onPostExecute(java.lang.Boolean)#android/widget/Toast/show()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/lang/ref/WeakReference/get()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#com/sonymobile/lifelog/logger/model/PhysicalData/getEndTime()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#com/sonymobile/lifelog/logger/model/PhysicalData/getStartTime()
com/sonymobile/lifelog/ui/graph/GraphFragmentPagerAdapter$FragmentAsyncLoader/doInBackground(java.lang.Void[])#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#android/database/Cursor/getLong(int)
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/ContentHelper/getTimeForOldestValue(android.content.ContentResolver,android.net.Uri)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/util/ArrayList/size()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#org/joda/time/DateTime/getMillis()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#org/joda/time/DateTime/isBefore(org.joda.time.ReadableInstant)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateInsights(android.content.Context,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#com/sonymobile/lifelog/logger/model/SleepData/getEndTime()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/joda/time/DateTime/getMillis()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#com/sonymobile/lifelog/activityengine/sleep/SleepState/valueOf(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONObject/put(java.lang.String,int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/util/List/iterator()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/util/UUID/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#com/sonymobile/lifelog/logger/model/SleepData/getStartTime()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONArray/put(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/util/UUID/randomUUID()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONObject/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#com/sonymobile/lifelog/utils/LocalInsightsUtils$Type/ordinal()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateSleepInsight(android.content.Context,long)#org/json/JSONArray/JSONArray()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/joda/time/DateTime/getMillis()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/joda/time/DateTime$Property/getAsShortText()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONObject/put(java.lang.String,int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/util/List/iterator()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#com/sonymobile/lifelog/logger/model/PhysicalData/getStartTime()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONArray/put(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/util/UUID/randomUUID()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONObject/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#com/sonymobile/lifelog/utils/LocalInsightsUtils$Type/ordinal()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#com/sonymobile/lifelog/logger/model/PhysicalData/getEndTime()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONArray/JSONArray()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#java/util/UUID/toString()
com/sonymobile/lifelog/utils/LocalInsightsUtils/generateWeeklyStepsInsight(android.content.Context,long)#org/json/JSONArray/put(java.lang.Object)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/setStackTrace(java.lang.StackTraceElement[])
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getMessage()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getCause()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/initCause(java.lang.Throwable)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getStackTrace()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/AuthenticationProvider/getContext()
com/google/android/gms/tagmanager/zzbz/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzbz/run()#java/lang/String/length()
com/google/android/gms/tagmanager/zzbz/run()#java/lang/String/String(byte[])
com/google/android/gms/tagmanager/zzbz/run()#java/lang/InterruptedException/toString()
com/google/android/gms/tagmanager/zzbz/run()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/tagmanager/zzbz/run()#java/io/PrintStream/flush()
com/google/android/gms/tagmanager/zzbz/run()#java/util/concurrent/LinkedBlockingQueue/take()
com/google/android/gms/tagmanager/zzbz/run()#java/lang/Runnable/run()
com/google/android/gms/tagmanager/zzbz/run()#java/io/PrintStream/PrintStream(java.io.OutputStream)
com/google/android/gms/tagmanager/zzbz/run()#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzbz/run()#java/io/ByteArrayOutputStream/toByteArray()
com/google/android/gms/tagmanager/zzbz/run()#java/lang/String/String(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/setTo(android.content.res.Resources$Theme)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/applyStyle(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources/newTheme()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/Math/min(long,long)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#okhttp3/internal/http1/Http1Codec$ChunkedSource/endOfInput(boolean)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(long)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/lang/StringBuilder/toString()
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#okio/BufferedSource/read(okio.Buffer,long)
okhttp3/internal/http1/Http1Codec$ChunkedSource/read(okio.Buffer,long)#java/net/ProtocolException/ProtocolException(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#okhttp3/internal/http1/Http1Codec$ChunkedSource/endOfInput(boolean)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/String/isEmpty()
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/String/startsWith(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/net/ProtocolException/ProtocolException(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/String/trim()
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/StringBuilder/append(long)
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/StringBuilder/toString()
okhttp3/internal/http1/Http1Codec$ChunkedSource/readChunkSize()#java/lang/NumberFormatException/getMessage()
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzdf/toString()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/Integer/valueOf(int)
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Map/entrySet()
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/wearable/internal/zzdf/toString()#java/lang/String/length()
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Map/isEmpty()
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Map/size()
com/google/android/gms/wearable/internal/zzdf/toString()#java/util/Set/iterator()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/lang/Integer/intValue()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Map/get(java.lang.Object)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/ArrayList/size()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/Map/entrySet()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getTopActivity(java.util.List)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/lang/Integer/intValue()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/List/size()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/Set/iterator()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#com/sonymobile/lifelog/activityengine/engine/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/sonyaev2/SonyActivityEngineV2Client/getScore(java.util.List,com.sonymobile.lifelog.activityengine.engine.model.ActivityType)#java/util/Map/entrySet()
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setGranularity(float)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setAxisMinimum(float)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#android/graphics/Typeface/create(java.lang.String,int)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setTextColor(int)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setAxisMaximum(float)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setTypeface(android.graphics.Typeface)
com/sonymobile/lifelog/ui/graph/ChartFactoryUtils/configureXAxis(android.content.Context,com.github.mikephil.charting.components.XAxis,float,float,java.lang.String[])#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/PathMeasure()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/addPath(android.graphics.Path,android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/Paint()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/setPath(android.graphics.Path,boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Canvas/clipPath(android.graphics.Path)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Matrix/postScale(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeCap(android.graphics.Paint$Cap)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setAntiAlias(boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#java/lang/Math/min(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/rLineTo(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setColor(int)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/reset()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeJoin(android.graphics.Paint$Join)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Matrix/set(android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeWidth(float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/getSegment(float,float,android.graphics.Path,boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeMiter(float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/getLength()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/List/contains(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/removeDuplicates(java.util.List)#java/util/List/remove(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getProvider()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getElapsedRealtimeNanos()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getLongitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getLatitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getTime()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getAccuracy()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getSpeed()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getLocationsFromSessionContent(java.util.List)#android/location/Location/getAltitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/List/remove(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/applyClustering(java.util.List,double,int)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setSpeed(float)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setLongitude(double)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setElapsedRealtimeNanos(long)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setTime(long)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setAltitude(double)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/Location(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setAccuracy(float)
com/sonymobile/lifelog/activityengine/engine/location/LocationFiltering/getSessionContentFromLocations(java.util.List)#android/location/Location/setLatitude(double)
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#com/google/gson/JsonSyntaxException/getMessage()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/analytics/sony/EventListReportService/getSonyEventListFromUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/Window/getDecorView()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/isCanceled()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/content/DialogInterface/dismiss()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/startTracking(android.view.KeyEvent,java.lang.Object)
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/support/v7/app/AlertDialog/getWindow()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/View/getKeyDispatcherState()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getAction()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/isTracking(android.view.KeyEvent)
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getRepeatCount()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#android/util/Log/wtf(java.lang.String,java.lang.String)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/String/concat(java.lang.String)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/util/Map/clear()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/Integer/valueOf(int)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/String/String(java.lang.String)
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/Integer/intValue()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#android/os/PowerManager$WakeLock/acquire()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#android/os/PowerManager$WakeLock/isHeld()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/lang/String/length()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/util/Map/isEmpty()
com/google/android/gms/stats/WakeLock/zza(java.lang.String,long)#java/util/Map/get(java.lang.Object)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildCount()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/ScrollingTabContainerView/getMeasuredWidth()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/HorizontalScrollView/onMeasure(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/getMeasuredWidth()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/measure(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/ScrollingTabContainerView/setFillViewport(boolean)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/String/valueOf(long)
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/DefaultCardsHandler/getCards(long,int)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/database/Cursor/getString(int)
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/database/Cursor/close()
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/ui/share/RetrieveThumbnailTask/doInBackground(java.lang.Void[])#android/database/Cursor/moveToNext()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/SocketException/SocketException(java.lang.String)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/Proxy/type()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/util/List/add(java.lang.Object)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/util/List/get(int)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/StringBuilder/toString()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/InetSocketAddress/createUnresolved(java.lang.String,int)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/util/ArrayList/ArrayList()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/StringBuilder/append(int)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/util/List/size()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/Proxy/address()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/net/InetSocketAddress/getPort()
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/connection/RouteSelector/resetNextInetSocketAddress(java.net.Proxy)#java/lang/Object/getClass()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/view/Window/setSoftInputMode(int)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/widget/EditText/selectAll()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/view/LayoutInflater/from(android.content.Context)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/support/v7/app/AlertDialog/show()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/support/v7/app/AlertDialog/getWindow()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/launchEditBookmarkDialog(android.content.Context,com.sonymobile.lifelog.model.LifeBookmark,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$EditResultCallback)#android/widget/EditText/setText(int)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/view/View/addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/view/View/getResources()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/view/View/getContext()
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/widget/ListView/addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
com/sonymobile/lifelog/ui/bookmarks/dialog/BookmarkPopupHelper/showOptionsMenu(long,android.view.View,com.sonymobile.lifelog.ui.bookmarks.dialog.BookmarkPopupHelper$OptionsCallback)#android/view/View/getHeight()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getLimitLines()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getXOffset()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/Class/isInterface()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/Class/getGenericSuperclass()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/reflect/Field/setAccessible(boolean)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/reflect/Field/getGenericType()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/util/List/get(int)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/util/LinkedHashMap/LinkedHashMap()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/StringBuilder/toString()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/util/List/size()
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/internal/bind/ReflectiveTypeAdapterFactory/getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class)#java/lang/Class/getDeclaredFields()
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#android/os/HandlerThread/HandlerThread(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#android/os/HandlerThread/start()
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#android/os/HandlerThread/getLooper()
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#android/os/Handler/Handler(android.os.Looper)
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/location/LocationClient/start(com.sonymobile.lifelog.activityengine.engine.location.LocationEngine$Frequency)#java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#android/view/InflateException/initCause(java.lang.Throwable)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#android/util/AttributeSet/getPositionDescription()
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/util/HashMap/get(java.lang.Object)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#android/view/InflateException/InflateException(java.lang.String)
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#android/content/Context/getClassLoader()
android/support/v7/preference/PreferenceInflater/createItem(java.lang.String,java.lang.String[],android.util.AttributeSet)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParserException/initCause(java.lang.Throwable)
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#android/content/res/Resources/parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#android/content/Context/getResources()
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/preference/PreferenceInflater/rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet)#android/content/Intent/parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#android/view/InflateException/InflateException(java.lang.String)
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#android/view/InflateException/initCause(java.lang.Throwable)
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#org/xmlpull/v1/XmlPullParser/getPositionDescription()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#java/io/IOException/getMessage()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#org/xmlpull/v1/XmlPullParserException/getMessage()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#java/lang/StringBuilder/StringBuilder()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/preference/PreferenceInflater/inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/getApplicationContext()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#android/content/ContentResolver/registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/getContentResolver()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/findViewById(int)
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/getIntent()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/finish()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/getSupportLoaderManager()
com/sonymobile/lifelog/ui/TimelineActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/TimelineActivity/setContentView(int)
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/widget/Toast/show()
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#com/sonymobile/lifelog/ui/TimelineActivity/getResources()
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#com/sonymobile/lifelog/ui/TimelineActivity/finishAffinity()
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/app/ActivityManager/isUserAMonkey()
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#com/sonymobile/lifelog/ui/TimelineActivity/startActivity(android.content.Intent)
com/sonymobile/lifelog/ui/TimelineActivity/onLogoutComplete(boolean,boolean)#android/content/Intent/addFlags(int)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/widget/DatePicker/setMinDate(long)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/widget/DatePicker/setCalendarViewShown(boolean)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/app/DatePickerDialog/DatePickerDialog(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/app/DatePickerDialog/dismiss()
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/app/DatePickerDialog/getDatePicker()
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/widget/DatePicker/setMaxDate(long)
com/sonymobile/lifelog/ui/TimelineActivity/showChangeDateDialog()#android/app/DatePickerDialog/show()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/activityengine/model/AccountType/ordinal()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#java/lang/String/hashCode()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/Authenticator/getAccountType()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/StartActivity/getIntent()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/StartActivity/getApplicationContext()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/StartActivity/finish()
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#android/content/Intent/addFlags(int)
com/sonymobile/lifelog/login/StartActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/StartActivity/startActivity(android.content.Intent)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/content/res/XmlResourceParser/nextText()
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/content/res/XmlResourceParser/getName()
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#java/lang/Integer/parseInt(java.lang.String)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/content/res/XmlResourceParser/next()
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#java/lang/Boolean/parseBoolean(java.lang.String)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#android/content/res/XmlResourceParser/getEventType()
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#java/lang/String/trim()
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#java/lang/String/toLowerCase(java.util.Locale)
com/google/android/gms/internal/measurement/zzbs/zza(android.content.res.XmlResourceParser)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Condition/signalAll()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/size()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Collections/emptyMap()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/app/PendingIntent/getService(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/os/SystemClock/elapsedRealtime()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/app/AlarmManager/setExact(int,long,android.app.PendingIntent)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/content/Context/getPackageName()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getMessage()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#com/sonymobile/lifelog/logger/LoggerHostService/getSystemService(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/content/Intent/setPackage(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#com/sonymobile/lifelog/logger/LoggerHostService/stopSelf()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#com/sonymobile/lifelog/logger/LoggerHostService/getApplicationContext()
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/app/PendingIntent/getForegroundService(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/logger/LoggerHostService$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/isMemberClass()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/getModifiers()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Object/getClass()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/FileReader/FileReader(java.io.File)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File,boolean)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/createNewFile()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/newLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/exists()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/next()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/close()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/List/iterator()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#com/github/mikephil/charting/data/Entry/getY()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#com/sonymobile/lifelog/ui/location/LocationTypePicker/finish()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#android/widget/RadioButton/getTag()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#android/widget/RadioGroup/getCheckedRadioButtonId()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#com/sonymobile/lifelog/ui/location/LocationTypePicker/findViewById(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#java/lang/String/trim()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#com/sonymobile/lifelog/ui/location/LocationTypePicker/getResources()
com/sonymobile/lifelog/ui/location/LocationTypePicker$3/onClick(android.view.View)#com/sonymobile/lifelog/ui/location/LocationTypePicker/getApplicationContext()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/setTag(int,java.lang.Object)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/setAccessible(boolean)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/setBoolean(java.lang.Object,boolean)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/animation/LayoutTransition/setAnimator(int,android.animation.Animator)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/getTag(int)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/animation/LayoutTransition/isRunning()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/getLayoutTransition()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/setLayoutTransition(android.animation.LayoutTransition)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/requestLayout()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/getBoolean(java.lang.Object)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/TextPaint/setTextSize(float)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#java/lang/Math/ceil(double)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/Layout/getHeight()
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/support/wearable/view/ActionLabel/setMeasuredDimension(int,int)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/Layout/getLineCount()
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/Layout/getWidth()
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/Layout/getLineTop(int)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#android/text/Layout/getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)
android/support/wearable/view/ActionLabel/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/text/TextPaint/setTextSize(float)
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/support/wearable/view/ActionLabel/getPaddingLeft()
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/text/Layout/getLineCount()
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/support/wearable/view/ActionLabel/getPaddingBottom()
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/text/Layout/getLineTop(int)
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/support/wearable/view/ActionLabel/getPaddingTop()
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#java/lang/Math/min(int,int)
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/text/TextPaint/getTextSize()
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/text/StaticLayout/StaticLayout(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
android/support/wearable/view/ActionLabel/makeNewLayout(int,int,android.text.Layout$Alignment)#android/support/wearable/view/ActionLabel/getPaddingRight()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/support/wearable/view/ActionLabel/getPaddingLeft()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/text/Layout/draw(android.graphics.Canvas)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/support/wearable/view/ActionLabel/getPaddingTop()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/support/wearable/view/ActionLabel/getPaddingRight()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/text/TextPaint/setColor(int)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/support/wearable/view/ActionLabel/getDrawableState()
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/view/View/onDraw(android.graphics.Canvas)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/text/Layout/getLineTop(int)
android/support/wearable/view/ActionLabel/onDraw(android.graphics.Canvas)#android/support/wearable/view/ActionLabel/getWidth()
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/String/substring(int)
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/String/charAt(int)
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/String/length()
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#org/joda/time/DateTime/getWeekyear()
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#org/joda/time/DateTime/getYear()
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/String/String(java.lang.String)
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/joda/time/format/DateTimeFormat/parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/database/Cursor/close()
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/provider/DefaultBodyMetricsHandler/getHeartRateAvgMinMax(long,long)#android/database/Cursor/moveToNext()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getInt(int,int)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/hasValue(int)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getText(int)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getColorStateList(int)
android/support/v7/view/SupportMenuInflater$MenuState/readItem(android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/toString()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#android/content/Context/getClassLoader()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setShowAsAction(int)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setChecked(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setTitleCondensed(java.lang.CharSequence)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setEnabled(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/content/Context/isRestricted()
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setVisible(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setActionView(int)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setCheckable(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setActionView(android.view.View)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setIcon(int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredWidth()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/layout(int,int,int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/measure(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/from(android.content.Context)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#com/github/mikephil/charting/components/MarkerView/getContext()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredHeight()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/widget/RelativeLayout$LayoutParams/RelativeLayout$LayoutParams(int,int)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#com/google/android/gms/auth/api/signin/internal/SignInHubActivity/getIntent()
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/os/Bundle/getParcelable(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#com/google/android/gms/auth/api/signin/internal/SignInHubActivity/finish()
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#java/lang/String/concat(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/content/Intent/setPackage(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#com/google/android/gms/auth/api/signin/internal/SignInHubActivity/setResult(int)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#com/google/android/gms/auth/api/signin/internal/SignInHubActivity/startActivityForResult(android.content.Intent,int)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#java/lang/String/length()
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/content/Intent/getBundleExtra(java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#com/google/android/gms/auth/api/signin/internal/SignInHubActivity/getPackageName()
com/google/android/gms/auth/api/signin/internal/SignInHubActivity/onCreate(android.os.Bundle)#java/lang/String/String(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/Boolean/valueOf(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/Boolean/toString()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/database/Cursor/close()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/LoggerHostService$2/doInBackground(java.lang.Void[])#java/lang/Boolean/booleanValue()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getColumnIndex(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/ArrayList()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/build()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/close()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/Context/getContentResolver()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/moveToNext()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getInt(int)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getLong(int)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/appendPath(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getCount()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/ArrayList/ArrayList(java.util.Collection)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/List/size()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager$NameNotFoundException/PackageManager$NameNotFoundException(java.lang.String)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/List/get(int)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/toString()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/String/equals(java.lang.Object)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/setPrimaryValue(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#android/content/res/Resources/getInteger(int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/setImperial(boolean)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/ordinal()
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/setSecondaryValue(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#java/lang/Math/round(float)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/onCreate(android.os.Bundle)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/getArguments()
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#android/os/Bundle/getFloat(java.lang.String,float)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/setTitle(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/addToList(com.sonymobile.lifelog.login.create.EditData,boolean)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/setDescription(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/fromValue(int)
com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountWeightFragment/getContext()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethods()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getName()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getFields()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/get(java.lang.Object,int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/isArray()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/charAt(int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/getLength(java.lang.Object)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/length()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.Object)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getType()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/getName()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getModifiers()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzach/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/setLength(int)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#android/app/KeyguardManager/isKeyguardLocked()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#android/app/usage/UsageStatsManager/queryUsageStats(int,long,long)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/String/isEmpty()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/util/List/get(int)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#android/app/ActivityManager/getRunningAppProcesses()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/util/List/isEmpty()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#android/app/usage/UsageStats/getPackageName()
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/application/ApplicationDataLogger/checkCurrentApplication()#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/widget/FrameLayout/onSizeChanged(int,int,int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingBottom()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/util/ArrayMap/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getContext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingEnd()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/util/ArrayMap/clear()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/graphics/RectF/centerX()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#android/graphics/RectF/RectF()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingTop()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onSizeChanged(int,int,int,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingStart()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingBottom()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Canvas/getHeight()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingTop()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Canvas/getWidth()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingStart()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/drawAxis(android.graphics.Canvas,int)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/List/isEmpty()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/widget/FrameLayout/dispatchDraw(android.graphics.Canvas)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setAlpha(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/util/ArrayMap/entrySet()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/getStrokeWidth()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/dispatchDraw(android.graphics.Canvas)#java/util/Set/iterator()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setPadding(int,int,int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Rect/height()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setLayerType(int,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getContext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setScaleY(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setScaleX(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Rect/Rect()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#java/lang/String/length()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getResources()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setTextSize(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setAlpha(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/graphics/DashPathEffect/DashPathEffect(float[],float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setWillNotDraw(boolean)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/init()#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/isEmpty()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/lang/Math/max(long,long)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/clear()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/invalidate()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/lang/Math/min(long,long)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Calendar/set(int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getContext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/setSleepSessions(java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/getMeasuredHeight()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setTranslationX(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setPivotY(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setPivotX(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/measureChild(android.view.View,int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/getPaddingStart()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/getMeasuredWidth()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#com/sonymobile/lifelog/ui/graph/chart/SleepDayChart$Marker/setTranslationY(float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/prepareMarker(com.sonymobile.lifelog.ui.graph.chart.NormalizedSleepSession,float,float)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/util/ArrayMap/entrySet()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/graphics/RectF/centerX()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/graphics/RectF/contains(float,float)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#java/util/Set/iterator()
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#android/widget/FrameLayout/onTouchEvent(android.view.MotionEvent)
com/sonymobile/lifelog/ui/graph/chart/SleepDayChart/onTouchEvent(android.view.MotionEvent)#java/util/Map$Entry/getValue()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/util/HashMap/remove(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/Exception/Exception()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/removeMessages(int,java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/content/ServiceConnection/onServiceConnected(android.content.ComponentName,android.os.IBinder)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getVisibility()
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getViewTreeObserver()
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getParent()
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/animation/LayoutTransition/disableTransitionType(int)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewGroup/getLayoutTransition()
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHintView/setAlpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphHintView/showSleepHintCard(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/lang/String/length()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Map/entrySet()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Iterator/next()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/analytics/ecommerce/Product/zzm(java.lang.String)#java/util/Set/iterator()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/lang/Integer/intValue()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/ArrayList/ArrayList()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/Iterator/hasNext()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/Collections/emptyList()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/List/size()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/Iterator/next()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/security/cert/X509Certificate/getSubjectAlternativeNames()
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/List/add(java.lang.Object)
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/List/get(int)
okhttp3/internal/tls/OkHostnameVerifier/getSubjectAltNames(java.security.cert.X509Certificate,int)#java/util/Collection/iterator()
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/lastIndexOf(int,int)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/substring(int)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/indexOf(int,int)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/length()
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/internal/tls/OkHostnameVerifier/verifyHostname(java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preTranslate(float,float)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preConcat(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/invert(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/postConcat(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/postTranslate(float,float)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/Matrix()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#android/content/Intent/getAction()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#com/sonymobile/lifelog/sleep/SleepCheckService/getApplicationContext()
com/sonymobile/lifelog/sleep/SleepCheckService/onHandleIntent(android.content.Intent)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/app/PendingIntent/getService(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/app/AlarmManager/set(int,long,android.app.PendingIntent)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/app/AlarmManager/cancel(android.app.PendingIntent)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#java/lang/StringBuilder/append(long)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/sleep/SleepCheckService/setSleepCheckerAlarm(android.content.Context,long)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/animation/Animator/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getId()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/addListener(android.support.transition.Transition$TransitionListener)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getParent()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/offsetTopAndBottom(int)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getVisibility()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/ViewGroup/findViewById(int)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#java/util/Map/get(java.lang.Object)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/getTransitionValues(android.view.View,boolean)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/getMatchedTransitionValues(android.view.View,boolean)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getTop()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getLeft()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/offsetLeftAndRight(int)
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/lang/NullPointerException/getMessage()
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/util/List/iterator()
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/location/MapHandler/addLocationMarker(com.sonymobile.lifelog.model.LocationType)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/obtain()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getViewPortHandler()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/enableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/postInvalidate()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/disableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/listener/ChartTouchListener/onDoubleTap(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/data/BarLineScatterCandleBubbleData/getEntryCount()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getOnChartGestureListener()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isLogEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getPackageManager()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getString(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getId()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/support/v7/widget/ActivityChooserView/getContext()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setActivated(boolean)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setId(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/IllegalArgumentException/IllegalArgumentException()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/Class/getName()
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/internal/$Gson$Types/getRawType(java.lang.reflect.Type)#java/lang/Object/getClass()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/isArray()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/getComponentType()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/google/gson/internal/$Gson$Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#[Ljava/lang/reflect/Type;/clone()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getGenericDeclaration()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getName()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/String/equals(java.lang.Object)
com/google/gson/internal/$Gson$Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/size()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/values()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/HeartbeatProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/nio/channels/FileChannel/map(java.nio.channels.FileChannel$MapMode,long,long)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/close()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/nio/channels/FileChannel/size()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/lang/NullPointerException/NullPointerException()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/os/ParcelFileDescriptor/close()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/getChannel()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/FileInputStream(java.io.FileDescriptor)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/io/File/createNewFile()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/content/Context/getCacheDir()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/append(int)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/os/Process/myPid()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/os/Process/myTid()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/toString()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/View/isShown()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/ref/WeakReference/get()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/addPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawLines(float[],int,int,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColors()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/containsKey(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/get(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getIcon()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/addPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getRight()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/support/v4/view/ViewCompat$ViewCompatApi19Impl/offsetLeftAndRight(android.view.View,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/invalidate(android.graphics.Rect)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/intersect(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getParent()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getBottom()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getTop()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/intersects(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getLeft()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/invalidate(android.graphics.Rect)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersect(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getParent()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getBottom()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/support/v4/view/ViewCompat$ViewCompatApi19Impl/offsetTopAndBottom(android.view.View,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getRight()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getTop()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersects(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getLeft()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/util/Set/size()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/lang/String/length()
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzfb/zza(java.lang.String,java.util.Set,com.google.android.gms.tagmanager.zzdl)#java/util/Set/isEmpty()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/Math/round(double)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/Math/random()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/List/iterator()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/Number/longValue()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/String/length()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/Long/longValue()
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzfb/zzf(java.util.List)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/String/length()
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/util/Set/contains(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/util/Set/add(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(com.google.android.gms.internal.measurement.zzm,java.util.Set,com.google.android.gms.tagmanager.zzgm)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/String/length()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#com/google/android/gms/internal/measurement/zzb/toString()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/HashMap/HashMap()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map/keySet()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzfb/zza(java.util.Map,com.google.android.gms.internal.measurement.zzwd,java.util.Set,com.google.android.gms.tagmanager.zzen)#java/util/Map/entrySet()
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/postDelayed(java.lang.Runnable,long)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/isEnabled()
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/getParent()
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumHeight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumWidth()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getVisibility()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildMeasureSpec(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/setMeasuredDimension(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingRight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingLeft()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getChildAt(int)
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/ViewGroup/getBaseline()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/View/getBaseline()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getBottom()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getTop()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getChildCount()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumHeight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getBaseline()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/setMeasuredDimension(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumWidth()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getVisibility()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildMeasureSpec(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingRight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingLeft()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/hasNext()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/next()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/clear()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/getParcelableArray(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Iterable/iterator()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/substring(int)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Integer/parseInt(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/keySet()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/String/length()
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/String/concat(java.lang.String)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/String/String(java.lang.String)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/append(boolean)
com/google/android/gms/wearable/ConnectionConfiguration/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTextSize(float)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getDisplayMetrics()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setGravity(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTypeface(android.graphics.Typeface)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getString(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setMinHeight(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTextColor(android.content.res.ColorStateList)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setMinWidth(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getColorStateList(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTransformationMethod(android.text.method.TransformationMethod)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getDrawable(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/getContext()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setText(java.lang.CharSequence)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setBackgroundDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/addFrame(android.graphics.drawable.Drawable,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setLevel(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/isOneShot()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getNumberOfFrames()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setLevel(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getDuration(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/AnimationDrawable()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getFrame(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setOneShot(boolean)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getNumberOfLayers()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/setId(int,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/getColorFilter()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getId(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/getPaint()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/BitmapDrawable/getBitmap()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/ShapeDrawable(android.graphics.drawable.shapes.Shape)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getDrawable(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/BitmapShader/BitmapShader(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ClipDrawable/ClipDrawable(android.graphics.drawable.Drawable,int,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/LayerDrawable(android.graphics.drawable.Drawable[])
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/BitmapDrawable/getPaint()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getTag()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getShuffleMode()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromMediaId(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getRepeatMode()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/pause()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getQueueTitle()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepare()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getVolumeAttributes()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeLong(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setShuffleMode(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeTypedList(java.util.List)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/fastForward()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromUri(android.net.Uri,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getRatingType()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendCustomAction(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getLaunchPendingIntent()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/skipToQueueItem(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/adjustVolume(int,int,java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readLong()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setShuffleModeEnabledDeprecated(boolean)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/removeQueueItemAt(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromSearch(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readStrongBinder()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getFlags()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rate(android.support.v4.media.RatingCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/addQueueItem(android.support.v4.media.MediaDescriptionCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/next()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromUri(android.net.Uri,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setVolumeTo(int,int,java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/play()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getExtras()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Bundle/writeToParcel(android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeInt(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isCaptioningEnabled()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/previous()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/seekTo(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromMediaId(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getQueue()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getPackageName()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rewind()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/app/PendingIntent/writeToParcel(android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/text/TextUtils/writeToParcel(java.lang.CharSequence,android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendMediaButton(android.view.KeyEvent)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isTransportControlEnabled()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getPlaybackState()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromSearch(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getMetadata()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setCaptioningEnabled(boolean)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setRepeatMode(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/stop()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isShuffleModeEnabledDeprecated()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager$LayoutParams/getViewLayoutPosition()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/isEmpty()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/clear()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/view/View/hasFocusable()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/set(int,boolean)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/lang/Math/min(int,int)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/view/View/getLayoutParams()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/addView(android.view.View,int)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/set(int,int,boolean)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/addView(android.view.View)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingBottom()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getMinimumWidth()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/height()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingTop()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(int,int)
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingRight()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/width()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingLeft()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getMinimumHeight()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/chooseSize(int,int,int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/String/length()
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/Math/min(int,int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/toString()
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/String/charAt(int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/append(int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/IllegalAccessError/IllegalAccessError(java.lang.String)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation/newDelete(android.net.Uri)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/ArrayList/isEmpty()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation$Builder/withValues(android.content.ContentValues)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/List/iterator()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation/newUpdate(android.net.Uri)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation$Builder/build()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation/newInsert(android.net.Uri)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/ArrayList/size()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/UUID/toString()
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentResolver/applyBatch(java.lang.String,java.util.ArrayList)
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#android/content/ContentProviderOperation$Builder/withSelection(java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/offline/SessionTransformer/updateProvider(android.content.Context)#java/util/List/remove(java.lang.Object)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/TextInputLayout/getContext()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/view/LayoutInflater/from(android.content.Context)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setPadding(int,int,int,int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/FrameLayout/addView(android.view.View)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/graphics/drawable/ColorDrawable/ColorDrawable()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingLeft()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingTop()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingBottom()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/getMeasuredWidth()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingRight()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setVisibility(int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/getVisibility()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/setMinimumHeight(int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setOnClickListener(android.view.View$OnClickListener)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setTypeface(android.graphics.Typeface)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/animate()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setId(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/content/res/ColorStateList/getDefaultColor()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/support/design/widget/TextInputLayout/getContext()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setTextColor(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setVisibility(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/getTextColors()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getHint()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getText()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getTextSize()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getTypeface()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getGravity()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/text/Editable/length()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getHintTextColors()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/setHint(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setAlpha(float)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/animate()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setVisibility(int)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/start()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/getVisibility()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/getAlpha()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/alpha(float)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/os/ParcelFileDescriptor/getFd()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/OsConstants/S_ISREG(int)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/append(int)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/Os/readlink(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/io/File/File(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/toString()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/Os/stat(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/close()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/File/canRead()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/support/v4/graphics/TypefaceCompatApi21Impl/findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/FileInputStream/close()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface/createFromFile(java.io.File)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/lang/NullPointerException/NullPointerException()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/FileInputStream/FileInputStream(java.io.FileDescriptor)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/getFileDescriptor()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#android/net/Uri/getPath()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/util/List/isEmpty()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/util/List/size()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/getApplicationContext()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/util/List/iterator()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/connecteddevices/wear/WearListenerService/onDataChanged(com.google.android.gms.wearable.DataEventBuffer)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setTextSize(float)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setPadding(int,int,int,int)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/CheckedTextView/setChecked(boolean)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/CheckedTextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setHeight(int)
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Object/toString()
com/sonymobile/lifelog/debug/memory/MemoryInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/TextView(android.content.Context)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#android/content/Intent/hasExtra(java.lang.String)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/getApplicationContext()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/setContentView(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/getFragmentManager()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/findViewById(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/getResources()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#android/content/Intent/getLongExtra(java.lang.String,long)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/getIntent()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationsActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/location/LocationsActivity/onCreate(android.os.Bundle)#android/graphics/drawable/ColorDrawable/ColorDrawable(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/widget/DatePicker/setMinDate(long)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/app/DatePickerDialog/getDatePicker()
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/widget/DatePicker/setCalendarViewShown(boolean)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/app/DatePickerDialog/DatePickerDialog(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/app/DatePickerDialog/dismiss()
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/widget/DatePicker/setMaxDate(long)
com/sonymobile/lifelog/ui/location/LocationsActivity/showChangeDateDialog()#android/app/DatePickerDialog/show()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/Integer/intValue()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Map/putAll(java.util.Map)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/length()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Iterator/next()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/HashMap/HashMap()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/Double/doubleValue()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/concat(java.lang.String)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Set/iterator()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/substring(int)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/lang/String/String(java.lang.String)
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/List/iterator()
com/google/android/gms/analytics/zzb/zzc(com.google.android.gms.analytics.zzg)#java/util/Map/entrySet()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/length()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/Double/valueOf(double)
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Iterator/next()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/HashMap/HashMap()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Set/iterator()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/String/valueOf(long)
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/util/Map/entrySet()
com/google/android/gms/analytics/zzb/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#com/sonymobile/lifelog/ui/recyclerview/base/AdapterViewHolder/getItemViewType()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/System/nanoTime()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#android/util/SparseArray/get(int)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/onBindViewHolder(com.sonymobile.lifelog.ui.recyclerview.base.AdapterViewHolder,int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/util/List/iterator()
com/sonymobile/lifelog/ui/recyclerview/adapter/BaseAdapter/getItemViewType(int)#java/lang/StringBuilder/toString()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/entrySet()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Iterator/next()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Class/getName()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Set/iterator()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/toString()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/isEmpty()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/remove(java.lang.Object)
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getKey()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Object/getClass()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getValue()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/append(java.lang.CharSequence)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Set/iterator()
com/google/gson/internal/UnsafeAllocator/create()#java/lang/Class/forName(java.lang.String)
com/google/gson/internal/UnsafeAllocator/create()#java/lang/Integer/intValue()
com/google/gson/internal/UnsafeAllocator/create()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/google/gson/internal/UnsafeAllocator/create()#java/lang/reflect/Field/get(java.lang.Object)
com/google/gson/internal/UnsafeAllocator/create()#java/lang/reflect/Field/setAccessible(boolean)
com/google/gson/internal/UnsafeAllocator/create()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/gson/internal/UnsafeAllocator/create()#java/lang/Class/getDeclaredField(java.lang.String)
com/google/gson/internal/UnsafeAllocator/create()#java/lang/reflect/Method/setAccessible(boolean)
com/google/gson/internal/UnsafeAllocator/create()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarEntry/getIcon()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/BarChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setAlpha(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForXValue(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getHighLightColor()
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/net/URL/openConnection()
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/StringBuilder/append(int)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/String/String(java.lang.String)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/Exception/toString()
com/google/android/gms/auth/api/signin/internal/zzd/run()#com/google/android/gms/common/api/internal/StatusPendingResult/setResult(com.google.android.gms.common.api.Result)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/StringBuilder/toString()
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/io/IOException/toString()
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/String/length()
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/net/URL/URL(java.lang.String)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/lang/String/concat(java.lang.String)
com/google/android/gms/auth/api/signin/internal/zzd/run()#java/net/HttpURLConnection/getResponseCode()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getPaddingStart()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getPaddingBottom()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getWidth()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getPaddingTop()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getHeight()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getPaddingEnd()
com/sonymobile/lifelog/ui/widget/PieProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/PieProgressView/getProgress()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/Cursor/getLong(int)
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/util/ArrayList/size()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/util/List/add(java.lang.Object)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/Cursor/moveToFirst()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/util/ArrayList/get(int)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/sqlite/SQLiteCursor/getWindow()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/util/ArrayList/ArrayList()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/sqlite/SQLiteException/getMessage()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/Integer/toString(int)
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/String/length()
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/Cursor/close()
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/CursorWindow/getNumRows()
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/util/List/get(int)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/Cursor/getString(int)
com/google/android/gms/tagmanager/zzeb/zzy(int)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzy(int)#android/database/Cursor/moveToNext()
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/Long/toString(long)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/util/List/size()
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/content/ContentValues/ContentValues()
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzb(long,java.lang.String)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/util/ArrayList/ArrayList()
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/sqlite/SQLiteException/getMessage()
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/Cursor/getLong(int)
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/util/List/add(java.lang.Object)
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/Cursor/moveToFirst()
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/valueOf(long)
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/Cursor/moveToNext()
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/Integer/toString(int)
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/length()
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzx(int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/tagmanager/zzeb/zzx(int)#android/database/Cursor/close()
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#android/content/ContentValues/ContentValues()
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/StringBuilder/append(long)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#java/lang/String/valueOf(long)
com/google/android/gms/tagmanager/zzeb/zzc(long,long)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/makeMainActivity(android.content.ComponentName)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/Intent()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/toString()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/app/Activity/getParentActivityIntent()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/getChildCount()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/removeAllViews()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/WindowManager$LayoutParams/WindowManager$LayoutParams(int,int,int,int,int,int,int)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/requestFocus()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/res/Resources/getConfiguration()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onMenuOpened(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/hasFocus()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/Context/getApplicationInfo()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/Context/getSystemService(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/WindowManager/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/getParent()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/setBackgroundResource(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/content/res/Resources/getColor(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/isShown()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setVisibility(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setBackgroundColor(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/graphics/Rect/Rect()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/View(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingBottom()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/hasValue(int)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingLeft()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingTop()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/getValue(int,android.util.TypedValue)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingRight()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/support/v7/widget/ContentFrameLayout/requestLayout()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/app/AppCompatDelegateImplV9/getActionBarThemedContext()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/setTo(android.content.res.Resources$Theme)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/applyStyle(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setContentView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/util/TypedValue/complexToDimensionPixelSize(int,android.util.DisplayMetrics)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/View/post(java.lang.Runnable)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/sendAccessibilityEvent(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/PopupWindow(android.content.Context,android.util.AttributeSet,int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources/newTheme()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setHeight(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/setAlpha(float)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setWidth(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/getParent()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/lang/Runnable/run()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onPanelClosed(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onMenuOpened(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onPreparePanel(int,android.view.View,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewConfiguration/get(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/View/removeCallbacks(java.lang.Runnable)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewConfiguration/hasPermanentMenuKey()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyCharacterMap/getKeyboardType()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onCreatePanelMenu(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyEvent/getDeviceId()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onPreparePanel(int,android.view.View,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/peekSupportActionBar()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyCharacterMap/load(int)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onCreatePanelView(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/removeViewAt(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/hasValue(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/append(boolean)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/getChildAt(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/getChildCount()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/widget/ContentFrameLayout/addView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/setContentView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/widget/FrameLayout/setForeground(android.graphics.drawable.Drawable)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/widget/ContentFrameLayout/setId(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/setId(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/setData(android.net.Uri)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri$Builder/build()
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri/buildUpon()
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/addFlags(int)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/setPackage(java.lang.String)
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okhttp3/OkHttpClient/systemDefaultTrustManager()#javax/net/ssl/TrustManagerFactory/getTrustManagers()
okhttp3/OkHttpClient/systemDefaultTrustManager()#javax/net/ssl/TrustManagerFactory/init(java.security.KeyStore)
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/lang/StringBuilder/StringBuilder()
okhttp3/OkHttpClient/systemDefaultTrustManager()#javax/net/ssl/TrustManagerFactory/getDefaultAlgorithm()
okhttp3/OkHttpClient/systemDefaultTrustManager()#javax/net/ssl/TrustManagerFactory/getInstance(java.lang.String)
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/lang/AssertionError/AssertionError()
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/lang/StringBuilder/toString()
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/util/Arrays/toString(java.lang.Object[])
okhttp3/OkHttpClient/systemDefaultTrustManager()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdk)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdi)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzeg)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzga)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdy)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdt)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzfu)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.common.api.Status)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzbn)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdm)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdg)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzee)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzge)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzec)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzea)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zzb(com.google.android.gms.common.data.DataHolder)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdw)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zzb(com.google.android.gms.wearable.internal.zzbt)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzfy)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzbt)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdv)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzf)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdr)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzbp)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzfq)
com/google/android/gms/wearable/internal/zzel/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzel/zza(com.google.android.gms.wearable.internal.zzdo)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/isWakeUpSensor()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/getFifoReservedEventCount()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/getPower()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/append(float)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/getStringType()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/getName()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/createDataList(java.util.List)#android/hardware/Sensor/getFifoMaxEventCount()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Object/toString()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/CheckedTextView/setChecked(boolean)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/CheckedTextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/TextView(android.content.Context)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/name()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#android/widget/Toast/show()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#android/hardware/SensorManager/getDefaultSensor(int)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/debug/sensor/SensorInfoAdapter/clickedPosition(int)#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/name()
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/View/getHeight()
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/View/animate()
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationY(float)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/View/setTranslationY(float)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/View/setAlpha(float)
com/sonymobile/lifelog/ui/graph/GraphActivity$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/alpha(float)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Long/toString(long)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/util/HashMap/HashMap()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Object/getClass()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Integer/toString(int)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/String/length()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Math/random()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Class/getName()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#com/google/android/gms/ads/identifier/zza/start()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/String/isEmpty()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/append(java.lang.CharSequence)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#com/google/android/gms/common/internal/IGmsServiceBroker/asBinder()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/text/SimpleDateFormat/format(java.util.Date)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/os/IInterface/asBinder()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(long)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Date/Date(long)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(int)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#android/content/Context/getPackageName()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/toString()
com/squareup/picasso/Request/toString()#java/util/Iterator/hasNext()
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/append(int)
com/squareup/picasso/Request/toString()#java/util/List/isEmpty()
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/squareup/picasso/Request/toString()#java/util/Iterator/next()
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/append(char)
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/Request/toString()#java/util/List/iterator()
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/append(float)
com/squareup/picasso/Request/toString()#java/lang/StringBuilder/toString()
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/util/List/size()
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/util/List/get(int)
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/NullPointerException/NullPointerException(java.lang.String)
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/StringBuilder/toString()
okhttp3/internal/http/RealInterceptorChain/proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.Connection)#java/lang/AssertionError/AssertionError()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/Integer/intValue()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/Object/toString()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/CharSequence/length()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#org/joda/time/MutableDateTime$Property/getMinimumValueOverall()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/String/toUpperCase(java.util.Locale)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/Locale/getLanguage()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/Integer/valueOf(int)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/Math/min(int,int)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#org/joda/time/MutableDateTime$Property/getAsText(java.util.Locale)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/String/toLowerCase(java.util.Locale)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/Map/get(java.lang.Object)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/String/equals(java.lang.Object)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/Map/containsKey(java.lang.Object)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#org/joda/time/MutableDateTime$Property/getMaximumTextLength(java.util.Locale)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#org/joda/time/MutableDateTime$Property/getMaximumValueOverall()
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#org/joda/time/MutableDateTime$Property/getAsShortText(java.util.Locale)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/lang/CharSequence/subSequence(int,int)
org/joda/time/format/DateTimeFormatterBuilder$TextField/parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)#java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(int)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Action$Builder/Notification$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Builder/addAction(android.app.Notification$Action)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Action$Builder/build()
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/os/Bundle/putBoolean(java.lang.String,boolean)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Action$Builder/setAllowGeneratedReplies(boolean)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Action$Builder/addExtras(android.os.Bundle)
android/support/v4/app/NotificationCompatApi24/addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action)#android/app/Notification$Action$Builder/addRemoteInput(android.app.RemoteInput)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/URL/openConnection()
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/HttpURLConnection/setReadTimeout(int)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/URL/URL(java.lang.String)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/HttpURLConnection/setConnectTimeout(int)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/net/HttpURLConnection/getInputStream()
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/google/android/gms/internal/measurement/zzwl/zzej(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/setContentView(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/getResources()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/getIntent()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/findViewById(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/finish()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getTheme()
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GraphInfoActivity/setTheme(int)
com/sonymobile/lifelog/ui/graph/GraphInfoActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getActivityType(java.lang.String)
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/ArrayList/ArrayList(int)
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/Iterator/hasNext()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/List/size()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/Iterator/next()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/Set/iterator()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/List/add(java.lang.Object)
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/List/iterator()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/HashMap/size()
com/sonymobile/flix/util/Scheduler/getAllTasks()#java/util/HashMap/keySet()
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/rotate(float)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/save()
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/RectF/height()
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/RectF/set(float,float,float,float)
android/support/v7/widget/CardViewBaseImpl$1/drawRoundRect(android.graphics.Canvas,android.graphics.RectF,float,android.graphics.Paint)#android/graphics/RectF/width()
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/flix/components/Label/getHeight()
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/DateButton/moveY(float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/JourneyMain/getScene()
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/flix/components/Image/setHeight(float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/flix/components/Rectangle/setSize(float,float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/WeatherButton/moveY(float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/JourneyMain/setSize(float,float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/JourneyMain/setInnerMargin(float,float,float,float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/DateButton/layout()
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/MountainScene/layout(float,float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/flix/components/Image/moveY(float)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/background/MountainScene/findByName(java.lang.String)
com/sonymobile/lifelog/journeyview/JourneyMain/onLayout(float,float)#com/sonymobile/lifelog/journeyview/WeatherButton/layout()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/hasMessages(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getFlags()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/size()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getScheme()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Context/getContentResolver()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/ArrayList()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/IntentFilter/match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/resolveTypeIfNeeded(android.content.ContentResolver)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getAction()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/sendEmptyMessage(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getCategories()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/Integer/toHexString(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getData()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/get(int)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Condition/signalAll()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Collections/emptyMap()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/size()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getName()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getPaddingBottom()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getWidth()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getPaddingTop()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getHeight()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getPaddingRight()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getPaddingLeft()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/getProgress()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawRect(android.graphics.Rect,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/Path/rewind()
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/Path/addRoundRect(android.graphics.RectF,float,float,android.graphics.Path$Direction)
com/sonymobile/lifelog/ui/widget/RoundedProgressView/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/GraphView/setOnTouchListener(android.view.View$OnTouchListener)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphDataView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/View/animate()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType$Category/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/os/Handler/postDelayed(java.lang.Runnable,long)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewGroup/removeAllViews()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphDataView/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ScaleGestureDetector/ScaleGestureDetector(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getCategory()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/View/setAlpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphDataView/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/RelativeLayout/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/GestureDetector/GestureDetector(android.content.Context,android.view.GestureDetector$OnGestureListener)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewGroup/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/RelativeLayout/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphDataView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/os/Handler/Handler()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getTop()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getLeft()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getBottom()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/graphics/Rect/centerX()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getRight()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getLayoutParams()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/graphics/Rect/centerY()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getChildAt(int)
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingTop()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getBaseline()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingRight()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingLeft()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getChildCount()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getSuggestedMinimumWidth()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getPaddingBottom()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getBaseline()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/measureChild(android.view.View,int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/setMeasuredDimension(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getChildAt(int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getSuggestedMinimumHeight()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getChildCount()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getVisibility()
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Paint/setShader(android.graphics.Shader)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/recycle()
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/getConfig()
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/getHeight()
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/createBitmap(android.graphics.Bitmap,int,int,int,int)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Bitmap/getWidth()
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/sonymobile/lifelog/utils/PicassoUtils$CircleTransform/transform(android.graphics.Bitmap)#android/graphics/BitmapShader/BitmapShader(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Set/iterator()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Map/entrySet()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/mapToDebugString(java.util.Map)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#android/telephony/TelephonyManager/getSimOperator()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#android/telephony/TelephonyManager/getSimState()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/String/length()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/String/substring(int,int)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/String/substring(int)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleAnalyticsManager/pushInitDefaultsToDataLayer()#java/lang/Exception/getMessage()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/util/Iterator/hasNext()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/StringBuilder/append(int)
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/util/List/size()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/util/Iterator/next()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/Object/hashCode()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/util/List/iterator()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/StringBuilder/append(double)
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/StringBuilder/toString()
com/sonymobile/locationfilter/dbscan/Cluster/toString()#java/lang/String/valueOf(java.lang.Object)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getPaddingBottom()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getChildAt(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/setMinimumHeight(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getResources()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getPaddingTop()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getPaddingTop()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getMeasuredWidthAndState()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/widget/ImageView/setVisibility(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/lang/String/split(java.lang.String)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/view/View/setBackgroundColor(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/util/List/iterator()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/view/View/getResources()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/view/View/getContext()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/util/List/get(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#java/util/Locale/getDefault()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler/setSelected(boolean,int)#android/widget/LinearLayout/setVisibility(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/length()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/Integer/valueOf(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/toString()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/append(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getDimension(int,float)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getColorStateList(int)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getPositionDescription()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/getMatrix(android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/offsetTo(int,int)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#java/lang/Math/abs(float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/support/graphics/drawable/VectorDrawableCompat/copyBounds(android.graphics.Rect)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Matrix/getValues(float[])
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#java/lang/Math/min(int,int)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/Stack/pop()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuffer/length()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuilder/append(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/Stack/peek()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/Stack/Stack()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat$VFullPath/getPathName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat$VClipPath/getPathName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/Stack/push(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuffer/append(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuffer/StringBuffer()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/OutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/File/getPath()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/Exception/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTypeface()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/charts/Chart/getWidth()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getXOffset()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getYOffset()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/isEnabled()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/charts/Chart/getHeight()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTextColor()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTextSize()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/IOException/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Long/valueOf(long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/exists()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#com/github/mikephil/charting/charts/Chart/getContext()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/getAbsolutePath()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/mkdirs()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Integer/valueOf(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap$CompressFormat/ordinal()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/flush()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/ContentValues(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/File(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/length()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/Context/getContentResolver()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/String/endsWith(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/iterator()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/hasNext()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#com/github/mikephil/charting/charts/Chart/post(java.lang.Runnable)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/next()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/clear()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/view/ViewGroup/onSizeChanged(int,int,int,int)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#java/lang/String/hashCode()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/loadAuthenticationFromProvider(android.content.Context)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#com/sonymobile/lifelog/activityengine/authentication/RSA$RSAEncryptor/encrypt(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#com/sonymobile/lifelog/activityengine/authentication/AES$AESEncryptor/getException()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#com/sonymobile/lifelog/activityengine/authentication/RSA$RSAEncryptor/getException()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/authentication/AuthenticationStore/saveRefreshToken(android.content.Context,java.lang.String)#com/sonymobile/lifelog/activityengine/authentication/AES$AESEncryptor/encrypt(java.lang.String)
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preTranslate(float,float)
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preConcat(android.graphics.Matrix)
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/design/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/reflect/Field/getInt(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Exception/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/Exception/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/Boolean/booleanValue()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/os/IBinder/queryLocalInterface(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/Class/newInstance()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/content/Context/createPackageContext(java.lang.String,int)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/Exception/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Class/getDeclaredField(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getPackageName()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/isEmpty()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#com/google/android/gms/dynamite/DynamiteModule$LoadingException/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/ClassLoader/getSystemClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Boolean/booleanValue()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Class/getName()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getColumnIndex(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/close()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/moveToFirst()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/content/Context/getContentResolver()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getString(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getInt(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/ThreadLocal/set(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#com/google/android/gms/dynamite/DynamiteModule$LoadingException/getMessage()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/util/Log/i(java.lang.String,java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/Context/getPackageManager()
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/Signature/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/Context/getPackageName()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/util/concurrent/atomic/AtomicBoolean/get()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/res/Resources/getString(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/Context/getResources()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageManager/getPackageInstaller()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageInstaller$SessionInfo/getAppPackageName()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageInstaller/getAllSessions()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/List/iterator()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#com/github/mikephil/charting/components/Legend$LegendForm/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Boolean/booleanValue()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getYOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/clear()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/lang/Integer/intValue()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/size()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/get(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/getHeight()
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/TimePickerView/getWidth()
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/ascent()
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/SquareFrameLayout/dispatchDraw(android.graphics.Canvas)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/widget/TimePickerView/getHeight()
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/getWidth()
com/sonymobile/lifelog/ui/widget/TimePickerView/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/descent()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#com/sonymobile/lifelog/ui/widget/TimePickerView/invalidate()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/recycle()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#java/lang/Math/sqrt(double)
com/sonymobile/lifelog/ui/widget/TimePickerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/PorterDuffXfermode/PorterDuffXfermode(android.graphics.PorterDuff$Mode)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#com/sonymobile/lifelog/ui/widget/TimePickerView/getResources()
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setDither(boolean)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setTextSize(float)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/sonymobile/lifelog/ui/widget/TimePickerView/initPaints()#android/graphics/Paint/setXfermode(android.graphics.Xfermode)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/String/toLowerCase()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#android/content/res/Resources/getXml(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/Integer/toHexString(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#android/content/res/Resources/getResourceName(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/CharSequence/toString()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/StringBuilder/toString()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.widget.TextView)#java/lang/String/endsWith(java.lang.String)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/length()
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/substring(int,int)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/substring(int)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/startsWith(java.lang.String)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/indexOf(int,int)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/indexOf(int)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/io/IOException/IOException(java.lang.String)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/remove(java.lang.Object)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/split(java.lang.String)
okhttp3/internal/cache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/get(java.lang.Object)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/util/Calendar/setTime(java.util.Date)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/text/ParseException/getMessage()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/text/SimpleDateFormat/getDateInstance(int,java.util.Locale)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/util/Locale/getDefault()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$4/onClick(android.view.View)#java/text/DateFormat/parse(java.lang.String)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/io/IOException/IOException(java.lang.String)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/StringBuilder/append(int)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/StringBuilder/append(long)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/Integer/valueOf(int)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/util/concurrent/ExecutorService/execute(java.lang.Runnable)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#okio/BufferedSource/read(okio.Buffer,long)
okhttp3/internal/http2/Http2Connection/pushDataLater(int,okio.BufferedSource,int,boolean)#java/lang/StringBuilder/toString()
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/View/getBackground()
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/content/res/TypedArray/getDrawable(int)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/View/findViewById(int)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/content/res/TypedArray/recycle()
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#java/util/List/get(int)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/ViewGroup/setVisibility(int)
android/support/v7/preference/PreferenceGroupAdapter/onCreateViewHolder(android.view.ViewGroup,int)#android/view/ViewGroup/getContext()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/values()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/keySet()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/content/Context/getApplicationContext()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Set/clear()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Exception/Exception()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/remove(java.lang.Object)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/append(int)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/util/List/size()
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/util/List/get(int)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#android/net/Uri/toString()
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/append(float)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/toString()
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/StringBuilder/ensureCapacity(int)
com/squareup/picasso/Utils/createKey(com.squareup.picasso.Request,java.lang.StringBuilder)#java/lang/String/length()
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#android/content/Context/getPackageManager()
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#android/content/pm/PackageManager/getResourcesForApplication(java.lang.String)
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#android/net/Uri/getAuthority()
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#java/lang/StringBuilder/toString()
com/squareup/picasso/Utils/getResources(android.content.Context,com.squareup.picasso.Request)#android/content/Context/getResources()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#android/net/Uri/getPathSegments()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/util/List/isEmpty()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/util/List/size()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/lang/Integer/parseInt(java.lang.String)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/util/List/get(int)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#android/net/Uri/getAuthority()
com/squareup/picasso/Utils/getResourceId(android.content.res.Resources,com.squareup.picasso.Request)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/close()
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/HashSet/HashSet()
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/add(java.lang.Object)
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/isEmpty()
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getColumnNames()
com/google/android/gms/tagmanager/zzed/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToFirst()
android/support/transition/Transition/toString(java.lang.String)#java/lang/Class/getSimpleName()
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/Transition/toString(java.lang.String)#java/lang/Integer/toHexString(int)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(long)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/transition/Transition/toString(java.lang.String)#java/util/ArrayList/get(int)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/toString()
android/support/transition/Transition/toString(java.lang.String)#java/util/ArrayList/size()
android/support/transition/Transition/toString(java.lang.String)#java/lang/Object/hashCode()
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/transition/Transition/toString(java.lang.String)#java/lang/Object/getClass()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/SparseIntArray()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/Map/get(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/valueAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/animation/Animator/getStartDelay()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/contains(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/put(int,int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/lang/Math/min(long,long)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/keyAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/animation/Animator/setStartDelay(long)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/lang/String/equals(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getAdapter()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/support/v4/util/ArrayMap/containsKey(java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/util/SparseArray/indexOfKey(int)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListAdapter/hasStableIds()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/view/View/getId()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getPositionForView(android.view.View)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/util/SparseArray/put(int,java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getItemIdAtPosition(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/ViewGroup/getChildCount()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/View/getId()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/lang/Class/isInstance(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/size()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/lang/Integer/valueOf(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/get(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/contains(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/ViewGroup/getChildAt(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/View/getParent()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#java/util/ArrayList/ArrayList()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#java/lang/Object/equals(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/cancel()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/isStarted()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/isRunning()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/isEmpty()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/valueAt(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/view/ViewGroup/findViewById(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/lang/Integer/intValue()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/ArrayList(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/size()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/get(int)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/layoutChildren()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/refreshDrawableState()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/positionSelectorLikeTouchCompat(int,android.view.View,float,float)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/setSelectorEnabled(boolean)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/setPressed(boolean)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/getChildAt(int)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/setPressed(boolean)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/isPressed()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/isPressed()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/getTop()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/getLeft()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/drawableHotspotChanged(float,float)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/getFirstVisiblePosition()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/drawableHotspotChanged(float,float)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getY(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/getFirstVisiblePosition()
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getX(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/getChildAt(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/pointToPosition(int,int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v4/widget/ListViewAutoScrollHelper/onTouch(android.view.View,android.view.MotionEvent)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v4/widget/ListViewAutoScrollHelper/setEnabled(boolean)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/os/IBinder/getInterfaceDescriptor()
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/onConnectedNodes(java.util.List)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzfe)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.common.data.DataHolder)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzaw)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createTypedArrayList(android.os.Parcelable$Creator)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzl)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzi)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zzb(com.google.android.gms.wearable.internal.zzfo)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzfo)
com/google/android/gms/wearable/internal/zzen/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/wearable/internal/zzen/zza(com.google.android.gms.wearable.internal.zzah)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/content/Context/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Object/getClass()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/toString()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/util/Iterator/hasNext()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/lang/StringBuilder/append(int)
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/util/Iterator/next()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/lang/StringBuilder/append(char)
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/util/List/get(int)
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/util/List/size()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#android/graphics/Bitmap/isRecycled()
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#android/os/Handler/post(java.lang.Runnable)
com/squareup/picasso/BitmapHunter/applyCustomTransformations(java.util.List,android.graphics.Bitmap)#java/util/List/iterator()
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/min(double,double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/floor(double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/ceil(double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Bitmap/getWidth()
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/Matrix()
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/toRadians(double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/sin(double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Bitmap/recycle()
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/preRotate(float)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/postScale(float,float)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/preScale(float,float)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/max(double,double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Bitmap/createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/setRotate(float)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Matrix/setRotate(float,float,float)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#java/lang/Math/cos(double)
com/squareup/picasso/BitmapHunter/transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int)#android/graphics/Bitmap/getHeight()
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/toString()
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/String/equalsIgnoreCase(java.lang.String)
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#okio/BufferedSink/close()
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(int)
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(long)
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/System/currentTimeMillis()
okhttp3/internal/http/CallServerInterceptor/intercept(okhttp3.Interceptor$Chain)#java/net/ProtocolException/ProtocolException(java.lang.String)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/ListView/addHeaderView(android.view.View,java.lang.Object,boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/View/getLocationOnScreen(int[])
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/view/menu/CascadingMenuPopup/getEpicenterBounds()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setHorizontalOffset(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setDropDownGravity(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/view/menu/CascadingMenuPopup/measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/ListView/setOnKeyListener(android.view.View$OnKeyListener)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setVerticalOffset(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/getListView()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/show()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/FrameLayout/findViewById(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/View/getWidth()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/size()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setAnchorView(android.view.View)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setEpicenterBounds(android.graphics.Rect)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setAdapter(android.widget.ListAdapter)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/add(java.lang.Object)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/get(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setOverlapAnchor(boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setContentWidth(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/widget/PopupWindow$OnDismissListener/onDismiss()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/remove(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewTreeObserver/removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/size()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/widget/MenuPopupWindow/dismiss()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/get(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/widget/MenuPopupWindow/setAnimationStyle(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/View/removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewTreeObserver/isAlive()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/offset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/lineTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/height()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/restore()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/reset()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/save()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/Path()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/close()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/moveTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/height()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/inset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/max(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/set(float,float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/min(int,int)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/removeViewInLayout(android.view.View)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/indexOfChild(android.view.View)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getContext()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/addView(android.view.View,int)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getParent()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/View/setId(int)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getLayoutParams()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/getDimension(int,float)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/Resources/getColor(int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/support/v7/widget/CardView/getResources()
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/graphics/Color/colorToHSV(int,float[])
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/getColor(int,int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/ColorStateList/valueOf(int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/hasValue(int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/recycle()
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/support/v7/widget/CardView/getContext()
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/res/TypedArray/getColorStateList(int)
android/support/v7/widget/CardView/initialize(android.content.Context,android.util.AttributeSet,int)#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/setEnabled(boolean)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/setKeyProgressIncrement(int)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/TextView/setVisibility(int)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/setMax(int)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setOnKeyListener(android.view.View$OnKeyListener)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#java/lang/String/valueOf(int)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/setProgress(int)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/SeekBar/getKeyProgressIncrement()
android/support/v7/preference/SeekBarPreference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/support/v7/preference/SeekBarPreference/isEnabled()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/util/ArrayList/size()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/length()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#android/util/LogPrinter/println(java.lang.String)
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/util/ArrayList/get(int)
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/lang/StringBuilder/toString()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/lang/Object/toString()
com/google/android/gms/analytics/zze/zzb(com.google.android.gms.analytics.zzg)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/util/Calendar/setTime(java.util.Date)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/text/ParseException/getMessage()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/text/SimpleDateFormat/getDateInstance(int,java.util.Locale)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/util/Locale/getDefault()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$5/onClick(android.view.View)#java/text/DateFormat/parse(java.lang.String)
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#com/sonymobile/flix/components/DebugScene/getContext()
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#com/sonymobile/flix/components/DebugScene/invalidate()
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/content/Context/getResources()
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/os/SystemClock/uptimeMillis()
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/graphics/Paint/setAlpha(int)
com/sonymobile/flix/components/DebugScene/debugDrawTouch(android.graphics.Canvas)#android/graphics/Paint/Paint()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/os/SystemClock/uptimeMillis()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/os/SystemClock/elapsedRealtime()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/os/SystemClock/currentThreadTimeMillis()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/actionToString(int)
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/sonymobile/flix/components/DebugScene/dispatchTouchEvent(android.view.MotionEvent)#com/sonymobile/flix/components/DebugScene/invalidate()
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#android/app/ListFragment/onViewCreated(android.view.View,android.os.Bundle)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#android/view/View/findViewById(int)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#android/widget/TextView/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/onViewCreated(android.view.View,android.os.Bundle)#com/sonymobile/lifelog/debug/sensor/SensorInfoFragment/getActivity()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/Throwable/Throwable()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/Math/max(int,int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StackTraceElement/getFileName()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/length()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StackTraceElement/getMethodName()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/charAt(int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/toString()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/append(int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/Thread/getName()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StackTraceElement/getLineNumber()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StackTraceElement/getClassName()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/setLength(int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/String/length()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/Thread/currentThread()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/Throwable/getStackTrace()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/String/lastIndexOf(int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/String/substring(int)
com/sonymobile/flix/debug/Logx/formatMessage(java.lang.String,int,boolean)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#android/content/Intent/getAction()
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#java/lang/String/length()
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#java/lang/String/concat(java.lang.String)
com/google/android/gms/auth/api/signin/RevocationBoundService/onBind(android.content.Intent)#java/lang/String/String(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/widget/LinearLayout/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/view/ViewGroup/addView(android.view.View)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/widget/LinearLayout/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/widget/LinearLayout/setGravity(int)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/view/View/setBackgroundColor(int)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/graph/component/GraphUtils/addLegendItem(android.view.ViewGroup,java.lang.String,java.lang.String,int,int)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#android/location/Location/getLongitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#android/location/Location/distanceBetween(double,double,double,double,float[])
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#android/location/Location/getLatitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationUtils/getTotalDistance(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/View/animate()
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationY(float)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/View/setTranslationY(float)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/View/setAlpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphAppCategoryView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/io/BufferedReader/close()
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/io/InputStreamReader/close()
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/net/HttpURLConnection/getErrorStream()
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/sonymobile/lifelog/logger/http/HttpResponse/getErrorAsString()#java/io/BufferedReader/readLine()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/getHeight()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/height()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#java/lang/String/length()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawColor(int)
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/descent()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/ascent()
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/measureText(java.lang.String)
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/utils/DevUtils$NumberDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/getWidth()
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/EditText/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/EditText/setHint(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/setUpViews()#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/isEmpty()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(boolean)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isMemberClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getModifiers()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getCanonicalName()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isPublic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Object/getClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isAnonymousClass()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/size()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/get(int)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Looper/myLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Handler/getLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/clear()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/String/length()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/os/Handler/sendMessage(android.os.Message)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/size()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/get(int)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Looper/myLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Handler/getLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/clear()
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/Class/getName()
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/Class/asSubclass(java.lang.Class)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/google/android/gms/internal/measurement/zzzr/zze(java.lang.Class)#java/lang/String/String(java.lang.String)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/v7/widget/LinearLayoutCompat/draw(android.graphics.Canvas)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingTop()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingLeft()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getLeft()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/view/Gravity/apply(int,int,int,android.graphics.Rect,android.graphics.Rect)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getTop()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getRight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingBottom()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingRight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getBottom()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setState(int[])
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/Rect/Rect()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/invalidate()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/getDrawableState()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/isStateful()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/requestLayout()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/setWillNotDraw(boolean)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/util/Iterator/next()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/StringBuilder/toString()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/util/Iterator/hasNext()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/util/Map$Entry/getKey()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/util/Set/iterator()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/lang/Object/getClass()
com/google/gson/internal/bind/TypeAdapters$29/write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/getMeasuredHeight()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/github/mikephil/charting/data/Entry/getData()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/getResources()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/github/mikephil/charting/data/Entry/getY()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/model/ActivityType/getGoalUnit()
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#java/text/DecimalFormat/format(long)
com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphLineChartMarker/getContext()
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$BigTextStyle/Notification$BigTextStyle()
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setStyle(android.app.Notification$Style)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setVisibility(int)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/build()
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setShowWhen(boolean)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/Notification$Builder(android.content.Context,java.lang.String)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setContentText(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/Notification$Builder(android.content.Context)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/content/Intent/Intent(java.lang.String)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setAutoCancel(boolean)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/content/Context/getResources()
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setContentTitle(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setContentIntent(android.app.PendingIntent)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setPriority(int)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/PendingIntent/getActivity(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$BigTextStyle/bigText(java.lang.CharSequence)
com/sonymobile/lifelog/logger/notification/StaminaModeNotificationHandler/createStaminaEnabledNotification()#android/app/Notification$Builder/setSmallIcon(int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getBounds()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/support/v7/widget/SwitchCompat/getWidth()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/draw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/getWidth()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.Rect,android.graphics.Region$Op)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/copyBounds(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/support/v7/widget/SwitchCompat/getDrawableState()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/getHeight()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/TextPaint/setColor(int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/content/res/ColorStateList/getColorForState(int[],int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/widget/CompoundButton/onDraw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getGravity()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingTop()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingLeft()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getHeight()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingBottom()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingRight()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getWidth()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/widget/CompoundButton/onLayout(boolean,int,int,int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/getMeasuredHeight()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/getMeasuredWidthAndState()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/setMeasuredDimension(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/widget/CompoundButton/onMeasure(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/text/Layout/getWidth()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/widget/CompoundButton/onTouchEvent(android.view.MotionEvent)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/SwitchCompat/getParent()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/SwitchCompat/isEnabled()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/getText()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/setClassName(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/widget/CompoundButton/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/append(char)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/support/v7/widget/SwitchCompat/isChecked()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/setText(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/append(java.lang.CharSequence)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/flix/components/RippleButton/setEnabled(boolean)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/ActivityBar/setWidth(float)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/ActivityBar/getPaint()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/ActivityBar/setAlpha(float)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/model/ActivityType/getColorFilter()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/ActivityBar/setX(float)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/Day/addChild(com.sonymobile.flix.components.Component)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/Day/getScene()
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
com/sonymobile/lifelog/journeyview/Day/layoutActivityBars(java.util.List)#com/sonymobile/lifelog/journeyview/ActivityBar/moveY(float)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#com/sonymobile/lifelog/journeyview/Day/getScene()
com/sonymobile/lifelog/journeyview/Day/createTimeline()#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/journeyview/Day/createTimeline()#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Paint/Paint()
com/sonymobile/lifelog/journeyview/Day/createTimeline()#com/sonymobile/lifelog/journeyview/Day/addChild(com.sonymobile.flix.components.Component)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#com/sonymobile/flix/components/Image/getPaint()
com/sonymobile/lifelog/journeyview/Day/createTimeline()#com/sonymobile/lifelog/journeyview/Timeline/addChild(com.sonymobile.flix.components.Component)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/DashPathEffect/DashPathEffect(float[],float)
com/sonymobile/lifelog/journeyview/Day/createTimeline()#android/graphics/Bitmap/getHeight()
com/sonymobile/lifelog/journeyview/Day/createTimeline()#com/sonymobile/flix/components/Scene/getHeight()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/util/Calendar/setTime(java.util.Date)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#android/widget/Toast/show()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/Thread/Thread(java.lang.Runnable)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/text/ParseException/getStackTrace()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/util/Calendar/getTimeInMillis()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/text/SimpleDateFormat/getDateInstance(int,java.util.Locale)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/util/Locale/getDefault()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/Thread/start()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/text/ParseException/getMessage()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/text/DateFormat/parse(java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#android/widget/Toast/makeText(android.content.Context,int,int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper$6/onClick(android.view.View)#android/support/v7/app/AlertDialog/dismiss()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/List/size()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityData(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/List/size()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreLocations(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.lang.String)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/net/URL/openConnection()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/io/IOException/getMessage()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#javax/net/ssl/HttpsURLConnection/setReadTimeout(int)
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#javax/net/ssl/HttpsURLConnection/disconnect()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#javax/net/ssl/HttpsURLConnection/getResponseMessage()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/net/URL/URL(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#javax/net/ssl/HttpsURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/executeGetFromExternalUrl(java.lang.String,com.sonymobile.lifelog.model.ServerError,com.sonymobile.lifelog.activityengine.authentication.Authentication)#javax/net/ssl/HttpsURLConnection/getResponseCode()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/disconnect()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/write(byte[])
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/close()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/flush()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/getOutputStream()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setDoInput(boolean)
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/service/DataRetriever/executePost(android.content.Context,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setDoOutput(boolean)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/setLength(int)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Map/size()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Map/entrySet()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Map$Entry/getKey()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Iterator/next()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#android/net/Uri/encode(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/util/Set/iterator()
com/sonymobile/lifelog/service/DataRetriever/buildUrl(com.sonymobile.lifelog.activityengine.authentication.Authentication,java.lang.String,java.util.Map)#java/lang/StringBuilder/length()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/List/size()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/service/DataRetriever/getAndStoreActivityDataSync(java.lang.String,java.lang.String)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#org/json/JSONObject/JSONObject(java.util.Map)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/lang/String/valueOf(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/activityengine/sleep/SleepState/toServerValue()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/util/HashMap/HashMap()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#org/json/JSONObject/putOpt(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/util/UUID/randomUUID()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#org/json/JSONArray/JSONArray()
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#org/json/JSONArray/put(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/postManualActivity(com.sonymobile.lifelog.model.ActivityType,long,long,com.sonymobile.lifelog.model.ServerError)#java/lang/String/contentEquals(java.lang.CharSequence)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/StringBuffer/toString()
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/service/DataRetriever/handleConnectionError(android.content.Context,com.sonymobile.lifelog.model.ServerError,java.io.InputStream)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/disconnect()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/write(byte[])
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/close()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/flush()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/getOutputStream()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setDoInput(boolean)
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/service/DataRetriever/executePut(java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/HttpURLConnection/setDoOutput(boolean)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/URL/openConnection()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/setRequestMethod(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/setDoInput(boolean)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/write(byte[])
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/close()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/setDoOutput(boolean)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/flush()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/getResponseMessage()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/net/URL/URL(java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/getOutputStream()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/disconnect()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/service/DataRetriever/executePostToExternalUrl(java.lang.String,java.lang.String,java.lang.String,com.sonymobile.lifelog.activityengine.authentication.Authentication,com.sonymobile.lifelog.model.ServerError)#javax/net/ssl/HttpsURLConnection/getResponseCode()
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/widget/TextView/setMovementMethod(android.text.method.MovementMethod)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/text/SpannableStringBuilder/SpannableStringBuilder(java.lang.CharSequence)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#com/google/android/gms/common/SignInButton/setVisibility(int)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/text/SpannableStringBuilder/setSpan(java.lang.Object,int,int,int)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#com/sonymobile/lifelog/login/LoginActivity/findViewById(int)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#com/sonymobile/lifelog/login/LoginActivity/getString(int)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#com/sonymobile/lifelog/login/LoginActivity/getString(int,java.lang.Object[])
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#java/lang/String/indexOf(java.lang.String)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/widget/TextView/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/text/style/StyleSpan/StyleSpan(int)
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#java/lang/String/length()
com/sonymobile/lifelog/login/LoginActivity/setUpViews()#android/text/method/LinkMovementMethod/getInstance()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/widget/TextView/setMovementMethod(android.text.method.MovementMethod)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#com/sonymobile/lifelog/login/LoginActivity/getResources()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/widget/TextView/setText(java.lang.CharSequence,android.widget.TextView$BufferType)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/widget/TextView/getText()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#com/sonymobile/lifelog/login/LoginActivity/findViewById(int)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/text/Spannable/setSpan(java.lang.Object,int,int,int)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/text/util/Linkify/addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/content/res/Resources/getString(int,java.lang.Object[])
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/util/regex/Pattern/compile(java.lang.String)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/lang/String/length()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#android/text/method/LinkMovementMethod/getInstance()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/login/LoginActivity/setUpLegalView()#java/lang/String/indexOf(java.lang.String)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/os/PersistableBundle/PersistableBundle()
com/google/android/gms/internal/measurement/zzbz/zzej()#android/os/PersistableBundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobInfo$Builder/setExtras(android.os.PersistableBundle)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobScheduler/schedule(android.app.job.JobInfo)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/content/Context/getSystemService(java.lang.String)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobInfo$Builder/build()
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobInfo$Builder/setMinimumLatency(long)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobInfo$Builder/JobInfo$Builder(int,android.content.ComponentName)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/AlarmManager/setInexactRepeating(int,long,long,android.app.PendingIntent)
com/google/android/gms/internal/measurement/zzbz/zzej()#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
com/google/android/gms/internal/measurement/zzbz/zzej()#android/app/job/JobInfo$Builder/setOverrideDeadline(long)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getChildAt(int)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getChildCount()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/hasDividerBeforeChildAt(int)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getGravity()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingTop()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getDividerDrawable()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getMeasuredHeight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingLeft()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingRight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getChildAt(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getChildCount()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getVisibility()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getId()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingTop()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingLeft()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/setMeasuredDimension(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingBottom()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingRight()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredHeight()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarEntry/getIcon()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/Resources/obtainAttributes(android.util.AttributeSet,int[])
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getResourceId(int,int)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/recycle()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getSelectedItemPosition()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/measure(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/min(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getMeasuredHeight()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getItemViewType(int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getCount()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getLayoutParams()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getMeasuredHeight()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getAdapter()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/widget/Spinner/onMeasure(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/setMeasuredDimension(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getBackground()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/ArrayList/ArrayList()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/getTranslationZ()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/playSequentially(android.animation.Animator[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/List/toArray(java.lang.Object[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isFocused()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/setDuration(long)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/List/add(java.lang.Object)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet$Builder/with(android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setTranslationZ(float)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isPressed()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/StateListAnimator/addState(int[],android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/FloatingActionButtonLollipop/updatePadding()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/ofFloat(java.lang.Object,android.util.Property,float[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/StateListAnimator/StateListAnimator()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setStateListAnimator(android.animation.StateListAnimator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/ofFloat(java.lang.Object,java.lang.String,float[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isEnabled()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/play(android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/AnimatorSet()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setElevation(float)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#java/lang/Object/toString()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/text/Html/fromHtml(java.lang.String)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/findViewById(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/setContentView(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getResources()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/model/Authenticator/equals(java.lang.Object)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/text/Html/fromHtml(java.lang.String,int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/setTitle(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getIntent()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/widget/TextView/setTextSize(float)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getString(int)
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/AboutDetailActivity/getApplicationContext()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/AboutDetailActivity/onCreate(android.os.Bundle)#android/widget/TextView/setSingleLine(boolean)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/ValueAnimator/setStartDelay(long)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/AnimatorSet/setStartDelay(long)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/ValueAnimator/ofFloat(float[])
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/AnimatorSet/setDuration(long)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/AnimatorSet/AnimatorSet()
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/ObjectAnimator/ofFloat(java.lang.Object,android.util.Property,float[])
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/content/res/Resources/getInteger(int)
com/sonymobile/lifelog/ui/hint/helpers/IntroHandHelper/release()#android/animation/AnimatorSet/playTogether(android.animation.Animator[])
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/util/List/iterator()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/ContentResolver/delete(android.net.Uri,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/updateSourceInfo(android.content.Context,com.sonymobile.lifelog.activityengine.engine.SourceInfo,long)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/database/Cursor/getLong(int)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/content/ContentResolver/delete(android.net.Uri,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/connecteddevices/ConnectedDevicesUtil/loadSyncedSourceInfo(android.content.Context)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphProgressView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/setMainColor(int)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/setMaxProgress(int)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/widget/RoundedProgressView/setProgress(int)
com/sonymobile/lifelog/ui/graph/component/GraphProgressView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/TypedArray/getDrawable(int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/View/findViewById(int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/LayoutInflater/cloneInContext(android.content.Context)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Handler/post(java.lang.Runnable)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/ContextThemeWrapper/ContextThemeWrapper(android.content.Context,int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/util/TypedValue/TypedValue()
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/LayoutInflater/getContext()
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/support/v7/preference/PreferenceFragmentCompat/getActivity()
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/TypedArray/recycle()
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/ViewGroup/addView(android.view.View)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/support/v4/app/FragmentActivity/getTheme()
android/support/v7/preference/PreferenceFragmentCompat/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/Class/getGenericInterfaces()
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/Class/getGenericSuperclass()
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/Class/getTypeParameters()
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/Object/equals(java.lang.Object)
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/lang/reflect/TypeVariable/getName()
com/google/gson/reflect/TypeToken/isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
android/support/transition/TransitionValues/toString()#java/util/Iterator/hasNext()
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionValues/toString()#java/util/Map/get(java.lang.Object)
android/support/transition/TransitionValues/toString()#java/lang/Integer/toHexString(int)
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionValues/toString()#java/util/Set/iterator()
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/append(java.lang.Object)
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/toString()
android/support/transition/TransitionValues/toString()#java/util/Iterator/next()
android/support/transition/TransitionValues/toString()#java/util/Map/keySet()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType$Category/ordinal()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageButton/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageButton/setImageResource(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/findViewById(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getCategory()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ImageButton/getHeight()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/getContext()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView/showOptionsMenu(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/text/DateFormat/getTimeInstance(int,java.util.Locale)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/text/DateFormat/getDateInstance(int,java.util.Locale)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/lang/StringBuilder/append(java.lang.String)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/text/SimpleDateFormat/toPattern()
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/lang/StringBuilder/StringBuilder()
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/text/DateFormat/getDateTimeInstance(int,int,java.util.Locale)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/lang/StringBuilder/append(java.lang.Object)
org/joda/time/format/DateTimeFormat$StyleFormatter/getPattern(java.util.Locale)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/Class/getName()
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/Class/getClassLoader()
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
com/google/android/gms/internal/measurement/zzzs/zzf(java.lang.Class)#java/lang/String/String(java.lang.String)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/view/View/getRight()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildAt(int)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setFloatValues(float[])
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/cancel()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/start()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#java/lang/Math/abs(int)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/isRunning()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/view/View/getLeft()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getMeasuredWidth()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildAt(int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildCount()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getVisibility()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/exists()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/File(java.lang.String)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/mkdirs()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#android/graphics/Bitmap/setHasAlpha(boolean)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/FileOutputStream/close()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/File(java.io.File,java.lang.String)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/FileOutputStream/flush()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/getAbsolutePath()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/File/delete()
com/sonymobile/lifelog/utils/SharingUtils/storeBitmapAsPng(android.content.Context,android.graphics.Bitmap,com.sonymobile.lifelog.utils.SharingUtils$Format)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/widget/ImageView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/widget/ImageButton/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/view/View/animate()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getContext()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/toggleAddEditUI(float)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getContext()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getResources()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/weight/WeightHeaderView/getWeightWithUnit(float)#android/content/Context/getResources()
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/text/DateFormatSymbols/getZoneStrings()
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/util/Map/get(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/lang/Boolean/valueOf(boolean)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/lang/String/substring(int)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/lang/String/startsWith(java.lang.String)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)#java/util/HashMap/get(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/util/HashMap/get(java.lang.Object)
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/text/DateFormatSymbols/getZoneStrings()
org/joda/time/tz/DefaultNameProvider/getNameSet(java.util.Locale,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/close()
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface$Builder/Typeface$Builder(java.io.FileDescriptor)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/support/v4/graphics/TypefaceCompatApi26Impl/findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/util/Map/get(java.lang.Object)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface$Builder/setItalic(boolean)
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface$Builder/build()
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/lang/NullPointerException/NullPointerException()
android/support/v4/graphics/TypefaceCompatApi26Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface$Builder/setWeight(int)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/isInEditMode()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/view/ViewParent/getParent()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/getResources()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/append(java.lang.Object)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/content/res/Resources/getResourceName(int)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/view/View/getParent()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/findViewById(int)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#org/json/JSONObject/JSONObject(java.util.Map)
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#java/util/UUID/randomUUID()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#java/util/HashMap/HashMap()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#org/json/JSONObject/toString()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/getName()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#org/json/JSONObject/putOpt(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/logger/connecteddevices/bookmark/Bookmark/toJSONString()#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v7/widget/ActionBarContextView/initTitle()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getChildCount()
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/findViewById(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setVisibility(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/setVisibility(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/getParent()
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getChildAt(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingRight()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Class/getSimpleName()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getChildAt(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/setVisibility(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getParent()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getChildCount()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/measure(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/measureChildView(android.view.View,int,int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/getMeasuredWidth()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingTop()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Object/getClass()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/setMeasuredDimension(int,int)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setClassName(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/content/Context/getPackageName()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#java/lang/Class/getName()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/support/v7/widget/AbsActionBarView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#java/lang/Object/getClass()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/getEventType()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setSource(android.view.View)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setPackageName(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/findViewById(int)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/getParent()
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/next(int,int,boolean)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/widget/LinearLayout/getVisibility()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/positionChild(android.view.View,int,int,int,boolean)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingRight()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingTop()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getDescendantFocusability()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/view/View/addFocusables(java.util.ArrayList,int,int)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/clear()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/size()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/get(int)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/setVisibility(int)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/max(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/min(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setColor(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getHeight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setAlpha(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getBottom()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getHeight()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/setVisibility(int)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetBottom()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetRight()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/isInEditMode()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildMeasureSpec(int,int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/dispatchApplyWindowInsets(android.view.WindowInsets)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/setMeasuredDimension(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/replaceSystemWindowInsets(int,int,int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetLeft()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetTop()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/measure(int,int)
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/CursorJoiner/CursorJoiner(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/CursorJoiner$Result/ordinal()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#com/sonymobile/lifelog/activityengine/sleep/SleepState/toServerValue()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/Cursor/close()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/MatrixCursor/MatrixCursor(java.lang.String[])
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/CursorJoiner/hasNext()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#android/database/CursorJoiner/next()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#com/sonymobile/lifelog/activityengine/engine/model/ActivityType/ordinal()
com/sonymobile/lifelog/logger/connecteddevices/swr12/Swr12DataCursorFetcher/fetch()#java/lang/Math/abs(long)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getValueFormatter()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/renderer/XAxisRendererRadarChart/drawLabel(android.graphics.Canvas,java.lang.String,float,float,com.github.mikephil.charting.utils.MPPointF,float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/text/Layout/getLineCount()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/widget/TextView/onMeasure(int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/getContext()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setTextSize(int,float)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setMaxLines(int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/getLayout()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setSingleLine(boolean)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/res/TypedArray/recycle()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/text/Layout/getEllipsisCount(int)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/lang/Object/equals(java.lang.Object)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/text/SimpleDateFormat/getTimeZone()
com/sonymobile/lifelog/utils/TimeUtils$2/get()#com/sonymobile/lifelog/utils/TimeUtils$2/set(java.lang.Object)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/lang/ThreadLocal/get()
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/text/SimpleDateFormat/setTimeZone(java.util.TimeZone)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/util/Locale/getDefault()
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/util/Locale/equals(java.lang.Object)
com/sonymobile/lifelog/utils/TimeUtils$2/get()#java/util/TimeZone/getDefault()
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#com/sonymobile/lifelog/ui/ContentDialog/startActivityForResult(android.content.Intent,int)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#java/lang/Long/longValue()
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#android/widget/ImageButton/setEnabled(boolean)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#com/sonymobile/lifelog/ui/ContentDialog/getActivity()
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#java/util/List/get(int)
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/ui/ContentDialog$2/onClick(android.view.View)#android/widget/ProgressBar/setVisibility(int)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/io/IOException/getMessage()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/List/size()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/WeightHandler/getWeightData(android.content.Context,int,long,long)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/io/IOException/getMessage()
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/util/List/size()
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/provider/WeightHandler/getLastWeightData(android.content.Context)#java/util/List/get(int)
okio/InflaterSource/read(okio.Buffer,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okio/InflaterSource/read(okio.Buffer,long)#java/util/zip/Inflater/finished()
okio/InflaterSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(java.lang.String)
okio/InflaterSource/read(okio.Buffer,long)#java/lang/StringBuilder/StringBuilder()
okio/InflaterSource/read(okio.Buffer,long)#java/util/zip/Inflater/needsDictionary()
okio/InflaterSource/read(okio.Buffer,long)#java/util/zip/Inflater/inflate(byte[],int,int)
okio/InflaterSource/read(okio.Buffer,long)#java/io/IOException/IOException(java.lang.Throwable)
okio/InflaterSource/read(okio.Buffer,long)#java/lang/StringBuilder/toString()
okio/InflaterSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(long)
okio/InflaterSource/read(okio.Buffer,long)#java/io/EOFException/EOFException(java.lang.String)
okio/InflaterSource/read(okio.Buffer,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/getContext()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/activityengine/provider/UsageLogProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/util/concurrent/atomic/AtomicInteger/getAndIncrement()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/toString()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/String/length()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/util/concurrent/ThreadFactory/newThread(java.lang.Runnable)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/setName(java.lang.String)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/List/size()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/Class/toString()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/List/iterator()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/Boolean/booleanValue()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Set/size()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/List/add(java.lang.Object)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/lang/Object/getClass()
com/google/android/gms/tagmanager/zzgj/zzj(java.lang.Object)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/util/HashMap/HashMap(int)
com/google/android/gms/tagmanager/zzgj/zzh(com.google.android.gms.internal.measurement.zzm)#java/lang/String/concat(java.lang.String)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/ReentrantLock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicReference/AtomicReference()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/newCondition()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicBoolean/get()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/unlock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicReference/get()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/lang/InterruptedException/InterruptedException(java.lang.String)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/Condition/awaitNanos(long)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/lock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/TimeUnit/toNanos(long)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/support/v4/app/FragmentActivity/getApplicationContext()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#java/lang/String/hashCode()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/widget/Toast/show()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/setMessage(int)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#com/sonymobile/lifelog/ui/EditProfileFragment/getActivity()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/setTitle(int)
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#com/sonymobile/lifelog/ui/EditProfileFragment/getContext()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/app/AlertDialog$Builder/show()
com/sonymobile/lifelog/ui/EditProfileFragment/onPreferenceClick(android.support.v7.preference.Preference)#android/widget/Toast/makeText(android.content.Context,int,int)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#android/support/v4/app/FragmentActivity/getApplicationContext()
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/ui/EditProfileFragment/getActivity()
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/model/Authenticator/equals(java.lang.Object)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/ui/EditProfileFragment/getString(int)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/ui/EditProfileFragment/addPreferencesFromResource(int)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/ui/EditProfileFragment/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#android/support/v7/preference/ListPreference/setOnPreferenceChangeListener(android.support.v7.preference.Preference$OnPreferenceChangeListener)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#android/os/Handler/Handler()
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#android/preference/PreferenceManager/setDefaultValues(android.content.Context,int,boolean)
com/sonymobile/lifelog/ui/EditProfileFragment/onCreatePreferences(android.os.Bundle,java.lang.String)#com/sonymobile/lifelog/ui/EditProfileFragment/findPreference(java.lang.CharSequence)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#android/os/IBinder/queryLocalInterface(java.lang.String)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Iterator/hasNext()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/lang/String/length()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Iterator/next()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Set/iterator()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Map$Entry/getValue()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Map$Entry/getKey()
com/google/android/gms/wearable/internal/zzer/zza(android.os.IBinder)#java/util/Map/entrySet()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/util/List/iterator()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/lang/StringBuilder/append(double)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/findLocationType(android.content.Context,java.util.List,java.util.List,long,long)#android/content/Context/getResources()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/size()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/get(int)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/contains(java.lang.Object)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/List/iterator()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#com/sonymobile/lifelog/model/ActivityType/getActivityType(com.sonymobile.lifelog.logger.model.ActivityData)
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/ActivitySegmentHelper/getAppAndContentData(android.content.Context,long,long)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/copyBounds(android.graphics.Rect)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#com/google/gson/internal/bind/JsonTreeWriter/isLenient()
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/Double/isNaN(double)
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/Double/isInfinite(double)
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/StringBuilder/toString()
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/Number/doubleValue()
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/bind/JsonTreeWriter/value(java.lang.Number)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/squareup/picasso/LruCache/trimToSize(int)#java/util/LinkedHashMap/entrySet()
com/squareup/picasso/LruCache/trimToSize(int)#java/util/Iterator/next()
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/Class/getName()
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/LruCache/trimToSize(int)#java/util/Set/iterator()
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/StringBuilder/toString()
com/squareup/picasso/LruCache/trimToSize(int)#java/util/LinkedHashMap/isEmpty()
com/squareup/picasso/LruCache/trimToSize(int)#java/util/LinkedHashMap/remove(java.lang.Object)
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/LruCache/trimToSize(int)#java/util/Map$Entry/getKey()
com/squareup/picasso/LruCache/trimToSize(int)#java/lang/Object/getClass()
com/squareup/picasso/LruCache/trimToSize(int)#java/util/Map$Entry/getValue()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Set/contains(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/ui/graph/component/GraphActivityView/setData(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getActivityType(com.sonymobile.lifelog.logger.model.ActivityData)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getRight()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/util/List/size()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/util/List/get(int)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getBottom()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/lang/Math/abs(int)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getLeft()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Collections/emptyMap()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/String/split(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/useDelimiter(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/Scanner(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/net/URI/getRawQuery()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/hasNext()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/next()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/List/isEmpty()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/lang/Float/valueOf(float)
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/List/size()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/Iterator/next()
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/Collections/sort(java.util.List)
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/List/get(int)
com/sonymobile/locationfilter/FilterResult$Builder/getTopLocationsSpeeds(java.util.List)#java/util/List/iterator()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/graphics/Rect/Rect()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#java/lang/System/currentTimeMillis()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Integer/intValue()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/ArrayList()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/size()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/add(int,java.lang.Object)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getBottom()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Math/abs(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getRight()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Math/round(float)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/clear()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Integer/valueOf(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/get(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getLeft()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#java/lang/Math/signum(float)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getParent()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/performHapticFeedback(int)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#java/util/List/add(java.lang.Object)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getLeft()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getName()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/ProviderInfo/loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/next()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getCacheDir()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getFilesDir()
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/sonymobile/lifelog/model/ActivityType/getIconResourceId(boolean)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ListView/setItemChecked(int,boolean)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/sonymobile/lifelog/model/ActivityType/getTitleResId()
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageResource(int)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/ActivityEditActivity$EditActivityAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/RadioButton/setChecked(boolean)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/Cursor/setNotificationUri(android.content.ContentResolver,android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getReadableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/OfflineProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/List/isEmpty()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/size()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/isWriteOperation()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/getUri()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/List/contains(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#java/util/List/iterator()
com/sonymobile/lifelog/logger/provider/OfflineProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/beginTransactionNonExclusive()
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#com/sonymobile/lifelog/logger/provider/OfflineDatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#com/sonymobile/lifelog/logger/provider/OfflineProvider/getContext()
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/OfflineProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/Context/getContentResolver()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/equals(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/concurrent/locks/ReentrantLock/ReentrantLock()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/String/length()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/isEmpty()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/values()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Iterator/next()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/keySet()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/iterator()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/isCancelled()
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#java/lang/Thread/interrupted()
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/graphics/BitmapFactory/decodeResource(android.content.res.Resources,int)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/net/Uri/getLastPathSegment()
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/graphics/Bitmap/createScaledBitmap(android.graphics.Bitmap,int,int,boolean)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#java/lang/String/startsWith(java.lang.String)
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#android/content/Context/getResources()
com/sonymobile/lifelog/utils/MusicInfoRetriever$BitmapWorkerTask/doInBackground(java.lang.String[])#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getY()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getX()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForXValue(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getY()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/alpha(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/RGBToHSV(int,int,int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/BubbleChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/HSVToColor(int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getX()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/round(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleEntry/getIcon()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleData/getDataSets()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/argb(int,int,int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/Iterator/hasNext()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/size()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/Iterator/next()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#com/github/mikephil/charting/highlight/CombinedHighlighter/buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/clear()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/get(int)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/iterator()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#com/github/mikephil/charting/data/BarLineScatterCandleBubbleData/getDataSetByIndex(int)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/abs(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieEntry/getIcon()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/CharSequence/length()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/addOval(android.graphics.RectF,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/StaticLayout(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Object/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/width()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/max(double,double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/height()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/toRadians(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/Integer/intValue()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/Object/toString()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Set/iterator()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/StringBuilder/append(char)
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/StringBuilder/length()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/List/iterator()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Map/entrySet()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/Boolean/booleanValue()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/StringBuilder/toString()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/TreeMap/TreeMap(java.util.Map)
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/util/Iterator/next()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/Long/longValue()
com/google/android/gms/analytics/zzi/zza(java.lang.Object,int)#java/lang/Double/doubleValue()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/RadioGroup/getChildCount()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/RadioGroup/check(int)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/getArguments()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/RadioButton/getId()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/RadioGroup/getChildAt(int)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/RadioButton/getTag()
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountGenderFragment/setUpViews()#android/widget/Button/setText(java.lang.CharSequence)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/os/SystemClock/elapsedRealtime()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/app/AlarmManager/setExact(int,long,android.app.PendingIntent)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,long)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/WakefulStepsCounterReceiver/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/os/Messenger/Messenger(android.os.Handler)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getStyle()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getColor()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/hasNext()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/next()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/StringBuilder()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Set/iterator()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getValue()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/toString()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getKey()
retrofit2/ParameterHandler$PartMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map/entrySet()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/ContentResolver/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingInterval(android.content.Context,org.joda.time.LocalTime,org.joda.time.LocalTime)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Boolean/toString()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/getSleepLoggingInterval(android.content.Context)#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#java/lang/Boolean/valueOf(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isForcedSleepLoggingEnabled(android.content.Context)#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#java/lang/Boolean/valueOf(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/isSleepLoggingEnabled(android.content.Context)#java/lang/Boolean/booleanValue()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Boolean/toString()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#java/lang/Boolean/valueOf(boolean)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/close()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/SleepLoggingHelper/setForcedSleepLoggingEnabled(android.content.Context,boolean)#android/database/Cursor/getString(int)
com/google/android/gms/common/api/internal/zaak/zac(int)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaak/zac(int)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/Exception/Exception()
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/clear()
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/Integer/valueOf(int)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Set/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/Boolean/booleanValue()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/System/identityHashCode(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/size()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/HashMap/HashMap()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/isEmpty()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/size()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/HashSet/HashSet(java.util.Collection)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Set/addAll(java.util.Collection)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Collections/emptySet()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/keySet()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getFormattedLabel(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/net/URL/openConnection()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#javax/net/ssl/HttpsURLConnection/connect()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#javax/net/ssl/HttpsURLConnection/setDoInput(boolean)
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/net/URL/URL(java.lang.String)
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/io/IOException/getMessage()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#javax/net/ssl/HttpsURLConnection/getInputStream()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#android/graphics/BitmapFactory/decodeStream(java.io.InputStream)
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#javax/net/ssl/HttpsURLConnection/disconnect()
com/sonymobile/lifelog/utils/SpotifyUtils/bitmapFromUrl(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Iterator/hasNext()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Map/putAll(java.util.Map)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/lang/String/length()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/lang/String/String(java.lang.String)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/List/iterator()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Map/entrySet()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/HashMap/HashMap(java.util.Map)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Iterator/next()
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/lang/String/concat(java.lang.String)
com/google/android/gms/analytics/HitBuilders$HitBuilder/build()#java/util/Set/iterator()
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/lang/Object/toString()
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/lang/String/concat(java.lang.String)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/lang/StringBuilder/toString()
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
org/joda/time/tz/ZoneInfoProvider/openResource(java.lang.String)#java/security/AccessController/doPrivileged(java.security.PrivilegedAction)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/regex/Matcher/matches()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/Integer/intValue()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/regex/Matcher/group(int)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/Map/keySet()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/Double/doubleValue()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzh(java.util.Map)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/Integer/intValue()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/ArrayList/ArrayList()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/HashMap/HashMap()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/Double/doubleValue()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/RuntimeException/getMessage()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/ArrayList/size()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/List/add(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/List/iterator()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/zzgk/zzf(java.util.Map)#java/util/ArrayList/get(int)
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/zzgk/zzi(com.google.android.gms.internal.measurement.zzm)#java/util/LinkedHashMap/LinkedHashMap()
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/Double/valueOf(double)
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/Double/valueOf(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/Integer/doubleValue()
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/NumberFormatException/getMessage()
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzn(java.lang.Object)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/Double/intValue()
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/String/length()
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/Integer/valueOf(int)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/Integer/valueOf(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/NumberFormatException/getMessage()
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/tagmanager/zzgk/zzo(java.lang.Object)#java/lang/String/String(java.lang.String)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/view/View/getId()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/view/View/getContext()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/ContextWrapper/getBaseContext()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/Context/isRestricted()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/res/Resources/getResourceEntryName(int)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/Object/getClass()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#android/support/v7/widget/RecyclerView/setLayoutAnimationListener(android.view.animation.Animation$AnimationListener)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#android/support/v7/widget/RecyclerView/setVisibility(int)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#android/support/v7/widget/RecyclerView/addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#com/sonymobile/lifelog/ui/bookmarks/BookmarkAdapter/swapContent(com.sonymobile.lifelog.ui.recyclerview.content.AdapterContent)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#android/widget/ProgressBar/setVisibility(int)
com/sonymobile/lifelog/ui/BookmarkListActivity$DataTask/onPostExecute(java.util.List)#com/sonymobile/lifelog/ui/BookmarkListActivity/isFinishing()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/Object/hashCode()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#android/view/View/getParent()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/Integer/toHexString(int)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(long)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/content/Context/getString(int)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/support/v7/widget/ActivityChooserView/getContext()
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/widget/ListView/setSelector(android.graphics.drawable.Drawable)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/widget/ListView/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#java/lang/Math/min(int,int)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/graphics/drawable/ColorDrawable/ColorDrawable(int)
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/widget/FrameLayout/getVisibility()
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/support/v7/widget/ActivityChooserView/getViewTreeObserver()
android/support/v7/widget/ActivityChooserView/showPopupUnchecked(int)#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/SimpleHintActivity/setContentView(int)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#android/content/Intent/getIntExtra(java.lang.String,int)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/SimpleHintActivity/findViewById(int)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/SimpleHintActivity/getIntent()
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/SimpleHintActivity/setTheme(int)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/hint/SimpleHintActivity/finish()
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/ui/hint/SimpleHintActivity/onCreate(android.os.Bundle)#android/content/Intent/hasExtra(java.lang.String)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getRepeatCount()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/isCtrlPressed()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/isModifierKey(int)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/support/v7/app/AppCompatActivity/getWindow()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/View/dispatchKeyShortcutEvent(android.view.KeyEvent)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/metaStateHasNoModifiers(int)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getMetaState()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getChildAt(int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getChildCount()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/onMeasure(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getPaddingLeft()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getPaddingRight()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getMeasuredWidth()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/ScaleGestureDetector/onTouchEvent(android.view.MotionEvent)
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/View/getParent()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/sonymobile/lifelog/ui/graph/component/GraphDataView$GraphViewOnTouchListener/onTouch(android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/net/HttpRetryException/HttpRetryException(java.lang.String,int)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(int)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/lang/StringBuilder/toString()
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/io/IOException/IOException(java.lang.String)
okhttp3/internal/http/RetryAndFollowUpInterceptor/intercept(okhttp3.Interceptor$Chain)#java/net/ProtocolException/ProtocolException(java.lang.String)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/valueOf(java.lang.String)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/database/Cursor/getCount()
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/database/Cursor/close()
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/util/TrackingModeHelper/getCurrentActivityEngineType()#android/database/Cursor/moveToNext()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/getYOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/charts/BarLineChartBase/getXAxis()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/valuesToHighlight()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawDescription(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(long)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawMarkers(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/renderer/YAxisRenderer/computeAxis(float,float,boolean)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#android/graphics/Matrix/reset()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView/getWidth()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#android/graphics/Bitmap/getWidth()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView$CloudData/getAlphaMin()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#java/util/Random/nextFloat()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView$CloudData/getVelocityMin()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView$CloudData/getAlphaMax()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView$CloudData/getVelocityMax()
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#android/graphics/Paint/set(android.graphics.Paint)
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#java/util/Random/nextInt(int)
com/sonymobile/lifelog/login/LoginBackgroundView/randomizeCloud(com.sonymobile.lifelog.login.LoginBackgroundView$Cloud,com.sonymobile.lifelog.login.LoginBackgroundView$CloudData,boolean)#com/sonymobile/lifelog/login/LoginBackgroundView$CloudData/ordinal()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/List/iterator()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/lang/Math/min(long,long)
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/journeyview/data/DataProvider/getDashboardData(long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/addView(android.view.View)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/CheckBox/setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setOrientation(int)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/CheckBox/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ScrollView/addView(android.view.View)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/getActivity()
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/CheckBox/CheckBox(android.content.Context)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ScrollView/ScrollView(android.content.Context)
com/sonymobile/lifelog/debug/settings/DebugSettingsFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/LinearLayout(android.content.Context)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/View/animate()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationY(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/View/setTranslationX(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$2/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationX(float)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/journeyview/background/HillsLayer/getWidth()
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float,float,float)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/journeyview/background/HillsLayer/getPointX(float)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/journeyview/background/HillsLayer/getWorldX()
com/sonymobile/lifelog/journeyview/background/HillsLayer/onDraw(android.graphics.Canvas)#java/lang/Math/abs(int)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Class/getDeclaredMethods()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Enum/ordinal()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/TreeSet/TreeSet()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Set/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/toLowerCase()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#com/google/android/gms/internal/measurement/zzaan/zzui()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Method/getModifiers()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/HashMap/HashMap()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Double/doubleValue()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Method/getReturnType()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Method/getName()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Modifier/isPublic(int)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/substring(int)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Float/floatValue()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/reflect/Method/getParameterTypes()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/measurement/zzaap/zza(com.google.android.gms.internal.measurement.zzaan,java.lang.StringBuilder,int)#java/lang/NoSuchMethodError/NoSuchMethodError()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/Object/toString()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzaap/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/List/iterator()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/hasNext()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/next()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/StringBuilder()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Set/iterator()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/toString()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getKey()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getValue()
retrofit2/ParameterHandler$FieldMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#java/util/Iterator/hasNext()
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#android/os/Bundle/getBundle(java.lang.String)
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#java/util/Iterator/next()
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#android/os/Bundle/size()
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#android/os/Bundle/keySet()
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/google/android/gms/location/ActivityRecognitionResult/zza(android.os.Bundle,android.os.Bundle)#java/util/Set/iterator()
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/concurrent/atomic/AtomicInteger/getAndAdd(int)
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/lang/ref/WeakReference/get()
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/lang/Runtime/getRuntime()
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/List/size()
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/List/get(int)
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/List/set(int,java.lang.Object)
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/concurrent/atomic/AtomicInteger/set(int)
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/lang/Runtime/gc()
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/util/List/add(java.lang.Object)
com/sonymobile/flix/util/MemoryLeakDetector/add(java.lang.Object)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/min(float,float)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#com/sonymobile/lifelog/ui/graph/component/GraphValueView/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/String/valueOf(float)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addWeightItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#android/content/Context/getResources()
com/sonymobile/lifelog/ui/graph/component/GraphValueView/addHeartRateItems(com.sonymobile.lifelog.ui.graph.component.GraphViewData)#java/lang/String/valueOf(int)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/Class/asSubclass(java.lang.Class)
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#android/content/Context/getClassLoader()
android/support/v7/app/AppCompatViewInflater/createView(android.content.Context,java.lang.String,java.lang.String)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/remove(int)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Xml/newSerializer()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/setOutput(java.io.OutputStream,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(float)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startDocument(java.lang.String,java.lang.Boolean)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/size()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/Context/openFileOutput(java.lang.String,int)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/ComponentName/flattenToString()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endDocument()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(long)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/io/FileOutputStream/close()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Integer/intValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/List/size()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Object/getClass()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/ArrayList/get(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Class/getSimpleName()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/TreeSet/size()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Long/longValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Byte/byteValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Double/doubleValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/ArrayList/size()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/TreeSet/iterator()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Float/floatValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,java.lang.Object)#java/util/TreeSet/TreeSet(java.util.Collection)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/String/length()
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/util/List/get(int)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/internal/wearable/zze/zza(java.util.List,com.google.android.gms.wearable.DataMap,java.lang.String,com.google.android.gms.internal.wearable.zzi)#java/lang/String/String(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/optString(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONArray/getString(int)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/getString(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/util/Set/add(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/optString(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONArray/length()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/getJSONArray(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/put(java.lang.String,long)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/List/size()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/JSONObject()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONArray/JSONArray()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#android/net/Uri/toString()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONArray/put(java.lang.Object)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Long/bitCount(long)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingRight()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/setPadding(int,int,int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildAt(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildCount()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingLeft()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/setMeasuredDimension(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingBottom()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingTop()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildMeasureSpec(int,int,int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getPaddingRight()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getChildCount()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getPaddingLeft()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getDividerWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getChildAt(int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#java/util/Calendar/clone()
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#java/util/Calendar/add(int,int)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#android/widget/Toast/show()
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#java/util/Calendar/getInstance()
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#java/util/Calendar/set(int,int)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#android/content/Intent/putExtra(java.lang.String,long)
com/sonymobile/lifelog/debug/notifications/DebugNotificationUtils/addSleepNotification(android.content.Context)#java/util/Calendar/getTimeInMillis()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/ArrayList/ArrayList()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/lang/Object/toString()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/LinkedList/offer(java.lang.Object)
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/LinkedList/poll()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/concurrent/locks/ReentrantLock/lock()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/concurrent/locks/ReentrantLock/getHoldCount()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/concurrent/ConcurrentHashMap/keySet()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/LinkedList/clear()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/Map/keySet()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/lang/Long/longValue()
com/google/android/gms/tagmanager/DataLayer/zzg(java.util.Map)#java/util/concurrent/locks/ReentrantLock/unlock()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/String/length()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Set/iterator()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Collection/add(java.lang.Object)
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/DataLayer/zza(java.util.Map,java.lang.String,java.util.Collection)#java/util/Iterator/next()
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/DataLayer/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Iterator/next()
com/google/android/gms/tagmanager/DataLayer/toString()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Set/iterator()
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Map/entrySet()
com/google/android/gms/tagmanager/DataLayer/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/DataLayer/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/util/regex/Matcher/group(int)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/String/charAt(int)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/util/regex/Matcher/matches()
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/String/length()
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/google/android/gms/tagmanager/DataLayer/zzcs(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/lang/StringBuilder/append(boolean)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/net/UnknownServiceException/UnknownServiceException(java.lang.String)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/util/List/get(int)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/lang/StringBuilder/toString()
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/util/Arrays/toString(java.lang.Object[])
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#javax/net/ssl/SSLSocket/getEnabledProtocols()
okhttp3/internal/connection/ConnectionSpecSelector/configureSecureSocket(javax.net.ssl.SSLSocket)#java/util/List/size()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/activityengine/analytics/google/CollectionKey/name()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/getActivity()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/LinearLayout/addView(android.view.View)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/text/DateFormat/getDateTimeInstance()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/util/Date/setTime(long)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/activityengine/analytics/google/Experiment/values()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/Button/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/google/android/gms/tagmanager/ContainerHolder/getStatus()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/util/Date/Date()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/Button/Button(android.content.Context)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/activityengine/analytics/google/TagManagerContainer/translate(java.lang.String)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/TextView/TextView(android.content.Context)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/activityengine/analytics/google/TagManagerContainer/name()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#com/sonymobile/lifelog/activityengine/analytics/google/CollectionKey/values()
com/sonymobile/lifelog/debug/analytics/TagManagerInfoFragment/addInfo()#java/text/DateFormat/format(java.util.Date)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/String/hashCode()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#android/net/NetworkInfo/getType()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#android/net/NetworkInfo/isConnected()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#android/net/ConnectivityManager/getActiveNetworkInfo()
com/sonymobile/lifelog/activityengine/engine/PowerManager/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Class/getFields()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/String/hashCode()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Field/getName()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#android/graphics/Rect/Rect()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Object/getClass()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Field/getInt(java.lang.Object)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/analytics/zzk/zzz()#android/content/pm/PackageManager/getApplicationLabel(android.content.pm.ApplicationInfo)
com/google/android/gms/analytics/zzk/zzz()#android/content/pm/PackageManager/getInstallerPackageName(java.lang.String)
com/google/android/gms/analytics/zzk/zzz()#android/content/Context/getPackageName()
com/google/android/gms/analytics/zzk/zzz()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/analytics/zzk/zzz()#java/lang/String/concat(java.lang.String)
com/google/android/gms/analytics/zzk/zzz()#java/lang/String/String(java.lang.String)
com/google/android/gms/analytics/zzk/zzz()#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/google/android/gms/analytics/zzk/zzz()#android/content/Context/getPackageManager()
com/google/android/gms/analytics/zzk/zzz()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/zzk/zzz()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/analytics/zzk/zzz()#java/lang/String/length()
com/google/android/gms/analytics/zzk/zzz()#java/lang/CharSequence/toString()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/View/animate()
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationY(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/View/setTranslationX(float)
com/sonymobile/lifelog/ui/hint/MultiPageFeaturePromotion$3/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/translationX(float)
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/getHeight()
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/getContext()
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/github/mikephil/charting/data/Entry/getY()
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/model/ActivityType/getUnit(int)
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/getResources()
com/sonymobile/lifelog/ui/graph/GraphBarChartMarker/refreshContent(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.highlight.Highlight)#com/sonymobile/lifelog/model/ActivityType/getGoalUnit()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/RuntimeException/getMessage()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/text/TextPaint/setTextSize(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/requestLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/isInLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/getLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/getPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/text/TextPaint/getTextSize()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/forceLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/invalidate()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getLineSpacingExtra()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setAlignment(android.text.Layout$Alignment)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setTextDirection(android.text.TextDirectionHeuristic)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getBreakStrategy()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/build()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setBreakStrategy(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setIncludePad(boolean)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setLineSpacing(float,float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getHyphenationFrequency()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getIncludeFontPadding()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getLineSpacingMultiplier()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#java/lang/CharSequence/length()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setMaxLines(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setHyphenationFrequency(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTotalPaddingRight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTextSize()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getCompoundPaddingTop()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTotalPaddingLeft()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/graphics/RectF/setEmpty()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getCompoundPaddingBottom()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#java/lang/Boolean/booleanValue()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/setTextSize(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#java/lang/CharSequence/length()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/TextPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#java/lang/Math/round(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getLineEnd(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getMaxLines()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/reset()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getText()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/set(android.text.TextPaint)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getLineCount()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getDimension(int,float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getResources()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/recycle()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/Resources/obtainTypedArray(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/Context/getResources()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getInt(int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/hasValue(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/Math/round(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/util/Arrays/copyOf(int[],int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/util/Arrays/toString(int[])
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/toString()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/content/Context/getResources()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#java/lang/String/hashCode()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/widget/EditText/EditText(android.content.Context)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/show()
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/debug/token/DebugTokenAdapter/createAlertDialog(android.content.Context,java.lang.String)#android/app/AlertDialog$Builder/setView(android.view.View)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/Math/min(long,long)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/StringBuilder/append(long)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#okhttp3/internal/http1/Http1Codec$FixedLengthSource/endOfInput(boolean)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/lang/StringBuilder/toString()
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#okio/BufferedSource/read(okio.Buffer,long)
okhttp3/internal/http1/Http1Codec$FixedLengthSource/read(okio.Buffer,long)#java/net/ProtocolException/ProtocolException(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/Class/getSimpleName()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/Throwable/getStackTrace()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/Throwable/getMessage()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/Throwable/getCause()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/Object/getClass()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/EventFactory/getExceptionString(java.lang.Throwable)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getDownTime()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTapEvent(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageAtTime(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/removeMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/hasMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onSingleTapUp(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTap(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onSingleTapConfirmed(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageDelayed(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onDown(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#com/sonymobile/lifelog/ui/graph/GraphView/getResources()
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setStrokeJoin(android.graphics.Paint$Join)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setAlpha(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setFakeBoldText(boolean)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setDither(boolean)
com/sonymobile/lifelog/ui/graph/GraphView/init()#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setTextSize(float)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setStrokeCap(android.graphics.Paint$Cap)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setAntiAlias(boolean)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/sonymobile/lifelog/ui/graph/GraphView/init()#com/sonymobile/lifelog/ui/graph/GraphView/getContext()
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/set(android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/Paint/setStrokeWidth(float)
com/sonymobile/lifelog/ui/graph/GraphView/init()#android/graphics/DashPathEffect/DashPathEffect(float[],float)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#java/lang/Math/min(float,float)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#com/sonymobile/lifelog/ui/graph/GraphView/getWidth()
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getPrimaryColor()
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#com/sonymobile/lifelog/model/ActivityType/getActivityType(com.sonymobile.lifelog.logger.model.ActivityData)
com/sonymobile/lifelog/ui/graph/GraphView/drawActivityDetails(android.graphics.Canvas,long,long,java.util.List)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Math/max(int,int)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphView/populateHRPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#android/graphics/Canvas/drawLines(float[],int,int,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#android/graphics/RectF/set(float,float,float,float)
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/lang/Float/floatValue()
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/lang/Long/longValue()
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphView/plotXYListValues(android.graphics.Canvas,int,java.util.List,long,long,int,int,boolean)#android/graphics/Canvas/drawOval(android.graphics.RectF,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Math/min(float,float)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/lang/Math/max(float,float)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/graph/GraphView/populateWeightPlotLists(java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/GraphView/populateStressPlotLists(java.util.List)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/ui/graph/GraphView/getResources()
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#[Lcom/sonymobile/lifelog/model/Block;/clone()
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/ui/graph/GraphView/getContext()
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/ui/graph/GraphView/invalidate()
com/sonymobile/lifelog/ui/graph/GraphView/setGraphViewData(com.sonymobile.lifelog.model.Block[],int,int,com.sonymobile.lifelog.model.ActivityType)#com/sonymobile/lifelog/model/ActivityType/isBodyMetricsType(com.sonymobile.lifelog.model.ActivityType)
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#com/sonymobile/lifelog/ui/PermissionListActivity/finish()
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#com/sonymobile/lifelog/ui/PermissionListActivity/sendBroadcast(android.content.Intent)
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#java/util/List/size()
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#java/util/List/toArray(java.lang.Object[])
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#com/sonymobile/lifelog/ui/PermissionListActivity/setResult(int)
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#android/content/Intent/Intent(java.lang.String)
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#com/sonymobile/lifelog/ui/PermissionListActivity/getApplicationContext()
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#android/app/ListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])
com/sonymobile/lifelog/ui/PermissionListActivity/onRequestPermissionsResult(int,java.lang.String[],int[])#java/lang/Math/min(int,int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/SpannableStringBuilder/length()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/setTitle(int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/content/res/Resources/getText(int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/SpannableStringBuilder/setSpan(java.lang.Object,int,int,int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/create()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/style/ForegroundColorSpan/ForegroundColorSpan(int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/style/TextAppearanceSpan/TextAppearanceSpan(android.content.Context,int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/setCancelable(boolean)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/text/SpannableStringBuilder/SpannableStringBuilder()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/createAppUsageManagerAccessSettingsDialog(android.app.Activity)#android/app/Activity/getResources()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/content/Intent/setData(android.net.Uri)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/content/Intent/addCategory(java.lang.String)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/content/Intent/addFlags(int)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/content/Intent/Intent()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/app/Activity/startActivity(android.content.Intent)
com/sonymobile/lifelog/logger/util/RuntimePermissionsUtils/launchRuntimePermissionAccessSetting(android.app.Activity)#android/app/Activity/getPackageName()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/isEmpty()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/size()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setContentView(android.view.View)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setCancelable(boolean)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getActivity()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/onRestoreInstanceState(android.os.Bundle)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOwnerActivity(android.app.Activity)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getView()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnDismissListener(android.content.DialogInterface$OnDismissListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/view/View/getParent()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/getViewPortHandler()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setData(com.github.mikephil.charting.data.CombinedData)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setMarker(com.github.mikephil.charting.components.IMarker)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setMinOffset(float)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setDoubleTapToZoomEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/github/mikephil/charting/data/LineData/getMaxEntryCountSet()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setPinchZoom(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setScaleEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setDragEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/getDescription()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setDrawMarkers(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setupMainArea(android.content.Context,com.github.mikephil.charting.data.LineData,float)#com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/setDrawOrder(com.github.mikephil.charting.charts.CombinedChart$DrawOrder[])
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/LineDataSet/setDrawHighlightIndicators(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/LineDataSet/setLineWidth(float)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/size()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/sonymobile/lifelog/model/cards/chart/Series$Style/name()
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/LineDataSet/setColor(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/LineDataSet/setHighlightEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/get(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/sonymobile/lifelog/ui/card/chart/local/Priority/compare(com.sonymobile.lifelog.ui.card.chart.local.Priority)
com/sonymobile/lifelog/ui/card/chart/local/LocalLineChart/createLineDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/LineDataSet/setDrawValues(boolean)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/ordinal()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/String/length()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#org/json/JSONException/getMessage()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#org/json/JSONObject/getString(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/fromString(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#org/json/JSONObject/has(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/getName()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$ConnectedDeviceType/fromString(java.lang.String)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/String/substring(int,int)
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/engine/SourceInfo/fromString(java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/lang/Long/valueOf(long)
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/List/size()
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/lang/Long/longValue()
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/List/add(java.lang.Object)
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/concurrent/atomic/AtomicLongArray/AtomicLongArray(int)
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/concurrent/atomic/AtomicLongArray/set(int,long)
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/lang/Number/longValue()
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/ArrayList/ArrayList()
com/google/gson/Gson$6/read(com.google.gson.stream.JsonReader)#java/util/List/get(int)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/content/res/Resources/getText(int)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/create()
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/setTitle(int)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/setCancelable(boolean)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/text/SpannableStringBuilder/SpannableStringBuilder()
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/ui/RuntimePermissionAlertDialog/create(android.app.Activity,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener,java.lang.String[])#android/app/Activity/getResources()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/List/isEmpty()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/List/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/get(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/support/design/widget/CoordinatorLayout/getContext()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/get(android.content.Context)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/support/design/widget/CoordinatorLayout/getContext()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/get(android.content.Context)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/CircularButton/measure(int,int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/ActionPage/getMeasuredHeight()
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/CircularButton/getMeasuredWidth()
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/CircularButton/getMeasuredHeight()
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/view/ViewGroup/onMeasure(int,int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/ActionPage/getMeasuredWidth()
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/support/wearable/view/ActionLabel/measure(int,int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#android/graphics/Point/set(int,int)
android/support/wearable/view/ActionPage/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/app/Notification$Builder/build()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/remove(java.lang.String)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/keySet()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Iterator/next()
android/support/v4/app/NotificationCompatJellybean$Builder/build()#android/os/Bundle/containsKey(java.lang.String)
android/support/v4/app/NotificationCompatJellybean$Builder/build()#java/util/Set/iterator()
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Context/startActivities(android.content.Intent[])
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/getIntents()
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Context/sendBroadcast(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntent(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/Intent(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntentWithParentStack(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/create(android.content.Context)
com/sonymobile/lifelog/utils/NotificationUtils$4/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#java/lang/String/contains(java.lang.CharSequence)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri/toString()
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#java/lang/String/valueOf(java.lang.Object)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/service/ServerAPIChecker/checkAPIVersion(com.sonymobile.lifelog.model.ServerError)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/Collections/binarySearch(java.util.List,java.lang.Object)
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/lang/Long/longValue()
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/size()
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/add(int,java.lang.Object)
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/set(int,java.lang.Object)
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/util/ArrayList/isEmpty()
com/sonymobile/lifelog/journeyview/SegmentedLongMap/addMapping(long,long)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#com/sonymobile/lifelog/activityengine/analytics/Heartbeat/name()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/Object/equals(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/HashMap/get(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/addHeartbeatEvent(com.sonymobile.lifelog.activityengine.analytics.HeartbeatEvent,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#com/sonymobile/lifelog/activityengine/analytics/google/AccountType/toString()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#com/sonymobile/lifelog/activityengine/analytics/Heartbeat/getReportInterval()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/reportAndRemove(java.util.List,com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#com/sonymobile/lifelog/activityengine/analytics/Heartbeat/name()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/List/isEmpty()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#com/sonymobile/lifelog/activityengine/analytics/Heartbeat/values()
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/util/HashMap/get(java.lang.Object)
com/sonymobile/lifelog/activityengine/analytics/google/GoogleHeartbeatManager/upload(com.sonymobile.lifelog.activityengine.analytics.google.GoogleAnalyticsManager,com.sonymobile.lifelog.activityengine.analytics.google.AccountType)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/setInput(java.io.InputStream,java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/clear()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Long/parseLong(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Float/parseFloat(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/content/Context/openFileInput(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/add(java.lang.Object)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/io/FileInputStream/close()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Xml/newPullParser()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getAttributeValue(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#com/sonymobile/lifelog/activityengine/analytics/Heartbeat/name()
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/lang/Object/toString()
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/text/DateFormat/getDateTimeInstance()
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/util/Date/setTime(long)
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/util/Date/Date()
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/text/DateFormat/format(java.util.Date)
com/sonymobile/lifelog/activityengine/analytics/EventFactory$RawHeartbeatEvent/toString()#java/lang/StringBuilder/toString()
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#android/provider/ContactsContract$Contacts/openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#android/provider/ContactsContract$Contacts/lookupContact(android.content.ContentResolver,android.net.Uri)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#android/content/Context/getContentResolver()
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#android/content/UriMatcher/match(android.net.Uri)
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#java/lang/StringBuilder/toString()
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/ContactsPhotoRequestHandler/getInputStream(com.squareup.picasso.Request)#android/content/ContentResolver/openInputStream(android.net.Uri)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#android/hardware/SensorManager/getDefaultSensor(int)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/debug/DeviceCapabilityActivity/getApplicationContext()
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/debug/DeviceCapabilityActivity/getSystemService(java.lang.String)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/debug/DeviceCapabilityActivity/addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#android/widget/ListView/ListView(android.content.Context)
com/sonymobile/lifelog/debug/DeviceCapabilityActivity/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#android/util/Log/println(int,java.lang.String,java.lang.String)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/String/length()
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/String/substring(int,int)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(char)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/toString()
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#android/util/Log/getStackTraceString(java.lang.Throwable)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/String/indexOf(int,int)
okhttp3/internal/platform/AndroidPlatform/log(int,java.lang.String,java.lang.Throwable)#java/lang/Math/min(int,int)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/util/concurrent/FutureTask/setException(java.lang.Throwable)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/String/length()
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/Thread/currentThread()
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/StringBuilder/toString()
com/google/android/gms/analytics/zzm/setException(java.lang.Throwable)#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/components/Circle/setVisible(boolean)
com/sonymobile/flix/components/RippleEffect/start(float,float)#java/util/List/size()
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/components/Rectangle/addModifier(com.sonymobile.flix.components.modifiers.ComponentModifier)
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/util/LinearDynamics/setValue(float)
com/sonymobile/flix/components/RippleEffect/start(float,float)#java/util/List/get(int)
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/util/LinearDynamics/setTarget(float)
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/components/RippleEffect/addChild(com.sonymobile.flix.components.Component)
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/components/RippleEffect/getScene()
com/sonymobile/flix/components/RippleEffect/start(float,float)#com/sonymobile/flix/components/Rectangle/setVisible(boolean)
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/util/List/remove(int)
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/util/List/isEmpty()
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/util/List/size()
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/lang/StringBuilder/StringBuilder()
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/util/List/get(int)
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/lang/StringBuilder/toString()
okhttp3/ConnectionPool/pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long)#java/lang/ref/Reference/get()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/AlertDialog$Builder/setTitle(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/view/inputmethod/InputMethodManager/hideSoftInputFromWindow(android.os.IBinder,int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/widget/LinearLayout/setPadding(int,int,int,int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/AlertDialog$Builder/setMessage(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/Activity/isDestroyed()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/Activity/isFinishing()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/view/View/getWindowToken()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/widget/Button/setEnabled(boolean)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/Activity/getSystemService(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment$CheckUserNameAvailabilityTask/onPostExecute(com.sonymobile.lifelog.service.ServerUserProfile$NameAvailability)#android/app/AlertDialog$Builder/show()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/getEncodedPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/indexOf(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/decode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/SecurityException/SecurityException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/hasNext()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/HashMap/entrySet()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/next()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(char)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getKey()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/encodedPath(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/length()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/build()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Set/iterator()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getValue()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/endsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#android/os/Parcel/dataSize()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/length()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/Integer/toHexString(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#android/os/Parcel/dataPosition()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/setCancelable(boolean)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog/show()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#com/sonymobile/lifelog/logger/debug/DebugUtils$SneiAllowCreate/values()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/create()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#com/sonymobile/lifelog/logger/debug/DebugUtils$SneiAllowCreate/ordinal()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#com/sonymobile/lifelog/logger/debug/DebugUtils$SneiAllowCreate/name()
com/sonymobile/lifelog/logger/debug/DebugUtils/showAllowAccountCreationWithSneiDialog(android.app.Activity)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context,int)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog/show()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/create()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context,int)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#com/sonymobile/lifelog/logger/build/ApiVersion/ordinal()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/Activity/getApplicationContext()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#android/app/AlertDialog$Builder/setCancelable(boolean)
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#com/sonymobile/lifelog/logger/build/ApiVersion/values()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#com/sonymobile/lifelog/logger/build/ApiVersion/name()
com/sonymobile/lifelog/logger/debug/DebugUtils/showSetApiVersionDialog(android.app.Activity)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$VmPolicy$Builder/StrictMode$VmPolicy$Builder()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#com/sonymobile/lifelog/logger/debug/DebugUtils$Penalty/ordinal()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/StrictMode$ThreadPolicy$Builder()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/penaltyFlashScreen()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/penaltyLog()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$VmPolicy$Builder/build()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/detectAll()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$VmPolicy$Builder/penaltyDeath()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$VmPolicy$Builder/detectAll()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/penaltyDeath()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode/setThreadPolicy(android.os.StrictMode$ThreadPolicy)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode/setVmPolicy(android.os.StrictMode$VmPolicy)
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$VmPolicy$Builder/penaltyLog()
com/sonymobile/lifelog/logger/debug/DebugUtils/setPolicies(com.sonymobile.lifelog.logger.debug.DebugUtils$Penalty)#android/os/StrictMode$ThreadPolicy$Builder/build()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/Resources$Theme/obtainStyledAttributes(int[])
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/Context/getTheme()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/getDrawable(int)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/recycle()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/widget/OverScroller/OverScroller(android.content.Context)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/Context/getApplicationInfo()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/support/v7/widget/ActionBarOverlayLayout/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/support/v7/widget/ActionBarOverlayLayout/getContext()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingRight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/graphics/Rect/set(android.graphics.Rect)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingLeft()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getSuggestedMinimumWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingBottom()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredState()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/measureChildWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/setMeasuredDimension(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/graphics/Rect/equals(java.lang.Object)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getSuggestedMinimumHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getVisibility()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingTop()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredState()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingRight()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getChildAt(int)
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getChildCount()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingLeft()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingBottom()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingTop()
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#android/provider/MediaStore$Video$Thumbnails/getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#android/content/ContentResolver/getType(android.net.Uri)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#android/content/ContentUris/parseId(android.net.Uri)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#com/squareup/picasso/MediaStoreRequestHandler/createBitmapOptions(com.squareup.picasso.Request)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#java/lang/String/startsWith(java.lang.String)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#android/content/Context/getContentResolver()
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#com/squareup/picasso/MediaStoreRequestHandler/calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#android/provider/MediaStore$Images$Thumbnails/getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory$Options)
com/squareup/picasso/MediaStoreRequestHandler/load(com.squareup.picasso.Request,int)#com/squareup/picasso/MediaStoreRequestHandler/getInputStream(com.squareup.picasso.Request)
org/joda/time/chrono/BasicChronology/toString()#java/lang/StringBuilder/append(java.lang.String)
org/joda/time/chrono/BasicChronology/toString()#java/lang/StringBuilder/append(int)
org/joda/time/chrono/BasicChronology/toString()#java/lang/StringBuilder/StringBuilder(int)
org/joda/time/chrono/BasicChronology/toString()#java/lang/Class/getName()
org/joda/time/chrono/BasicChronology/toString()#java/lang/String/lastIndexOf(int)
org/joda/time/chrono/BasicChronology/toString()#java/lang/String/substring(int)
org/joda/time/chrono/BasicChronology/toString()#java/lang/StringBuilder/append(char)
org/joda/time/chrono/BasicChronology/toString()#java/lang/Object/getClass()
org/joda/time/chrono/BasicChronology/toString()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/Integer/toString()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/String/length()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#android/widget/NumberPicker/setMaxValue(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#android/widget/NumberPicker/setDisplayedValues(java.lang.String[])
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#android/widget/NumberPicker/setValue(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/initializeNumPicker(android.widget.NumberPicker,java.lang.String[],int)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/getResources()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/getActivity()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/getArguments()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/Activity/getLayoutInflater()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/widget/NumberPicker/setVisibility(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setView(android.view.View)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/widget/TextView/setText(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/sonymobile/lifelog/ui/graph/GoalSettingDialogFragment/onCreateDialog(android.os.Bundle)#android/content/res/Resources/getStringArray(int)
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#org/json/JSONObject/putOpt(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getElapsedRealtimeNanos()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getAccuracy()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getLongitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getLatitude()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getTime()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#java/lang/Double/valueOf(double)
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#org/json/JSONObject/JSONObject()
com/sonymobile/lifelog/activityengine/engine/location/LocationContent/toJSONObject()#android/location/Location/getAltitude()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#com/google/android/gms/dynamic/IObjectWrapper/asBinder()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/setAccessible(boolean)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/isAccessible()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/isSynthetic()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/Object/getClass()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/Class/getDeclaredFields()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getSimpleName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/length()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Integer/toHexString(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/lastIndexOf(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/substring(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Object/getClass()
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#android/content/Context/getPackageManager()
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#android/content/pm/PackageManager$NameNotFoundException/getMessage()
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#android/content/Context/getPackageName()
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/Integer/valueOf(int)
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/google/android/gms/tagmanager/zzk/zzd(java.util.Map)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getViewTreeObserver()
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#com/sonymobile/lifelog/ui/graph/component/GraphHintView/setTranslationY(float)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/view/ViewTreeObserver/removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/animation/LayoutTransition/getDuration(int)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#com/sonymobile/lifelog/ui/graph/component/GraphHintView/animate()
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#com/sonymobile/lifelog/ui/graph/component/GraphHintView/getMeasuredHeight()
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/animation/LayoutTransition/enableTransitionType(int)
com/sonymobile/lifelog/ui/graph/component/GraphHintView$2/onGlobalLayout()#android/view/ViewPropertyAnimator/translationY(float)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/util/TypedValue/getFraction(float,float)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getContext()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/util/TypedValue/getDimension(android.util.DisplayMetrics)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredWidth()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/widget/FrameLayout/onMeasure(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/content/Context/getResources()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/round(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/getStrokeWidth()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/support/v7/graphics/drawable/DrawerArrowDrawable/getBounds()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/round(float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/centerX()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/rewind()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/cos(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/sqrt(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/rLineTo(float,float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/close()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/sin(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancelAll(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancel(java.lang.String,int,java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/notify(java.lang.String,int,java.lang.String,android.app.Notification)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/List/addAll(java.util.Collection)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/List/iterator()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzaa/zzb(com.google.android.gms.analytics.zzi)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/provider/NotificationProvider/getContext()
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/NotificationProvider/getContext()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/NotificationProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/iterator()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#com/sonymobile/lifelog/provider/NotificationProvider/getContext()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/size()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/Set/iterator()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/beginTransactionNonExclusive()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/HashSet/HashSet()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#java/util/Set/add(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/getUri()
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)
com/sonymobile/lifelog/provider/NotificationProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/NotificationProvider/getContext()
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteOpenHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/NotificationProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#javax/net/ssl/HostnameVerifier/verify(java.lang.String,javax.net.ssl.SSLSession)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#javax/net/ssl/SSLSocketFactory/createSocket(java.net.Socket,java.lang.String,int,boolean)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/security/cert/X509Certificate/getSubjectDN()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#javax/net/ssl/SSLSocket/startHandshake()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#okhttp3/Protocol/get(java.lang.String)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#javax/net/ssl/SSLSocket/getSession()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/util/List/get(int)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/security/Principal/getName()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/io/IOException/IOException(java.lang.Throwable)
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#java/lang/StringBuilder/toString()
okhttp3/internal/connection/RealConnection/connectTls(okhttp3.internal.connection.ConnectionSpecSelector)#javax/net/ssl/SSLPeerUnverifiedException/SSLPeerUnverifiedException(java.lang.String)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/net/Socket/Socket(java.net.Proxy)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/net/ConnectException/initCause(java.lang.Throwable)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/net/Socket/setSoTimeout(int)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/lang/StringBuilder/toString()
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#javax/net/SocketFactory/createSocket()
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/net/ConnectException/ConnectException(java.lang.String)
okhttp3/internal/connection/RealConnection/connectSocket(int,int)#java/net/Proxy/type()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/CreateAccountActivity/finish()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#android/content/Intent/putExtra(java.lang.String,boolean)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/CreateAccountActivity/startActivity(android.content.Intent)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/model/Authenticator/getAccountType()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/CreateAccountActivity/setResult(int)
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/activityengine/model/AccountType/name()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/login/CreateAccountActivity/onLoginComplete(boolean,com.sonymobile.lifelog.model.ServerError)#com/sonymobile/lifelog/login/CreateAccountActivity/getApplicationContext()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/size()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Math/max(float,float)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Boolean/valueOf(boolean)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/clear()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/get(int)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/set(int,java.lang.Object)
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#java/nio/ByteBuffer/allocate(int)
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#android/graphics/Bitmap/getRowBytes()
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#android/graphics/Bitmap/copyPixelsToBuffer(java.nio.Buffer)
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#java/nio/ByteBuffer/rewind()
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#java/lang/Math/round(float)
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#java/nio/ByteBuffer/array()
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#android/graphics/Bitmap/getConfig()
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#android/graphics/Bitmap/getHeight()
com/sonymobile/lifelog/journeyview/ActivityBar/multiplyRawBitmapChannelsARGB8888(android.graphics.Bitmap,float,float,float,float)#android/graphics/Bitmap/copyPixelsFromBuffer(java.nio.Buffer)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#android/util/Base64/decode(java.lang.String,int)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/getBytes()
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/Boolean/booleanValue()
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#android/util/Base64/encodeToString(byte[],int)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzbk/zzd(java.util.Map)#java/lang/String/concat(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/util/List/size()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/String/valueOf(long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentUris/parseId(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#android/database/Cursor/getLong(int)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#android/database/Cursor/close()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/SmartwearProvider$DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#java/lang/String/valueOf(long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/deleteData(int,java.lang.String,java.lang.String[])#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/logger/provider/SmartwearProvider$DatabaseHelper/getReadableDatabase()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/sqlite/SQLiteQueryBuilder/SQLiteQueryBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/Cursor/setNotificationUri(android.content.ContentResolver,android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/net/Uri/getLastPathSegment()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/sqlite/SQLiteQueryBuilder/appendWhere(java.lang.CharSequence)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/sqlite/SQLiteQueryBuilder/query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentValues/remove(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentValues/getAsString(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/logger/provider/SmartwearProvider$DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteQueryBuilder/SQLiteQueryBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/util/List/size()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/net/Uri/getLastPathSegment()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteQueryBuilder/appendWhere(java.lang.CharSequence)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/Cursor/getLong(int)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/Cursor/close()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/logger/provider/SmartwearProvider$DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/Cursor/moveToNext()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentValues/remove(java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteQueryBuilder/query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentValues/size()
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/String/valueOf(long)
com/sonymobile/lifelog/logger/provider/SmartwearProvider/updateData(int,android.database.sqlite.SQLiteQueryBuilder,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/setData(android.net.Uri)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/setFlags(int)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/util/Locale/getDefault()
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/invokeWebHelp(android.content.Context,android.content.Intent,java.lang.String)#android/content/Context/startActivity(android.content.Intent)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/content/Intent/setData(android.net.Uri)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/app/Activity/getPackageManager()
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/app/Activity/startActivity(android.content.Intent)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#java/lang/Integer/toString(int)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/content/Intent/setFlags(int)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/sonymobile/lifelog/model/drawer/DrawerEntry$10/run(android.app.Activity)#java/lang/StringBuilder/toString()
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/String/length()
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/String/substring(int,int)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/StringBuilder/StringBuilder()
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/String/startsWith(java.lang.String)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/net/ProtocolException/ProtocolException(java.lang.String)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/String/charAt(int)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/String/substring(int)
okhttp3/internal/http/StatusLine/parse(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Context/getPackageName()
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#java/lang/Class/getName()
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#android/content/Intent/setPackage(java.lang.String)
com/sonymobile/lifelog/service/notification/NotificationActionReceiver/getActionPendingIntent(android.content.Context,com.sonymobile.lifelog.service.notification.NotificationActionReceiver$NotificationAction,android.os.Bundle)#java/lang/Object/getClass()
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/setDuration(long)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/widget/ImageView/setScaleY(float)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/widget/ImageView/setScaleX(float)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/start()
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/setRepeatMode(int)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/ofFloat(float[])
com/sonymobile/lifelog/ui/dashboard/delegate/LimitTileDelegate/runWarningAnimation(com.sonymobile.lifelog.ui.dashboard.delegate.LimitTileDelegate$ViewHolder)#android/animation/ValueAnimator/setRepeatCount(int)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/drawable/BitmapDrawable/BitmapDrawable(android.content.res.Resources,android.graphics.Bitmap)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/support/v7/preference/PreferenceDialogFragmentCompat/getArguments()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/support/v7/preference/PreferenceDialogFragmentCompat/getResources()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/os/Bundle/getCharSequence(java.lang.String)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/Canvas/getHeight()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/support/v7/preference/PreferenceDialogFragmentCompat/getTargetFragment()
android/support/v7/preference/PreferenceDialogFragmentCompat/onCreate(android.os.Bundle)#android/graphics/Canvas/getWidth()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/getPosTan(float,float[],float[])
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/nextContour()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/PathMeasure(android.graphics.Path,boolean)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/Math/abs(float)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/Math/min(int,int)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/getLength()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/append(float)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/OutputStream/close()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/FileOutputStream/FileOutputStream(java.io.File,boolean)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/util/zip/GZIPOutputStream/write(int)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/File/File(java.io.File,java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/util/zip/GZIPOutputStream/write(byte[])
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/IOException/getMessage()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/File/exists()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/Context/getExternalFilesDir(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/NullPointerException/NullPointerException()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/util/zip/GZIPOutputStream/close()
com/sonymobile/lifelog/logger/provider/SessionUtils/storeSessionsAsFile(android.content.Context,java.lang.String,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/String/toUpperCase(java.util.Locale)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/getName()
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/util/UUID/toString()
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/Long/valueOf(long)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#com/sonymobile/lifelog/activityengine/engine/SourceInfo$Type/equals(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/ContentValues/ContentValues()
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/provider/SessionUtils/persistSession(android.content.Context,com.sonymobile.lifelog.activityengine.engine.model.Session)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/content/Context/startActivities(android.content.Intent[])
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/getIntents()
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntent(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntentWithParentStack(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/create(android.content.Context)
com/sonymobile/lifelog/utils/NotificationUtils$6/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/util/Map/size()
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/util/List/add(java.lang.Object)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#android/util/Base64/encodeToString(byte[],int)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/util/ArrayList/ArrayList()
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/Integer/toString(int)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/String/length()
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/util/Map/get(java.lang.Object)
com/google/android/gms/wearable/DataMapItem/zza(com.google.android.gms.wearable.DataItem)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Paint/setAntiAlias(boolean)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/rLineTo(float,float)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/reset()
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/RadialGradient/RadialGradient(float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/arcTo(android.graphics.RectF,float,float,boolean)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/Path()
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/RectF/RectF(float,float,float,float)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/LinearGradient/LinearGradient(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/close()
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/Path/moveTo(float,float)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/RectF/RectF(android.graphics.RectF)
android/support/v7/widget/RoundRectDrawableWithShadow/buildShadowCorners()#android/graphics/RectF/inset(float,float)
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#android/content/Context/getPackageManager()
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#android/content/pm/PackageManager$NameNotFoundException/getMessage()
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#android/content/Context/getPackageName()
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/google/android/gms/tagmanager/zzl/zzd(java.util.Map)#java/lang/StringBuilder/toString()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/view/menu/StandardMenuPopup/getEpicenterBounds()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/FrameLayout/findViewById(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/View/getViewTreeObserver()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setEpicenterBounds(android.graphics.Rect)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setDropDownGravity(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setContentWidth(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/view/menu/StandardMenuPopup/measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/View/addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setInputMethodMode(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/ListView/addHeaderView(android.view.View,java.lang.Object,boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/getListView()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/show()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setModal(boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setAnchorView(android.view.View)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setAdapter(android.widget.ListAdapter)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/ListView/setOnKeyListener(android.view.View$OnKeyListener)
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#java/lang/Integer/intValue()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/res/Resources/getDisplayMetrics()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/TypedValue/getDimension(android.util.DisplayMetrics)
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/Context/getTheme()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/TypedValue/TypedValue()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/Context/getResources()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setAdapter(android.widget.ListAdapter)
android/support/v7/app/AlertController/setupView()#android/view/View/setVisibility(int)
android/support/v7/app/AlertController/setupView()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setItemChecked(int,boolean)
android/support/v7/app/AlertController/setupView()#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/view/ViewGroup/getVisibility()
android/support/v7/app/AlertController/setupView()#android/view/View/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/support/v4/widget/NestedScrollView/setClipToPadding(boolean)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setSelection(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup/getLayoutParams()
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/widget/FrameLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/Window/setFlags(int,int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/widget/FrameLayout/setPadding(int,int,int,int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingRight()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/View/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/TextView/setPadding(int,int,int,int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingLeft()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setImageResource(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingTop()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingBottom()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/removeViewAt(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/indexOfChild(android.view.View)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/setFocusable(boolean)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/removeView(android.view.View)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/net/URL/openConnection()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/io/IOException/getMessage()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#javax/net/ssl/HttpsURLConnection/setReadTimeout(int)
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#javax/net/ssl/HttpsURLConnection/disconnect()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#javax/net/ssl/HttpsURLConnection/getResponseMessage()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/WeatherUtils/executeGet(java.net.URL)#javax/net/ssl/HttpsURLConnection/getResponseCode()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/location/Location/getLongitude()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/net/Uri/toString()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#java/lang/StringBuilder/append(double)
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/location/Location/getLatitude()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/utils/WeatherUtils/getLocationKeyUrl(android.content.Context)#java/net/URL/URL(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#android/content/Context/getPackageManager()
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#java/security/MessageDigest/digest()
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#java/lang/SecurityException/SecurityException(java.lang.Throwable)
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#android/content/Context/getPackageName()
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#java/lang/SecurityException/SecurityException(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#android/content/pm/Signature/toByteArray()
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#java/security/MessageDigest/update(byte[])
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/sonymobile/lifelog/utils/WeatherUtils/getSignatureSHA256(android.content.Context)#java/security/MessageDigest/getInstance(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#com/sonymobile/lifelog/utils/WeatherUtils$1/getType()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#android/net/Uri$Builder/build()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/List/size()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#android/net/Uri/buildUpon()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/Iterator/next()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#java/util/List/iterator()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#android/net/Uri/toString()
com/sonymobile/lifelog/utils/WeatherUtils/getWeather(android.content.Context,java.lang.String)#org/joda/time/DateTime/toString()
com/google/android/gms/internal/measurement/zzbc/zzd(long)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/getLong(int)
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/getString(int)
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/moveToNext()
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/Cursor/getInt(int)
com/google/android/gms/internal/measurement/zzbc/zzd(long)#java/lang/Long/toString(long)
com/google/android/gms/internal/measurement/zzbc/zzd(long)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zzd(long)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzbc/zzd(long)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/util/List/size()
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/Long/longValue()
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzbc/zza(java.util.List)#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/net/Uri/getEncodedQuery()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/net/Uri$Builder/Uri$Builder()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/net/Uri$Builder/build()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/List/size()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/content/ContentValues/ContentValues()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzbc/zzc(com.google.android.gms.internal.measurement.zzch)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/lang/Long/toString(long)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#android/database/Cursor/getLong(int)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzbc/zzc(long)#android/database/Cursor/moveToNext()
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/util/Collections/emptyList()
com/google/android/gms/internal/measurement/zzbc/zzc(long)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zzc(long)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzbc/zzf(long)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbc/zzf(long)#java/util/List/size()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/Cursor/getString(int)
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/Cursor/moveToNext()
com/google/android/gms/internal/measurement/zzbc/zzf(long)#java/lang/String/valueOf(int)
com/google/android/gms/internal/measurement/zzbc/zzf(long)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/setSecondaryValue(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/addToList(com.sonymobile.lifelog.login.create.EditData,boolean)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/setDescription(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#java/lang/String/valueOf(java.lang.Object)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#android/content/res/Resources/getInteger(int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/getContext()
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/ordinal()
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/setPrimaryValue(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#java/lang/Math/round(float)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/logger/smartwear/UserProfileContract$UnitSystem/fromValue(int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountBaseFragment/onCreate(android.os.Bundle)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/setImperial(boolean)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/setTitle(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#android/os/Bundle/getFloat(java.lang.String,float)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/create/CreateAccountHeightFragment/getArguments()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/hasNext()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Iterator/next()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/StringBuilder()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Set/iterator()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getValue()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/toString()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map$Entry/getKey()
retrofit2/ParameterHandler$HeaderMap/apply(retrofit2.RequestBuilder,java.util.Map)#java/util/Map/entrySet()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setAlpha(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillDrawable()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getLineWidth()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillAlpha()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillColor()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/RadarChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightLines(android.graphics.Canvas,float,float,com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarEntry/getIcon()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#com/sonymobile/lifelog/logger/model/SleepData/getEndTime()
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#com/sonymobile/lifelog/logger/model/SleepData/getStartTime()
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#com/sonymobile/lifelog/activityengine/sleep/SleepState/ordinal()
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#com/sonymobile/lifelog/activityengine/sleep/SleepState/valueOf(int)
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/SleepSession/from(com.sonymobile.lifelog.logger.model.SleepData,int)#java/util/List/get(int)
com/google/android/gms/location/zzj/toString()#android/os/SystemClock/elapsedRealtime()
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(char)
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(float)
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(boolean)
com/google/android/gms/location/zzj/toString()#java/lang/StringBuilder/append(long)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getScrollY()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/widget/FrameLayout/draw(android.graphics.Canvas)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getWidth()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getHeight()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getScrollX()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/content/Context/startActivities(android.content.Intent[])
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/getIntents()
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntent(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntentWithParentStack(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/create(android.content.Context)
com/sonymobile/lifelog/utils/NotificationUtils$7/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources/getAnimation(int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/Context/getTheme()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/XmlResourceParser/close()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources$NotFoundException/initCause(java.lang.Throwable)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/NullPointerException/NullPointerException()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/Integer/toHexString(int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/view/animation/AnimationUtils/loadInterpolator(android.content.Context,int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/Context/getResources()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AnticipateOvershootInterpolator/AnticipateOvershootInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/OvershootInterpolator/OvershootInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AnticipateInterpolator/AnticipateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/DecelerateInterpolator/DecelerateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AccelerateInterpolator/AccelerateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/BounceInterpolator/BounceInterpolator()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/LinearInterpolator/LinearInterpolator()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/CycleInterpolator/CycleInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AccelerateDecelerateInterpolator/AccelerateDecelerateInterpolator()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/lang/Integer/intValue()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/size()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/addElement(java.lang.Object)
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/removeElement(java.lang.Object)
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Enumeration/nextElement()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/elementAt(int)
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Enumeration/hasMoreElements()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/elements()
com/sonymobile/lifelog/activityengine/stepdetector/software/StepDetector/addToBuffer(int[])#java/util/Vector/setElementAt(java.lang.Object,int)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/os/SystemClock/elapsedRealtime()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/app/AlarmManager/setExact(int,long,android.app.PendingIntent)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Context/getSystemService(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/content/Intent/putExtra(java.lang.String,long)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/StepsCounterIntentService/registerUpdate(android.content.Context,long,android.os.Handler,java.lang.String)#android/os/Messenger/Messenger(android.os.Handler)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#android/net/Uri/buildUpon()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#android/net/Uri$Builder/build()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/List/iterator()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#android/net/Uri/toString()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/zzm/zzf(java.util.Map)#java/util/Set/add(java.lang.Object)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Paint/setAntiAlias(boolean)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/rLineTo(float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/reset()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RadialGradient/RadialGradient(float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/arcTo(android.graphics.RectF,float,float,boolean)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/Path()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/RectF(float,float,float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/LinearGradient/LinearGradient(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/close()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/moveTo(float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/RectF(android.graphics.RectF)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/inset(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/centerX()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/centerY()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/width()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/height()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/breakText(java.lang.CharSequence,int,int,boolean,float,float[])
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/setColor(int)
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/breakText(java.lang.String,boolean,float,float[])
com/sonymobile/flix/components/Label/refreshSimpleText()#com/sonymobile/flix/components/Label/setSize(float,float)
com/sonymobile/flix/components/Label/refreshSimpleText()#java/lang/Math/round(float)
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/LinearGradient/LinearGradient(float,float,float,float,int,int,android.graphics.Shader$TileMode)
com/sonymobile/flix/components/Label/refreshSimpleText()#java/lang/CharSequence/length()
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/ascent()
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/measureText(java.lang.String)
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/measureText(java.lang.CharSequence,int,int)
com/sonymobile/flix/components/Label/refreshSimpleText()#android/graphics/Paint/descent()
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/Layout/getLineMax(int)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/BoringLayout/replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/Layout/getLineCount()
com/sonymobile/flix/components/Label/refreshLayoutedText()#java/lang/Math/ceil(double)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/graphics/Paint/ascent()
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/Layout/getHeight()
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/StaticLayout/StaticLayout(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/Layout/getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/graphics/Paint/descent()
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/graphics/LinearGradient/LinearGradient(float,float,float,float,int,int,android.graphics.Shader$TileMode)
com/sonymobile/flix/components/Label/refreshLayoutedText()#java/lang/CharSequence/length()
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/BoringLayout/make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean)
com/sonymobile/flix/components/Label/refreshLayoutedText()#android/text/BoringLayout$Metrics/BoringLayout$Metrics()
com/sonymobile/flix/components/Label/refreshLayoutedText()#com/sonymobile/flix/components/Label/setSize(float,float)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioGroup/getChildAt(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/text/Editable/length()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioGroup/setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationTypePicker/getIntent()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationTypePicker/getResources()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioButton/getId()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioGroup/getChildCount()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationTypePicker/setContentView(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/EditText/setHint(java.lang.CharSequence)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioButton/getTag()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioButton/getText()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/EditText/getText()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioGroup/check(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/Button/setEnabled(boolean)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/RadioGroup/getCheckedRadioButtonId()
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#android/widget/Button/setVisibility(int)
com/sonymobile/lifelog/ui/location/LocationTypePicker/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/location/LocationTypePicker/findViewById(int)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#java/lang/String/length()
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/WearableListenerService$zzc/zzb(java.lang.String)#com/google/android/gms/wearable/WearableListenerService/unbindService(android.content.ServiceConnection)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getPathSegments()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/size()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/pm/PackageManager/getResourcesForApplication(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/get(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getAuthority()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getDrawable(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestPath()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/query(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/fragment(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/Uri$Builder()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/build()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestAuthority()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#java/lang/String/valueOf(int)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestSelection()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/flattenToShortString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getActivityInfo(android.content.ComponentName,int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager$NameNotFoundException/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/ActivityInfo/getIconResource()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/net/Uri/getScheme()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/graphics/drawable/Drawable/createFromStream(java.io.InputStream,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/getMessage()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/InputStream/close()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/content/Context/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/isEmpty()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/style/TextAppearanceSpan/TextAppearanceSpan(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#java/lang/CharSequence/length()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getTheme()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/SpannableString(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/util/TypedValue/TypedValue()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources/getColorStateList(int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/setSpan(java.lang.Object,int,int,int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getResources()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setVisibility(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setMaxLines(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setSingleLine(boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setTag(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/view/View/getTag()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getInt(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/getText()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/Cursor/getColumnNames()
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/util/Set/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzbd/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/isEmpty()
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/util/Set/remove(java.lang.Object)
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/google/android/gms/internal/measurement/zzbd/onOpen(android.database.sqlite.SQLiteDatabase)#java/lang/String/String(java.lang.String)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/ImageView/getVisibility()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getPaddingRight()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getLayout()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getLineCount()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getResources()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/setTextSize(int,float)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getTextSize()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getPaddingLeft()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/setMaxLines(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getMeasuredWidth()
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/removeView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/addView(android.view.View,int)
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/getContext()
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/addView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/design/widget/TabLayout$TabView/update()#android/view/View/findViewById(int)
android/support/design/widget/TabLayout$TabView/update()#android/widget/TextView/setTextColor(android.content.res.ColorStateList)
android/support/design/widget/TabLayout$TabView/update()#android/view/ViewGroup/removeView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/view/LayoutInflater/from(android.content.Context)
android/support/design/widget/TabLayout$TabView/update()#android/view/View/getParent()
android/support/design/widget/TabLayout$TabView/update()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TabLayout$TabView/update()#android/widget/ImageView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/update()#android/widget/TextView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/getVisibility()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/support/design/widget/TabLayout$TabView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/getLayoutParams()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/requestLayout()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v4/widget/DrawerLayout/setSystemUiVisibility(int)
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v7/widget/RecyclerView/getPaddingTop()
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#com/sonymobile/lifelog/ui/TimelineActivity/findViewById(int)
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v7/widget/RecyclerView/getPaddingRight()
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v7/widget/RecyclerView/getPaddingBottom()
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v4/widget/DrawerLayout/findViewById(int)
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#com/sonymobile/lifelog/ui/TimelineActivity/isFinishing()
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v7/widget/RecyclerView/getPaddingLeft()
com/sonymobile/lifelog/ui/TimelineActivity$5/onPostExecute(java.lang.String)#android/support/v7/widget/RecyclerView/setPadding(int,int,int,int)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView$ScaleType/toString()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postTranslate(float,float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getImageMatrix()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/concat(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getBackground()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getScaleType()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/Bundle()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/view/View/draw(android.graphics.Canvas)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/Matrix()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/set(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/width()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putFloatArray(java.lang.String,float[])
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getDrawable()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/height()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/round(float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/getValues(float[])
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postScale(float,float)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/BitmapDrawable/getBitmap()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getBounds()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#java/lang/Math/min(float,float)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/getScaleType()
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getFloatArray(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/graphics/Matrix/Matrix()
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setImageMatrix(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getString(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView$ScaleType/valueOf(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setScaleType(android.widget.ImageView$ScaleType)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/graphics/Matrix/setValues(float[])
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/ImageView(android.content.Context)
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/Iterator/next()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/toArray(java.lang.Object[])
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/clear()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/iterator()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/indexOf(java.lang.Object)
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/size()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/add(java.lang.Object)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/reflect/Field/setAccessible(boolean)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/String/equals(java.lang.Object)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/Object/getClass()
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/AssertionError/AssertionError()
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/Class/getSuperclass()
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/Class/isInstance(java.lang.Object)
okhttp3/internal/platform/Platform/readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String)#java/lang/Class/cast(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getLimitLines()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineWidth()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineDashPathEffect()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawAxisLineEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/util/SpringDynamics/setAtRestTolerance(float)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/util/SpringDynamics/setTarget(float)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#android/graphics/Paint/setXfermode(android.graphics.Xfermode)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/components/ScrollContainer/getScene()
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#android/graphics/PorterDuffXfermode/PorterDuffXfermode(android.graphics.PorterDuff$Mode)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/components/Rectangle/setSizeDp(float,float)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/components/Rectangle/setVisible(boolean)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/components/Rectangle/setAlpha(float)
com/sonymobile/flix/components/ScrollContainer/createScrollbar()#com/sonymobile/flix/components/Rectangle/getPaint()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Iterator/hasNext()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Set/size()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/lang/String/length()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Iterator/next()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/lang/String/equals(java.lang.Object)
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Set/iterator()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/getAffixes()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Set/toArray(java.lang.Object[])
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/HashSet/HashSet()
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/util/Set/add(java.lang.Object)
org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix/finish(java.util.Set)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#android/os/Looper/getMainLooper()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/length()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#com/google/android/gms/internal/common/zze/post(java.lang.Runnable)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/util/WeakHashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentManager/beginTransaction()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/Activity/getFragmentManager()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#com/google/android/gms/common/api/internal/zza/isRemoving()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentTransaction/add(android.app.Fragment,java.lang.String)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/ref/WeakReference/get()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/util/WeakHashMap/get(java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentTransaction/commitAllowingStateLoss()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentManager/findFragmentByTag(java.lang.String)
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map$Entry/getKey()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map$Entry/getValue()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map/entrySet()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/os/Bundle/Bundle()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/app/Fragment/onSaveInstanceState(android.os.Bundle)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/setClass(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#java/util/List/get(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/setFlags(int)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#com/sonymobile/lifelog/model/ActivityType/equals(java.lang.Object)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Context/startActivity(android.content.Intent)
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/view/View/getContext()
com/sonymobile/lifelog/ui/location/SessionDetailsCardHandler$2/onClick(android.view.View)#android/content/Intent/Intent()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraLeftOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/prepareOffsetMatrix()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraBottomOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraRightOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraTopOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/calculateLegendOffsets(android.graphics.RectF)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#android/content/res/Resources/getDimensionPixelOffset(int)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/widget/IntroHandLayout/getWidth()
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#android/view/View/getViewTreeObserver()
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/widget/IntroHandLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#android/animation/Animator/setDuration(long)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/widget/IntroHandLayout/getHeight()
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/widget/IntroHandLayout/getResources()
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/widget/IntroHandLayout/getLayoutParams()
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#android/view/ViewTreeObserver/removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#android/animation/Animator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment$1/onGlobalLayout()#com/sonymobile/lifelog/ui/hint/fragments/DashboardIntroPageFragment/queueEndlessAnimation(android.animation.Animator)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/CharSequence/toString()
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/TextView/getText()
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/setOnDismissListener(android.content.DialogInterface$OnDismissListener)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/NumberPicker/setDescendantFocusability(int)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/util/Log/w(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/NumberPicker/setDisplayedValues(java.lang.String[])
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/NumberPicker/setValue(int)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/setTitle(int)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/NumberPicker/NumberPicker(android.content.Context)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/setView(android.view.View)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/Integer/parseInt(java.lang.String)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/app/AlertDialog$Builder/show()
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#android/widget/NumberPicker/setMaxValue(int)
com/sonymobile/lifelog/ui/UIHelper/displayValuePicker(android.content.Context,java.lang.Object,int,int,int,java.lang.String[],java.lang.String[],java.lang.String,com.sonymobile.lifelog.ui.UIHelper$ValueChanged)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/view/ViewTreeObserver/removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/widget/ImageView/getViewTreeObserver()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/view/ViewTreeObserver/isAlive()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/widget/ImageView/isLayoutRequested()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/widget/ImageView/getWidth()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#java/lang/ref/WeakReference/get()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/widget/ImageView/removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#java/lang/ref/WeakReference/clear()
com/squareup/picasso/DeferredRequestCreator/onPreDraw()#android/widget/ImageView/getHeight()
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/String/length()
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/Class/getName()
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/Object/getClass()
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/app/Service/onCreate()
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/content/Intent/setComponent(android.content.ComponentName)
com/google/android/gms/wearable/WearableListenerService/onCreate()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/WearableListenerService/onCreate()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/String/length()
com/google/android/gms/wearable/WearableListenerService/onDestroy()#android/app/Service/onDestroy()
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/WearableListenerService/onDestroy()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#android/content/ComponentName/toString()
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#android/os/Binder/getCallingUid()
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#android/util/Log/isLoggable(java.lang.String,int)
com/google/android/gms/wearable/WearableListenerService$zzd/zza(java.lang.Runnable,java.lang.String,java.lang.Object)#com/google/android/gms/wearable/WearableListenerService$zzc/post(java.lang.Runnable)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/ArrayList/ArrayList(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/BarDataSet/setDrawValues(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/get(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/github/mikephil/charting/data/BarDataSet/setColors(int[])
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/size()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#com/sonymobile/lifelog/model/cards/chart/Series$Style/name()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/createBarDataSet(android.content.Context,com.sonymobile.lifelog.model.cards.chart.Series)#android/graphics/Color/parseColor(java.lang.String)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setDoubleTapToZoomEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/getDescription()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setMinOffset(float)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setScaleEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setExtraOffsets(float,float,float,float)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setFitBars(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setData(com.github.mikephil.charting.data.ChartData)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setPinchZoom(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupMainArea(com.github.mikephil.charting.data.BarData)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setDragEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setDrawLabels(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setLabelCount(int,boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/getAxisLeft()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setDrawAxisLine(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setAxisMaximum(float)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setGridColor(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setAxisMinimum(float)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupLeftAxis(float)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setLabelCount(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setTextColor(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setCenterAxisLabels(boolean)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/getXAxis()
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setAxisLineColor(int)
com/sonymobile/lifelog/ui/card/chart/local/LocalBarChart/setupXAxis(java.util.List)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/getVisibility()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setVisibility(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/endViewTransition(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getBoolean(java.lang.String,boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/clearAnimation()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/animation/Animator/cancel()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/addView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setSaveFromParentEnabled(boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/res/Resources/getResourceName(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/clear()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/PrintWriter(java.io.Writer)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/close()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/size()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/SparseArray(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/toArray()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getId()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getPositionDescription()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setId(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getTag()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setTag(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/Integer/intValue()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridLineWidth()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridDashPathEffect()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/Object/toString()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Iterator/hasNext()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Map$Entry/getValue()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Map$Entry/getKey()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/String/length()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Map/get(java.lang.Object)
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/Iterator/next()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/util/HashMap/HashMap()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzam/zzd(java.util.Map)#java/lang/Exception/getMessage()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/CharSequence/length()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/Character/codePointAt(java.lang.CharSequence,int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/isReadOnly()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/length()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/arrayOffset()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/remaining()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/hasArray()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/BufferOverflowException()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/put(byte)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ReadOnlyBufferException/ReadOnlyBufferException()
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/initCause(java.lang.Throwable)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/wearable/zzl/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/getInt(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/view/ViewGroup/findViewById(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/JSONObject(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/getString(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/getInt(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/content/Context/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/length()
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/getJSONArray(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateStepsCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/getInt(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/JSONObject(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/getString(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/getInt(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/content/Context/getString(int,java.lang.Object[])
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/lang/String/valueOf(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#android/view/ViewGroup/findViewById(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONArray/length()
com/sonymobile/lifelog/ui/card/CardListAdapter/populateSleepCard(android.view.ViewGroup,com.sonymobile.lifelog.model.cards.CardItem)#org/json/JSONObject/getJSONArray(java.lang.String)
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#com/sonymobile/lifelog/ui/card/CardListAdapter/notifyItemRangeInserted(int,int)
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/ui/card/CardListAdapter/addCards(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/content/Context/startActivities(android.content.Intent[])
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/getIntents()
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntent(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/addNextIntentWithParentStack(android.content.Intent)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/app/TaskStackBuilder/create(android.content.Context)
com/sonymobile/lifelog/utils/NotificationUtils$9/handleAction(android.content.Context,android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzw/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzw/toString()#java/lang/String/length()
com/google/android/gms/internal/measurement/zzw/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzw/toString()#com/google/android/gms/internal/measurement/zzw/zza(java.lang.Object)
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzw/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzw/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzw/toString()#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzw/toString()#java/util/HashMap/HashMap()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#android/util/TypedValue/TypedValue()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#android/graphics/Rect/Rect()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/lang/Integer/toHexString(int)
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/io/InputStream/close()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#android/content/res/Resources/openRawResource(int,android.util.TypedValue)
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#android/graphics/BitmapFactory$Options/BitmapFactory$Options()
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#android/graphics/BitmapFactory/decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)
com/sonymobile/flix/components/NinePatchImage/decodeNinePatch(android.content.res.Resources,int,android.graphics.Rect,android.graphics.BitmapFactory$Options)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/media/MediaPlayer/start()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/content/Context/getPackageName()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/media/MediaPlayer/setDataSource(android.content.Context,android.net.Uri)
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/media/MediaPlayer/prepare()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/media/MediaPlayer/MediaPlayer()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/net/Uri/parse(java.lang.String)
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#android/media/MediaPlayer/setAudioStreamType(int)
com/sonymobile/lifelog/ui/graph/GoalAnimationDialog/startSound(android.content.Context)#java/lang/StringBuilder/toString()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/canScrollList(int)
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getHeight()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getFirstVisiblePosition()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildAt(int)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/StringBuilder/StringBuilder()
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#android/widget/ImageView/getWidth()
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#com/squareup/picasso/MemoryPolicy/shouldReadFromMemoryCache(int)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/System/nanoTime()
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#android/widget/ImageView/isLayoutRequested()
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#android/widget/ImageView/getHeight()
com/squareup/picasso/RequestCreator/into(android.widget.ImageView,com.squareup.picasso.Callback)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/util/List/isEmpty()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/util/List/iterator()
com/sonymobile/lifelog/logger/LoggerHostService/onActivityChanged(com.sonymobile.lifelog.activityengine.engine.model.ActivityType,java.util.List,long,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#android/content/Intent/getAction()
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#com/sonymobile/lifelog/logger/LoggerHostService/startForeground(int,android.app.Notification)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/String/hashCode()
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#com/sonymobile/lifelog/activityengine/engine/ActivityEngineType/createFromType(android.content.Context,com.sonymobile.lifelog.activityengine.engine.ActivityEngineType)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/logger/LoggerHostService/handleIntent(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/hasNext()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getKey()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/size()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/next()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/ensureCapacity(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Set/iterator()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getValue()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/lang/Math/max(int,int)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/size()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/iterator()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/remove(java.lang.Object)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/lang/Math/max(long,long)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/addAll(java.util.Collection)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/lang/Long/longValue()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/clear()
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzbf/zzdg()#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/lang/String/valueOf(long)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/lang/Long/valueOf(long)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/net/Uri$Builder/Uri$Builder()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/net/Uri$Builder/build()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/content/ContentValues/ContentValues()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/net/Uri/getEncodedQuery()
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/database/sqlite/SQLiteDatabase/insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzbf/zza(com.google.android.gms.internal.measurement.zzaw,boolean)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/locationfilter/Location/toString()#java/lang/Double/valueOf(double)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/append(long)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/append(char)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/append(double)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/append(float)
com/sonymobile/locationfilter/Location/toString()#java/lang/StringBuilder/toString()
com/sonymobile/locationfilter/Location/toString()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/sonymobile/locationfilter/Location/toString()#java/lang/Float/valueOf(float)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/Character/codePointAt(java.lang.CharSequence,int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/isReadOnly()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/arrayOffset()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/remaining()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/hasArray()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/BufferOverflowException()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/put(byte)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ReadOnlyBufferException/ReadOnlyBufferException()
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/initCause(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzaby/zza(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/security/cert/X509Certificate/getSubjectDN()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/util/List/isEmpty()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/util/List/size()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/String/equals(java.lang.Object)
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/util/List/get(int)
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/AssertionError/AssertionError()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/security/Principal/getName()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
okhttp3/CertificatePinner/check(java.lang.String,java.util.List)#javax/net/ssl/SSLPeerUnverifiedException/SSLPeerUnverifiedException(java.lang.String)
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#java/util/Iterator/next()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#org/json/JSONException/getMessage()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#java/util/Set/iterator()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#org/json/JSONArray/JSONArray()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#java/util/List/iterator()
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#org/json/JSONArray/put(java.lang.Object)
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/sonymobile/lifelog/logger/service/content/Logs/toUploadContent()#org/json/JSONObject/JSONObject(java.lang.String)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/invalidate()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/disableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/enableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#android/view/Window/getDecorView()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/GoogleProxyActivity/getString(int)
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(boolean)
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/GoogleProxyActivity/getIntent()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/GoogleProxyActivity/setContentView(int)
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/login/GoogleProxyActivity/getWindow()
com/sonymobile/lifelog/login/GoogleProxyActivity/onCreate(android.os.Bundle)#android/view/View/setOnTouchListener(android.view.View$OnTouchListener)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/w(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/i(java.lang.String,java.lang.String,java.lang.Throwable)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/i(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/d(java.lang.String,java.lang.String,java.lang.Throwable)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#android/util/Log/d(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/activityengine/logging/Logger/log(com.sonymobile.lifelog.activityengine.logging.Logger$Lvl,java.lang.String,java.lang.String,java.lang.Throwable)#com/sonymobile/lifelog/activityengine/logging/Logger$Lvl/ordinal()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/data/CandleEntry/getX()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLines(float[],android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleEntry/getIcon()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleData/getDataSets()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/google/android/gms/tagmanager/zzer/run()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzer/run()#android/net/NetworkInfo/isConnected()
com/google/android/gms/tagmanager/zzer/run()#android/content/Context/getSystemService(java.lang.String)
com/google/android/gms/tagmanager/zzer/run()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzer/run()#com/google/android/gms/tagmanager/zzeh$zza/equals(java.lang.Object)
com/google/android/gms/tagmanager/zzer/run()#android/net/ConnectivityManager/getActiveNetworkInfo()
com/google/android/gms/tagmanager/zzer/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/trim()
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/length()
com/google/android/gms/tagmanager/zzer/run()#java/io/IOException/getMessage()
com/google/android/gms/tagmanager/zzer/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/tagmanager/zzer/run()#java/io/ByteArrayOutputStream/toByteArray()
com/google/android/gms/tagmanager/zzer/run()#java/lang/String/String(java.lang.String)
com/google/android/gms/tagmanager/zzer/run()#java/lang/StringBuilder/toString()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/start()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/TextView/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/animate()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/TextView/animate()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/getVisibility()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/start()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/TextView/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/animate()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/TextView/animate()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/getVisibility()
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setId(int)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout/getContext()
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/addView(android.view.View)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/setText(java.lang.CharSequence)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setText(java.lang.CharSequence)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/Button(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/LinearLayout(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/TextView(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout/addView(android.view.View)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/setOrientation(int)
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Field/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Field/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Header/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$QueryName/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/Class/isAssignableFrom(java.lang.Class)
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/Class/isArray()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$QueryName/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/Class/getSimpleName()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Header/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/Class/getComponentType()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Query/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/StringBuilder/append(java.lang.String)
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$RawPart/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Part/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/String/equals(java.lang.Object)
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/Class/getName()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/String/isEmpty()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/StringBuilder/StringBuilder()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Part/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$RawPart/iterable()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#retrofit2/ParameterHandler$Query/array()
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/StringBuilder/append(java.lang.Object)
retrofit2/ServiceMethod$Builder/parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)#java/lang/StringBuilder/toString()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#java/lang/CharSequence/length()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Canvas/drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/ascent()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Rect/isEmpty()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Paint/Paint(int)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/descent()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/measureText(java.lang.CharSequence,int,int)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/Intent/setClass(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#com/sonymobile/lifelog/model/ActivityType/getType()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#com/sonymobile/lifelog/model/ActivityType/ordinal()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#java/util/ArrayList/size()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/Intent/Intent()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/Intent/putExtra(java.lang.String,java.lang.String[])
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#android/content/Context/getResources()
com/sonymobile/lifelog/ui/share/ShareActivity$IntentBuilder/build()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzx/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzx/toString()#java/lang/String/length()
com/google/android/gms/internal/measurement/zzx/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzx/toString()#com/google/android/gms/internal/measurement/zzx/zza(java.lang.Object)
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzx/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzx/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzx/toString()#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzx/toString()#java/util/HashMap/HashMap()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#android/os/Looper/getMainLooper()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/length()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#com/google/android/gms/internal/common/zze/post(java.lang.Runnable)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/StringBuilder(int)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/toRadians(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/sin(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/cos(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/sqrt(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/toString()
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/atan2(double,double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/append(double)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rLineTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rMoveTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rCubicTo(float,float,float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/lineTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rQuadTo(float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/quadTo(float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/cubicTo(float,float,float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/close()
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/moveTo(float,float)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/getMeasuredWidth()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getChildMeasureSpec(int,int,int)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/measure(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getChildMeasureSpec(int,int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View/measure(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getChildCount()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/setMeasuredDimension(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getSuggestedMinimumWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getSuggestedMinimumHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getChildAt(int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/getContext()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setSingleLine()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setTextColor(int)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/removeView(android.view.View)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/getContext()
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setSingleLine()
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setTextColor(int)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/removeView(android.view.View)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getLayoutParams()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/size()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/layout(int,int,int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/get(int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getHeight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/clear()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getWidth()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/scaleCanvas(android.graphics.Canvas,float)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/moveCanvasOriginTo(android.graphics.Canvas,int,int)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/getAvailableWidth()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/getAvailableHeight()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/getAnimationProgress()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/getHeight()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/restoreCanvas(android.graphics.Canvas)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#java/lang/Math/min(int,int)
com/sonymobile/lifelog/ui/graph/chart/PieChart/onDraw(android.graphics.Canvas)#com/sonymobile/lifelog/ui/graph/chart/PieChart/getWidth()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/SparseArray/indexOfKey(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/SparseArray/put(int,java.lang.Object)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(boolean)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/zaj/onStart()#android/util/SparseArray/size()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/String/length()
com/google/android/gms/common/api/internal/zaj/onStart()#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/append(boolean)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaj/onStart()#android/util/Log/d(java.lang.String,java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#com/github/mikephil/charting/data/DataSet/getLabel()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/util/List/size()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/toString()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/StringBuffer()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/getHint()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/getPaddingEnd()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/getPaddingStart()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#java/lang/Float/floatValue()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#java/lang/CharSequence/toString()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/setTextSize(int,float)
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#android/graphics/Paint/set(android.graphics.Paint)
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#java/lang/Float/valueOf(float)
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/getPaint()
com/sonymobile/lifelog/ui/widget/AutoScalingEditText/scaleFontSizeToFit(java.lang.CharSequence,int)#java/lang/String/isEmpty()
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/String/regionMatches(boolean,int,java.lang.String,int,int)
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/String/length()
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/util/List/addAll(java.util.Collection)
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/util/List/clear()
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/String/charAt(int)
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/String/equals(java.lang.Object)
okhttp3/HttpUrl$Builder/parse(okhttp3.HttpUrl,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/app/Fragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/StrictMode$ThreadPolicy$Builder/permitAll()
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/StrictMode/getThreadPolicy()
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/Bundle/Bundle()
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/StrictMode$ThreadPolicy$Builder/StrictMode$ThreadPolicy$Builder(android.os.StrictMode$ThreadPolicy)
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#com/google/android/gms/maps/MapFragment$zzb/onInflate(android.app.Activity,android.os.Bundle,android.os.Bundle)
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/StrictMode/setThreadPolicy(android.os.StrictMode$ThreadPolicy)
com/google/android/gms/maps/MapFragment/onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)#android/os/StrictMode$ThreadPolicy$Builder/build()
com/google/android/gms/internal/measurement/zzch/toString()#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/internal/measurement/zzch/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzch/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzch/toString()#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzch/toString()#java/util/Map/keySet()
com/google/android/gms/internal/measurement/zzch/toString()#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzch/toString()#java/util/ArrayList/size()
com/google/android/gms/internal/measurement/zzch/toString()#java/util/ArrayList/get(int)
com/google/android/gms/internal/measurement/zzch/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzch/toString()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/internal/measurement/zzch/toString()#java/util/Collections/sort(java.util.List)
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/Class/getSimpleName()
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getLongExtra(java.lang.String,long)
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/String/hashCode()
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
com/sonymobile/lifelog/service/LoggerApiReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/putExtra(java.lang.String,long)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager/newWakeLock(int,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/setReferenceCounted(boolean)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/startService(android.content.Intent)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/getSystemService(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/acquire(long)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/ComponentName/flattenToShortString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/content/Intent/getIntExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/os/PowerManager$WakeLock/release()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/get(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/remove(int)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/String/length()
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/util/concurrent/ScheduledFuture/cancel(boolean)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/StringBuilder/append(long)
com/google/android/gms/tagmanager/zzes/zza(long,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/StringBuilder/append(int)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/String/length()
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/String/substring(int,int)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/String/toCharArray()
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/wearable/internal/zzay/toString()#java/lang/String/trim()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/BaseFragmentActivityApi16/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/remove(int)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setTranslationY(float)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setTranslationX(float)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchAnimationsFinished()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/clear()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/size()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/get(int)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setAlpha(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/translationY(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/alpha(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/start()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/View/animate()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/support/v7/widget/DefaultItemAnimator/getChangeDuration()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/translationX(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#java/util/ArrayList/add(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getChangeDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/lang/Math/max(long,long)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/Iterator/next()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/clear()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/add(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/addAll(java.util.Collection)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getRemoveDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/get(int)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/iterator()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/ArrayList()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/Iterator/hasNext()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getMoveDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/lang/Runnable/run()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/remove(int)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setTranslationY(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setTranslationX(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setAlpha(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/ViewPropertyAnimator/cancel()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/size()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/animate()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/get(int)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/lang/Math/max(int,int)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/Arrays/asList(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/List/size()
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/util/List/get(int)
com/sonymobile/locationfilter/filters/MedianFilter/doThirteen(java.util.List)#java/lang/Math/min(int,int)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/lang/Math/max(int,int)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/Arrays/asList(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/List/size()
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/util/List/get(int)
com/sonymobile/locationfilter/filters/MedianFilter/doFive(java.util.List)#java/lang/Math/min(int,int)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/lang/Math/max(int,int)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/Arrays/asList(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/ArrayList/toArray(java.lang.Object[])
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/List/size()
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/util/List/get(int)
com/sonymobile/locationfilter/filters/MedianFilter/doNine(java.util.List)#java/lang/Math/min(int,int)
com/google/gson/stream/JsonReader/nextInt()#java/lang/String/String(char[],int,int)
com/google/gson/stream/JsonReader/nextInt()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/gson/stream/JsonReader/nextInt()#java/lang/Double/parseDouble(java.lang.String)
com/google/gson/stream/JsonReader/nextInt()#java/lang/StringBuilder/StringBuilder()
com/google/gson/stream/JsonReader/nextInt()#java/lang/Integer/parseInt(java.lang.String)
com/google/gson/stream/JsonReader/nextInt()#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/google/gson/stream/JsonReader/nextInt()#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/stream/JsonReader/nextInt()#java/lang/StringBuilder/toString()
com/google/gson/stream/JsonReader/nextInt()#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/stream/JsonReader/nextInt()#java/lang/StringBuilder/append(long)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/String/String(char[],int,int)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/Double/parseDouble(java.lang.String)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/Double/isNaN(double)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/Double/isInfinite(double)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/StringBuilder/StringBuilder()
com/google/gson/stream/JsonReader/nextDouble()#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/StringBuilder/append(double)
com/google/gson/stream/JsonReader/nextDouble()#java/lang/StringBuilder/toString()
com/google/gson/stream/JsonReader/nextDouble()#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/stream/JsonReader/nextLong()#java/lang/String/String(char[],int,int)
com/google/gson/stream/JsonReader/nextLong()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/gson/stream/JsonReader/nextLong()#java/lang/Long/parseLong(java.lang.String)
com/google/gson/stream/JsonReader/nextLong()#java/lang/Double/parseDouble(java.lang.String)
com/google/gson/stream/JsonReader/nextLong()#java/lang/StringBuilder/StringBuilder()
com/google/gson/stream/JsonReader/nextLong()#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/google/gson/stream/JsonReader/nextLong()#java/lang/StringBuilder/append(java.lang.Object)
com/google/gson/stream/JsonReader/nextLong()#java/lang/StringBuilder/toString()
com/google/gson/stream/JsonReader/nextLong()#java/lang/StringBuilder/append(java.lang.String)
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
okhttp3/MediaType/parse(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
okhttp3/MediaType/parse(java.lang.String)#java/util/regex/Matcher/lookingAt()
okhttp3/MediaType/parse(java.lang.String)#java/util/regex/Matcher/end()
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/substring(int,int)
okhttp3/MediaType/parse(java.lang.String)#java/lang/StringBuilder/StringBuilder()
okhttp3/MediaType/parse(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okhttp3/MediaType/parse(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
okhttp3/MediaType/parse(java.lang.String)#java/util/regex/Matcher/group(int)
okhttp3/MediaType/parse(java.lang.String)#java/util/regex/Matcher/region(int,int)
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/length()
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/startsWith(java.lang.String)
okhttp3/MediaType/parse(java.lang.String)#java/lang/StringBuilder/toString()
okhttp3/MediaType/parse(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/TimeZone/getTimeZone(java.lang.String)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/isEmpty()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/StringBuilder()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(char)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/Object/getClass()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/Math/min(int,int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/GregorianCalendar/GregorianCalendar(int,int,int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/GregorianCalendar/GregorianCalendar(java.util.TimeZone)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/text/ParseException/initCause(java.lang.Throwable)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/setIndex(int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(java.lang.String)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/charAt(int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/Calendar/set(int,int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/Calendar/getTime()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/length()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/equals(java.lang.Object)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/Class/getName()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/TimeZone/getID()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/text/ParseException/ParseException(java.lang.String,int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/substring(int)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/util/Calendar/setLenient(boolean)
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/toString()
com/google/gson/internal/bind/util/ISO8601Utils/parse(java.lang.String,java.text.ParsePosition)#java/lang/Exception/getMessage()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#android/view/inputmethod/InputMethodManager/toggleSoftInput(int,int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#android/support/v4/app/FragmentActivity/getSystemService(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#android/widget/LinearLayout/setPadding(int,int,int,int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getActivity()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#android/content/res/Resources/getDimensionPixelSize(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/requestFocus()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setupNameEditor()#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/setEnabled(boolean)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/content/res/Resources/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getView()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getArguments()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/view/View/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#com/sonymobile/lifelog/ui/widget/AutoScalingEditText/setEnabled(boolean)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#com/sonymobile/lifelog/login/create/CreateAccountNameFragment/getResources()
com/sonymobile/lifelog/login/create/CreateAccountNameFragment/setUpViews()#android/os/Bundle/getString(java.lang.String)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/String/valueOf(java.lang.Object)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/String/indexOf(java.lang.String,int)
com/google/common/base/Strings/lenientFormat(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder(int)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/util/logging/Logger/getLogger(java.lang.String)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/System/identityHashCode(java.lang.Object)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/Integer/toHexString(int)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/Class/getName()
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/util/logging/Logger/log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/StringBuilder/append(char)
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/Object/getClass()
com/google/common/base/Strings/lenientToString(java.lang.Object)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/widget/TextView/setAlpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/widget/TextView/setPivotX(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/widget/TextView/animate()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/widget/TextView/setScaleY(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/widget/TextView/setScaleX(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/setDuration(long)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/alpha(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/start()
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/scaleY(float)
com/sonymobile/lifelog/ui/graph/component/GraphHeaderView$1/onMeasured(android.view.View,int,int)#android/view/ViewPropertyAnimator/scaleX(float)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Rect/offset(int,int)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#java/lang/Math/ceil(double)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getWidth()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Matrix/isIdentity()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Matrix/mapRect(android.graphics.RectF)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#java/lang/Math/floor(double)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/RectF/set(android.graphics.Rect)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getMatrix()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getTop()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getHeight()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getLeft()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/support/v7/widget/RecyclerView/indexOfChild(android.view.View)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/getParent()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/invalidate()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/getContext()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/content/res/Resources/getDisplayMetrics()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Rect/height()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Paint/setTextSize(float)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/getResources()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setLayerType(int,android.graphics.Paint)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Paint/setColor(int)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Rect/Rect()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#java/lang/String/length()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/init()#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/getContext()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/List/get(int)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/invalidate()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/List/size()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/List/clear()
com/sonymobile/lifelog/ui/graph/chart/SleepWeekChart/setSleepSessions(java.util.List)#java/util/concurrent/TimeUnit/toDays(long)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredHeight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/widget/FrameLayout/onLayout(boolean,int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getLeft()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getLeft()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getLeft()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getDrawable()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingTop()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingLeft()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingRight()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/AppCompatImageView/setFrame(int,int,int,int)
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getWidth()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getHeight()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getBackground()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingBottom()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/setTheme(int)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/setSupportActionBar(android.support.v7.widget.Toolbar)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/getSupportActionBar()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/setContentView(int)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/getSystemService(java.lang.String)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/getIntent()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#android/content/Intent/getIntExtra(java.lang.String,int)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/onCreate(android.os.Bundle)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/findViewById(int)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#java/util/concurrent/TimeUnit/toMillis(long)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#java/util/Calendar/setTimeInMillis(long)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#java/util/Calendar/clear()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#java/util/Calendar/get(int)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#android/content/Intent/putExtra(java.lang.String,boolean)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finish()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/setResult(int,android.content.Intent)
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#android/content/Intent/Intent()
com/sonymobile/lifelog/ui/graph/addedit/ManualSleepActivity/finishWithResult(boolean)#java/lang/String/valueOf(long)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#android/text/util/Linkify/addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#java/util/regex/Pattern/compile(java.lang.String)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#android/support/v7/app/AlertDialog/findViewById(int)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#android/widget/TextView/setLinkTextColor(int)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/getString(int)
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/getContext()
com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment$3/onClick(android.view.View)#com/sonymobile/lifelog/login/create/CreateAccountBirthdayFragment/getString(int,java.lang.Object[])
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#com/sonymobile/lifelog/provider/OfflineSyncDataHandler$4/getType()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/util/List/iterator()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/lang/StringBuilder/append(double)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractLocation(android.database.Cursor,long,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/Float/parseFloat(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#android/database/Cursor/getLong(int)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#android/database/Cursor/getString(int)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/StringBuilder/append(float)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/util/concurrent/TimeUnit/toMinutes(long)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/String/trim()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/extractPhysicalData(android.database.Cursor,long)#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#android/content/ContentProviderOperation/newDelete(android.net.Uri)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#android/content/ContentProviderOperation$Builder/build()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#android/content/ContentResolver/applyBatch(java.lang.String,java.util.ArrayList)
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#android/content/ContentProviderOperation$Builder/withSelection(java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/OfflineSyncDataHandler/clearAll()#java/lang/Exception/getMessage()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getDimension(int,float)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/view/InflateException/InflateException(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getInt(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getFloat(int,float)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/peekValue(int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofFloat(java.lang.String,float[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofInt(java.lang.String,int[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getColor(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/setEvaluator(android.animation.TypeEvaluator)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/getPosTan(float,float[],float[])
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Float/valueOf(float)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/PathMeasure(android.graphics.Path,boolean)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Float/floatValue()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Math/min(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/getLength()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/nextContour()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/animation/PropertyValuesHolder/ofFloat(java.lang.String,float[])
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/animation/ObjectAnimator/setValues(android.animation.PropertyValuesHolder[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/PropertyValuesHolder/ofKeyframe(java.lang.String,android.animation.Keyframe[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/PropertyValuesHolder/setEvaluator(android.animation.TypeEvaluator)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/Keyframe/getFraction()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/Keyframe/setFraction(float)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/add(int,java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/Iterator/hasNext()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/playSequentially(android.animation.Animator[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/iterator()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/Iterator/next()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/ValueAnimator/setValues(android.animation.PropertyValuesHolder[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/content/res/TypedArray/recycle()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/playTogether(android.animation.Animator[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/AnimatorSet()
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#com/sonymobile/lifelog/provider/DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/insert(android.net.Uri,android.content.ContentValues)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#com/sonymobile/lifelog/provider/DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/isWriteOperation()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/List/isEmpty()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/size()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/ArrayList/get(int)
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/getUri()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/content/ContentProviderOperation/apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/List/contains(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#java/util/List/iterator()
com/sonymobile/lifelog/provider/MoveProvider/applyBatch(java.util.ArrayList)#android/database/sqlite/SQLiteDatabase/beginTransactionNonExclusive()
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/Iterator/next()
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/util/List/iterator()
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/doTableCleanup(android.database.sqlite.SQLiteDatabase,java.util.List)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/MoveProvider/delete(android.net.Uri,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#com/sonymobile/lifelog/provider/DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/bulkInsert(android.net.Uri,android.content.ContentValues[])#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/Cursor/setNotificationUri(android.content.ContentResolver,android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/sonymobile/lifelog/provider/DatabaseHelper/getReadableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/Context/getContentResolver()
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/MoveProvider/getContext()
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#com/sonymobile/lifelog/provider/DatabaseHelper/getWritableDatabase()
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/ContentResolver/notifyChange(android.net.Uri,android.database.ContentObserver)
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/UriMatcher/match(android.net.Uri)
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/sonymobile/lifelog/provider/MoveProvider/update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])#android/content/Context/getContentResolver()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/widget/EdgeEffect/setSize(int,int)
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getMeasuredHeight()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v7/widget/RecyclerView/ensureBottomGlow()#android/support/v7/widget/RecyclerView/getMeasuredWidth()
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#android/support/v7/widget/RecyclerView/offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#android/view/View/getWidth()
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView/isPreferredNextFocusAbsolute(android.view.View,android.view.View,int)#android/view/View/getHeight()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/getScaledPagingTouchSlop()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/get(android.content.Context)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/offsetLocation(float,float)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/widget/EdgeEffect/setSize(int,int)
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getMeasuredHeight()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v7/widget/RecyclerView/ensureTopGlow()#android/support/v7/widget/RecyclerView/getMeasuredWidth()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/NoSuchMethodException/initCause(java.lang.Throwable)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/support/v7/widget/RecyclerView/isInEditMode()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Integer/valueOf(int)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/content/Context/getClassLoader()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/String/trim()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/asSubclass(java.lang.Class)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/util/AttributeSet/getPositionDescription()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/String/isEmpty()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Object/getClass()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/getClassLoader()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/Package/getName()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#android/content/Context/getPackageName()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/Class/getPackage()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(char)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/String/charAt(int)
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/widget/EdgeEffect/setSize(int,int)
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getMeasuredHeight()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v7/widget/RecyclerView/ensureRightGlow()#android/support/v7/widget/RecyclerView/getMeasuredWidth()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#java/util/ArrayList/size()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#java/util/ArrayList/get(int)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/widget/EdgeEffect/setSize(int,int)
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getMeasuredHeight()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v7/widget/RecyclerView/ensureLeftGlow()#android/support/v7/widget/RecyclerView/getMeasuredWidth()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/isFocusable()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/hasFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/findViewById(int)
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/getDescendantFocusability()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/hasFocusable()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/requestFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/isFocused()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/getParent()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/requestFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/getFocusedChild()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/hasFocus()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/getAdapter()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.lang.Object[])
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/setSelection(int,boolean)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupWeightSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/ArrayAdapter/getPosition(java.lang.Object)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.lang.Object[])
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/view/View/findViewById(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#java/lang/Math/round(float)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#java/lang/Integer/valueOf(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/ArrayAdapter/getPosition(java.lang.Object)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/view/View/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/getAdapter()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/widget/TextView/setVisibility(int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/setupDistanceSpinners(android.content.Context,float,boolean,android.view.View,android.support.v7.widget.AppCompatSpinner,android.support.v7.widget.AppCompatSpinner,android.widget.TextView)#android/support/v7/widget/AppCompatSpinner/setSelection(int,boolean)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/widget/DatePicker/setMinDate(long)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#java/text/SimpleDateFormat/parse(java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#java/text/ParseException/getMessage()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/app/DatePickerDialog/getDatePicker()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/app/DatePickerDialog/DatePickerDialog(android.content.Context,android.app.DatePickerDialog$OnDateSetListener,int,int,int)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#java/util/Date/getTime()
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/widget/DatePicker/setMaxDate(long)
com/sonymobile/lifelog/ui/graph/PickerDialogHelper/showDatePickerDialog(android.content.Context,long,java.lang.String,android.app.DatePickerDialog$OnDateSetListener)#android/app/DatePickerDialog/show()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onEvent(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onCaptioningEnabledChanged(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChangedDeprecated(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueTitleChanged(java.lang.CharSequence)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createTypedArrayList(android.os.Parcelable$Creator)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onRepeatModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onExtrasChanged(android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onSessionDestroyed()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueChanged(java.util.List)
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getCurrX()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getCurrY()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/computeScrollOffset()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getFinalX()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getFinalY()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/ViewGroup/post(java.lang.Runnable)
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getRight()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getWidth()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getBottom()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#java/lang/Integer/valueOf(int)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getHeight()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getLeft()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getLocationInWindow(int[])
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getTop()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getWidth()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getHeight()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Integer/intValue()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/ChangeBounds/addListener(android.support.transition.Transition$TransitionListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Math/max(int,int)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/draw(android.graphics.Canvas)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/util/Map/get(java.lang.Object)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/equals(java.lang.Object)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/playTogether(android.animation.Animator[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getLocationInWindow(int[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/drawable/BitmapDrawable/BitmapDrawable(android.graphics.Bitmap)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/ChangeBounds/getPathMotion()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/AnimatorSet()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/ArrayList/ArrayList()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/Resources/obtainAttributes(android.util.AttributeSet,int[])
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/isEmpty()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/size()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/add(java.lang.Object)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/next()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getString(int)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/recycle()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/toArray(java.lang.Object[])
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getInteger(int,int)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/length()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/util/List/size()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/System/currentTimeMillis()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/Intent()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/os/SystemClock/elapsedRealtime()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/util/Log/wtf(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Context/getPackageName()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Context/startService(android.content.Intent)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/util/List/get(int)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setClickable(boolean)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setVisibility(int)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/TextView/setSingleLine(boolean)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setId(int)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/ImageView/setVisibility(int)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/view/View/setFocusable(boolean)
android/support/v7/preference/Preference/onBindViewHolder(android.support.v7.preference.PreferenceViewHolder)#android/widget/TextView/setVisibility(int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/addView(android.view.View,int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setVisibility(int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/view/View/getParent()
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setVisibility(int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/getContext()
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/removeView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/addView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/abortAnimation()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/computeScrollOffset()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrX()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrY()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/support/v7/widget/RecyclerView/getOverScrollMode()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#java/util/ArrayList/isEmpty()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrVelocity()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/isFinished()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getFinalX()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getFinalY()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/net/HttpURLConnection/disconnect()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/Class/getSimpleName()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/StringBuilder/append(int)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/String/length()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/io/IOException/getMessage()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/util/List/size()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/util/List/get(int)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/Object/getClass()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/Math/min(int,int)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/StringBuilder/toString()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/io/InputStream/close()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/String/concat(java.lang.String)
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/net/HttpURLConnection/getInputStream()
com/google/android/gms/tagmanager/zzfu/zze(java.util.List)#java/lang/String/String(java.lang.String)
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/ArrayList/add(java.lang.Object)
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String)
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/ArrayList/iterator()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/ArrayList/isEmpty()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/wear/DataSender$3/onConnected(android.os.Bundle)#java/lang/String/getBytes(java.nio.charset.Charset)
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/ArrayList/ArrayList(java.util.Collection)
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/List/size()
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/Collections/sort(java.util.List)
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/List/get(int)
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/List/iterator()
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/List/remove(java.lang.Object)
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/util/Iterator/next()
com/sonymobile/lifelog/activityengine/engine/motiondetector/software/SoftwareMotionDetector$AccelerometerSensorListener/isMoving()#java/lang/Double/doubleValue()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/util/UUID/hashCode()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/util/UUID/equals(java.lang.Object)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/StringBuilder/append(int)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/util/concurrent/atomic/AtomicBoolean/get()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/StringBuilder/append(java.lang.Object)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/sessionEnd(java.util.UUID)#java/lang/System/currentTimeMillis()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#android/os/PowerManager$WakeLock/acquire()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/util/concurrent/Semaphore/Semaphore(int)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#android/hardware/SensorManager/registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#android/hardware/SensorManager/flush(android.hardware.SensorEventListener)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#android/os/PowerManager$WakeLock/release()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/lang/InterruptedException/getMessage()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#java/util/concurrent/Semaphore/tryAcquire(long,java.util.concurrent.TimeUnit)
com/sonymobile/lifelog/activityengine/stepdetector/hardware/HardwareStepCounter/getLatestSteps(boolean)#android/hardware/SensorManager/unregisterListener(android.hardware.SensorEventListener)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/substring(int,int)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/util/Iterator/next()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/lastIndexOf(java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/util/List/iterator()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/createSelectionString(java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#java/lang/StringBuilder/append(java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/database/Cursor/getColumnIndex(java.lang.String)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#java/lang/StringBuilder/StringBuilder()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/database/Cursor/getCount()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/content/Context/getContentResolver()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/database/Cursor/getString(int)
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/database/Cursor/moveToFirst()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#java/lang/StringBuilder/toString()
com/sonymobile/lifelog/logger/uploads/Uploader$UploadTask/getRetrySessions()#android/database/Cursor/getInt(int)
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#com/sonymobile/lifelog/service/notification/NotificationService/getApplicationContext()
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/List/addAll(java.util.Collection)
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/Iterator/next()
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/List/add(java.lang.Object)
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/lang/String/valueOf(long)
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/ArrayList/ArrayList()
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/Objects/equals(java.lang.Object,java.lang.Object)
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/Iterator/hasNext()
com/sonymobile/lifelog/service/notification/NotificationService/handleUpdate()#java/util/List/iterator()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Map$Entry/getKey()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/lang/String/length()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Map$Entry/getValue()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Map/entrySet()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Iterator/next()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/analytics/ecommerce/Promotion/zzm(java.lang.String)#java/util/Set/iterator()
