android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/hasMessages(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/clear()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/obtainMessage(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/unbindService(android.content.ServiceConnection)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/Intent(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/bindService(android.content.Intent,android.content.ServiceConnection,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Context/getPackageManager()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/containsKey(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/List/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getKey()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/next()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/equals(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/contains(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getValue()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/Intent()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/HashSet/HashSet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/entrySet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/add(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/isEmpty()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/peek()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/LinkedList/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#com/fsck/k9/activity/ChooseFolder/getString(int)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#com/fsck/k9/activity/ChooseFolder/runOnUiThread(java.lang.Runnable)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/ArrayList/ArrayList()
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/List/size()
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/Iterator/next()
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/fsck/k9/activity/ChooseFolder$4/listFolders(com.fsck.k9.Account,java.util.List)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/size()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#com/fsck/k9/mailstore/LocalMessage/isSet(com.fsck.k9.mail.Flag)
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/LinkedList/LinkedList()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/HashSet/HashSet()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/LinkedList/LinkedList()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener)#java/util/Set/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#com/fsck/k9/mailstore/LocalMessage/getFrom()
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Intent/createChooser(android.content.Intent,java.lang.CharSequence)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Context/startActivity(android.content.Intent)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Context/getString(int)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#com/fsck/k9/mailstore/LocalMessage/getUid()
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Intent/setType(java.lang.String)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Intent/Intent(java.lang.String)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#com/fsck/k9/mailstore/LocalMessage/getRecipients(com.fsck.k9.mail.Message$RecipientType)
com/fsck/k9/controller/MessagingController/sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage)#android/content/Intent/putExtra(java.lang.String,java.lang.String[])
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/util/Date/compareTo(java.util.Date)
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getUid()
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getInternalDate()
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/util/Collections/singletonList(java.lang.Object)
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/MessagingController/processPendingAppend(com.fsck.k9.controller.MessagingControllerCommands$PendingAppend,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/isSet(com.fsck.k9.mail.Flag)
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/List/isEmpty()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/fsck/k9/controller/MessagingController/deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener)#java/util/Collections/singleton(java.lang.Object)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/after(java.util.Date)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/isEmpty()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/getTime()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/subList(int,int)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/size()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/before(java.util.Date)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/lang/Long/longValue()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/Date()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/Date(long)
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/clear()
com/fsck/k9/controller/MessagingController/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/List/size()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/database/Cursor/close()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/content/Context/getContentResolver()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/net/Uri/withAppendedPath(android.net.Uri,java.lang.String)
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/util/List/set(int,java.lang.Object)
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/database/Cursor/moveToFirst()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/toString()
com/fsck/k9/controller/MessagingController/getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener)#android/database/Cursor/getInt(int)
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/lang/Thread/isInterrupted()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/lang/Thread/currentThread()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/util/List/subList(int,int)
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/lang/Exception/getMessage()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/util/List/size()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/util/List/clear()
com/fsck/k9/controller/MessagingController/searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/lang/Long/valueOf(long)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/List/size()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getUid()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/Collections/singletonList(java.lang.Object)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/isSet(com.fsck.k9.mail.Flag)
com/fsck/k9/controller/MessagingController/sendPendingMessagesSynchronous(com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getHeader(java.lang.String)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/List/isEmpty()
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/List/subList(int,int)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/List/size()
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/setupPushing(com.fsck.k9.Account)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/List/size()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Map/entrySet()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Map$Entry/getKey()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/HashMap/HashMap()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Map/keySet()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/LinkedList/LinkedList()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/fsck/k9/controller/MessagingController/moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean)#java/util/Map$Entry/getValue()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/Long/valueOf(long)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/Math/max(int,int)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/append(int)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/List/isEmpty()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Map/get(java.lang.Object)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/List/size()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Map/size()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/HashMap/HashMap()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Map/keySet()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/Long/longValue()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/Exception/Exception(java.lang.String)
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/System/currentTimeMillis()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/util/Date/getTime()
com/fsck/k9/controller/MessagingController/synchronizeMailboxSynchronousLegacy(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener)#java/lang/StringBuilder/toString()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/List/isEmpty()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map/isEmpty()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/List/size()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map/size()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/List/iterator()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/util/Collection/iterator()
com/fsck/k9/controller/MessagingController/processPendingMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.Collection,boolean,java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#com/fsck/k9/preferences/TimePickerPreference/getContext()
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/widget/TimePicker/setIs24HourView(java.lang.Boolean)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/widget/TimePicker/setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/widget/TimePicker/setCurrentMinute(java.lang.Integer)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#java/lang/Integer/valueOf(int)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/widget/TimePicker/setCurrentHour(java.lang.Integer)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/widget/TimePicker/TimePicker(android.content.Context)
com/fsck/k9/preferences/TimePickerPreference/onCreateDialogView()#android/text/format/DateFormat/is24HourFormat(android.content.Context)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpSignOnlyDialog/getArguments()
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpSignOnlyDialog/getActivity()
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/activity/compose/PgpSignOnlyDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/from(android.content.Context)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/size()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Iterator/next()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/iterator()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putCharSequenceArray(java.lang.String,java.lang.CharSequence[])
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putStringArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/isEmpty()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putCharSequence(java.lang.String,java.lang.CharSequence)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putBoolean(java.lang.String,boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/isAssignableFrom(java.lang.Class)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/get(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/getType()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/view/MessageCryptoDisplayStatus/hasAssociatedKey()
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/view/MessageCryptoDisplayStatus/isUnencryptedSigned()
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/view/View/findViewById(int)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/view/MessageCryptoDisplayStatus/valueOf(java.lang.String)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/ui/messageview/CryptoInfoDialog/getActivity()
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/from(android.content.Context)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNeutralButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String)
com/fsck/k9/ui/messageview/CryptoInfoDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/ui/messageview/CryptoInfoDialog/getArguments()
com/fsck/k9/activity/ChooseIdentity/refreshView()#com/fsck/k9/activity/ChooseIdentity/getString(int,java.lang.Object[])
com/fsck/k9/activity/ChooseIdentity/refreshView()#java/util/Iterator/hasNext()
com/fsck/k9/activity/ChooseIdentity/refreshView()#java/lang/String/trim()
com/fsck/k9/activity/ChooseIdentity/refreshView()#android/widget/ArrayAdapter/notifyDataSetChanged()
com/fsck/k9/activity/ChooseIdentity/refreshView()#java/util/Iterator/next()
com/fsck/k9/activity/ChooseIdentity/refreshView()#java/lang/String/isEmpty()
com/fsck/k9/activity/ChooseIdentity/refreshView()#android/widget/ArrayAdapter/setNotifyOnChange(boolean)
com/fsck/k9/activity/ChooseIdentity/refreshView()#android/widget/ArrayAdapter/add(java.lang.Object)
com/fsck/k9/activity/ChooseIdentity/refreshView()#java/util/List/iterator()
com/fsck/k9/activity/ChooseIdentity/refreshView()#android/widget/ArrayAdapter/clear()
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseIdentity/getListView()
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#android/widget/ListView/setTextFilterEnabled(boolean)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#android/widget/ListView/setChoiceMode(int)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseIdentity/requestWindowFeature(int)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseIdentity/getIntent()
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseIdentity/setContentView(int)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseIdentity/setListAdapter(android.widget.ListAdapter)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/ChooseIdentity/onCreate(android.os.Bundle)#android/widget/ListView/setItemsCanFocus(boolean)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/os/ParcelFileDescriptor/getFileDescriptor()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/content/res/AssetFileDescriptor/AssetFileDescriptor(android.os.ParcelFileDescriptor,long,long)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/lang/String/equals(java.lang.Object)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/os/Process/myUid()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/net/Uri/getAuthority()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/lang/StringBuilder/toString()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/net/Uri/getPath()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/net/Uri/getScheme()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/io/File/File(java.lang.String)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/content/res/AssetFileDescriptor/createInputStream()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#java/lang/NullPointerException/NullPointerException(java.lang.String)
de/cketti/safecontentresolver/SafeContentResolver/openInputStream(android.net.Uri)#android/os/ParcelFileDescriptor/open(java.io.File,int)
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$LockScreenNotificationVisibility/toString()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$Theme/ordinal()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$NotificationQuickDelete/toString()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#java/util/Map/get(java.lang.Object)
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$SplitViewMode/name()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$NotificationHideSubject/toString()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#java/lang/Boolean/booleanValue()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/K9$BACKGROUND_OPS/name()
com/fsck/k9/K9/save(com.fsck.k9.preferences.StorageEditor)#com/fsck/k9/Account$SortType/name()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$NotificationHideSubject/valueOf(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$SplitViewMode/valueOf(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#android/os/Environment/getExternalStoragePublicDirectory(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#java/io/File/toString()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$Theme/ordinal()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$Theme/values()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$LockScreenNotificationVisibility/valueOf(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$BACKGROUND_OPS/valueOf(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$BACKGROUND_OPS/name()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/Account$SortType/valueOf(java.lang.String)
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/Account$SortType/name()
com/fsck/k9/K9/loadPrefs(com.fsck.k9.Preferences)#com/fsck/k9/K9$NotificationQuickDelete/valueOf(java.lang.String)
com/fsck/k9/K9/registerReceivers()#android/content/IntentFilter/addDataScheme(java.lang.String)
com/fsck/k9/K9/registerReceivers()#com/fsck/k9/K9/registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
com/fsck/k9/K9/registerReceivers()#android/content/IntentFilter/addAction(java.lang.String)
com/fsck/k9/K9/registerReceivers()#java/lang/Thread/start()
com/fsck/k9/K9/registerReceivers()#java/util/concurrent/BlockingQueue/take()
com/fsck/k9/K9/registerReceivers()#java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)
com/fsck/k9/K9/registerReceivers()#java/util/concurrent/SynchronousQueue/SynchronousQueue()
com/fsck/k9/K9/registerReceivers()#android/content/IntentFilter/IntentFilter()
com/fsck/k9/K9/registerReceivers()#com/fsck/k9/K9/registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)
com/fsck/k9/K9/registerReceivers()#android/content/IntentFilter/IntentFilter(java.lang.String)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#com/fsck/k9/activity/EmailAddressList/getIntent()
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#com/fsck/k9/activity/EmailAddressList/getListView()
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#com/fsck/k9/activity/EmailAddressList/setContentView(int)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#com/fsck/k9/activity/EmailAddressList/setTitle(java.lang.CharSequence)
com/fsck/k9/activity/EmailAddressList/onCreate(android.os.Bundle)#com/fsck/k9/activity/EmailAddressList/finish()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Stack/Stack()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Stack/push(java.lang.Object)
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Collections/unmodifiableMap(java.util.Map)
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Stack/isEmpty()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Iterator/hasNext()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Stack/pop()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/Iterator/next()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/HashMap/HashMap()
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mailstore/AttachmentResolver/buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part)#java/util/List/iterator()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Iterator/hasNext()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Map$Entry/getKey()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Map/get(java.lang.Object)
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Iterator/next()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#org/jsoup/safety/Whitelist$AttributeKey/toString()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Set/iterator()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Map$Entry/getValue()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#java/util/Map/entrySet()
org/jsoup/safety/Whitelist/getEnforcedAttributes(java.lang.String)#org/jsoup/safety/Whitelist$AttributeValue/toString()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/util/Iterator/hasNext()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/String/length()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/String/equals(java.lang.Object)
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/util/Set/iterator()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/String/startsWith(java.lang.String)
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/util/Iterator/next()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#org/jsoup/nodes/Element/absUrl(java.lang.String)
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#org/jsoup/safety/Whitelist$Protocol/toString()
org/jsoup/safety/Whitelist/testValidProtocol(org.jsoup.nodes.Element,org.jsoup.nodes.Attribute,java.util.Set)#java/lang/StringBuilder/toString()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/reflect/Field/getGenericType()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/reflect/Field/getModifiers()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/StringBuilder/toString()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/reflect/Field/getName()
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/reflect/Field/setAccessible(boolean)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/moshi/ClassJsonAdapter$1/createFieldBindings(com.squareup.moshi.Moshi,java.lang.reflect.Type,java.util.Map)#java/lang/Class/getDeclaredFields()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/isInterface()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/getModifiers()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/reflect/Modifier/isStatic(int)
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/StringBuilder/toString()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/getSimpleName()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#com/squareup/moshi/ClassJsonAdapter/nullSafe()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/util/TreeMap/TreeMap()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/isEnum()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/util/Set/isEmpty()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/getName()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/Class/getEnclosingClass()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/String/isEmpty()
com/squareup/moshi/ClassJsonAdapter$1/create(java.lang.reflect.Type,java.util.Set,com.squareup.moshi.Moshi)#java/lang/reflect/Modifier/isAbstract(int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/ParcelFileDescriptor/writeToParcel(android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#org/openintents/openpgp/IOpenPgpService2$Stub/createOutputPipe(int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/content/Intent/writeToParcel(android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeInt(int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#org/openintents/openpgp/IOpenPgpService2$Stub/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Iterator/hasNext()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/List/size()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Set/iterator()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/lang/StringBuilder/append(char)
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/List/get(int)
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Map$Entry/getValue()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Map/entrySet()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/lang/StringBuilder/toString()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Map$Entry/getKey()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/Iterator/next()
com/bumptech/glide/load/model/LazyHeaders/generateHeaders()#java/util/HashMap/HashMap()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#com/fsck/k9/activity/compose/RecipientLoader/getContext()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/isNull(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/content/Context/getString(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/getLong(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/getString(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/moveToNext()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/getInt(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map,java.lang.String)#android/database/Cursor/close()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/database/Cursor/close()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/content/ContentResolver/registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/database/Cursor/getString(int)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/database/Cursor/moveToNext()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/List/size()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/util/Map/keySet()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/content/Loader$ForceLoadContentObserver/Loader$ForceLoadContentObserver(android.content.Loader)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/compose/RecipientLoader/fillCryptoStatusData(java.util.Map)#android/database/Cursor/getInt(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#android/database/Cursor/close()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#android/database/Cursor/getString(int)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/compose/RecipientLoader/fillContactDataFromCryptoProvider(java.lang.String,java.util.List,java.util.Map)#android/database/Cursor/moveToNext()
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/Object/equals(java.lang.Object)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/util/Map/get(java.lang.Object)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/util/Map/remove(java.lang.Object)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker/release(com.bumptech.glide.load.Key)#java/util/concurrent/locks/Lock/unlock()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#com/fsck/k9/provider/EmailProvider/getContext()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/database/Cursor/setNotificationUri(android.content.ContentResolver,android.net.Uri)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/add(java.lang.Object)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/get(int)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/net/Uri/getPathSegments()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/HashMap/HashMap()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/Context/getContentResolver()
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/net/Uri/withAppendedPath(android.net.Uri,java.lang.String)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#android/content/UriMatcher/match(android.net.Uri)
com/fsck/k9/provider/EmailProvider/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setVisibility(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/isEmpty()
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getBackground()
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundColor(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/AccountList/getLayoutInflater()
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/graphics/drawable/Drawable/setAlpha(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/AccountList$AccountsAdapter/getItem(int)
com/fsck/k9/activity/AccountList$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/String/split(java.lang.String,int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#com/fsck/k9/mail/transport/smtp/StatusCodeClass/parse(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#com/fsck/k9/mail/transport/smtp/StatusCodeDetail/parse(com.fsck.k9.mail.transport.smtp.StatusCodeSubject,java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/util/List/size()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/lang/String/trim()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#com/fsck/k9/mail/transport/smtp/StatusCodeSubject/parse(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/buildEnhancedNegativeSmtpReplyException(int,java.util.List)#java/util/List/get(int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Iterator/hasNext()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Set/iterator()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Map$Entry/getValue()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/List/iterator()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Map/entrySet()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Map$Entry/getKey()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Arrays/asList(java.lang.Object[])
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/Iterator/next()
com/fsck/k9/mail/transport/smtp/SmtpTransport/sendMessage(com.fsck.k9.mail.Message)#java/util/HashMap/HashMap()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/Socket/connect(java.net.SocketAddress,int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#com/fsck/k9/mail/AuthType/ordinal()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/Socket/Socket()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/InetAddress/getAllByName(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/util/List/contains(java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/Socket/setSoTimeout(int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#javax/net/ssl/SSLException/getMessage()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/Socket/getInputStream()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/util/Arrays/asList(java.lang.Object[])
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream,int)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/net/Socket/getOutputStream()
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/mail/transport/smtp/SmtpTransport/open()#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/Object/toString()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/io/IOException/IOException(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#javax/net/ssl/SSLException/getMessage()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#org/apache/http/HttpResponse/getFirstHeader(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#org/apache/http/StatusLine/getStatusCode()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#org/apache/http/HttpResponse/getStatusLine()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#org/apache/http/Header/getValue()
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/webdav/WebDavStore/doInitialConnection()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/getUserInfo()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#com/fsck/k9/mail/store/webdav/HttpGeneric/setEntity(org.apache.http.HttpEntity)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/lang/String/concat(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/getHost()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#org/apache/http/client/entity/UrlEncodedFormEntity/UrlEncodedFormEntity(java.util.List)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#org/apache/http/client/CookieStore/clear()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/toString()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#org/apache/http/message/BasicNameValuePair/BasicNameValuePair(java.lang.String,java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/getPort()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/getPath()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/getScheme()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/lang/String/substring(int,int)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/lang/String/lastIndexOf(int)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#org/apache/http/HttpResponse/getEntity()
com/fsck/k9/mail/store/webdav/WebDavStore/performFormBasedAuthentication(com.fsck.k9.mail.store.webdav.ConnectionInfo)#java/net/URI/isAbsolute()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/lang/Object/toString()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/io/IOException/IOException(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#com/fsck/k9/mail/store/webdav/HttpGeneric/setEntity(org.apache.http.HttpEntity)
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Set/iterator()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#org/apache/http/StatusLine/getStatusCode()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Map$Entry/getValue()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Map/entrySet()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#org/apache/http/HttpResponse/getStatusLine()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/util/Map$Entry/getKey()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#com/fsck/k9/mail/store/webdav/HttpGeneric/setHeader(java.lang.String,java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/webdav/WebDavStore/sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean)#org/apache/http/HttpResponse/getEntity()
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#javax/xml/parsers/SAXParserFactory/setNamespaceAware(boolean)
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#org/apache/http/entity/StringEntity/setContentType(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#javax/xml/parsers/SAXParserFactory/newSAXParser()
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#java/io/InputStream/close()
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#org/xml/sax/XMLReader/setContentHandler(org.xml.sax.ContentHandler)
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#javax/xml/parsers/SAXParserFactory/newInstance()
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#javax/xml/parsers/SAXParser/getXMLReader()
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#org/apache/http/entity/StringEntity/StringEntity(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#org/xml/sax/InputSource/InputSource(java.io.InputStream)
com/fsck/k9/mail/store/webdav/WebDavStore/processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean)#org/xml/sax/XMLReader/parse(org.xml.sax.InputSource)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#org/apache/http/HttpResponse/getStatusLine()
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/util/List/isEmpty()
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/concat(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#org/apache/http/StatusLine/getStatusCode()
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#org/apache/http/client/CookieStore/getCookies()
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/indexOf(int,int)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/net/URI/getPath()
com/fsck/k9/mail/store/webdav/WebDavStore/testAuthenticationResponse(org.apache.http.HttpResponse)#java/lang/String/substring(int,int)
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/protocol/BasicHttpContext/BasicHttpContext()
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/impl/client/BasicCookieStore/BasicCookieStore()
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#com/fsck/k9/mail/store/webdav/WebDavHttpClient/getConnectionManager()
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/protocol/HttpContext/setAttribute(java.lang.String,java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/params/HttpParams/setBooleanParameter(java.lang.String,boolean)
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/conn/ClientConnectionManager/getSchemeRegistry()
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#com/fsck/k9/mail/store/webdav/WebDavHttpClient/getParams()
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/conn/scheme/SchemeRegistry/register(org.apache.http.conn.scheme.Scheme)
com/fsck/k9/mail/store/webdav/WebDavStore/getHttpClient()#org/apache/http/conn/scheme/Scheme/Scheme(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/charAt(int)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/length()
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/substring(int,int)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/io/BufferedReader/readLine()
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/contains(java.lang.CharSequence)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/indexOf(int,int)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/lang/String/indexOf(int)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/fsck/k9/mail/store/webdav/WebDavStore/findFormAction(java.io.InputStream)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/net/URI/getUserInfo()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/net/URI/getPort()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/net/URI/getScheme()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#com/fsck/k9/mail/AuthType/valueOf(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/net/URI/getHost()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/pop3/Pop3Store/decodeUri(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#java/lang/String/hashCode()
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#com/fsck/k9/mail/store/imap/ImapResponse/isList(int)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#com/fsck/k9/mail/store/imap/ImapList/size()
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#com/fsck/k9/mail/store/imap/ImapResponse/getList(int)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#java/util/HashSet/HashSet(int)
com/fsck/k9/mail/store/imap/PermanentFlagsResponse/parse(com.fsck.k9.mail.store.imap.ImapResponse)#com/fsck/k9/mail/store/imap/ImapList/get(int)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/CircleImageView/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/ViewGroup/onMeasure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setVisibility(int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/min(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/getVisibility()
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/abs(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleY(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(double,double)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleX(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/pow(double,double)
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/HashSet/HashSet(int)
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapStore/listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean)#java/util/Set/add(java.lang.Object)
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#com/fsck/k9/view/RecipientSelectView/getDropDownWidth()
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#com/fsck/k9/view/RecipientSelectView/getDropDownAnchor()
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/widget/ListPopupWindow/show()
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/widget/ListView/setChoiceMode(int)
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/widget/ListPopupWindow/getListView()
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/widget/ListPopupWindow/setWidth(int)
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/widget/ListPopupWindow/setAnchorView(android.view.View)
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#com/fsck/k9/view/RecipientSelectView/getRootView()
com/fsck/k9/view/RecipientSelectView/showAlternatesPopup(java.util.List)#android/view/View/findViewById(int)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/Boolean/toString()
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/net/URI/toString()
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#com/fsck/k9/mail/AuthType/name()
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapStoreUriCreator/create(com.fsck.k9.mail.ServerSettings)#com/fsck/k9/mail/ConnectionSecurity/ordinal()
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/isNull(int)
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/HashMap/HashMap()
com/fsck/k9/mailstore/LocalFolder$11/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/util/Iterator/hasNext()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#com/fsck/k9/activity/Accounts/getResources()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/util/List/size()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#com/fsck/k9/activity/Accounts/getString(int,java.lang.Object[])
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/lang/StringBuilder/append(char)
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/util/List/iterator()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#java/util/Iterator/next()
com/fsck/k9/activity/Accounts$AccountsImportedDialog/generateMessage(com.fsck.k9.activity.Accounts)#android/content/res/Resources/getQuantityString(int,int,java.lang.Object[])
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#android/database/MatrixCursor/addRow(java.lang.Object[])
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/LinkedHashMap/values()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/LinkedHashMap/keySet()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/Iterator/hasNext()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/List/size()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/concurrent/BlockingQueue/take()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/Iterator/next()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#com/fsck/k9/provider/MessageProvider/getContext()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#android/database/MatrixCursor/MatrixCursor(java.lang.String[])
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/LinkedHashMap/size()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/Set/toArray(java.lang.Object[])
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/concurrent/SynchronousQueue/SynchronousQueue()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/List/iterator()
com/fsck/k9/provider/MessageProvider$MessagesQueryHandler/getMessages(java.lang.String[])#java/util/Collection/iterator()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/Set/iterator()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/Iterator/next()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/HashMap/HashMap()
com/fsck/k9/preferences/AccountSettings/getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String)#java/util/Map/keySet()
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#android/util/Log/v(java.lang.String,java.lang.String)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/append(double)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/resource/bitmap/BitmapEncoder/encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#android/net/Uri$Builder/encodedQuery(java.lang.String)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/HashMap/HashMap()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#com/fsck/k9/message/IdentityField/name()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/Integer/valueOf(java.lang.String)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#com/fsck/k9/message/IdentityField/value()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#android/net/Uri$Builder/Uri$Builder()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#com/fsck/k9/message/IdentityField/getIntegerFields()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/Integer/toString()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#com/fsck/k9/message/IdentityField/values()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String,boolean)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/Map/get(java.lang.Object)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/String/length()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#android/net/Uri$Builder/build()
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/String/substring(int)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#android/net/Uri/getQueryParameter(java.lang.String)
com/fsck/k9/message/IdentityHeaderParser/parse(java.lang.String)#java/util/StringTokenizer/nextToken()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/security/cert/CertificateException/CertificateException(java.lang.String)
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/io/IOException/getMessage()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/lang/String/toCharArray()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/security/cert/CertificateException/getMessage()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/lang/StringBuilder/toString()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/security/KeyStore/store(java.io.OutputStream,char[])
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/security/KeyStoreException/getMessage()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/security/NoSuchAlgorithmException/getMessage()
com/fsck/k9/mail/ssl/LocalKeyStore/writeCertificateFile()#java/io/FileNotFoundException/getMessage()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/File/exists()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/File/File(java.lang.String)
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/security/KeyStore/load(java.io.InputStream,char[])
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/lang/String/toCharArray()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/File/length()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/security/KeyStore/getDefaultType()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/File/getAbsolutePath()
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/security/KeyStore/getInstance(java.lang.String)
com/fsck/k9/mail/ssl/LocalKeyStore/setKeyStoreFile(java.io.File)#java/io/File/delete()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/getTargets()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/containsAll(java.util.Collection)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionAt(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionCount()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/removeTarget(android.view.View)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/addTarget(android.view.View)
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/Set/size()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/Set/isEmpty()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/TreeSet/iterator()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/TreeSet/remove(java.lang.Object)
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/TreeSet/TreeSet()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/TreeSet/TreeSet(java.util.Collection)
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/Collections/emptyList()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/lang/Long/longValue()
com/fsck/k9/mail/store/imap/IdGrouper/groupIds(java.util.Set)#java/util/TreeSet/add(java.lang.Object)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/StringBuilder/append(char)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/Character/isWhitespace(char)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/Math/min(int,int)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/james/mime4j/codec/QuotedPrintableInputStream/read0(byte[],int,int)#java/lang/Character/isWhitespace(int)
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/List/isEmpty()
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/lang/Boolean/booleanValue()
com/fsck/k9/mail/internet/MessageExtractor/findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean)#java/util/List/iterator()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/hasNext()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/iterator()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/putNull(java.lang.String)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/UUID/randomUUID()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/next()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/UUID/toString()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder$14/doDbWork(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/clear()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getBounds()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getLevel()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/setLevel(int)
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/setBounds(android.graphics.Rect)
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getConstantState()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getState()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/isVisible()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/DrawableWrapperApi14/invalidateSelf()
android/support/v4/graphics/drawable/DrawableWrapperApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setTextZoom(int)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setRenderPriority(android.webkit.WebSettings$RenderPriority)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setBackgroundColor(int)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setVerticalScrollbarOverlay(boolean)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setLoadsImagesAutomatically(boolean)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/getSettings()
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setScrollBarStyle(int)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setVerticalScrollBarEnabled(boolean)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setLongClickable(boolean)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setJavaScriptEnabled(boolean)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setCacheMode(int)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setBuiltInZoomControls(boolean)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setSupportZoom(boolean)
com/fsck/k9/view/MessageWebView/configure()#com/fsck/k9/view/MessageWebView/setOverScrollMode(int)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setLoadWithOverviewMode(boolean)
com/fsck/k9/view/MessageWebView/configure()#android/webkit/WebSettings/setUseWideViewPort(boolean)
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getFrom()
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#android/text/SpannableStringBuilder/SpannableStringBuilder(java.lang.CharSequence)
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#java/lang/CharSequence/toString()
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getUid()
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getSentDate()
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getInternalDate()
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#android/content/Context/getString(int)
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/getRecipients(com.fsck.k9.mail.Message$RecipientType)
com/fsck/k9/helper/MessageHelper/populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account)#com/fsck/k9/mailstore/LocalMessage/isSet(com.fsck.k9.mail.Flag)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/setAntiAlias(boolean)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Bitmap/eraseColor(int)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Rect/height()
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/Paint()
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/measureText(java.lang.String)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Rect/Rect()
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/setTextSize(float)
com/fsck/k9/activity/misc/ContactPictureLoader/drawTextAndBgColorOnBitmap(android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$FallbackGlideParams)#android/graphics/Paint/setARGB(int,int,int,int)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/createNewFile()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/util/zip/ZipFile/ZipFile(java.io.File,int)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/lang/StringBuilder/append(java.lang.String)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/setReadable(boolean,boolean)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/exists()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/util/zip/ZipFile/getInputStream(java.util.zip.ZipEntry)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/setExecutable(boolean,boolean)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/lang/StringBuilder/append(char)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/util/zip/ZipFile/getEntry(java.lang.String)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/File(java.lang.String)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/lang/StringBuilder/StringBuilder()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/util/zip/ZipFile/close()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/FileOutputStream/getFD()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#android/content/Context/getApplicationInfo()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/length()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/File/setWritable(boolean)
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/lang/StringBuilder/toString()
com/getkeepsafe/relinker/ApkLibraryInstaller/installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance)#java/io/FileDescriptor/sync()
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/length()
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/substring(int,int)
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/indexOf(int,int)
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/indexOf(int)
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/internet/MimeMessage/setReferences(java.lang.String)#java/lang/String/substring(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#com/fsck/k9/mail/store/imap/ImapFolderPusher/getMessagesFromUids(java.util.List)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/Map/clear()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#com/fsck/k9/mail/store/imap/ImapMessage/getUid()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/removeMessages(java.util.List)#java/util/List/remove(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Collections/sort(java.util.List)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/List/contains(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Iterator/remove()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#com/fsck/k9/mail/store/imap/ImapFolderPusher/getLogId()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#com/fsck/k9/mail/store/imap/ImapResponse/size()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Map/keySet()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/lang/Long/longValue()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#com/fsck/k9/mail/store/imap/ImapResponse/getLong(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List)#java/util/Map/remove(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#com/fsck/k9/mail/store/imap/ImapFolderPusher/getMessages(int,int,java.util.Date,boolean,com.fsck.k9.mail.MessageRetrievalListener)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/lang/Long/parseLong(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/lang/Long/toString(long)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/util/List/isEmpty()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#com/fsck/k9/mail/store/imap/ImapFolderPusher/getLogId()
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#java/util/List/get(int)
com/fsck/k9/mail/store/imap/ImapFolderPusher$PushRunnable/syncMessages(int)#com/fsck/k9/mail/store/imap/ImapMessage/getUid()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#android/text/SpannableString/SpannableString(java.lang.CharSequence)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/CharSequence/length()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/StringBuilder/append(java.lang.String)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#android/text/TextUtils/copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/util/ArrayList/size()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/StringBuilder/append(java.lang.Object)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/util/ArrayList/contains(java.lang.Object)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/StringBuilder/toString()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/StringBuilder/StringBuilder()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/Character/valueOf(char)
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/lang/Character/charValue()
com/tokenautocomplete/CharacterTokenizer/terminateToken(java.lang.CharSequence)#java/util/ArrayList/get(int)
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/ArrayList/ArrayList()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/Iterator/hasNext()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/lang/StringBuilder/append(java.lang.String)
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/Iterator/next()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/ArrayList/add(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/lang/StringBuilder/StringBuilder()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/lang/StringBuilder/append(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/List/iterator()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/util/ArrayList/size()
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#android/util/Log/e(java.lang.String,java.lang.String)
com/tokenautocomplete/TokenCompleteTextView/getSerializableObjects()#java/lang/StringBuilder/toString()
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/setSpan(java.lang.Object,int,int,int)
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/getSpanEnd(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#java/util/List/size()
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/getSpanStart(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/getSpans(int,int,java.lang.Class)
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/delete(int,int)
com/tokenautocomplete/TokenCompleteTextView/updateCountSpan()#android/text/Editable/removeSpan(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#android/text/SpannableStringBuilder/length()
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#android/text/Editable/replace(int,int,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#android/text/Editable/setSpan(java.lang.Object,int,int,int)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#java/lang/Object/toString()
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#android/text/TextUtils/substring(java.lang.CharSequence,int,int)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#android/text/method/QwertyKeyListener/markAsReplaced(android.text.Spannable,int,int,java.lang.String)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#java/lang/String/equals(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#com/tokenautocomplete/TokenCompleteTextView/getSelectionEnd()
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#com/tokenautocomplete/TokenCompleteTextView/clearComposingText()
com/tokenautocomplete/TokenCompleteTextView/replaceText(java.lang.CharSequence)#java/util/ArrayList/contains(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#com/tokenautocomplete/TokenCompleteTextView$TokenClickStyle/isSelectable()
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#android/widget/MultiAutoCompleteTextView/onSelectionChanged(int,int)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#android/text/Editable/getSpanEnd(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#com/tokenautocomplete/TokenCompleteTextView/setSelection(int)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#android/text/Editable/getSpanStart(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#java/lang/CharSequence/length()
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#android/text/Editable/getSpans(int,int,java.lang.Class)
com/tokenautocomplete/TokenCompleteTextView/onSelectionChanged(int,int)#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/init()#java/util/ArrayList/ArrayList()
com/tokenautocomplete/TokenCompleteTextView/init()#android/widget/MultiAutoCompleteTextView$CommaTokenizer/MultiAutoCompleteTextView$CommaTokenizer()
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/getInputType()
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setInputType(int)
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setLongClickable(boolean)
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setTextIsSelectable(boolean)
com/tokenautocomplete/TokenCompleteTextView/init()#java/lang/AssertionError/AssertionError()
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setOnEditorActionListener(android.widget.TextView$OnEditorActionListener)
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setFilters(android.text.InputFilter[])
com/tokenautocomplete/TokenCompleteTextView/init()#com/tokenautocomplete/TokenCompleteTextView/setHorizontallyScrolling(boolean)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/setSpan(java.lang.Object,int,int,int)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/setSelection(int)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/getHintTextColors()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/insert(int,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/getTextSize()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/removeSpan(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/getTypeface()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/replace(int,int,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#java/lang/CharSequence/length()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/getSpans(int,int,java.lang.Class)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/graphics/Typeface/getStyle()
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/getSpanEnd(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#android/text/Editable/getSpanStart(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/updateHint()#com/tokenautocomplete/TokenCompleteTextView/getHint()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Layout/getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Layout/getPaint()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/getCurrentTextColor()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/Iterator/next()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/getSpanStart(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/ArrayList/size()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/getTextSize()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/getContext()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/List/iterator()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/setSpan(java.lang.Object,int,int,int)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/Iterator/hasNext()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/lang/CharSequence/length()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/getSpans(int,int,java.lang.Class)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/delete(int,int)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/getSpanEnd(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Layout/getLineVisibleEnd(int)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/lang/String/length()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/setSelection(int)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/Arrays/asList(java.lang.Object[])
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/insert(int,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#java/util/List/clear()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#com/tokenautocomplete/TokenCompleteTextView/postDelayed(java.lang.Runnable,long)
com/tokenautocomplete/TokenCompleteTextView/performCollapse(boolean)#android/text/Editable/removeSpan(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Editable/subSequence(int,int)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/SpannableStringBuilder/length()
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#java/lang/Object/toString()
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Editable/getSpanEnd(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Selection/getSelectionEnd(java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Selection/getSelectionStart(java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/widget/MultiAutoCompleteTextView$Tokenizer/terminateToken(java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Editable/getSpans(int,int,java.lang.Class)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/Selection/setSelection(android.text.Spannable,int,int)
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#java/util/List/size()
com/tokenautocomplete/TokenCompleteTextView/getTextForAccessibility()#android/text/SpannableStringBuilder/SpannableStringBuilder()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#android/text/SpannableStringBuilder/length()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#com/tokenautocomplete/TokenCompleteTextView/isFocused()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#android/text/Editable/setSpan(java.lang.Object,int,int,int)
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#android/text/TextUtils/indexOf(java.lang.CharSequence,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#android/text/Editable/insert(int,java.lang.CharSequence)
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#java/lang/CharSequence/length()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#java/util/List/isEmpty()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#java/lang/String/length()
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#java/util/List/add(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView/insertSpan(java.lang.Object,java.lang.CharSequence)#java/util/ArrayList/contains(java.lang.Object)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/content/Context/getString(int)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/webkit/WebView/getHitTestResult()
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/add(int,int,int,java.lang.CharSequence)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/widget/LinearLayout/onCreateContextMenu(android.view.ContextMenu)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#com/fsck/k9/ui/messageview/MessageContainerView/getContext()
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/webkit/WebView$HitTestResult/getType()
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/setHeaderTitle(java.lang.CharSequence)
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/webkit/WebView$HitTestResult/getExtra()
com/fsck/k9/ui/messageview/MessageContainerView/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/net/Uri/toString()
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/app/Activity/startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/content/Intent/getParcelableExtra(java.lang.String)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#org/openintents/openpgp/util/OpenPgpKeyPreference/getContext()
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/app/PendingIntent/getIntentSender()
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#java/lang/StringBuilder/toString()
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/content/Intent/getLongExtra(java.lang.String,long)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/content/Intent/getIntExtra(java.lang.String,int)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/util/Log/e(java.lang.String,java.lang.String)
org/openintents/openpgp/util/OpenPgpKeyPreference$MyCallback/onReturn(android.content.Intent)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/cert/X509Certificate/getSubjectDN()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/Principal/toString()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/append(int)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/StringBuilder(int)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/show()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/MessageDigest/getInstance(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/Integer/intValue()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/append(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/net/Uri/getHost()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/MessageDigest/reset()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/util/Iterator/hasNext()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#com/fsck/k9/activity/setup/AccountSetupCheckSettings/getString(int)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/cert/X509Certificate/getIssuerDN()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/Throwable/getMessage()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/setCancelable(boolean)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/util/Collection/size()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/util/Iterator/next()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/Throwable/getCause()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/cert/X509Certificate/getSubjectAlternativeNames()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/widget/ProgressBar/setIndeterminate(boolean)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/net/Uri/parse(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/String/substring(int)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/util/List/get(int)
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#com/fsck/k9/mail/CertificateValidationException/getMessage()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#com/fsck/k9/mail/CertificateValidationException/getCause()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/MessageDigest/digest(byte[])
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/security/cert/X509Certificate/getEncoded()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/util/Collection/iterator()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#com/fsck/k9/activity/setup/AccountSetupCheckSettings/getString(int,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/StringBuilder/toString()
com/fsck/k9/activity/setup/AccountSetupCheckSettings$1/run()#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/util/regex/Matcher/end(int)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/String/length()
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/util/regex/Matcher/start(int)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/util/regex/Matcher/matches()
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/StringBuilder/insert(int,java.lang.String)
com/fsck/k9/message/quote/HtmlQuoteCreator/findInsertionPoints(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#com/fsck/k9/fragment/MessageListAdapter/getItem(int)
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#android/view/ActionMode/finish()
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#com/fsck/k9/fragment/MessageListAdapter/notifyDataSetChanged()
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#java/util/Set/clear()
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#java/util/Set/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#android/database/Cursor/getInt(int)
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#com/fsck/k9/fragment/MessageListAdapter/getCount()
com/fsck/k9/fragment/MessageListFragment/setSelectionState(boolean)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Map/get(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#com/fsck/k9/fragment/MessageListAdapter/getItem(int)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Set/iterator()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/List/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#android/database/Cursor/getString(int)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/HashSet/HashSet()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Set/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#android/database/Cursor/getInt(int)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#com/fsck/k9/fragment/MessageListAdapter/getCount()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Iterator/next()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/HashMap/HashMap()
com/fsck/k9/fragment/MessageListFragment/setFlagForSelected(com.fsck.k9.mail.Flag,boolean)#java/util/Set/isEmpty()
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#java/util/Set/isEmpty()
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#android/database/Cursor/moveToFirst()
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#java/util/HashSet/HashSet()
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#java/util/Set/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#android/database/Cursor/moveToNext()
com/fsck/k9/fragment/MessageListFragment/cleanupSelected(android.database.Cursor)#android/database/Cursor/isAfterLast()
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#android/content/CursorLoader/CursorLoader(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#android/net/Uri/withAppendedPath(android.net.Uri,java.lang.String)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/lang/StringBuilder/toString()
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/util/ArrayList/ArrayList()
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/util/List/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#java/lang/StringBuilder/append(char)
com/fsck/k9/fragment/MessageListFragment/onCreateLoader(int,android.os.Bundle)#com/fsck/k9/fragment/MessageListFragment/getActivity()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Iterator/hasNext()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Map$Entry/getKey()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Set/iterator()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/List/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/ArrayList/ArrayList()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Map/get(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#android/widget/Toast/show()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Iterator/next()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/HashMap/HashMap()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/List/get(int)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Map$Entry/getValue()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#android/widget/Toast/makeText(android.content.Context,int,int)
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/List/iterator()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#com/fsck/k9/fragment/MessageListFragment/getActivity()
com/fsck/k9/fragment/MessageListFragment/copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation)#java/util/Map/entrySet()
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#android/app/DialogFragment/show(android.app.FragmentManager,java.lang.String)
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#com/fsck/k9/fragment/MessageListFragment/getFragmentManager()
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#java/util/List/size()
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#com/fsck/k9/fragment/MessageListFragment/getResources()
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#android/content/res/Resources/getQuantityString(int,int,java.lang.Object[])
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#android/app/DialogFragment/setTargetFragment(android.app.Fragment,int)
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#java/lang/Integer/valueOf(int)
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/fsck/k9/fragment/MessageListFragment/showDialog(int)#com/fsck/k9/fragment/MessageListFragment/getString(int)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#com/fsck/k9/fragment/MessageListAdapter/getItem(int)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#java/util/Set/remove(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#android/view/ActionMode/finish()
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#com/fsck/k9/fragment/MessageListAdapter/notifyDataSetChanged()
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#java/util/Set/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment/toggleMessageSelectWithAdapterPosition(int)#android/database/Cursor/getInt(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuItem/setVisible(boolean)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/findItem(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/app/Activity/getMenuInflater()
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/app/Fragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuInflater/inflate(int,android.view.Menu)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/widget/ListView/getItemAtPosition(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/database/Cursor/getString(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#com/fsck/k9/fragment/MessageListFragment/getActivity()
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/database/Cursor/getInt(int)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/setHeaderTitle(java.lang.CharSequence)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Iterator/hasNext()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/StorageEditor$1/run()#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Set/iterator()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/List/iterator()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Map/entrySet()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/Iterator/next()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/HashMap/HashMap()
com/fsck/k9/preferences/StorageEditor$1/run()#java/util/List/contains(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/ArrayList/ArrayList()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/size()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/clear()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/add(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/List/get(int)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Math/min(int,int)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/Set/clear()
com/fsck/k9/mailstore/LocalFolder$28/doDbWork(android.database.sqlite.SQLiteDatabase)#java/util/HashSet/HashSet()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#com/fsck/k9/mail/Message/writeTo(java.io.OutputStream)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/StringBuilder/append(long)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#org/apache/http/entity/StringEntity/StringEntity(java.lang.String,java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#org/apache/http/entity/StringEntity/setContentType(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/util/List/size()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/System/currentTimeMillis()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/appendWebDavMessages(java.util.List)#java/io/ByteArrayOutputStream/toString()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/size()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/get(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Boolean/booleanValue()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/isEmpty()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/webdav/WebDavMessage/getUid()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#org/apache/http/HttpResponse/getStatusLine()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#org/apache/http/client/methods/HttpGet/setHeader(java.lang.String,java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/Object/toString()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/util/List/size()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/String/getBytes(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/io/IOException/IOException(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#com/fsck/k9/mail/store/webdav/WebDavMessage/parse(java.io.InputStream)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#org/apache/http/client/methods/HttpGet/HttpGet(java.net.URI)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#org/apache/http/StatusLine/getStatusCode()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/io/BufferedReader/readLine()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/util/List/get(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#com/fsck/k9/mail/store/webdav/WebDavMessage/getUid()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#org/apache/http/HttpResponse/getEntity()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/size()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/addAll(java.util.Collection)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/isEmpty()
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/get(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/add(int,java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/webdav/WebDavMessage/getUid()
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavFolder/getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#android/widget/ListView/getCheckedItemPositions()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#android/content/DialogInterface/dismiss()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#android/widget/ListView/getCount()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#java/util/List/get(int)
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#android/app/AlertDialog/getListView()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#java/util/ArrayList/ArrayList()
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#android/util/SparseBooleanArray/get(int)
com/fsck/k9/activity/Accounts$ImportSelectionDialog$2/onClick(android.content.DialogInterface,int)#com/fsck/k9/activity/Accounts$ImportAsyncTask/execute(java.lang.Object[])
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/isMemberClass()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Class/getModifiers()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/start()#java/lang/Object/getClass()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#com/fsck/k9/mail/Message/writeTo(java.io.OutputStream)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/Map/isEmpty()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#com/fsck/k9/mail/store/imap/ImapResponse/size()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#com/fsck/k9/mail/store/imap/ImapList/size()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/appendMessages(java.util.List)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/lang/Long/parseLong(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/List/isEmpty()
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/HashSet/HashSet(int)
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapFolder/expungeUids(java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/Long/parseLong(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/HashSet/HashSet(int)
com/fsck/k9/mail/store/imap/ImapFolder/setFlags(java.util.List,java.util.Set,boolean)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Long/valueOf(long)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/LinkedHashSet/LinkedHashSet()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/imap/ImapMessage/parse(java.io.InputStream)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/FetchProfile/contains(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/isEmpty()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/subList(int,int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/imap/ImapResponse/getKeyedValue(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/size()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/imap/ImapResponse/getLong(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/getBytes()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Math/min(int,int)
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/size()
com/fsck/k9/mail/store/imap/ImapFolder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashMap/get(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/String/getBytes()
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#com/fsck/k9/mail/store/imap/ImapResponse/getKeyedValue(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapFolder/fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mail.BodyFactory)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#com/fsck/k9/mail/store/imap/ImapList/get(int)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#com/fsck/k9/mail/store/imap/ImapList/isEmpty()
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/Integer/toString(int)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#com/fsck/k9/mail/store/imap/ImapList/size()
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/imap/ImapFolder/parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String)#com/fsck/k9/mail/internet/MimeMultipart/addBodyPart(com.fsck.k9.mail.BodyPart)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/split(java.lang.String,int)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/charAt(int)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/substring(int,int)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/substring(int)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/StringBuffer/StringBuffer()
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/length()
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/StringBuffer/insert(int,char)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mailstore/util/FlowedMessageUtils/deflow(java.lang.String,boolean)#java/lang/StringBuffer/toString()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Iterator/hasNext()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/size()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Set/iterator()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/iterator()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#com/fsck/k9/mailstore/LocalMessage/isSet(com.fsck.k9.mail.Flag)
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/Iterator/next()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/LinkedList/LinkedList()
com/fsck/k9/controller/imap/ImapSync/refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/isEmpty()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/size()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Set/iterator()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/clear()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/subList(int,int)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Iterator/next()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/Date/Date()
com/fsck/k9/controller/imap/ImapSync/downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean)#java/util/List/iterator()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Iterator/hasNext()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/Long/valueOf(long)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/ArrayList/ArrayList()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/Math/max(int,int)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/StringBuilder/append(int)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/concurrent/atomic/AtomicInteger/get()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/List/isEmpty()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Map/get(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/List/size()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Map/size()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Iterator/next()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/HashMap/HashMap()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Map/keySet()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/Long/longValue()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Set/iterator()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/List/add(java.lang.Object)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/Exception/Exception(java.lang.String)
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/System/currentTimeMillis()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/List/iterator()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/util/Date/getTime()
com/fsck/k9/controller/imap/ImapSync/synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder)#java/lang/StringBuilder/toString()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/ThreadLocal/remove()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/List/remove(int)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/ThreadLocal/set(java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/List/size()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/ThreadLocal/get()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/List/add(java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/List/get(int)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/StringBuilder/toString()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/ArrayList/ArrayList()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/Object/equals(java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/List/isEmpty()
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/util/Map/get(java.lang.Object)
com/squareup/moshi/Moshi/adapter(java.lang.reflect.Type,java.util.Set)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/util/concurrent/atomic/AtomicInteger/getAndIncrement()
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#android/os/SystemClock/elapsedRealtime()
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/Long/valueOf(long)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/util/concurrent/CountDownLatch/CountDownLatch(int)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#android/content/Intent/setAction(java.lang.String)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/util/concurrent/CountDownLatch/await(long,java.util.concurrent.TimeUnit)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/Integer/valueOf(int)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/Thread/getName()
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/Thread/currentThread()
com/fsck/k9/service/SleepService/sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/lang/Integer/toString(int)
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/Set/iterator()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/Iterator/next()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/HashMap/HashMap()
com/fsck/k9/preferences/IdentitySettings/getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int)#java/util/Map/keySet()
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/io/IOException/IOException(java.lang.String)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/Double/parseDouble(java.lang.String)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/Double/isNaN(double)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/StringBuilder/append(double)
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/StringBuilder/toString()
com/squareup/moshi/BufferedSourceJsonReader/nextDouble()#java/lang/Double/isInfinite(double)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/net/URI/getUserInfo()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/net/URI/getPort()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/net/URI/getScheme()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#com/fsck/k9/mail/AuthType/valueOf(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/net/URI/getHost()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/TransportUris/decodeSmtpUri(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/content/Intent/removeExtra(java.lang.String)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/content/Intent/putExtra(java.lang.String,long)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#java/lang/Long/longValue()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/content/Intent/putExtra(java.lang.String,int)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#java/lang/Exception/getMessage()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#org/openintents/openpgp/util/ParcelFileDescriptorUtil$DataSinkTransferThread/join()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink)#android/content/Intent/Intent()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/content/Intent/removeExtra(java.lang.String)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/content/Intent/putExtra(java.lang.String,long)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#java/lang/Long/longValue()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/content/Intent/putExtra(java.lang.String,int)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#java/lang/Thread/join()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#java/lang/Exception/getMessage()
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/openintents/openpgp/util/OpenPgpApi/executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream)#android/content/Intent/Intent()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#android/text/Layout/getLineCount()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#android/text/Layout/getLineEnd(int)
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#com/fsck/k9/view/MessageTitleView/getLayout()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#com/fsck/k9/view/MessageTitleView/setText(java.lang.CharSequence)
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#java/lang/CharSequence/subSequence(int,int)
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/toString()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#com/fsck/k9/view/MessageTitleView/getText()
com/fsck/k9/view/MessageTitleView/onDraw(android.graphics.Canvas)#android/widget/TextView/onDraw(android.graphics.Canvas)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/nio/charset/Charset/isSupported(java.lang.String)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/length()
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/substring(int,int)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/matches(java.lang.String)
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/internet/CharsetSupport/readToString(java.io.InputStream,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/ParcelFileDescriptor/writeToParcel(android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/content/Intent/writeToParcel(android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/writeInt(int)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/recycle()
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/IBinder/transact(int,android.os.Parcel,android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/writeInterfaceToken(java.lang.String)
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/obtain()
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/readInt()
org/openintents/openpgp/IOpenPgpService2$Stub$Proxy/execute(android.content.Intent,android.os.ParcelFileDescriptor,int)#android/os/Parcel/readException()
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#com/fsck/k9/Account$MessageFormat/valueOf(java.lang.String)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/String/substring(int,int)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/Integer/valueOf(int)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/Integer/intValue()
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#com/fsck/k9/message/QuotedTextMode/valueOf(java.lang.String)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/String/length()
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#com/fsck/k9/Account$QuoteStyle/valueOf(java.lang.String)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/String/substring(int)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/StringBuilder/length()
com/fsck/k9/ui/compose/QuotedMessagePresenter/processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map)#java/lang/Integer/valueOf(java.lang.String)
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#java/util/List/remove(int)
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#android/view/MenuItem/getItemId()
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#java/util/List/size()
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#com/fsck/k9/activity/ManageIdentities/getString(int)
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#com/fsck/k9/activity/ManageIdentities/refreshView()
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#java/util/List/add(int,java.lang.Object)
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#android/widget/Toast/show()
com/fsck/k9/activity/ManageIdentities/onContextItemSelected(android.view.MenuItem)#android/view/MenuItem/getMenuInfo()
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/Object/equals(java.lang.Object)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/delete(int,int)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/append(char)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/length()
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/load/engine/bitmap_recycle/GroupedLinkedMap/toString()#java/lang/StringBuilder/toString()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/content/Intent/setData(android.net.Uri)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/Fragment/getActivity()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/Fragment/startActivityForResult(android.content.Intent,int)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/io/File/File(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/content/Intent/Intent(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/io/File/getPath()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/toString()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/Activity/getString(int)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/widget/EditText/EditText(android.content.Context)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/show()
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/io/File/toString()
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/widget/EditText/setInputType(int)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/fsck/k9/helper/FileBrowserHelper/showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/content/Intent/setData(android.net.Uri)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/app/Activity/startActivityForResult(android.content.Intent,int)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/io/File/File(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/content/Intent/Intent(java.lang.String)
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/io/File/getPath()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#java/lang/StringBuilder/toString()
com/fsck/k9/helper/FileBrowserHelper/showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback)#android/net/Uri/parse(java.lang.String)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/nio/ByteBuffer/allocate(int)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/ArrayList/ArrayList()
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/lang/Long/valueOf(long)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/nio/ByteBuffer/order(java.nio.ByteOrder)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/Collections/unmodifiableList(java.util.List)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/List/add(java.lang.Object)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/List/iterator()
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/Iterator/hasNext()
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/nio/channels/FileChannel/position(long)
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/util/Iterator/next()
com/getkeepsafe/relinker/elf/ElfParser/parseNeededDependencies()#java/lang/Long/longValue()
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToFirst()
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/isNull(int)
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder$1/doDbWork(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getInt(int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/invalidate(android.graphics.Rect)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersect(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getParent()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getBottom()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/support/v4/view/ViewCompat$ViewCompatApi19Impl/offsetTopAndBottom(android.view.View,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getRight()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getTop()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersects(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getLeft()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getTag()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getShuffleMode()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromMediaId(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isShuffleModeEnabledRemoved()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getRepeatMode()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/pause()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getQueueTitle()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepare()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getVolumeAttributes()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeLong(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setShuffleMode(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeTypedList(java.util.List)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/fastForward()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromUri(android.net.Uri,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getRatingType()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendCustomAction(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getLaunchPendingIntent()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/skipToQueueItem(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/adjustVolume(int,int,java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readLong()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setShuffleModeEnabledRemoved(boolean)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/removeQueueItemAt(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromSearch(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readStrongBinder()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getFlags()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rate(android.support.v4.media.RatingCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/addQueueItem(android.support.v4.media.MediaDescriptionCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/next()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/prepareFromUri(android.net.Uri,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setVolumeTo(int,int,java.lang.String)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/play()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getExtras()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Bundle/writeToParcel(android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeInt(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isCaptioningEnabled()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/previous()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/seekTo(long)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromMediaId(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/removeQueueItem(android.support.v4.media.MediaDescriptionCompat)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getQueue()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getPackageName()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/rewind()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/app/PendingIntent/writeToParcel(android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/text/TextUtils/writeToParcel(java.lang.CharSequence,android.os.Parcel,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/sendMediaButton(android.view.KeyEvent)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/isTransportControlEnabled()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getPlaybackState()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/playFromSearch(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/getMetadata()
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setCaptioningEnabled(boolean)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/setRepeatMode(int)
android/support/v4/media/session/IMediaSession$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaSession$Stub/stop()
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/setMessage(java.lang.CharSequence)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/show()
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/ProgressDialog(android.content.Context)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/setProgress(int)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#com/fsck/k9/fragment/AttachmentDownloadDialogFragment/getActivity()
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/setProgressStyle(int)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/app/ProgressDialog/setMax(int)
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#com/fsck/k9/fragment/AttachmentDownloadDialogFragment/getArguments()
com/fsck/k9/fragment/AttachmentDownloadDialogFragment/onCreateDialog(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/content/Context/getPackageName()
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/widget/RemoteViews/RemoteViews(java.lang.String,int)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/widget/RemoteViews/setViewVisibility(int,int)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/app/PendingIntent/getActivity(android.content.Context,int,android.content.Intent,int)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/content/Intent/addFlags(int)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/widget/RemoteViews/setTextViewText(int,java.lang.CharSequence)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/widget/RemoteViews/setOnClickPendingIntent(int,android.app.PendingIntent)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/content/Intent/putExtra(java.lang.String,int)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#java/lang/StringBuilder/toString()
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#android/appwidget/AppWidgetManager/updateAppWidget(int,android.widget.RemoteViews)
com/fsck/k9/provider/UnreadWidgetProvider/updateWidget(android.content.Context,android.appwidget.AppWidgetManager,com.fsck.k9.helper.UnreadWidgetProperties)#java/lang/String/valueOf(int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/String/length()
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/Math/min(int,int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/String/charAt(int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/append(int)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/IllegalAccessError/IllegalAccessError(java.lang.String)
okio/Buffer/writeUtf8(java.lang.String,int,int)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/SortedMap/isEmpty()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/TreeMap/headMap(java.lang.Object)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Map/entrySet()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Iterator/next()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/HashMap/HashMap()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/SortedMap/lastKey()
com/fsck/k9/preferences/Settings/validate(int,java.util.Map,java.util.Map,boolean)#java/util/Set/iterator()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/lang/Integer/intValue()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Iterator/next()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/HashSet/HashSet()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Map/entrySet()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Set/iterator()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/Settings/upgradeSettingsGeneric(java.util.Map,java.util.Map,java.util.Set,int)#java/util/TreeMap/firstKey()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/Settings/convert(java.util.Map,java.util.Map)#java/util/HashMap/HashMap()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/setAllowGeneratedReplies(boolean)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/Notification$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/addExtras(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Builder/addAction(android.app.Notification$Action)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/build()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/putBoolean(java.lang.String,boolean)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#java/util/List/add(java.lang.Object)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/addRemoteInput(android.app.RemoteInput)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/setExtras(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/getNotification()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/keySet()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/build()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Iterator/next()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/containsKey(java.lang.String)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Set/iterator()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/remove(java.lang.String)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification/getGroup()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/ServiceInfo/loadLabel(android.content.pm.PackageManager)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/Context/getString(int)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/Intent/Intent(android.content.Intent)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/PackageManager/queryIntentActivities(android.content.Intent,int)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/Iterator/next()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/ArrayList/clear()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/ArrayList/add(java.lang.Object)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/ActivityInfo/loadIcon(android.content.pm.PackageManager)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/ArrayList/add(int,java.lang.Object)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/Intent/Intent(java.lang.String)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/Intent/setPackage(java.lang.String)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/List/iterator()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/ArrayList/contains(java.lang.Object)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/Context/getPackageManager()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/lang/String/valueOf(java.lang.Object)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/app/Activity/getPackageManager()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/util/Iterator/hasNext()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/ApplicationInfo/loadLabel(android.content.pm.PackageManager)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/getResources()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/res/Resources/getDrawable(int)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/getString(int)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/getActivity()
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
com/fsck/k9/activity/setup/OpenPgpAppSelectDialog$OpenPgpAppSelectFragment/populateAppList()#android/content/pm/ServiceInfo/loadIcon(android.content.pm.PackageManager)
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#com/fsck/k9/mail/BodyPart/writeTo(java.io.OutputStream)
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/util/Iterator/hasNext()
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/util/List/isEmpty()
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/util/Iterator/next()
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/io/BufferedWriter/write(java.lang.String)
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream)
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/util/List/iterator()
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#com/fsck/k9/mail/internet/MimeMultipart/getBodyParts()
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/io/BufferedWriter/BufferedWriter(java.io.Writer,int)
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/fsck/k9/mail/internet/MimeMultipart/writeTo(java.io.OutputStream)#java/io/BufferedWriter/flush()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/io/File/exists()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#android/content/Context/getContentResolver()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/io/FileOutputStream/close()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/lang/StringBuilder/toString()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/io/IOException/IOException(java.lang.String)
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/provider/AttachmentTempFileProvider/writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File)#android/content/ContentResolver/openInputStream(android.net.Uri)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/ServiceInfo/loadLabel(android.content.pm.PackageManager)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Context/getPackageManager()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/lang/String/valueOf(java.lang.Object)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/Iterator/hasNext()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/ApplicationInfo/loadLabel(android.content.pm.PackageManager)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Context/getString(int)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Intent/Intent(android.content.Intent)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/lang/String/format(java.lang.String,java.lang.Object[])
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/PackageManager/queryIntentActivities(android.content.Intent,int)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/Iterator/next()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/ArrayList/clear()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/ArrayList/add(java.lang.Object)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/ActivityInfo/loadIcon(android.content.pm.PackageManager)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/ArrayList/addAll(java.util.Collection)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/res/Resources/getDrawable(int)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Intent/Intent(java.lang.String)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Intent/setPackage(java.lang.String)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/List/iterator()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#org/openintents/openpgp/util/OpenPgpAppPreference/getContext()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/ArrayList/add(int,java.lang.Object)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#java/util/ArrayList/contains(java.lang.Object)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/Context/getResources()
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
org/openintents/openpgp/util/OpenPgpAppPreference/populateAppList()#android/content/pm/ServiceInfo/loadIcon(android.content.pm.PackageManager)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/split(java.lang.String,int)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/trim()
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/mail/internet/MimeUtility/getHeaderParameter(java.lang.String,java.lang.String)#java/lang/String/length()
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#com/fsck/k9/activity/ChooseIdentity/getString(int)
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/String/trim()
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/widget/Toast/show()
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#com/fsck/k9/activity/ChooseIdentity/setResult(int,android.content.Intent)
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#android/content/Intent/Intent()
com/fsck/k9/activity/ChooseIdentity$1/onItemClick(android.widget.AdapterView,android.view.View,int,long)#com/fsck/k9/activity/ChooseIdentity/finish()
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setChecked(boolean)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/Preference/setTitle(java.lang.CharSequence)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setValue(java.lang.String)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setSummary(java.lang.CharSequence)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setEnabled(boolean)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FolderSettings/findPreference(java.lang.CharSequence)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FolderSettings/addPreferencesFromResource(int)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FolderSettings/getIntent()
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/getEntry()
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/setup/FolderSettings/onCreate(android.os.Bundle)#com/fsck/k9/mail/Folder$FolderClass/name()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Iterator/hasNext()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Map/containsValue(java.lang.Object)
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Map/get(java.lang.Object)
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Map/values()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Map/clear()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Collection/iterator()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/Iterator/next()
com/bumptech/glide/load/model/GenericLoaderFactory/register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)#java/util/HashMap/HashMap()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Map$Entry/getKey()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Iterator/next()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Set/iterator()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Map/entrySet()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Map/isEmpty()
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Collections/singletonList(java.lang.Object)
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/List/get(int)
com/fsck/k9/mailstore/LocalStore/loadLocalMessageByMessageId(long)#java/util/Map$Entry/getValue()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/hasMessages(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getFlags()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/size()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getScheme()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Context/getContentResolver()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/ArrayList()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/IntentFilter/match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/resolveTypeIfNeeded(android.content.ContentResolver)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getAction()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/sendEmptyMessage(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getCategories()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/Integer/toHexString(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getData()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/get(int)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/String/length()
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/field/address/ParseException/add_escapes(java.lang.String)#java/lang/String/charAt(int)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getName()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#android/os/Environment/getExternalStorageDirectory()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#android/content/Context/getPackageName()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/io/File/getAbsolutePath()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/io/File/File(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/io/File/mkdirs()
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/exportToFile(android.content.Context,boolean,java.util.Set)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/text(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/Object/toString()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/split(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsExporter/writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#org/xmlpull/v1/XmlSerializer/text(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#com/fsck/k9/mail/ServerSettings$Type/name()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/split(java.lang.String,int)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#com/fsck/k9/mail/AuthType/name()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/Integer/valueOf(int)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/List/iterator()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/HashSet/HashSet()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/Object/toString()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Set/size()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/Integer/toString()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/Integer/toString(int)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/length()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map/size()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#com/fsck/k9/mail/ConnectionSecurity/name()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/substring(int,int)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Collections/sort(java.util.List)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/substring(int)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/util/Set/add(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map)#java/lang/String/lastIndexOf(java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsExporter/writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/flush()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#android/util/Xml/newSerializer()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/TreeMap/TreeMap(java.util.Map)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/startDocument(java.lang.String,java.lang.Boolean)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/setOutput(java.io.OutputStream,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/endDocument()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/Set/add(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/LinkedHashSet/LinkedHashSet()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/lang/Exception/getLocalizedMessage()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/setFeature(java.lang.String,boolean)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/lang/Integer/toString(int)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsExporter/exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set)#java/util/List/iterator()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/Object/toString()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/TreeMap/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/substring(int,int)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/substring(int)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/indexOf(int)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/lang/String/lastIndexOf(int)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/TreeMap/lastKey()
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/preferences/SettingsExporter/writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map)#java/util/Set/iterator()
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/content/Intent/writeToParcel(android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeInt(int)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#org/openintents/openpgp/IOpenPgpService$Stub/execute(android.content.Intent,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor)
org/openintents/openpgp/IOpenPgpService$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/setData(android.net.Uri)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/getParcelableExtra(java.lang.String)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/setAction(java.lang.String)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/service/BootReceiver/buildPendingIntent(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/io/Writer/append(char)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/util/concurrent/ThreadPoolExecutor/submit(java.util.concurrent.Callable)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/io/Writer/append(java.lang.CharSequence)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/io/File/exists()
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/util/LinkedHashMap/get(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/util/LinkedHashMap/remove(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/remove(java.lang.String)#java/io/File/delete()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/Writer/append(char)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/File/exists()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/File/length()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/util/LinkedHashMap/remove(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/util/concurrent/ThreadPoolExecutor/submit(java.util.concurrent.Callable)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/IllegalStateException/IllegalStateException()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/StringBuilder/append(int)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/Writer/append(java.lang.CharSequence)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/File/renameTo(java.io.File)
com/bumptech/glide/disklrucache/DiskLruCache/completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)#java/io/Writer/flush()
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/put(java.lang.Object,java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/substring(int)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/indexOf(int,int)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/indexOf(int)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/remove(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/split(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/util/LinkedHashMap/get(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/length()
com/bumptech/glide/disklrucache/DiskLruCache/readJournalLine(java.lang.String)#java/lang/String/substring(int,int)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/File/File(java.io.File,java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/IOException/getMessage()
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/File/exists()
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/File/delete()
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/PrintStream/println(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/open(java.io.File,int,int,long)#java/io/File/mkdirs()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/FileOutputStream/FileOutputStream(java.io.File,boolean)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/lang/Integer/toString(int)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/File/exists()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/util/Iterator/next()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/Writer/close()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/util/LinkedHashMap/values()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/lang/StringBuilder/append(char)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/util/Collection/iterator()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/util/Iterator/hasNext()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/Writer/write(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/File/delete()
com/bumptech/glide/disklrucache/DiskLruCache/rebuildJournal()#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/io/FileOutputStream/FileOutputStream(java.io.File,boolean)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/io/IOException/IOException(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/lang/Integer/toString(int)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/lang/String/equals(java.lang.Object)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/io/FileInputStream/FileInputStream(java.io.File)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/lang/StringBuilder/toString()
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/io/OutputStreamWriter/OutputStreamWriter(java.io.OutputStream,java.nio.charset.Charset)
com/bumptech/glide/disklrucache/DiskLruCache/readJournal()#java/util/LinkedHashMap/size()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#android/widget/ArrayAdapter/getItem(int)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#android/widget/ArrayAdapter/getCount()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/ArrayList/ArrayList()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/size()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Iterator/next()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/contains(java.lang.CharSequence)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/iterator()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Locale/getDefault()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/Object/toString()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/split(java.lang.String)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#android/widget/Filter$FilterResults/Filter$FilterResults()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Iterator/hasNext()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/CharSequence/length()
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/activity/FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/CharSequence/toString()
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/lang/String/split(java.lang.String,int)
com/fsck/k9/preferences/Storage/openDB()#java/lang/String/split(java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/URI(java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getUserInfo()
com/fsck/k9/preferences/Storage/openDB()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/toString()
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getPort()
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getQuery()
com/fsck/k9/preferences/Storage/openDB()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getHost()
com/fsck/k9/preferences/Storage/openDB()#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/Storage/openDB()#android/content/Context/openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory)
com/fsck/k9/preferences/Storage/openDB()#java/lang/String/length()
com/fsck/k9/preferences/Storage/openDB()#android/database/sqlite/SQLiteDatabase/setVersion(int)
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getPath()
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getScheme()
com/fsck/k9/preferences/Storage/openDB()#android/database/sqlite/SQLiteDatabase/getVersion()
com/fsck/k9/preferences/Storage/openDB()#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/preferences/Storage/openDB()#java/net/URI/getFragment()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/lang/ThreadLocal/remove()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/lang/Runnable/run()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/lang/ThreadLocal/set(java.lang.Object)
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#android/database/sqlite/SQLiteDatabase/beginTransaction()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#android/database/sqlite/SQLiteDatabase/close()
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/util/concurrent/ConcurrentMap/putAll(java.util.Map)
com/fsck/k9/preferences/Storage/doInTransaction(java.lang.Runnable)#java/util/ArrayList/ArrayList()
com/fsck/k9/preferences/Storage/put(java.util.Map)#android/database/sqlite/SQLiteStatement/bindString(int,java.lang.String)
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/Storage/put(java.util.Map)#android/database/sqlite/SQLiteDatabase/compileStatement(java.lang.String)
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Set/iterator()
com/fsck/k9/preferences/Storage/put(java.util.Map)#android/database/sqlite/SQLiteStatement/execute()
com/fsck/k9/preferences/Storage/put(java.util.Map)#android/database/sqlite/SQLiteStatement/close()
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/Storage/put(java.util.Map)#android/database/sqlite/SQLiteStatement/clearBindings()
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/util/Iterator/next()
com/fsck/k9/preferences/Storage/put(java.util.Map)#java/lang/ThreadLocal/get()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/List/iterator()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/setFlags(java.util.List,java.util.Set,boolean)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/security/MessageDigest/digest(byte[])
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/String/getBytes()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/security/MessageDigest/getInstance(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/authAPOP(java.lang.String)#com/fsck/k9/mail/store/pop3/Pop3Store$Pop3ErrorResponse/getMessage()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/size()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/next()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/iterator()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/HashSet/HashSet()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Message/getUid()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/get(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#com/fsck/k9/mail/AuthType/ordinal()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/Socket/Socket()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream,int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/Socket/setSoTimeout(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/Socket/connect(java.net.SocketAddress,int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/InetSocketAddress/InetSocketAddress(java.lang.String,int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#javax/net/ssl/SSLException/getMessage()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/Socket/getInputStream()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#javax/net/ssl/SSLException/getCause()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/net/Socket/getOutputStream()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/util/Map/clear()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/open(int)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/lang/Integer/intValue()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/lang/Integer/valueOf(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/List/iterator()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/HashSet/HashSet()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Set/add(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Iterator/next()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexUids(java.util.List)#java/util/Set/isEmpty()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/FetchProfile/contains(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/iterator()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Message/getUid()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/isEmpty()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Message/setBody(com.fsck.k9.mail.Body)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/size()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/Iterator/next()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#com/fsck/k9/mail/FetchProfile/size()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener)#java/util/List/get(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/Integer/intValue()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/StringBuilder/append(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/Integer/valueOf(java.lang.String)
com/fsck/k9/mail/store/pop3/Pop3Store$Pop3Folder/indexMsgNums(int,int)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOptions/setContentView(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOptions/findViewById(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOptions/getIntent()
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/widget/Spinner/setAdapter(android.widget.SpinnerAdapter)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/setDropDownViewResource(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/widget/CheckBox/setVisibility(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOptions/getString(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOptions/onCreate(android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/String/length()
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/field/datetime/parser/ParseException/add_escapes(java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#java/lang/Long/valueOf(long)
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#android/content/Intent/getAction()
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#android/content/ContentResolver/getMasterSyncAutomatically()
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#java/lang/Integer/valueOf(int)
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#com/fsck/k9/K9$BACKGROUND_OPS/ordinal()
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#android/os/SystemClock/elapsedRealtime()
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/service/MailService/startService(android.content.Intent,int)#com/fsck/k9/service/MailService/getApplication()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#android/app/Application/getPackageName()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/util/Collection/iterator()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/lang/Long/valueOf(long)
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/util/Iterator/next()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#android/content/Intent/setAction(java.lang.String)
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#com/fsck/k9/service/MailService/getApplication()
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/service/MailService/reschedulePoll(boolean,boolean,boolean)#java/lang/System/currentTimeMillis()
com/fsck/k9/service/MailService/schedulePushers()#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/service/MailService/schedulePushers()#java/util/Iterator/hasNext()
com/fsck/k9/service/MailService/schedulePushers()#java/lang/Long/valueOf(long)
com/fsck/k9/service/MailService/schedulePushers()#com/fsck/k9/service/MailService/getApplication()
com/fsck/k9/service/MailService/schedulePushers()#java/lang/Integer/valueOf(int)
com/fsck/k9/service/MailService/schedulePushers()#java/lang/System/currentTimeMillis()
com/fsck/k9/service/MailService/schedulePushers()#java/util/Collection/iterator()
com/fsck/k9/service/MailService/schedulePushers()#java/util/Iterator/next()
com/fsck/k9/service/MailService/schedulePushers()#android/content/Intent/setAction(java.lang.String)
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/Comparable/compareTo(java.lang.Object)
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/Class/getName()
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/Object/hashCode()
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/Object/getClass()
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/StringBuilder/toString()
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/util/Comparator/compare(java.lang.Object,java.lang.Object)
com/squareup/moshi/LinkedHashTreeMap/find(java.lang.Object,boolean)#java/lang/ClassCastException/ClassCastException(java.lang.String)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/StringBuilder/append(char)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/content/res/Resources/getResourcePackageName(int)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#java/lang/Integer/intValue()
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/content/res/Resources/getResourceTypeName(int)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/content/res/Resources/getResourceEntryName(int)
com/bumptech/glide/load/model/ResourceLoader/getResourceFetcher(java.lang.Integer,int,int)#android/net/Uri/parse(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/content/Context/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Object/getClass()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/toString()
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/Object/toString()
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/StringBuilder/append(int)
com/fsck/k9/message/html/EmailSection/get(int)#java/util/List/size()
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/message/html/EmailSection/get(int)#java/util/List/get(int)
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/AssertionError/AssertionError()
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/String/charAt(int)
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/message/html/EmailSection/get(int)#java/lang/StringBuilder/toString()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/offset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/lineTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/height()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/restore()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/reset()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/save()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/Path()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/close()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/moveTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/height()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/inset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/max(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/set(float,float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/min(int,int)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#android/content/Intent/hasExtra(java.lang.String)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#com/fsck/k9/message/PgpMessageBuilder/createMimeMultipart()
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#java/lang/StringBuilder/toString()
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#android/content/Intent/getByteArrayExtra(java.lang.String)
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/message/PgpMessageBuilder/mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent)#com/fsck/k9/mail/internet/MimeMultipart/addBodyPart(com.fsck.k9.mail.BodyPart)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/ArrayList/ArrayList()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/size()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Iterator/next()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/contains(java.lang.CharSequence)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/List/iterator()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Locale/getDefault()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/split(java.lang.String)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#android/widget/Filter$FilterResults/Filter$FilterResults()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/util/Iterator/hasNext()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/CharSequence/length()
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/activity/FolderList$FolderListAdapter$FolderListFilter/performFiltering(java.lang.CharSequence)#java/lang/CharSequence/toString()
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpInlineDialog/getActivity()
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/from(android.content.Context)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpInlineDialog/getArguments()
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpInlineDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/content/Intent/Intent(java.lang.String,android.net.Uri)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/content/Intent/putExtra(java.lang.String,boolean)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/net/Uri/encode(java.lang.String)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#java/lang/StringBuilder/append(int)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#com/fsck/k9/K9/sendBroadcast(android.content.Intent)
com/fsck/k9/K9$3/broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message)#java/lang/StringBuilder/toString()
com/bumptech/glide/module/ManifestParser/parse()#java/util/ArrayList/ArrayList()
com/bumptech/glide/module/ManifestParser/parse()#android/content/Context/getPackageManager()
com/bumptech/glide/module/ManifestParser/parse()#java/util/Iterator/next()
com/bumptech/glide/module/ManifestParser/parse()#java/lang/String/equals(java.lang.Object)
com/bumptech/glide/module/ManifestParser/parse()#java/util/Set/iterator()
com/bumptech/glide/module/ManifestParser/parse()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/bumptech/glide/module/ManifestParser/parse()#android/os/Bundle/keySet()
com/bumptech/glide/module/ManifestParser/parse()#java/util/Iterator/hasNext()
com/bumptech/glide/module/ManifestParser/parse()#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/bumptech/glide/module/ManifestParser/parse()#android/os/Bundle/get(java.lang.String)
com/bumptech/glide/module/ManifestParser/parse()#android/content/Context/getPackageName()
com/bumptech/glide/module/ManifestParser/parse()#java/util/List/add(java.lang.Object)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/Class/forName(java.lang.String)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/Class/newInstance()
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/StringBuilder/toString()
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/bumptech/glide/module/ManifestParser/parseModule(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/webkit/WebView/WebView(android.content.Context)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/content/res/Resources/getString(int)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/setView(android.view.View)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/create()
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/webkit/WebView/loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/content/Context/getResources()
de/cketti/library/changelog/ChangeLog/getDialog(boolean)#android/app/AlertDialog$Builder/setCancelable(boolean)
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#java/util/ArrayList/ArrayList()
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#org/xmlpull/v1/XmlPullParser/getEventType()
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#org/xmlpull/v1/XmlPullParser/getName()
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#java/lang/String/equals(java.lang.Object)
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#org/xmlpull/v1/XmlPullParser/getText()
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#java/util/List/add(java.lang.Object)
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#org/xmlpull/v1/XmlPullParser/next()
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#org/xmlpull/v1/XmlPullParser/getAttributeValue(java.lang.String,java.lang.String)
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#android/util/SparseArray/put(int,java.lang.Object)
de/cketti/library/changelog/ChangeLog/parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray)#java/lang/Integer/parseInt(java.lang.String)
de/cketti/library/changelog/ChangeLog/getLog(boolean)#android/content/res/Resources/getString(int)
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/util/Iterator/hasNext()
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/lang/StringBuilder/append(java.lang.String)
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/util/Iterator/next()
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/lang/StringBuilder/StringBuilder()
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/util/List/iterator()
de/cketti/library/changelog/ChangeLog/getLog(boolean)#java/lang/StringBuilder/toString()
de/cketti/library/changelog/ChangeLog/getLog(boolean)#android/content/Context/getResources()
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FontSizeSettings/findPreference(java.lang.CharSequence)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#java/lang/Float/valueOf(float)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FontSizeSettings/addPreferencesFromResource(int)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/SliderPreference/getOnPreferenceChangeListener()
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FontSizeSettings/setupListPreference(java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#java/lang/Integer/toString(int)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#android/preference/Preference$OnPreferenceChangeListener/onPreferenceChange(android.preference.Preference,java.lang.Object)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/FontSizeSettings/getString(int)
com/fsck/k9/activity/setup/FontSizeSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/SliderPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/requestWindowFeature(int)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/getIntent()
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/setListAdapter(android.widget.ListAdapter)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/setContentView(int)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/content/Intent/hasExtra(java.lang.String)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/widget/ListView/setFastScrollEnabled(boolean)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/getApplication()
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#com/fsck/k9/activity/ChooseFolder/getListView()
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/widget/ListView/setChoiceMode(int)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/ChooseFolder/onCreate(android.os.Bundle)#android/widget/ListView/setItemsCanFocus(boolean)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/EditTextPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSettings/findPreference(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setEntryValues(java.lang.CharSequence[])
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$MessageFormat/name()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setChecked(boolean)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#org/openintents/openpgp/util/OpenPgpKeyPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/PreferenceScreen/setSummary(int)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Iterator/hasNext()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setValue(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Map$Entry/getKey()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$Searchable/name()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/PreferenceScreen/removePreference(android.preference.Preference)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/PreferenceManager/getSharedPreferences()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/PreferenceScreen/setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/Integer/toString(int)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Map/get(java.lang.Object)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$Expunge/name()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$DeletePolicy/preferenceString()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/content/SharedPreferences$Editor/commit()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Map/size()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Iterator/next()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSettings/addPreferencesFromResource(int)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSettings/getIntent()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/Preference$OnPreferenceChangeListener/onPreferenceChange(android.preference.Preference,java.lang.Object)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/RingtonePreference/getPreferenceManager()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$QuoteStyle/name()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setSummary(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Set/iterator()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/content/SharedPreferences/edit()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSettings$PopulateFolderPrefsTask/execute(java.lang.Object[])
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/getEntry()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#com/fsck/k9/Account$FolderMode/name()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Map$Entry/getValue()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/content/SharedPreferences$Editor/putString(java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/EditTextPreference/setSummary(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/util/Map/entrySet()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/EditTextPreference/setText(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/ListPreference/setEntries(java.lang.CharSequence[])
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#java/lang/String/valueOf(int)
com/fsck/k9/activity/setup/AccountSettings/onCreate(android.os.Bundle)#android/preference/Preference/setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$MessageFormat/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$ShowPictures/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/content/SharedPreferences/getString(java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/preference/PreferenceManager/getSharedPreferences()
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$FolderMode/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$QuoteStyle/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/preference/RingtonePreference/getPreferenceManager()
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/preference/EditTextPreference/getText()
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/preference/ListPreference/getValue()
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$Expunge/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#android/preference/CheckBoxPreference/isChecked()
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$Searchable/valueOf(java.lang.String)
com/fsck/k9/activity/setup/AccountSettings/saveSettings()#com/fsck/k9/Account$DeletePolicy/fromInt(int)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Bitmap/getPixels(int[],int,int,int,int,int,int)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Bitmap/getWidth()
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#java/lang/StringBuilder/append(double)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Bitmap/getHeight()
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#java/lang/StringBuilder/toString()
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/util/Log/d(java.lang.String,java.lang.String)
com/bumptech/glide/gifencoder/AnimatedGifEncoder/getImagePixels()#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/isEmpty()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(boolean)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isMemberClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getModifiers()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getCanonicalName()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isPublic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Object/getClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isAnonymousClass()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#java/util/List/size()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/widget/ListView/setScrollingCacheEnabled(boolean)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/widget/ListView/setItemsCanFocus(boolean)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/getActionBar()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/setContentView(int)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/getLastNonConfigurationInstance()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/requestWindowFeature(int)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/finish()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/app/AlertDialog/show()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/getIntent()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/registerForContextMenu(android.view.View)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#com/fsck/k9/activity/Accounts/getListView()
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#java/util/List/get(int)
com/fsck/k9/activity/Accounts/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/activity/Accounts/onAbout()#android/webkit/WebView/WebView(android.content.Context)
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts/onAbout()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/Accounts/onAbout()#java/lang/Integer/toString(int)
com/fsck/k9/activity/Accounts/onAbout()#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/setCancelable(boolean)
com/fsck/k9/activity/Accounts/onAbout()#com/fsck/k9/activity/Accounts/getString(int)
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/activity/Accounts/onAbout()#java/util/Calendar/get(int)
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/show()
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/Accounts/onAbout()#java/lang/StringBuilder/toString()
com/fsck/k9/activity/Accounts/onAbout()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/Accounts/onAbout()#java/util/Calendar/getInstance()
com/fsck/k9/activity/Accounts/onAbout()#android/webkit/WebView/loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/activity/Accounts/onAbout()#android/app/AlertDialog$Builder/setNeutralButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuItem/setVisible(boolean)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/findItem(int)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/setHeaderTitle(int)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/size()
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#com/fsck/k9/activity/Accounts$AccountsAdapter/getItem(int)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#java/util/EnumSet/contains(java.lang.Object)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuInflater/inflate(int,android.view.Menu)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/MenuItem/setEnabled(boolean)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#com/fsck/k9/activity/Accounts/getMenuInflater()
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#android/view/ContextMenu/getItem(int)
com/fsck/k9/activity/Accounts/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)#com/fsck/k9/activity/K9ListActivity/onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
com/fsck/k9/activity/Accounts/refresh()#android/widget/ListView/setAdapter(android.widget.ListAdapter)
com/fsck/k9/activity/Accounts/refresh()#java/util/concurrent/ConcurrentMap/clear()
com/fsck/k9/activity/Accounts/refresh()#java/util/Iterator/hasNext()
com/fsck/k9/activity/Accounts/refresh()#java/util/List/size()
com/fsck/k9/activity/Accounts/refresh()#java/util/List/addAll(java.util.Collection)
com/fsck/k9/activity/Accounts/refresh()#java/util/Iterator/next()
com/fsck/k9/activity/Accounts/refresh()#java/util/List/iterator()
com/fsck/k9/activity/Accounts/refresh()#java/util/ArrayList/ArrayList(int)
com/fsck/k9/activity/Accounts/refresh()#java/util/List/isEmpty()
com/fsck/k9/activity/Accounts/refresh()#com/fsck/k9/activity/Accounts/getApplication()
com/fsck/k9/activity/Accounts/refresh()#java/util/concurrent/ConcurrentMap/put(java.lang.Object,java.lang.Object)
com/fsck/k9/activity/Accounts/refresh()#java/util/List/clear()
com/fsck/k9/activity/Accounts/refresh()#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/Accounts/refresh()#com/fsck/k9/activity/Accounts/getListView()
com/fsck/k9/activity/Accounts/onImport()#android/content/Intent/createChooser(android.content.Intent,java.lang.CharSequence)
com/fsck/k9/activity/Accounts/onImport()#android/content/Intent/setType(java.lang.String)
com/fsck/k9/activity/Accounts/onImport()#com/fsck/k9/activity/Accounts/getPackageManager()
com/fsck/k9/activity/Accounts/onImport()#java/util/List/size()
com/fsck/k9/activity/Accounts/onImport()#android/content/pm/PackageManager/queryIntentActivities(android.content.Intent,int)
com/fsck/k9/activity/Accounts/onImport()#android/content/Intent/addCategory(java.lang.String)
com/fsck/k9/activity/Accounts/onImport()#android/content/Intent/Intent(java.lang.String)
com/fsck/k9/activity/Accounts/onImport()#com/fsck/k9/activity/Accounts/startActivityForResult(android.content.Intent,int)
com/fsck/k9/activity/Accounts/onImport()#com/fsck/k9/activity/Accounts/showDialog(int)
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#android/view/MotionEvent/getX(int)
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#com/fsck/k9/view/NonLockingScrollView/getScrollX()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#com/fsck/k9/view/NonLockingScrollView/getScrollY()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#java/util/Iterator/next()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#android/graphics/Rect/contains(int,int)
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#android/view/MotionEvent/getActionIndex()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#java/util/List/iterator()
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#android/view/MotionEvent/getY(int)
com/fsck/k9/view/NonLockingScrollView/isEventOverChild(android.view.MotionEvent,java.util.List)#android/view/View/getHitRect(android.graphics.Rect)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/K9$LockScreenNotificationVisibility/toString()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/findPreference(java.lang.CharSequence)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/preferences/TimePickerPreference/setSummary(java.lang.CharSequence)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setChecked(boolean)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/setupListPreference(java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/List/remove(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#org/openintents/openpgp/util/OpenPgpAppPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/getResources()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/PreferenceScreen/removePreference(android.preference.Preference)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/K9$NotificationQuickDelete/toString()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/lang/Integer/toString(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/Arrays/asList(java.lang.Object[])
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/List/size()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/addPreferencesFromResource(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/K9$BACKGROUND_OPS/name()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/getString(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/Preference/setSummary(java.lang.CharSequence)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/getApplicationContext()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/K9$SplitViewMode/name()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/ListPreference/getEntries()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/List/get(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/K9$NotificationHideSubject/toString()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/ListPreference/getEntryValues()
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/preferences/TimePickerPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/content/res/Resources/getStringArray(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setSummary(int)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/Prefs/initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[])
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#java/util/HashSet/HashSet(java.util.Collection)
com/fsck/k9/activity/setup/Prefs/onCreate(android.os.Bundle)#android/preference/Preference/setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)
com/fsck/k9/activity/setup/Prefs/saveSettings()#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/activity/setup/Prefs/saveSettings()#com/fsck/k9/K9$LockScreenNotificationVisibility/valueOf(java.lang.String)
com/fsck/k9/activity/setup/Prefs/saveSettings()#android/preference/Preference/getSummary()
com/fsck/k9/activity/setup/Prefs/saveSettings()#java/lang/CharSequence/toString()
com/fsck/k9/activity/setup/Prefs/saveSettings()#com/fsck/k9/K9$NotificationHideSubject/valueOf(java.lang.String)
com/fsck/k9/activity/setup/Prefs/saveSettings()#android/widget/Toast/show()
com/fsck/k9/activity/setup/Prefs/saveSettings()#com/fsck/k9/K9$SplitViewMode/valueOf(java.lang.String)
com/fsck/k9/activity/setup/Prefs/saveSettings()#android/preference/ListPreference/getValue()
com/fsck/k9/activity/setup/Prefs/saveSettings()#com/fsck/k9/K9$NotificationQuickDelete/valueOf(java.lang.String)
com/fsck/k9/activity/setup/Prefs/saveSettings()#android/widget/Toast/makeText(android.content.Context,int,int)
com/fsck/k9/activity/setup/Prefs/saveSettings()#android/preference/CheckBoxPreference/isChecked()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getGenericDeclaration()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Object/equals(java.lang.Object)
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getName()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/String/equals(java.lang.Object)
com/squareup/moshi/Types/equals(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/toString()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/Class/getName()
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
com/squareup/moshi/Types/getRawType(java.lang.reflect.Type)#java/lang/Object/getClass()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/isArray()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/Class/getComponentType()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
com/squareup/moshi/Types/resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)#[Ljava/lang/reflect/Type;/clone()
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/lang/StringBuilder/append(boolean)
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#android/graphics/Bitmap/getConfig()
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#android/graphics/Bitmap/isMutable()
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#android/util/Log/v(java.lang.String,java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool/put(android.graphics.Bitmap)#java/util/Set/contains(java.lang.Object)
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Iterator/hasNext()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Iterator/next()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Set/iterator()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Map$Entry/getValue()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Map/entrySet()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/lang/StringBuilder/toString()
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/MapJsonAdapter/toJson(com.squareup.moshi.JsonWriter,java.util.Map)#java/util/Map$Entry/getKey()
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#java/util/ArrayList/ArrayList()
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/hasNext()
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/next()
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#java/util/List/add(java.lang.Object)
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo60/migratePendingCommands(android.database.sqlite.SQLiteDatabase)#java/util/List/iterator()
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteException/getMessage()
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo50/foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#com/fsck/k9/mail/Folder$FolderClass/name()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/net/URI/toString()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/net/URI/getHost()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/net/URI/getPort()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/net/URI/getScheme()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/setup/AccountSetupBasics/finishAutoSetup()#java/lang/StringBuilder/toString()
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#com/squareup/moshi/JsonReader$Token/ordinal()
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/Double/valueOf(double)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/Boolean/valueOf(boolean)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/util/List/add(java.lang.Object)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/StringBuilder/toString()
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/util/ArrayList/ArrayList()
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/StandardJsonAdapters$ObjectJsonAdapter/fromJson(com.squareup.moshi.JsonReader)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/content/ContentResolver/getType(android.net.Uri)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/lang/Long/valueOf(long)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/lang/String/substring(int)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/lang/String/indexOf(int)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/database/Cursor/getInt(int)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/lang/String/length()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#com/fsck/k9/activity/loader/AttachmentInfoLoader/getContext()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/database/Cursor/close()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/net/Uri/getLastPathSegment()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/io/File/File(java.lang.String)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/database/Cursor/getString(int)
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#java/io/File/length()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/content/Context/getContentResolver()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/database/Cursor/moveToFirst()
com/fsck/k9/activity/loader/AttachmentInfoLoader/loadInBackground()#android/net/Uri/toString()
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/setColor(int)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/setAlpha(int)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/SweepGradient/SweepGradient(float,float,int[],float[])
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#com/larswerkman/colorpicker/ColorPicker/getContext()
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/setShader(android.graphics.Shader)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/content/res/TypedArray/recycle()
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/content/res/TypedArray/getInteger(int,int)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/larswerkman/colorpicker/ColorPicker/init(android.util.AttributeSet,int)#android/graphics/Paint/Paint(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#android/database/Cursor/close()
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/io/File/exists()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/net/Uri/getPathSegments()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/io/File/renameTo(java.io.File)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/util/List/get(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/moveToFirst()
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/close()
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/getCount()
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/migrations/MigrationTo51/migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState)#android/database/Cursor/getInt(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/io/File/getParent()
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/lang/StringBuilder/append(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/lang/System/currentTimeMillis()
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/io/File/mkdir()
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/io/File/File(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/migrations/MigrationTo51/renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File)#java/io/File/renameTo(java.io.File)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#org/apache/james/mime4j/codec/QuotedPrintableOutputStream/write(byte[])
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#java/lang/String/length()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#android/content/ContentValues/put(java.lang.String,byte[])
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#java/lang/String/getBytes()
com/fsck/k9/mailstore/migrations/MigrationTo51/insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/close()
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getCount()
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/clear()
com/fsck/k9/mailstore/migrations/MigrationTo51/db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getInt(int)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#kotlin/collections/CollectionsKt/toMutableList(java.lang.Iterable)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#java/util/Collection/size()
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#java/util/Iterator/next()
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#java/lang/Iterable/iterator()
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#kotlin/collections/CollectionsKt/optimizeReadOnlyList(java.util.List)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#kotlin/collections/CollectionsKt/listOf(java.lang.Object)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#java/util/List/get(int)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#kotlin/collections/CollectionsKt/toMutableList(java.util.Collection)
kotlin/collections/CollectionsKt___CollectionsKt/toList(java.lang.Iterable)#kotlin/collections/CollectionsKt/emptyList()
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/Class/forName(java.lang.String)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/Integer/intValue()
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/io/IOException/IOException(java.lang.String)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/StringBuilder/append(int)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/Integer/valueOf(int)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/SecurityException/SecurityException(java.lang.String,java.lang.Throwable)
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/StringBuilder/toString()
com/fsck/k9/PRNGFixes/applyOpenSSLFix()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/Object/equals(java.lang.Object)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/security/SecureRandom/getInstance(java.lang.String)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/security/SecureRandom/getProvider()
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/StringBuilder/toString()
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/security/SecureRandom/SecureRandom()
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/security/Security/getProviders(java.lang.String)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/security/Security/insertProviderAt(java.security.Provider,int)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/SecurityException/SecurityException(java.lang.String,java.lang.Throwable)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/SecurityException/SecurityException(java.lang.String)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/PRNGFixes/installLinuxPRNGSecureRandom()#java/lang/Object/getClass()
com/fsck/k9/PRNGFixes/generateSeed()#java/io/DataOutputStream/writeInt(int)
com/fsck/k9/PRNGFixes/generateSeed()#java/io/DataOutputStream/write(byte[])
com/fsck/k9/PRNGFixes/generateSeed()#java/lang/System/nanoTime()
com/fsck/k9/PRNGFixes/generateSeed()#java/io/DataOutputStream/close()
com/fsck/k9/PRNGFixes/generateSeed()#android/os/Process/myPid()
com/fsck/k9/PRNGFixes/generateSeed()#java/io/DataOutputStream/writeLong(long)
com/fsck/k9/PRNGFixes/generateSeed()#android/os/Process/myUid()
com/fsck/k9/PRNGFixes/generateSeed()#java/lang/System/currentTimeMillis()
com/fsck/k9/PRNGFixes/generateSeed()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/fsck/k9/PRNGFixes/generateSeed()#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/fsck/k9/PRNGFixes/generateSeed()#java/lang/SecurityException/SecurityException(java.lang.String,java.lang.Throwable)
com/fsck/k9/PRNGFixes/generateSeed()#java/io/ByteArrayOutputStream/toByteArray()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Spinner/getSelectedItemPosition()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Toast/show()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Spinner/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#com/fsck/k9/activity/setup/AccountSetupIncoming/getString(int,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/EditText/removeTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Button/isEnabled()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#com/fsck/k9/activity/setup/AccountSetupIncoming/getString(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Spinner/getOnItemSelectedListener()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#com/fsck/k9/mail/AuthType/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Button/setEnabled(boolean)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#android/widget/Spinner/setSelection(int,boolean)
com/fsck/k9/activity/setup/AccountSetupIncoming/validateFields()#com/fsck/k9/mail/ConnectionSecurity/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupIncoming/setContentView(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/view/View/setVisibility(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/Exception/Exception(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/EditText/setKeyListener(android.text.method.KeyListener)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/CheckBox/setVisibility(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/CheckBox/setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupIncoming/findViewById(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupIncoming/getIntent()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/text/method/DigitsKeyListener/getInstance(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/Spinner/setSelection(int,boolean)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/Spinner/setAdapter(android.widget.SpinnerAdapter)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#android/widget/TextView/setText(int)
com/fsck/k9/activity/setup/AccountSetupIncoming/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#java/net/URI/getPort()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#java/net/URI/URI(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#com/fsck/k9/activity/setup/AccountSetupIncoming/finish()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#android/content/Intent/getAction()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#com/fsck/k9/activity/setup/AccountSetupIncoming/getIntent()
com/fsck/k9/activity/setup/AccountSetupIncoming/onActivityResult(int,int,android.content.Intent)#java/net/URI/getHost()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/content/res/Resources/getDisplayMetrics()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/content/res/Resources/getConfiguration()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/lang/String/length()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/util/Locale/Locale(java.lang.String)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/content/res/Resources/getSystem()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/lang/String/substring(int,int)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/content/Context/getResources()
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#android/content/res/Resources/updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/lang/String/substring(int)
com/fsck/k9/activity/K9ActivityCommon/setLanguage(android.content.Context,java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String)
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#com/fsck/k9/view/ToolableViewAnimator/getResources()
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#com/fsck/k9/view/ToolableViewAnimator/getChildCount()
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#android/view/View/getId()
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#android/content/res/Resources/getResourceEntryName(int)
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#java/lang/StringBuilder/toString()
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/view/ToolableViewAnimator/setDisplayedChildId(int)#com/fsck/k9/view/ToolableViewAnimator/getChildAt(int)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/EditIdentity/setContentView(int)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/os/Bundle/getSerializable(java.lang.String)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/content/Intent/getIntExtra(java.lang.String,int)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/EditIdentity/getIntent()
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#com/fsck/k9/activity/EditIdentity/findViewById(int)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/widget/CheckBox/setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/widget/CheckBox/isChecked()
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/widget/LinearLayout/setVisibility(int)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/EditIdentity/onCreate(android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/activity/EditIdentity/saveIdentity()#com/fsck/k9/activity/EditIdentity/getApplication()
com/fsck/k9/activity/EditIdentity/saveIdentity()#android/widget/EditText/getText()
com/fsck/k9/activity/EditIdentity/saveIdentity()#android/widget/CheckBox/isChecked()
com/fsck/k9/activity/EditIdentity/saveIdentity()#java/util/List/add(int,java.lang.Object)
com/fsck/k9/activity/EditIdentity/saveIdentity()#java/lang/Object/toString()
com/fsck/k9/activity/EditIdentity/saveIdentity()#android/app/Application/getApplicationContext()
com/fsck/k9/activity/EditIdentity/saveIdentity()#java/util/List/remove(int)
com/fsck/k9/activity/EditIdentity/saveIdentity()#com/fsck/k9/activity/EditIdentity/finish()
com/fsck/k9/activity/EditIdentity/saveIdentity()#android/text/Editable/length()
com/fsck/k9/activity/EditIdentity/saveIdentity()#java/util/List/add(java.lang.Object)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/content/Context/getPackageName()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/widget/RemoteViews/setOnClickFillInIntent(int,android.content.Intent)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/widget/RemoteViews/RemoteViews(java.lang.String,int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/widget/RemoteViews/setTextColor(int,int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/content/Intent/Intent()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#java/util/ArrayList/get(int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/content/Intent/setData(android.net.Uri)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/widget/RemoteViews/setTextViewText(int,java.lang.CharSequence)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/getViewAt(int)#android/widget/RemoteViews/setInt(int,java.lang.String,int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/database/Cursor/isNull(int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/net/Uri$Builder/build()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#java/util/ArrayList/clear()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/net/Uri/parse(java.lang.String)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/database/Cursor/moveToNext()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/database/Cursor/getLong(int)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/database/Cursor/close()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/net/Uri/buildUpon()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/net/Uri$Builder/appendPath(java.lang.String)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#java/util/ArrayList/add(java.lang.Object)
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/content/Context/getContentResolver()
com/fsck/k9/widget/list/MessageListRemoteViewFactory/loadMessageList()#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#com/fsck/k9/mailstore/LocalMessage/setInternalDate(java.util.Date)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#com/fsck/k9/mailstore/DatabasePreviewType/fromDatabaseValue(java.lang.String)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#android/database/Cursor/getBlob(int)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#java/util/Date/Date(long)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#com/fsck/k9/mailstore/LocalMessage/setInternalSentDate(java.util.Date)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#java/lang/String/split(java.lang.String)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#android/database/Cursor/isNull(int)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#com/fsck/k9/mailstore/DatabasePreviewType/getPreviewType()
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#java/lang/String/length()
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#com/fsck/k9/mail/Flag/valueOf(java.lang.String)
com/fsck/k9/mailstore/LocalMessage/populateFromGetMessageCursor(android.database.Cursor)#android/database/Cursor/getInt(int)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getName()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/ProviderInfo/loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/next()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getCacheDir()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getFilesDir()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/length()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/field/datetime/parser/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/Long/toString(long)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/Set/isEmpty()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/Set/iterator()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/Set/remove(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/length()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/List/isEmpty()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/setLength(int)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/String/length()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/Long/longValue()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/append(char)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/lang/StringBuilder/setCharAt(int,char)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/List/remove(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapCommandSplitter/splitCommand(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.IdGrouper$GroupedIds,int)#java/util/TreeSet/TreeSet(java.util.Collection)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#com/fsck/k9/mail/Folder$FolderClass/valueOf(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String,java.lang.Object[])
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/migrations/MigrationTo41/update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String)#com/fsck/k9/mail/Folder$FolderClass/name()
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/view/View/setVisibility(int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#java/lang/Math/max(int,int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/widget/TextView/setLines(int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/widget/CheckBox/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/widget/CheckBox/setVisibility(int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/view/View/findViewById(int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#com/fsck/k9/ui/ContactBadge/setVisibility(int)
com/fsck/k9/fragment/MessageListAdapter/newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/SpannableStringBuilder/SpannableStringBuilder(java.lang.CharSequence)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setTypeface(android.graphics.Typeface)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setText(java.lang.CharSequence,android.widget.TextView$BufferType)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#java/util/Set/contains(java.lang.Object)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getString(int)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#com/fsck/k9/fragment/MessageListFragment/getString(int)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getInt(int)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/view/View/setBackgroundColor(int)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getLong(int)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getPosition()
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/getTypeface()
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/format/DateUtils/getRelativeTimeSpanString(android.content.Context,long)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/view/View/getTag()
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/fragment/MessageListAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/graphics/Typeface/create(android.graphics.Typeface,int)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#com/fsck/k9/mailstore/DatabasePreviewType/fromDatabaseValue(java.lang.String)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#android/database/Cursor/getString(int)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#java/lang/StringBuilder/toString()
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#com/fsck/k9/mailstore/DatabasePreviewType/ordinal()
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/fragment/MessageListAdapter/getPreview(android.database.Cursor)#com/fsck/k9/fragment/MessageListFragment/getString(int)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/Integer/toString(int,int)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(char)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/length()
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/toString()
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/substring(int,int)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/field/address/TokenMgrError/addEscapes(java.lang.String)#java/lang/String/charAt(int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/isEmpty()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/Iterator/next()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/size()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/iterator()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/security/cert/X509Certificate/getPublicKey()
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/security/cert/X509Certificate/getIssuerX500Principal()
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/toUpperCase(java.util.Locale)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/security/PublicKey/getAlgorithm()
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/substring(int,int)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/substring(int)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/util/List/contains(java.lang.Object)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/contains(java.lang.CharSequence)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/lang/String/indexOf(int)
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/security/cert/X509Certificate/getSigAlgName()
com/fsck/k9/mail/ssl/KeyChainKeyManager/chooseAlias(java.lang.String[],java.security.Principal[])#java/util/Arrays/asList(java.lang.Object[])
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/text/format/DateUtils/getRelativeTimeSpanString(long,long,long,int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/FolderList/getString(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#java/lang/System/currentTimeMillis()
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/widget/RelativeLayout/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundDrawable(android.graphics.drawable.Drawable)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/setVisibility(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundColor(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setSingleLine(boolean)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/FolderList/getString(int,java.lang.Object[])
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#java/lang/Math/abs(long)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
com/fsck/k9/activity/FolderList$FolderListAdapter/getItemView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#com/fsck/k9/activity/UnreadWidgetConfiguration/finish()
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#android/preference/CheckBoxPreference/setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#com/fsck/k9/activity/UnreadWidgetConfiguration/setTitle(int)
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#com/fsck/k9/activity/UnreadWidgetConfiguration/findPreference(java.lang.CharSequence)
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#android/preference/Preference/setOnPreferenceClickListener(android.preference.Preference$OnPreferenceClickListener)
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#com/fsck/k9/activity/UnreadWidgetConfiguration/getIntent()
com/fsck/k9/activity/UnreadWidgetConfiguration/onCreate(android.os.Bundle)#com/fsck/k9/activity/UnreadWidgetConfiguration/addPreferencesFromResource(int)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$302(org.jsoup.nodes.Entities$EscapeMode,int[])
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$400(org.jsoup.nodes.Entities$EscapeMode)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$300(org.jsoup.nodes.Entities$EscapeMode)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$200(org.jsoup.nodes.Entities$EscapeMode)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$100(org.jsoup.nodes.Entities$EscapeMode)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$102(org.jsoup.nodes.Entities$EscapeMode,java.lang.String[])
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$402(org.jsoup.nodes.Entities$EscapeMode,java.lang.String[])
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#java/lang/String/String(int[],int,int)
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#org/jsoup/nodes/Entities$EscapeMode/access$202(org.jsoup.nodes.Entities$EscapeMode,int[])
org/jsoup/nodes/Entities/load(org.jsoup.nodes.Entities$EscapeMode,java.lang.String,int)#java/lang/Integer/parseInt(java.lang.String,int)
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/getName()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/isDirectory()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/exists()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/renameTo(java.io.File)
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/getAbsolutePath()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/mkdirs()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/listFiles()
com/fsck/k9/helper/FileHelper/moveRecursive(java.io.File,java.io.File)#java/io/File/delete()
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#com/fsck/k9/activity/K9Activity/onCreateDialog(int)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/setMessage(int)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/create()
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/view/ContextThemeWrapper/ContextThemeWrapper(android.content.Context,int)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/setTitle(int)
com/fsck/k9/activity/MessageCompose/onCreateDialog(int)#android/app/AlertDialog$Builder/setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/widget/EditText/getInputExtras(boolean)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/util/TypedValue/TypedValue()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/startActivity(android.content.Intent)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/finish()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/setContentView(android.view.View)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/setContentView(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/content/Intent/getAction()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/os/Handler/sendEmptyMessage(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/view/View/setBackgroundColor(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/content/Intent/getParcelableExtra(java.lang.String)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/requestWindowFeature(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/getLastNonConfigurationInstance()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String,boolean)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/view/ContextThemeWrapper/getTheme()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/setProgressBarIndeterminateVisibility(boolean)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/ui/EolConvertingEditText/requestFocus()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/findViewById(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/os/Bundle/putBoolean(java.lang.String,boolean)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/getIntent()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/ui/EolConvertingEditText/setVisibility(int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/ui/EolConvertingEditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/widget/TextView/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/getLoaderManager()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/view/LayoutInflater/from(android.content.Context)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/getApplicationContext()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/ui/EolConvertingEditText/setOnFocusChangeListener(android.view.View$OnFocusChangeListener)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/activity/MessageCompose/getFragmentManager()
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/widget/EditText/setOnFocusChangeListener(android.view.View$OnFocusChangeListener)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/view/ContextThemeWrapper/ContextThemeWrapper(android.content.Context,int)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#com/fsck/k9/ui/EolConvertingEditText/getInputExtras(boolean)
com/fsck/k9/activity/MessageCompose/onCreate(android.os.Bundle)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/util/regex/Matcher/replaceFirst(java.lang.String)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/String/toLowerCase(java.util.Locale)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/String/length()
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Object[])
com/fsck/k9/activity/MessageCompose/processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#java/util/Iterator/hasNext()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getParcelableArrayListExtra(java.lang.String)
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getParcelableExtra(java.lang.String)
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getType()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#java/util/List/iterator()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/text/Editable/length()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getAction()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#java/util/Iterator/next()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#com/fsck/k9/ui/EolConvertingEditText/getText()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/widget/EditText/getText()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getCharSequenceExtra(java.lang.String)
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getData()
com/fsck/k9/activity/MessageCompose/initFromIntent(android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/Accounts$AccountsAdapter/getItem(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/isEmpty()
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageButton/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/RelativeLayout/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getTag()
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setTag(java.lang.Object)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundDrawable(android.graphics.drawable.Drawable)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/intValue()
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setVisibility(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/fsck/k9/activity/Accounts/getLayoutInflater()
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setBackgroundColor(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageButton/setVisibility(int)
com/fsck/k9/activity/Accounts$AccountsAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/io/InputStream/read(byte[],int,int)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/io/InputStream/read(byte[])
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/lang/StringBuilder/toString()
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream/fillbuf(java.io.InputStream,byte[])#android/util/Log/d(java.lang.String,java.lang.String)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#com/fsck/k9/fragment/ConfirmationDialogFragment/getActivity()
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/fragment/ConfirmationDialogFragment/onCreateDialog(android.os.Bundle)#com/fsck/k9/fragment/ConfirmationDialogFragment/getArguments()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/Iterator/hasNext()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/String/length()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/Iterator/next()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/List/iterator()
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#com/fsck/k9/mail/FetchProfile/add(java.lang.Object)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/Collections/singletonList(java.lang.Object)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo55/createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/clear()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/finish()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setFastScrollEnabled(boolean)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/app/AlertDialog/show()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/getIntent()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/getActionBar()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setLongClickable(boolean)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setSaveEnabled(boolean)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/setContentView(int)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/isFinishing()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/getLayoutInflater()
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setScrollBarStyle(int)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#android/widget/ListView/setScrollingCacheEnabled(boolean)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/registerForContextMenu(android.view.View)
com/fsck/k9/activity/FolderList/onCreate(android.os.Bundle)#com/fsck/k9/activity/FolderList/getListView()
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#java/lang/Long/valueOf(long)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#java/util/Set/size()
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#java/util/HashSet/HashSet(int)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#java/util/Set/contains(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#android/database/Cursor/getString(int)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#java/util/Set/add(java.lang.Object)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#com/fsck/k9/fragment/MessageListAdapter/getItem(int)
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#com/fsck/k9/fragment/MessageListAdapter/getCount()
com/fsck/k9/fragment/MessageListFragment$ActionModeCallback/getAccountUuidsForSelected()#android/database/Cursor/getLong(int)
com/fsck/k9/Account/pickColor(android.content.Context)#java/lang/Integer/intValue()
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/Iterator/hasNext()
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/Iterator/next()
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/List/contains(java.lang.Object)
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/List/iterator()
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/List/remove(java.lang.Object)
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/List/isEmpty()
com/fsck/k9/Account/pickColor(android.content.Context)#java/lang/Integer/valueOf(int)
com/fsck/k9/Account/pickColor(android.content.Context)#java/util/List/get(int)
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/lang/String/split(java.lang.String)
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/util/List/toArray()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/util/List/size()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/lang/StringBuilder/toString()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#com/fsck/k9/mail/NetworkType/values()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#com/fsck/k9/mail/NetworkType/name()
com/fsck/k9/Account/delete(com.fsck.k9.Preferences)#java/util/List/add(java.lang.Object)
com/fsck/k9/Account/getStats(android.content.Context)#java/util/ArrayList/ArrayList()
com/fsck/k9/Account/getStats(android.content.Context)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/Account/getStats(android.content.Context)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/Account/getStats(android.content.Context)#android/content/Context/getContentResolver()
com/fsck/k9/Account/getStats(android.content.Context)#android/net/Uri/withAppendedPath(android.net.Uri,java.lang.String)
com/fsck/k9/Account/getStats(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/Account/getStats(android.content.Context)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/Account/getStats(android.content.Context)#android/database/Cursor/moveToFirst()
com/fsck/k9/Account/getStats(android.content.Context)#java/lang/StringBuilder/toString()
com/fsck/k9/Account/getStats(android.content.Context)#android/database/Cursor/getInt(int)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$MessageFormat/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$MessageFormat/equals(java.lang.Object)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/util/Arrays/sort(int[])
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/util/List/size()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$SortType/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/Boolean/booleanValue()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/StringBuilder/toString()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$Searchable/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/mail/NetworkType/values()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/String/length()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/util/Map/get(java.lang.Object)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$Expunge/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$QuoteStyle/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$ShowPictures/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/util/List/get(int)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#com/fsck/k9/Account$FolderMode/name()
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/Account/save(com.fsck.k9.Preferences)#java/lang/String/contains(java.lang.CharSequence)
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/util/ArrayList/ArrayList()
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/util/List/size()
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#android/content/Context/getContentResolver()
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#android/net/Uri/withAppendedPath(android.net.Uri,java.lang.String)
com/fsck/k9/Account/loadUnreadCountForFolder(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/service/RemoteControlService$1/run()#java/util/Iterator/hasNext()
com/fsck/k9/service/RemoteControlService$1/run()#com/fsck/k9/service/RemoteControlService/getResources()
com/fsck/k9/service/RemoteControlService$1/run()#java/util/List/iterator()
com/fsck/k9/service/RemoteControlService$1/run()#android/content/res/Resources/getStringArray(int)
com/fsck/k9/service/RemoteControlService$1/run()#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/Exception/getMessage()
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/Integer/intValue()
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/Boolean/parseBoolean(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/service/RemoteControlService$1/run()#com/fsck/k9/Account$FolderMode/valueOf(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/fsck/k9/service/RemoteControlService$1/run()#android/widget/Toast/show()
com/fsck/k9/service/RemoteControlService$1/run()#java/util/Iterator/next()
com/fsck/k9/service/RemoteControlService$1/run()#android/content/Intent/setAction(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#com/fsck/k9/K9$BACKGROUND_OPS/valueOf(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/String/equals(java.lang.Object)
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/Integer/parseInt(java.lang.String)
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/Integer/valueOf(int)
com/fsck/k9/service/RemoteControlService$1/run()#java/lang/System/currentTimeMillis()
com/fsck/k9/service/RemoteControlService$1/run()#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/lang/String/trim()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getAction()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/util/Collection/iterator()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/net/Uri/getPathSegments()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/util/Iterator/hasNext()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/hasExtra(java.lang.String)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#com/fsck/k9/activity/MessageList/getString(int)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getBundleExtra(java.lang.String)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getByteArrayExtra(java.lang.String)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/util/List/size()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/util/Iterator/next()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/util/List/get(int)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/widget/TextView/setVisibility(int)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#com/fsck/k9/activity/MessageList/getApplicationContext()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getData()
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/MessageList/decodeExtras(android.content.Intent)#java/lang/String/valueOf(int)
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/lang/String/split(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/net/URI/getUserInfo()
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/net/URI/toString()
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/lang/StringBuilder/toString()
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/net/URI/URI(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/net/URI/URI(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupAccountType/setupDav()#java/net/URI/getPort()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/forName(java.lang.String)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Integer/intValue()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/getName()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/AssertionError/AssertionError()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/StringBuilder/toString()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/reflect/Constructor/setAccessible(boolean)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/reflect/Field/setAccessible(boolean)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/Class/getDeclaredField(java.lang.String)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/reflect/Method/setAccessible(boolean)
com/squareup/moshi/ClassFactory/get(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/getEncodedPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/indexOf(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/decode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/SecurityException/SecurityException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/hasNext()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/HashMap/entrySet()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/next()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(char)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getKey()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/encodedPath(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/length()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/build()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Set/iterator()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getValue()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/endsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/CheckBox/setVisibility(int)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/view/View/findViewById(int)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog/show()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/CheckBox/setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/view/View/setVisibility(int)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#com/fsck/k9/activity/Accounts/getResources()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog/getLayoutInflater()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/EditText/getText()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#com/fsck/k9/activity/Accounts/getString(int)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#com/fsck/k9/activity/Accounts/getString(int,java.lang.Object[])
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#java/lang/String/isEmpty()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/ScrollView/ScrollView(android.content.Context)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/content/res/Resources/getQuantityString(int,int)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/app/AlertDialog$Builder/create()
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/EditText/setEnabled(boolean)
com/fsck/k9/activity/Accounts$PasswordPromptDialog/show(com.fsck.k9.activity.Accounts,boolean)#android/widget/CheckBox/setChecked(boolean)
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/ArrayList/iterator()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/lang/Object/equals(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView$4/run()#android/text/Editable/length()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/Iterator/next()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/ArrayList/add(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView$4/run()#com/tokenautocomplete/TokenCompleteTextView/getText()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/List/iterator()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/List/remove(java.lang.Object)
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/ArrayList/ArrayList()
com/tokenautocomplete/TokenCompleteTextView$4/run()#java/util/Iterator/hasNext()
com/tokenautocomplete/TokenCompleteTextView$4/run()#android/text/Editable/getSpans(int,int,java.lang.Class)
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/ThreadLocal/set(java.lang.Object)
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#android/database/sqlite/SQLiteDatabase/beginTransaction()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/ThreadLocal/get()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/System/currentTimeMillis()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/Exception/getStackTrace()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#java/lang/Exception/Exception()
com/fsck/k9/mailstore/LockableDatabase/execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/io/File/mkdirs()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/io/File/isFile()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/io/File/delete()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/io/File/exists()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LockableDatabase/prepareStorage(java.lang.String)#java/io/File/getParentFile()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getSimpleName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/length()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Integer/toHexString(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/lastIndexOf(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/substring(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Object/getClass()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/nodes/Element/ownerDocument()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/nodes/Document/childNodes()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/select/Elements/add(int,java.lang.Object)
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/nodes/Element/childNodes()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#java/util/Iterator/hasNext()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/select/Elements/iterator()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/nodes/Document/appendChild(org.jsoup.nodes.Node)
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#java/util/Iterator/next()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#org/jsoup/parser/HtmlTreeBuilder/runParser()
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#java/io/StringReader/StringReader(java.lang.String)
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#java/lang/String/equals(java.lang.Object)
org/jsoup/parser/HtmlTreeBuilder/parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList,org.jsoup.parser.ParseSettings)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancelAll(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancel(java.lang.String,int,java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/notify(java.lang.String,int,java.lang.String,android.app.Notification)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/view/ViewGroup/setVisibility(int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOutgoing/setContentView(int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/EditText/setKeyListener(android.text.method.KeyListener)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/net/URI/URI(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/net/URI/getScheme()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/lang/String/isEmpty()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/text/method/DigitsKeyListener/getInstance(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/Spinner/setSelection(int,boolean)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/net/URISyntaxException/printStackTrace()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOutgoing/findViewById(int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupOutgoing/getIntent()
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/Spinner/setAdapter(android.widget.SpinnerAdapter)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/activity/setup/AccountSetupOutgoing/onCreate(android.os.Bundle)#com/fsck/k9/mail/ConnectionSecurity/ordinal()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#java/lang/Object/toString()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Spinner/getSelectedItemPosition()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Toast/makeText(android.content.Context,java.lang.CharSequence,int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Toast/show()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Spinner/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/EditText/getText()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/CheckBox/isChecked()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#com/fsck/k9/activity/setup/AccountSetupOutgoing/getString(int,java.lang.Object[])
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Button/isEnabled()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#com/fsck/k9/activity/setup/AccountSetupOutgoing/getString(int)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Spinner/getOnItemSelectedListener()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#com/fsck/k9/mail/AuthType/toString()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Button/setEnabled(boolean)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/Spinner/setSelection(int,boolean)
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#com/fsck/k9/mail/ConnectionSecurity/toString()
com/fsck/k9/activity/setup/AccountSetupOutgoing/validateFields()#android/widget/EditText/removeTextChangedListener(android.text.TextWatcher)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/ArrayList/ArrayList()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/String/split(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/String/length()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#com/fsck/k9/mail/Flag/ordinal()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/List/clear()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#java/util/List/add(java.lang.Object)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/close()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.Boolean)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#com/fsck/k9/mail/Flag/valueOf(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo46/addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper)#android/content/ContentValues/clear()
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupNames/setContentView(int)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/text/method/TextKeyListener/getInstance(boolean,android.text.method.TextKeyListener$Capitalize)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/widget/EditText/setKeyListener(android.text.method.KeyListener)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/widget/Button/setEnabled(boolean)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupNames/findViewById(int)
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupNames/getIntent()
com/fsck/k9/activity/setup/AccountSetupNames/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/putNull(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/isNull(int)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String,java.lang.Object[])
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/close()
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/database/Cursor/moveToNext()
com/fsck/k9/mailstore/migrations/MigrationTo47/createThreadsTable(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/clear()
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/content/Intent/putExtras(android.os.Bundle)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/database/Cursor/getLong(int)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/database/Cursor/close()
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/net/Uri/fromParts(java.lang.String,java.lang.String,java.lang.String)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/provider/ContactsContract$Contacts/getLookupUri(long,java.lang.String)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/os/Bundle/Bundle()
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/provider/ContactsContract$QuickContact/showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/content/Intent/Intent(java.lang.String,android.net.Uri)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/content/Context/startActivity(android.content.Intent)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/widget/Toast/show()
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#com/fsck/k9/ui/ContactBadge/getContext()
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/database/Cursor/getString(int)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/widget/Toast/makeText(android.content.Context,int,int)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/os/Bundle/remove(java.lang.String)
com/fsck/k9/ui/ContactBadge$QueryHandler/onQueryComplete(int,java.lang.Object,android.database.Cursor)#android/database/Cursor/moveToFirst()
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupComposition/setContentView(int)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/widget/RadioButton/setChecked(boolean)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/widget/CheckBox/setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupComposition/findViewById(int)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#com/fsck/k9/activity/setup/AccountSetupComposition/getIntent()
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/widget/LinearLayout/setVisibility(int)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/fsck/k9/activity/setup/AccountSetupComposition/onCreate(android.os.Bundle)#android/content/Intent/getStringExtra(java.lang.String)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/URL(java.net.URL,java.lang.String)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/getProtocol()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/getFile()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/URL(java.lang.String,java.lang.String,int,java.lang.String)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/getPort()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/getPath()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/net/URL/getHost()
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/lang/String/indexOf(int)
org/jsoup/helper/StringUtil/resolve(java.net.URL,java.lang.String)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/net/HttpURLConnection/getContentLength()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/net/HttpURLConnection/getInputStream()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/net/HttpURLConnection/getContentEncoding()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/data/HttpUrlFetcher/getStreamForSuccessfulRequest(java.net.HttpURLConnection)#android/util/Log/d(java.lang.String,java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/setUseCaches(boolean)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Iterator/hasNext()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/setReadTimeout(int)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/URL/toURI()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/setConnectTimeout(int)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Iterator/next()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/addRequestProperty(java.lang.String,java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/getHeaderField(java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Map$Entry/getValue()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/connect()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/setDoInput(boolean)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Map/entrySet()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/URL/URL(java.net.URL,java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/io/IOException/IOException(java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Map$Entry/getKey()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/URI/equals(java.lang.Object)
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/getResponseMessage()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/net/HttpURLConnection/getResponseCode()
com/bumptech/glide/load/data/HttpUrlFetcher/loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)#java/util/Set/iterator()
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapResponse/isList(int)
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#java/util/List/size()
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapList/size()
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#java/util/List/get(int)
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapResponse/getList(int)
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapResponse/size()
com/fsck/k9/mail/store/imap/UidCopyResponse/parseUidCopyResponse(com.fsck.k9.mail.store.imap.ImapResponse,java.util.Map)#com/fsck/k9/mail/store/imap/ImapList/get(int)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/String/split(java.lang.String,int)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/getUserInfo()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/String/length()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/getPort()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/getHost()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/getPath()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/net/URI/getScheme()
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/store/webdav/WebDavStoreUriDecoder/decode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/Set/iterator()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/Iterator/next()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/HashMap/HashMap()
com/fsck/k9/preferences/FolderSettings/getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String)#java/util/Map/keySet()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/substring(int,int)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/substring(int)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/startsWith(java.lang.String)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/indexOf(int)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/Iterator/hasNext()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/toLowerCase()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/trim()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/lang/String/length()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/Map/get(java.lang.Object)
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/Iterator/next()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/HashMap/HashMap()
org/apache/james/mime4j/stream/FallbackBodyDescriptorBuilder/parseContentType(org.apache.james.mime4j.stream.Field)#java/util/List/iterator()
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/String/length()
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/StringBuilder/append(char)
com/fsck/k9/mail/internet/DecoderUtil/decodeQ(java.lang.String)#java/lang/String/getBytes(java.nio.charset.Charset)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/split(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/URI(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/getUserInfo()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/length()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/getPort()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#com/fsck/k9/mail/AuthType/valueOf(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/charAt(int)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/getPath()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/getScheme()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/substring(int)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/net/URI/getHost()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapStoreUriDecoder/decode(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/Iterator/remove()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/List/iterator()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/ArrayList/ArrayList()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#com/fsck/k9/mail/store/imap/ImapResponse/size()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#java/util/List/add(java.lang.Object)
com/fsck/k9/mail/store/imap/ImapResponseParser/readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler)#com/fsck/k9/mail/store/imap/ImapResponse/get(int)
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Iterator/next()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Set/iterator()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#android/content/SharedPreferences/getAll()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Map/entrySet()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/StorageEditor/copy(android.content.SharedPreferences)#java/lang/StringBuilder/toString()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/ArrayList/ArrayList()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/setInverseBackgroundForced(boolean)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/Iterator/next()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/util/SparseBooleanArray/get(int)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/List/add(java.lang.Object)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/show()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/Iterator/hasNext()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/List/size()
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/List/toArray(java.lang.Object[])
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#com/fsck/k9/activity/Accounts/getString(int)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#android/app/AlertDialog$Builder/setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener)
com/fsck/k9/activity/Accounts$ImportSelectionDialog/show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray)#java/util/List/iterator()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/getVisibility()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setVisibility(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/endViewTransition(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getBoolean(java.lang.String,boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/clearAnimation()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/animation/Animator/cancel()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/addView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setSaveFromParentEnabled(boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/res/Resources/getResourceName(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/clear()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/PrintWriter(java.io.Writer)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/close()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/size()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/SparseArray(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/toArray()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getId()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getPositionDescription()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setId(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getTag()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setTag(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/Integer/intValue()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/canScrollList(int)
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getHeight()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getFirstVisiblePosition()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildAt(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/hasNext()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getKey()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/size()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/next()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/ensureCapacity(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Set/iterator()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getValue()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/entrySet()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#com/fsck/k9/mail/Flag/ordinal()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/util/Iterator/next()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/util/Set/isEmpty()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/util/Set/iterator()
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/lang/StringBuilder/append(java.lang.Object)
com/fsck/k9/mail/store/imap/UidSearchCommandBuilder/addFlags(java.lang.StringBuilder,java.util.Set,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/view/View/setBackgroundColor(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/widget/TextView/setTextColor(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#com/fsck/k9/view/MessageHeader/getResources()
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/content/res/Resources/getString(int,java.lang.Object[])
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/view/View/setVisibility(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#com/fsck/k9/ui/ContactBadge/setVisibility(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/content/Context/getText(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#com/fsck/k9/ui/ContactBadge/setImageResource(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/widget/TextView/setVisibility(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#com/fsck/k9/view/MessageHeader/setVisibility(int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#java/util/Date/getTime()
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
com/fsck/k9/view/MessageHeader/populate(com.fsck.k9.mail.Message,com.fsck.k9.Account)#android/widget/CheckBox/setChecked(boolean)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/SpannableString/SpannableString(java.lang.CharSequence)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/SpannableString/length()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/SpannableStringBuilder/append(java.lang.CharSequence)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/util/Iterator/next()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/util/List/iterator()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/style/StyleSpan/StyleSpan(int)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/lang/StringBuilder/toString()
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/SpannableString/setSpan(java.lang.Object,int,int,int)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/widget/TextView/setText(java.lang.CharSequence)
com/fsck/k9/view/MessageHeader/populateAdditionalHeadersView(java.util.List)#android/text/SpannableStringBuilder/SpannableStringBuilder()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Iterator/hasNext()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Map/isEmpty()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Iterator/next()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Set/iterator()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/append(char)
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/replace(int,int,java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/length()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Map/entrySet()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/toString()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Map$Entry/getKey()
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy/toString()#java/util/Map$Entry/getValue()
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/io/InputStream/read(byte[],int,int)
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/io/IOException/IOException(java.lang.String)
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/StringBuilder/append(int)
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/AssertionError/AssertionError()
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/StringBuilder/toString()
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/Math/min(int,int)
org/apache/james/mime4j/codec/Base64InputStream/read0(byte[],int,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/length()
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/substring(int,int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/substring(int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/indexOf(int,int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/charAt(int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/String/lastIndexOf(int,int)
com/fsck/k9/helper/Utility/wrap(java.lang.String,int,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/lang/String/regionMatches(int,java.lang.String,int,int)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/lang/String/trim()
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/lang/String/length()
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/util/regex/Matcher/end()
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/lang/String/startsWith(java.lang.String,int)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/util/regex/Matcher/start()
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/util/regex/Matcher/find(int)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/lang/String/substring(int)
com/fsck/k9/helper/Utility/stripSubject(java.lang.String)#java/util/regex/Matcher/group()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#java/util/regex/Pattern/compile(java.lang.String,int)
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/content/res/Resources/getColor(int)
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#java/util/regex/Matcher/end()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/text/Spannable/setSpan(java.lang.Object,int,int,int)
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#java/util/regex/Matcher/start()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#java/util/regex/Matcher/find()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/text/Spannable$Factory/getInstance()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/text/Spannable$Factory/newSpannable(java.lang.CharSequence)
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/content/Context/getResources()
com/fsck/k9/activity/compose/RecipientAdapter/highlightText(java.lang.String)#android/text/style/ForegroundColorSpan/ForegroundColorSpan(int)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/BaseFragmentActivityApi16/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpEnabledErrorDialog/getArguments()
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#com/fsck/k9/activity/compose/PgpEnabledErrorDialog/getActivity()
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setView(android.view.View)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/from(android.content.Context)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/create()
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
com/fsck/k9/activity/compose/PgpEnabledErrorDialog/onCreateDialog(android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/util/Iterator/hasNext()
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/setLength(int)
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/util/Iterator/next()
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/append(char)
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/length()
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/util/List/iterator()
com/fsck/k9/helper/MailTo/toCommaSeparatedString(java.util.List)#java/lang/StringBuilder/toString()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#android/net/Uri/getSchemeSpecificPart()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/String/length()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/String/substring(int,int)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#android/net/Uri/getEncodedQuery()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#android/net/Uri/decode(java.lang.String)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/util/List/add(int,java.lang.Object)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#android/net/Uri/toString()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/String/indexOf(int)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/fsck/k9/helper/MailTo/parse(android.net.Uri)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/RectF/width()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/RectF/RectF(float,float,float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Matrix/postTranslate(float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Paint/Paint(int)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Bitmap/getHeight()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Bitmap/getWidth()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Matrix/Matrix()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Matrix/isIdentity()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Matrix/mapRect(android.graphics.RectF)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/RectF/height()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int)#java/lang/Math/round(float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Matrix/Matrix()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Matrix/setScale(float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Matrix/postTranslate(float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Paint/Paint(int)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Bitmap/getHeight()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int)#android/graphics/Bitmap/getWidth()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/Math/min(float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/StringBuilder/append(int)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Matrix/Matrix()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Matrix/setScale(float,float)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/util/Log/isLoggable(java.lang.String,int)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Paint/Paint(int)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/StringBuilder/toString()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/util/Log/v(java.lang.String,java.lang.String)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Bitmap/getWidth()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/StringBuilder/StringBuilder()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#android/graphics/Bitmap/getHeight()
com/bumptech/glide/load/resource/bitmap/TransformationUtils/fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)#java/lang/StringBuilder/append(float)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/widget/Button/setText(java.lang.CharSequence)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/TypedArray/getColor(int,int)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/TypedArray/getString(int)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#com/github/amlcurran/showcaseview/ShowcaseView/getResources()
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/Resources/getString(int)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#com/github/amlcurran/showcaseview/ShowcaseView/invalidate()
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/TypedArray/recycle()
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/TypedArray/getBoolean(int,boolean)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/graphics/Color/argb(int,int,int,int)
com/github/amlcurran/showcaseview/ShowcaseView/updateStyle(android.content.res.TypedArray,boolean)#android/content/res/TypedArray/getResourceId(int,int)
com/github/amlcurran/showcaseview/ShowcaseView/init()#com/github/amlcurran/showcaseview/ShowcaseView/addView(android.view.View)
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/github/amlcurran/showcaseview/ShowcaseView/init()#com/github/amlcurran/showcaseview/ShowcaseView/generateDefaultLayoutParams()
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/Button/getParent()
com/github/amlcurran/showcaseview/ShowcaseView/init()#com/github/amlcurran/showcaseview/ShowcaseView/setOnTouchListener(android.view.View$OnTouchListener)
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/RelativeLayout$LayoutParams/setMargins(int,int,int,int)
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/github/amlcurran/showcaseview/ShowcaseView/init()#com/github/amlcurran/showcaseview/ShowcaseView/getResources()
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/RelativeLayout$LayoutParams/addRule(int)
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/content/res/Resources/getDimension(int)
com/github/amlcurran/showcaseview/ShowcaseView/init()#android/widget/Button/setText(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onEvent(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onCaptioningEnabledChanged(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChangedRemoved(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueTitleChanged(java.lang.CharSequence)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createTypedArrayList(android.os.Parcelable$Creator)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onRepeatModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onExtrasChanged(android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onSessionDestroyed()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueChanged(java.util.List)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onSessionReady()
com/fsck/k9/controller/MessagingController$41/run()#java/util/Iterator/hasNext()
com/fsck/k9/controller/MessagingController$41/run()#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/controller/MessagingController$41/run()#java/util/concurrent/CountDownLatch/countDown()
com/fsck/k9/controller/MessagingController$41/run()#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/controller/MessagingController$41/run()#java/util/Set/iterator()
com/fsck/k9/controller/MessagingController$41/run()#java/lang/Integer/valueOf(int)
com/fsck/k9/controller/MessagingController$41/run()#java/util/Iterator/next()
com/fsck/k9/controller/MessagingController$41/run()#java/lang/System/currentTimeMillis()
com/fsck/k9/controller/MessagingController$41/run()#java/lang/StringBuilder/toString()
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Iterator/next()
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Map/keySet()
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/lang/Boolean/valueOf(boolean)
com/fsck/k9/mail/store/webdav/DataSet/getUidToRead()#java/util/Set/iterator()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Iterator/hasNext()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map$Entry/getKey()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Set/iterator()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map/entrySet()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/lang/String/length()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map/get(java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Iterator/next()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/HashMap/HashMap()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map/keySet()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/lang/String/equals(java.lang.Object)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/text/DateFormat/parse(java.lang.String)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/lang/String/substring(int,int)
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/util/Map$Entry/getValue()
com/fsck/k9/mail/store/webdav/DataSet/getMessageEnvelopes()#java/text/DateFormat/format(java.util.Date)
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParser/getEventType()
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParserFactory/newInstance()
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParser/setInput(java.io.Reader)
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParser/getName()
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParserFactory/newPullParser()
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fsck/k9/preferences/SettingsImporter/parseSettings(java.io.InputStream,boolean,java.util.List,boolean)#org/xmlpull/v1/XmlPullParser/next()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsImporter/importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences)#java/util/Map/putAll(java.util.Map)
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/List/size()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/List/iterator()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/ArrayList/ArrayList()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/lang/String/length()
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/Map/get(java.lang.Object)
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/Map/containsKey(java.lang.Object)
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/List/add(java.lang.Object)
com/fsck/k9/preferences/SettingsImporter/importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean)#java/util/List/get(int)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#com/fsck/k9/mail/ServerSettings$Type/name()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/String/isEmpty()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/List/iterator()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/HashMap/HashMap(java.util.Map)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/StringBuilder/append(int)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Map/putAll(java.util.Map)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/Integer/toString(int)
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/List/size()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/UUID/randomUUID()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/util/UUID/toString()
com/fsck/k9/preferences/SettingsImporter/importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/ArrayList/ArrayList()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Iterator/hasNext()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/lang/StringBuilder/append(int)
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/List/size()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Iterator/next()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Set/iterator()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Map$Entry/getValue()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/List/iterator()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Map/entrySet()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Map$Entry/getKey()
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/HashMap/HashMap(java.util.Map)
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/util/Map/putAll(java.util.Map)
com/fsck/k9/preferences/SettingsImporter/importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/ArrayList/ArrayList(int)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/Iterator/hasNext()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/Iterator/next()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/List/add(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/List/iterator()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/content/ContentValues/clear()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#java/util/List/contains(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder/doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/putNull(java.lang.String)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/database/sqlite/SQLiteDatabase/replace(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/Error/Error(java.lang.String)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/util/UUID/randomUUID()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/database/sqlite/SQLiteDatabase/insert(java.lang.String,java.lang.String,android.content.ContentValues)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#com/fsck/k9/mail/Message/getMimeType()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#com/fsck/k9/mailstore/DatabasePreviewType/fromPreviewType(com.fsck.k9.message.extractors.PreviewResult$PreviewType)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/ContentValues()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/Integer/valueOf(int)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/System/currentTimeMillis()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/util/UUID/toString()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#com/fsck/k9/mailstore/DatabasePreviewType/getDatabaseValue()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/util/Date/getTime()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder/saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map)#android/content/ContentValues/clear()
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/Cursor/isNull(int)
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/Cursor/close()
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/Cursor/getCount()
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#android/database/Cursor/moveToFirst()
com/fsck/k9/mailstore/LocalFolder/getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/util/Map/get(java.lang.Object)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#android/database/Cursor/getBlob(int)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#android/database/Cursor/getLong(int)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/lang/Long/valueOf(long)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/lang/Long/toString(long)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#java/io/File/exists()
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#android/database/Cursor/getString(int)
com/fsck/k9/mailstore/LocalFolder/loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor)#android/database/Cursor/getInt(int)
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/net/Uri/getScheme()
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/content/ContentResolver/getType(android.net.Uri)
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/net/Uri/getSchemeSpecificPart()
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#java/lang/String/equals(java.lang.Object)
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/webkit/WebView/getContext()
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/content/Context/getContentResolver()
com/fsck/k9/view/K9WebViewClient/shouldInterceptRequest(android.webkit.WebView,android.net.Uri)#android/webkit/WebResourceResponse/WebResourceResponse(java.lang.String,java.lang.String,java.io.InputStream)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/widget/RemoteViews/setPendingIntentTemplate(int,android.app.PendingIntent)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Intent/toUri(int)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Context/getString(int)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Context/getPackageName()
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/widget/RemoteViews/RemoteViews(java.lang.String,int)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Intent/putExtra(java.lang.String,int)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/net/Uri/parse(java.lang.String)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/appwidget/AppWidgetManager/updateAppWidget(int,android.widget.RemoteViews)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/content/Intent/setData(android.net.Uri)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/widget/RemoteViews/setTextViewText(int,java.lang.CharSequence)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/widget/RemoteViews/setRemoteAdapter(int,android.content.Intent)
com/fsck/k9/widget/list/MessageListWidgetProvider/updateAppWidget(android.content.Context,android.appwidget.AppWidgetManager,int)#android/widget/RemoteViews/setOnClickPendingIntent(int,android.app.PendingIntent)
