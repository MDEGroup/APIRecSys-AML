ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#java/util/Iterator/hasNext()
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#android/bluetooth/BluetoothAdapter/getBondedDevices()
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#java/util/Iterator/next()
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#android/bluetooth/BluetoothDevice/getName()
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#android/util/Log/e(java.lang.String,java.lang.String)
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#java/util/Set/iterator()
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#java/util/Collection/add(java.lang.Object)
ioio/lib/android/bluetooth/BluetoothIOIOConnectionBootstrap/getFactories(java.util.Collection)#java/lang/String/startsWith(java.lang.String)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/view/Window/addFlags(int)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#org/xcsoar/XCSoar/setContentView(android.view.View)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/util/Log/d(java.lang.String,java.lang.String)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/widget/TextView/TextView(android.content.Context)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#org/xcsoar/XCSoar/getWindow()
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#android/content/IntentFilter/IntentFilter(java.lang.String)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#org/xcsoar/XCSoar/requestWindowFeature(int)
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#java/lang/StringBuilder/toString()
org/xcsoar/XCSoar/onCreate(android.os.Bundle)#org/xcsoar/XCSoar/registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)
org/xcsoar/XCSoar/initSDL()#android/os/PowerManager$WakeLock/acquire()
org/xcsoar/XCSoar/initSDL()#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/XCSoar/initSDL()#android/widget/TextView/setText(java.lang.CharSequence)
org/xcsoar/XCSoar/initSDL()#org/xcsoar/XCSoar/getSystemService(java.lang.String)
org/xcsoar/XCSoar/initSDL()#java/lang/String/equals(java.lang.Object)
org/xcsoar/XCSoar/initSDL()#org/xcsoar/XCSoar/setContentView(android.view.View)
org/xcsoar/XCSoar/initSDL()#org/xcsoar/NativeView/setFocusableInTouchMode(boolean)
org/xcsoar/XCSoar/initSDL()#java/lang/StringBuilder/toString()
org/xcsoar/XCSoar/initSDL()#org/xcsoar/NativeView/requestFocus()
org/xcsoar/XCSoar/initSDL()#android/os/Environment/getExternalStorageState()
org/xcsoar/XCSoar/initSDL()#android/os/PowerManager/newWakeLock(int,java.lang.String)
org/xcsoar/XCSoar/initSDL()#org/xcsoar/NativeView/setFocusable(boolean)
org/xcsoar/XCSoar/initSDL()#java/lang/StringBuilder/StringBuilder()
org/xcsoar/XCSoar/initSDL()#android/util/Log/d(java.lang.String,java.lang.String)
org/xcsoar/XCSoar/initSDL()#android/widget/TextView/TextView(android.content.Context)
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#android/bluetooth/BluetoothGattCharacteristic/getUuid()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#java/util/Iterator/hasNext()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#android/bluetooth/BluetoothGatt/getServices()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#java/util/Iterator/next()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#java/util/List/iterator()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#java/util/UUID/equals(java.lang.Object)
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#android/bluetooth/BluetoothGattService/getCharacteristics()
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#android/util/Log/e(java.lang.String,java.lang.String)
org/xcsoar/BluetoothGattClientPort/findCharacteristics()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/util/Set/contains(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/StringBuilder()
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/util/List/add(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/append(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/toString()
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/lang/Integer/valueOf(int)
ioio/lib/impl/GenericResourceAllocator/free(ioio.lib.impl.ResourceManager$Resource)#java/util/Set/remove(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/Integer/intValue()
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/util/List/remove(int)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/util/List/isEmpty()
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/util/List/size()
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/StringBuilder()
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/Integer/valueOf(int)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/append(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/util/Set/add(java.lang.Object)
ioio/lib/impl/GenericResourceAllocator/alloc(ioio.lib.impl.ResourceManager$Resource)#java/lang/StringBuilder/toString()
org/xcsoar/NativeView/run()#android/util/DisplayMetrics/DisplayMetrics()
org/xcsoar/NativeView/run()#android/graphics/Rect/height()
org/xcsoar/NativeView/run()#android/os/Handler/obtainMessage()
org/xcsoar/NativeView/run()#android/os/Handler/sendMessage(android.os.Message)
org/xcsoar/NativeView/run()#android/view/SurfaceHolder/getSurfaceFrame()
org/xcsoar/NativeView/run()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/xcsoar/NativeView/run()#android/util/Log/d(java.lang.String,java.lang.String)
org/xcsoar/NativeView/run()#android/view/Display/getMetrics(android.util.DisplayMetrics)
org/xcsoar/NativeView/run()#org/xcsoar/NativeView/getContext()
org/xcsoar/NativeView/run()#android/graphics/Rect/width()
org/xcsoar/NativeView/run()#android/os/Handler/obtainMessage(int,java.lang.Object)
org/xcsoar/NativeView/run()#android/view/WindowManager/getDefaultDisplay()
org/xcsoar/NativeView/run()#android/app/Activity/getWindowManager()
org/xcsoar/NativeView/run()#org/xcsoar/NativeView/getHolder()
org/xcsoar/NativeView/openFile(java.lang.String)#android/content/Context/startActivity(android.content.Intent)
org/xcsoar/NativeView/openFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#android/content/Intent/setAction(java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#java/io/File/File(java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/xcsoar/NativeView/openFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/xcsoar/NativeView/openFile(java.lang.String)#android/content/Intent/setFlags(int)
org/xcsoar/NativeView/openFile(java.lang.String)#org/xcsoar/NativeView/getContext()
org/xcsoar/NativeView/openFile(java.lang.String)#android/content/Intent/Intent()
org/xcsoar/NativeView/openFile(java.lang.String)#android/net/Uri/fromFile(java.io.File)
org/xcsoar/NativeView/openFile(java.lang.String)#java/lang/String/lastIndexOf(java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#java/lang/String/substring(int)
org/xcsoar/NativeView/openFile(java.lang.String)#android/webkit/MimeTypeMap/getMimeTypeFromExtension(java.lang.String)
org/xcsoar/NativeView/openFile(java.lang.String)#java/lang/StringBuilder/toString()
org/xcsoar/NativeView/openFile(java.lang.String)#android/webkit/MimeTypeMap/getSingleton()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGLContext/getEGL()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/opengles/GL10/glGetString(int)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglGetError()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#java/lang/Math/abs(int)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGLContext/getGL()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#java/lang/StringBuilder/append(int)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#java/lang/StringBuilder/StringBuilder()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#android/util/Log/d(java.lang.String,java.lang.String)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#java/lang/StringBuilder/toString()
org/xcsoar/NativeView/initGL(android.view.SurfaceHolder)#javax/microedition/khronos/egl/EGL10/eglGetDisplay(java.lang.Object)
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#android/util/Log/v(java.lang.String,java.lang.String)
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#java/lang/StringBuilder/StringBuilder()
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#android/bluetooth/BluetoothSocket/connect()
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#android/bluetooth/BluetoothSocket/getInputStream()
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#java/lang/StringBuilder/toString()
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#java/lang/Thread/sleep(long)
ioio/lib/android/bluetooth/BluetoothIOIOConnection/waitForConnect()#android/bluetooth/BluetoothSocket/getOutputStream()
org/xcsoar/IOIOAgent/synchronousOpen()#android/util/Log/w(java.lang.String,java.lang.String)
org/xcsoar/IOIOAgent/synchronousOpen()#org/xcsoar/IOIOAgent$Listener/onIOIOConnect(ioio.lib.api.IOIO)
org/xcsoar/IOIOAgent/synchronousOpen()#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/IOIOAgent/synchronousOpen()#android/util/Log/i(java.lang.String,java.lang.String)
org/xcsoar/IOIOAgent/synchronousOpen()#android/util/Log/e(java.lang.String,java.lang.String)
org/xcsoar/IOIOAgent/synchronousOpen()#org/xcsoar/IOIOAgent/getName()
org/xcsoar/IOIOAgent/synchronousOpen()#org/xcsoar/IOIOAgent/interrupted()
org/xcsoar/IOIOAgent/synchronousOpen()#java/lang/StringBuilder/toString()
org/xcsoar/IOIOAgent/synchronousOpen()#java/lang/StringBuilder/StringBuilder()
org/xcsoar/IOIOAgent/synchronousOpen()#android/util/Log/d(java.lang.String,java.lang.String)
org/xcsoar/MultiPort/checkValid()#java/util/Iterator/remove()
org/xcsoar/MultiPort/checkValid()#java/util/Iterator/hasNext()
org/xcsoar/MultiPort/checkValid()#java/lang/StringBuilder/append(java.lang.String)
org/xcsoar/MultiPort/checkValid()#android/util/Log/i(java.lang.String,java.lang.String)
org/xcsoar/MultiPort/checkValid()#java/util/Iterator/next()
org/xcsoar/MultiPort/checkValid()#java/lang/StringBuilder/StringBuilder()
org/xcsoar/MultiPort/checkValid()#java/lang/StringBuilder/append(java.lang.Object)
org/xcsoar/MultiPort/checkValid()#java/util/Collection/iterator()
org/xcsoar/MultiPort/checkValid()#java/lang/StringBuilder/toString()
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getParcelableExtra(java.lang.String)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#android/hardware/usb/UsbDevice/equals(java.lang.Object)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
ioio/lib/android/device/DeviceConnectionBootstrap/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getBooleanExtra(java.lang.String,boolean)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/io/IOException/IOException(java.lang.String)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/io/InputStream/close()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/Integer/intValue()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#ioio/lib/impl/IOIOProtocol$SequencerEvent/values()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/Iterator/hasNext()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/StringBuilder/append(int)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/List/size()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/Integer/toHexString(int)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/Iterator/next()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/StringBuilder/StringBuilder()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/Thread/run()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/Set/iterator()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#ioio/lib/impl/IOIOProtocol$IncomingThread/setPriority(int)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/List/clear()
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/util/List/add(java.lang.Object)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/Integer/valueOf(int)
ioio/lib/impl/IOIOProtocol$IncomingThread/run()#java/lang/StringBuilder/toString()
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/StringBuilder/append(java.lang.String)
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/Class/isInstance(java.lang.Object)
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/Class/getName()
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/Class/getConstructor(java.lang.Class[])
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/Object/getClass()
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/StringBuilder/toString()
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/StringBuilder/StringBuilder()
ioio/lib/impl/SequencerImpl/createChannel(ioio.lib.api.Sequencer$ChannelConfig)#java/lang/reflect/InvocationTargetException/getCause()
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/app/DownloadManager$Query/setFilterByStatus(int)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/getLong(int)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/getString(int)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/moveToFirst()
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/app/DownloadManager/query(android.app.DownloadManager$Query)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/moveToNext()
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/database/Cursor/getInt(int)
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/app/DownloadManager/remove(long[])
org/xcsoar/DownloadUtil/checkComplete(android.app.DownloadManager)#android/app/DownloadManager$Query/DownloadManager$Query()
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/app/DownloadManager$Query/setFilterByStatus(int)
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/getLong(int)
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/app/DownloadManager$Query/DownloadManager$Query()
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/getString(int)
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/moveToFirst()
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/app/DownloadManager/query(android.app.DownloadManager$Query)
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/moveToNext()
org/xcsoar/DownloadUtil/enumerate(android.app.DownloadManager,long)#android/database/Cursor/getInt(int)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/app/DownloadManager$Query/setFilterByStatus(int)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/database/Cursor/getLong(int)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/app/DownloadManager$Query/DownloadManager$Query()
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/database/Cursor/getString(int)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/database/Cursor/moveToFirst()
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/app/DownloadManager/query(android.app.DownloadManager$Query)
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#android/database/Cursor/moveToNext()
org/xcsoar/DownloadUtil/findPath(android.app.DownloadManager,java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Paint/getTextBounds(char[],int,int,android.graphics.Rect)
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Rect/height()
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Typeface/getStyle()
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Paint/ascent()
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Rect/Rect()
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Paint/getFontSpacing()
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Paint/getTypeface()
org/xcsoar/TextUtil/getFontMetrics(int[])#java/lang/Math/round(float)
org/xcsoar/TextUtil/getFontMetrics(int[])#android/graphics/Paint/descent()
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/opengl/GLES11/glTexParameterf(int,int,float)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/getWidth()
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/opengl/GLES11/glGenTextures(int,int[],int)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/opengl/GLES11/glDeleteTextures(int,int[],int)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/getConfig()
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/hasAlpha()
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/opengl/GLES11/glBindTexture(int,int)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/copy(android.graphics.Bitmap$Config,boolean)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/getHeight()
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
org/xcsoar/BitmapUtil/bitmapToOpenGL(android.graphics.Bitmap,boolean,boolean,int[])#android/graphics/Bitmap/recycle()
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/ColorMatrix/ColorMatrix(float[])
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Canvas/setDensity(int)
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/getWidth()
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Paint/Paint()
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/ColorMatrixColorFilter/ColorMatrixColorFilter(android.graphics.ColorMatrix)
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/getHeight()
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/recycle()
org/xcsoar/BitmapUtil/redToAlpha(android.graphics.Bitmap,boolean)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/Socket/getInputStream()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/io/IOException/getMessage()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/lang/String/equals(java.lang.Object)
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/ServerSocket/ServerSocket(int)
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/Socket/close()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/ServerSocket/close()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/ServerSocket/accept()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/net/Socket/getOutputStream()
ioio/lib/impl/SocketIOIOConnection/waitForConnect()#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/hasSpeed()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/os/Bundle/getInt(java.lang.String,int)
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/hasBearing()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/hasAccuracy()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getBearing()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getLongitude()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getAltitude()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getExtras()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/hasAltitude()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getLatitude()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getTime()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getAccuracy()
org/xcsoar/InternalGPS/sendLocation(android.location.Location)#android/location/Location/getSpeed()
