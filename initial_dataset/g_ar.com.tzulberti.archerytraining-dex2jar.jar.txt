android/support/v4/provider/TreeDocumentFile/listFiles()#android/provider/DocumentsContract/getDocumentId(android.net.Uri)
android/support/v4/provider/TreeDocumentFile/listFiles()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/TreeDocumentFile/listFiles()#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/provider/TreeDocumentFile/listFiles()#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v4/provider/TreeDocumentFile/listFiles()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/provider/TreeDocumentFile/listFiles()#java/util/ArrayList/size()
android/support/v4/provider/TreeDocumentFile/listFiles()#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/TreeDocumentFile/listFiles()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/provider/TreeDocumentFile/listFiles()#android/database/Cursor/moveToNext()
android/support/v4/provider/TreeDocumentFile/listFiles()#java/lang/StringBuilder/toString()
android/support/v4/provider/TreeDocumentFile/listFiles()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/provider/TreeDocumentFile/listFiles()#android/provider/DocumentsContract/buildDocumentUriUsingTree(android.net.Uri,java.lang.String)
android/support/v4/provider/TreeDocumentFile/listFiles()#android/provider/DocumentsContract/buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)
android/support/v4/provider/TreeDocumentFile/listFiles()#java/util/ArrayList/ArrayList()
android/support/v4/provider/TreeDocumentFile/listFiles()#android/content/Context/getContentResolver()
android/support/v4/provider/TreeDocumentFile/listFiles()#android/database/Cursor/getString(int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addView(android.view.View,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/isLayoutRTL()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addDisappearingView(android.view.View)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getPaddingTop()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getPaddingLeft()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager$LayoutParams/isItemRemoved()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addDisappearingView(android.view.View,int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/getLayoutParams()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/addView(android.view.View)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/util/Arrays/fill(java.lang.Object[],java.lang.Object)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/append(int)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getChildMeasureSpec(int,int,int,int,boolean)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/hasFocusable()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager/getChildCount()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/GridLayoutManager$LayoutParams/isItemChanged()
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/GridLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#java/lang/StringBuilder/toString()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingTop()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingLeft()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/setMeasuredDimension(int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingRight()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getPaddingBottom()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/chooseSize(int,int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/LinearLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getMinimumHeight()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/height()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/width()
android/support/v7/widget/GridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/GridLayoutManager/getMinimumWidth()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/view/View/getLayoutParams()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/convertFocusDirectionToLayoutDirection(int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/findContainingItemView(android.view.View)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/view/View/hasFocusable()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/getChildAt(int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/getChildCount()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#java/lang/Math/min(int,int)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/isLayoutRTL()
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/GridLayoutManager/isViewPartiallyVisible(android.view.View,boolean,boolean)
android/support/v7/widget/GridLayoutManager/onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State)#java/lang/Math/max(int,int)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getWidth()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/ViewGroup/dispatchDraw(android.graphics.Canvas)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#java/util/ArrayList/size()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getHeight()
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/view/View/getLocationOnScreen(int[])
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.Rect)
android/support/transition/ViewOverlayApi14$OverlayViewGroup/dispatchDraw(android.graphics.Canvas)#java/util/ArrayList/get(int)
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/graphics/Matrix/Matrix(android.graphics.Matrix)
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/View/getVisibility()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/graphics/Matrix/preTranslate(float,float)
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/ViewGroup/getScrollX()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/ViewGroup/getScrollY()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/View/getMatrix()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/View/getTag(int)
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/graphics/Matrix/Matrix()
android/support/transition/ChangeTransform/captureValues(android.support.transition.TransitionValues)#android/graphics/Matrix/isIdentity()
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/app/Activity/getSharedPreferences(java.lang.String,int)
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/Intent/getAction()
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/SharedPreferences$Editor/apply()
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/SharedPreferences$Editor/putBoolean(java.lang.String,boolean)
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/Intent/hasCategory(java.lang.String)
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/SharedPreferences/edit()
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/app/Activity/getIntent()
android/support/v4/app/AppLaunchChecker/onActivityCreate(android.app.Activity)#android/content/SharedPreferences/getBoolean(java.lang.String,boolean)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/getText(int)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/widget/CheckBox/isChecked()
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/widget/Spinner/getSelectedItem()
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/widget/EditText/getText()
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#android/content/Intent/putExtra(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/createTournament(android.view.View)#ar/com/tzulberti/archerytraining/activities/tournament/AddTournamentActivity/hideKeyboard()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/Long/toBinaryString(long)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/next()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/add(java.lang.Object)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/iterator()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/toString()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/hasNext()
android/support/v7/util/DiffUtil$DiffResult/dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(int)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/Long/toBinaryString(long)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/next()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/add(java.lang.Object)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/List/iterator()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/toString()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/util/Iterator/hasNext()
android/support/v7/util/DiffUtil$DiffResult/dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int)#java/lang/StringBuilder/append(int)
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/util/SparseIntArray/SparseIntArray()
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/view/Window/addOnFrameMetricsAvailableListener(android.view.Window$OnFrameMetricsAvailableListener,android.os.Handler)
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/os/HandlerThread/HandlerThread(java.lang.String)
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/app/Activity/getWindow()
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/os/HandlerThread/start()
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/os/HandlerThread/getLooper()
android/support/v4/app/FrameMetricsAggregator$FrameMetricsApi24Impl/add(android.app.Activity)#android/os/Handler/Handler(android.os.Looper)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/size()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Iterator/next()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/iterator()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putCharSequenceArray(java.lang.String,java.lang.CharSequence[])
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putStringArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#java/util/Set/isEmpty()
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putCharSequence(java.lang.String,java.lang.CharSequence)
android/support/v4/app/NotificationCompatJellybean/toBundle(android.support.v4.app.RemoteInput)#android/os/Bundle/putBoolean(java.lang.String,boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/isAssignableFrom(java.lang.Class)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/get(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/getType()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompatJellybean/getExtras(android.app.Notification)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#java/util/ArrayList/iterator()
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getCharSequence(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getCharSequenceArray(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getStringArrayList(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#java/util/Iterator/next()
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#java/util/Set/add(java.lang.Object)
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#java/util/HashSet/HashSet()
android/support/v4/app/NotificationCompatJellybean/fromBundle(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzax/zzi(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzax/zzi(java.lang.String)#org/json/JSONObject/getString(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#org/json/JSONObject/getLong(java.lang.String)
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzax/zzi(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzax/zzi(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#org/json/JSONObject/put(java.lang.String,long)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#java/lang/String/length()
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#org/json/JSONObject/toString()
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#org/json/JSONObject/JSONObject()
com/google/firebase/iid/zzax/zza(java.lang.String,java.lang.String,long)#java/lang/StringBuilder/toString()
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#org/w3c/dom/Document/createElement(java.lang.String)
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/util/Stack/iterator()
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/testutils/CompareTool$ObjectPath/toXmlNode(org.w3c.dom.Document)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/ThreadLocal/set(java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/content/Context/getPackageName()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/Map/get(java.lang.Object)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/String/startsWith(java.lang.String)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/String/indexOf(int)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#android/content/Context/getClassLoader()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/util/HashMap/HashMap()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/ThreadLocal/get()
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/StringBuilder/append(char)
android/support/design/widget/CoordinatorLayout/parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/view/View/getVisibility()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/graphics/Rect/equals(java.lang.Object)
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/util/List/size()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#android/graphics/Rect/isEmpty()
android/support/design/widget/CoordinatorLayout/onChildViewsChanged(int)#java/util/List/get(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/setMeasuredDimension(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/util/List/size()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/CoordinatorLayout/onMeasure(int,int)#java/util/List/get(int)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getSuperclass()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getAnnotation(java.lang.Class)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Class/getName()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/Object/getClass()
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/design/widget/CoordinatorLayout/getResolvedLayoutParams(android.view.View)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/layoutChildWithKeyline(android.view.View,int,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getRight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/contains(android.graphics.Rect)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/StringBuilder/toString()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/set(android.graphics.Rect)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/toShortString()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getWidth()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/graphics/Rect/isEmpty()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getTop()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getHeight()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getLeft()
android/support/design/widget/CoordinatorLayout/offsetChildByInset(android.view.View,android.graphics.Rect,int)#android/view/View/getBottom()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/CoordinatorLayout/layoutChild(android.view.View,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLayoutParams()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(float,float,float,float,android.graphics.Region$Op)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/round(float)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getBottom()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setColor(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/isOpaque()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setAlpha(int)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/Paint()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingTop()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#java/lang/Math/max(int,int)
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/CoordinatorLayout/constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/isRunning()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/cancel()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#java/lang/Math/min(int,int)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/start()
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/AppBarLayout$Behavior/animateOffsetWithDuration(android.support.design.widget.CoordinatorLayout,android.support.design.widget.AppBarLayout,int,int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getLayoutParams()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Integer/signum(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/support/design/widget/AppBarLayout/getChildAt(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/support/design/widget/AppBarLayout/getChildCount()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getBottom()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Math/abs(int)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/animation/Interpolator/getInterpolation(float)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#java/lang/Math/round(float)
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getTop()
android/support/design/widget/AppBarLayout$Behavior/interpolateOffset(android.support.design.widget.AppBarLayout,int)#android/view/View/getHeight()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/enqueue(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/isEmpty()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/execute(com.google.android.gms.common.api.internal.BaseImplementation$ApiMethodImpl)#java/util/Queue/remove()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/Integer/intValue()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaaw/zae(int)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/lang/Exception/Exception()
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaw/getConnectionResult(com.google.android.gms.common.api.Api)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createStringArray()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/IBinder/queryLocalInterface(java.lang.String)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/common/internal/IGmsServiceBroker$Stub/getService(com.google.android.gms.common.internal.IGmsCallbacks,com.google.android.gms.common.internal.GetServiceRequest)
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readStrongBinder()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#java/lang/UnsupportedOperationException/UnsupportedOperationException()
com/google/android/gms/common/internal/IGmsServiceBroker$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/hasMessages(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/os/Handler/obtainMessage(int,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/clear()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/unbindService(android.content.ServiceConnection)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/Intent(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Context/bindService(android.content.Intent,android.content.ServiceConnection,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Context/getPackageManager()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/containsKey(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/List/iterator()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getKey()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Iterator/next()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/equals(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/contains(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map$Entry/getValue()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/Intent/Intent()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/HashSet/HashSet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Map/entrySet()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/util/Set/add(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/updateListenerMap()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/size()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/isEmpty()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/remove()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationManagerCompat$SideChannelManager/processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord)#java/util/ArrayDeque/peek()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/OutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/util/zip/GZIPOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/lang/String/String(byte[])
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeObject(java.io.Serializable,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#com/itextpdf/text/pdf/codec/Base64$InputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/Double/isNaN(double)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/File/length()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeFromFile(java.lang.String)#java/lang/Math/max(int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/GZIPOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/util/zip/GZIPOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[])
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/encodeBytes(byte[],int,int,int)#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/GZIPInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/util/zip/GZIPInputStream/read(byte[])
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayInputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/Base64/decode(java.lang.String,int)#java/lang/String/getBytes()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#com/itextpdf/text/pdf/codec/Base64$InputStream/close()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/BufferedInputStream/BufferedInputStream(java.io.InputStream)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/File/length()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/lang/StringBuilder/append(long)
com/itextpdf/text/pdf/codec/Base64/decodeFromFile(java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/Long/toString(long)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/setLength(int)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/Double/isNaN(double)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/text/DecimalFormat/DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/text/DecimalFormat/format(double)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/Math/abs(double)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/length()
com/itextpdf/text/pdf/ByteBuffer/formatDouble(double,com.itextpdf.text.pdf.ByteBuffer)#java/lang/StringBuilder/charAt(int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/indexOf(int,int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/charAt(int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/lastIndexOf(int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/lang/String/replace(char,char)
org/apache/commons/lang3/ClassUtils/getShortClassName(java.lang.String)#java/util/Map/containsKey(java.lang.Object)
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/util/Iterator/hasNext()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getModifiers()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/util/List/addAll(java.util.Collection)
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/util/Iterator/next()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/reflect/Modifier/isPublic(int)
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/reflect/Method/getDeclaringClass()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/util/List/iterator()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ClassUtils/getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ClassUtils/getCanonicalName(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/String/substring(int,int)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/String/lastIndexOf(int)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/lang/String/substring(int)
org/apache/commons/lang3/ClassUtils/getClass(java.lang.ClassLoader,java.lang.String,boolean)#java/util/Map/containsKey(java.lang.Object)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/String/split(java.lang.String)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String,java.lang.String)
android/support/v4/os/LocaleHelper/forLanguageTag(java.lang.String)#java/util/Locale/Locale(java.lang.String)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/view/MenuItem/setIntent(android.content.Intent)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/widget/ShareActionProvider/setShareIntent(android.content.Intent)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/view/MenuItem/setActionProvider(android.view.ActionProvider)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/view/MenuItem/getActionProvider()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/widget/ShareActionProvider/ShareActionProvider(android.content.Context)
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/view/MenuItem/hasSubMenu()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#java/lang/Class/getName()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#java/lang/Object/getClass()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#java/lang/StringBuilder/toString()
android/support/v4/app/ShareCompat/configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder)#android/widget/ShareActionProvider/setShareHistoryFileName(java.lang.String)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#java/lang/String/valueOf(float)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/EditText/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/EditText/setInputType(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/Button/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/EditText/EditText(android.content.Context)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/addSightDistanceValue(float,int,android.content.Context)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/widget/TableLayout/getChildAt(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/widget/TableRow/getChildAt(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/lang/Float/floatValue()
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/lang/Float/valueOf(java.lang.String)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/lang/Integer/valueOf(java.lang.String)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/widget/TableLayout/getChildCount()
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/bow/ViewBowActivity/saveData()#android/widget/EditText/getText()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/Integer/toString(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/shiftPageNumbers(java.util.List,int,int[])#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/pop()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/Stack/peek()
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/endElement(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/remove()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/List/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/eliminatePages(java.util.List,int[])#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/String/length()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/String/trim()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleBookmark/bookmarkDepth(com.itextpdf.text.pdf.PdfReader,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.IntHashtable,boolean)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/isEmpty()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/size()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/SimpleBookmark/iterateOutlines(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.pdf.PdfIndirectReference,java.util.List,boolean)#java/util/List/listIterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/List/iterator()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleBookmark/exportToXMLNode(java.util.List,java.io.Writer,int,boolean)#java/io/Writer/write(java.lang.String)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/concat(android.graphics.Matrix)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/view/View/draw(android.graphics.Canvas)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/width()
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postTranslate(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postScale(float,float)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/height()
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/transition/TransitionUtils/createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/round(float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/setScaleType(android.widget.ImageView$ScaleType)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/Matrix()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/layout(int,int,int,int)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getScrollX()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getScrollY()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/ImageView(android.content.Context)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getContext()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/mapRect(android.graphics.RectF)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getHeight()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/Matrix/setTranslate(float,float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/view/View/getWidth()
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#java/lang/Math/round(float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/graphics/RectF/RectF(float,float,float,float)
android/support/transition/TransitionUtils/copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)#android/widget/ImageView/measure(int,int)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/lang/ArithmeticException/ArithmeticException(java.lang.String)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/add(java.math.BigInteger)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/divide(java.math.BigInteger)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/multiply(java.math.BigInteger)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/mod(java.math.BigInteger)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/valueOf(long)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/subtract(java.math.BigInteger)
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/intValue()
org/apache/commons/lang3/math/Fraction/addSub(org.apache.commons.lang3.math.Fraction,boolean)#java/math/BigInteger/bitLength()
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/lang/String/String(byte[],int,int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/lang/Double/isNaN(double)
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/util/ArrayList/size()
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/codec/wmf/MetaDo/readAll()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/InputStream/close()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/net/URL/openStream()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/InputStream/read()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/wmf/MetaDo/wrapBMP(com.itextpdf.text.Image)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/util/Properties/getProperty(java.lang.String)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/String/toLowerCase()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/String/toUpperCase()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/util/Map/get(java.lang.Object)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/Throwable/getMessage()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/StringBuilder/toString()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/String/trim()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/System/getProperty(java.lang.String)
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/StringBuilder/StringBuilder()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/Class/getClassLoader()
io/sentry/config/Lookup/lookup(java.lang.String,io.sentry.dsn.Dsn)#java/lang/System/getenv(java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/io/IOException/IOException(java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/AtomicFile/startWrite()#java/io/File/exists()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/mkdirs()
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/renameTo(java.io.File)
android/support/v4/util/AtomicFile/startWrite()#java/io/File/delete()
android/support/v4/util/AtomicFile/startWrite()#java/io/FileOutputStream/FileOutputStream(java.io.File)
android/support/v4/util/AtomicFile/startWrite()#java/lang/StringBuilder/toString()
android/support/v4/util/AtomicFile/startWrite()#java/io/File/getParentFile()
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/Character/codePointAt(java.lang.CharSequence,int)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzya/zza(java.lang.CharSequence)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/isReadOnly()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/arrayOffset()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/remaining()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position(int)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/array()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/hasArray()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/BufferOverflowException()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/put(byte)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ReadOnlyBufferException/ReadOnlyBufferException()
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/BufferOverflowException/initCause(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzya/zzd(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/DERObjectIdentifier/DERObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/esf/SigPolicyQualifierInfo/SigPolicyQualifierInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/esf/SignaturePolicyId/SignaturePolicyId(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.esf.OtherHashAlgAndValue,org.spongycastle.asn1.esf.SigPolicyQualifiers)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/DERObjectIdentifier/getInstance(java.lang.Object)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#java/lang/String/length()
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/esf/OtherHashAlgAndValue/OtherHashAlgAndValue(org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/esf/SigPolicyQualifiers/SigPolicyQualifiers(org.spongycastle.asn1.esf.SigPolicyQualifierInfo[])
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/DERIA5String/DERIA5String(java.lang.String)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/security/SignaturePolicyInfo/toSignaturePolicyIdentifier()#org/spongycastle/asn1/esf/SignaturePolicyIdentifier/SignaturePolicyIdentifier(org.spongycastle.asn1.esf.SignaturePolicyId)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/beginTransaction()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#java/lang/Long/toString(long)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/content/ContentValues/put(java.lang.String,byte[])
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/content/ContentValues/ContentValues()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/endTransaction()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/close()
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/os/SystemClock/sleep(long)
com/google/android/gms/measurement/internal/zzao/zza(int,byte[])#android/database/sqlite/SQLiteDatabase/inTransaction()
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/beginTransaction()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/Parcel/setDataPosition(int)
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/lang/Long/toString(long)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/lang/Integer/toString(int)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/Parcel/unmarshall(byte[],int,int)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/util/List/size()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/io/File/exists()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/Parcel/recycle()
com/google/android/gms/measurement/internal/zzao/zzr(int)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/content/Context/getDatabasePath(java.lang.String)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/close()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/Parcel/obtain()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/os/SystemClock/sleep(long)
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/sqlite/SQLiteDatabase/inTransaction()
com/google/android/gms/measurement/internal/zzao/zzr(int)#android/database/Cursor/getInt(int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addView(android.view.View,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addDisappearingView(android.view.View,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingTop()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingRight()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/hasFocusable()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getWidth()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/measureChildWithMargins(android.view.View,int,int)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addView(android.view.View)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/addDisappearingView(android.view.View)
android/support/v7/widget/LinearLayoutManager/layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult)#android/support/v7/widget/LinearLayoutManager/getPaddingLeft()
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#android/support/v7/widget/LinearLayoutManager/getChildAt(int)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#android/support/v7/widget/LinearLayoutManager/getChildCount()
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/StringBuilder/toString()
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#android/support/v7/widget/LinearLayoutManager/getPosition(android.view.View)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/StringBuilder/append(int)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/StringBuilder/append(boolean)
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/LinearLayoutManager/validateChildOrder()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/graphics/drawable/Drawable/getBounds()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingTop()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/widget/AppCompatTextView/onMeasure(int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getMeasuredWidth()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/widget/AppCompatTextView/setPadding(int,int,int,int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingBottom()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/support/v7/view/menu/ActionMenuItemView/getPaddingRight()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#android/graphics/Rect/width()
android/support/v7/view/menu/ActionMenuItemView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setTouchInterceptor(android.view.View$OnTouchListener)
android/support/v7/widget/ListPopupWindow/show()#android/view/View/getWidth()
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setOutsideTouchable(boolean)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/isShowing()
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setWidth(int)
android/support/v7/widget/ListPopupWindow/show()#android/os/Handler/post(java.lang.Runnable)
android/support/v7/widget/ListPopupWindow/show()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/update(android.view.View,int,int,int,int)
android/support/v7/widget/ListPopupWindow/show()#android/widget/PopupWindow/setHeight(int)
android/support/v7/widget/ListPopupWindow/show()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ListPopupWindow/show()#android/support/v7/widget/DropDownListView/setSelection(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/graphics/Rect/setEmpty()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnScrollListener(android.widget.AbsListView$OnScrollListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setFocusableInTouchMode(boolean)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/getPaddingTop()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getBackground()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/getPaddingBottom()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setAdapter(android.widget.ListAdapter)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int,float)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/setContentView(android.view.View)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/getLayoutParams()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getContentView()
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/append(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/PopupWindow/getInputMethodMode()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/support/v7/widget/DropDownListView/setFocusable(boolean)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/measure(int,int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/widget/LinearLayout/setOrientation(int)
android/support/v7/widget/ListPopupWindow/buildDropDown()#java/lang/StringBuilder/toString()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/content/Context/getResources()
android/support/v7/widget/ListPopupWindow/buildDropDown()#android/view/View/getMeasuredHeight()
com/google/firebase/iid/zzay/zzan()#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/google/firebase/iid/zzay/zzan()#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzay/zzan()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzay/zzan()#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzay/zzan()#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzay/zzan()#java/lang/Exception/getMessage()
com/google/firebase/iid/zzay/zzan()#java/lang/String/length()
com/google/firebase/iid/zzay/zzan()#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzay/zzan()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/firebase/iid/zzay/zzan()#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzay/zzan()#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/measurement/internal/zzft/zzmi()#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Map$Entry/getKey()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/ArrayList/size()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Map$Entry/getValue()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/List/size()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Map/size()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/lang/Integer/parseInt(java.lang.String)
com/google/android/gms/measurement/internal/zzft/zzmi()#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzft/zzmi()#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/Map/entrySet()
com/google/android/gms/measurement/internal/zzft/zzmi()#java/util/ArrayList/get(int)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/getIntent()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#java/lang/Integer/intValue()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/content/Intent/getExtras()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/app/PendingIntent/getIntentSender()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#com/google/android/gms/common/api/GoogleApiActivity/finish()
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/app/Activity/onCreate(android.os.Bundle)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/api/GoogleApiActivity/onCreate(android.os.Bundle)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/getStrokeWidth()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/centerY()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.Rect)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawOval(android.graphics.RectF,android.graphics.Paint)
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/graphics/RectF/centerX()
android/support/design/widget/CircularBorderDrawable/draw(android.graphics.Canvas)#android/support/design/widget/CircularBorderDrawable/copyBounds(android.graphics.Rect)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/Integer/intValue()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/ArrayList()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/toArray(java.lang.Object[])
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/List/size()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/Float/floatValue()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/List/get(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/putString(java.lang.String,int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/get(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/putBlob(byte[],int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/remove(java.lang.Object)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/String/length()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/putDouble(double,int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/CursorWindow(boolean)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/putLong(long,int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/Long/longValue()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/Double/doubleValue()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/subList(int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/util/ArrayList/size()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/allocRow()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/setNumColumns(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/putNull(int,int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/setStartPosition(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/close()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.data.DataHolder$Builder,int)#android/database/CursorWindow/freeLastRow()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#java/util/ArrayList/ArrayList()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#com/google/android/gms/common/sqlite/CursorWrapper/moveToPosition(int)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#java/util/ArrayList/toArray(java.lang.Object[])
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#java/util/ArrayList/size()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#com/google/android/gms/common/sqlite/CursorWrapper/close()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#android/database/CursorWindow/getNumRows()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#android/database/CursorWindow/acquireReference()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#android/database/CursorWindow/getStartPosition()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#android/database/CursorWindow/CursorWindow(boolean)
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#com/google/android/gms/common/sqlite/CursorWrapper/getCount()
com/google/android/gms/common/data/DataHolder/zaa(com.google.android.gms.common.sqlite.CursorWrapper)#android/database/CursorWindow/setStartPosition(int)
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getAnimator()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/RadarData/getDataSetCount()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#java/util/List/clear()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/highlight/RadarHighlighter/getHighlightsAtIndex(int)#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/widget/FrameLayout/onLayout(boolean,int,int,int,int)
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/isAltPressed()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/FocusFinder/getInstance()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/graphics/Rect/setEmpty()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/support/v4/widget/NestedScrollView/findFocus()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/isShiftPressed()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/View/requestFocus(int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/support/v4/widget/NestedScrollView/isFocused()
android/support/v4/widget/NestedScrollView/executeKeyEvent(android.view.KeyEvent)#android/view/KeyEvent/getAction()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/widget/FrameLayout/scrollTo(int,int)
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/scrollTo(int,int)#android/view/View/getWidth()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildMeasureSpec(int,int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/widget/FrameLayout/onMeasure(int,int)
android/support/v4/widget/NestedScrollView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/offsetLocation(float,float)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/springBack(int,int,int,int,int,int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getOverScrollMode()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/EdgeEffect/isFinished()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/widget/EdgeEffect/onRelease()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/widget/NestedScrollView/onTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/getContext()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/get(android.content.Context)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setFocusable(boolean)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setWillNotDraw(boolean)
android/support/v4/widget/NestedScrollView/initScrollView()#android/widget/OverScroller/OverScroller(android.content.Context)
android/support/v4/widget/NestedScrollView/initScrollView()#android/support/v4/widget/NestedScrollView/setDescendantFocusability(int)
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledMaximumFlingVelocity()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledMinimumFlingVelocity()
android/support/v4/widget/NestedScrollView/initScrollView()#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/graphics/Rect/height()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/view/View/getBottom()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getVerticalFadingEdgeLength()
android/support/v4/widget/NestedScrollView/computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/springBack(int,int,int,int,int,int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/OverScroller/computeScrollOffset()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/widget/NestedScrollView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/isFocused()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/FocusFinder/getInstance()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/findFocus()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/requestFocus()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getDescendantFocusability()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/requestFocus(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/support/v4/widget/NestedScrollView/setDescendantFocusability(int)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/getDrawingRect(android.graphics.Rect)
android/support/v4/widget/NestedScrollView/arrowScroll(int)#android/view/View/getBottom()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/isFinished()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getChildAt(int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getChildCount()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getScrollX()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/scrollBy(int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/widget/OverScroller/startScroll(int,int,int,int)
android/support/v4/widget/NestedScrollView/smoothScrollBy(int,int)#android/view/View/getHeight()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/FrameLayout/draw(android.graphics.Canvas)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingTop()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#java/lang/Math/max(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingBottom()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingRight()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#java/lang/Math/min(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getScrollY()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getPaddingLeft()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/setSize(int,int)
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getHeight()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getWidth()
android/support/v4/widget/NestedScrollView/draw(android.graphics.Canvas)#android/support/v4/widget/NestedScrollView/getClipToPadding()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/FdfWriter/iterateFields(java.util.HashMap,java.util.HashMap,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/FdfWriter/removeField(java.lang.String)#java/util/HashMap/isEmpty()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getAutoSizeStepGranularity()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setHintTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setLinkTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getContext()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setTypeface(android.graphics.Typeface,int)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/getTransformationMethod()
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setTextColor(android.content.res.ColorStateList)
android/support/v7/widget/AppCompatTextHelper/loadFromAttributes(android.util.AttributeSet,int)#android/widget/TextView/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com/itextpdf/text/Jpeg2000/processParameters()#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/Jpeg2000/processParameters()#java/util/ArrayList/ArrayList()
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/setRight(float)
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/getHeight()
com/itextpdf/text/Jpeg2000/processParameters()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/Jpeg2000/processParameters()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/Jpeg2000/processParameters()#java/io/InputStream/close()
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/getWidth()
com/itextpdf/text/Jpeg2000/processParameters()#java/net/URL/openStream()
com/itextpdf/text/Jpeg2000/processParameters()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/Jpeg2000/processParameters()#com/itextpdf/text/Jpeg2000/setTop(float)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,int)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/setPackage(java.lang.String)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,boolean)
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String[])
com/google/android/gms/common/AccountPicker/newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)#android/content/Intent/Intent()
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Integer/intValue()
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Long/valueOf(long)
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/util/concurrent/atomic/AtomicLong/incrementAndGet()
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Thread/setDaemon(boolean)
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Thread/setName(java.lang.String)
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Thread/setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Boolean/booleanValue()
org/apache/commons/lang3/concurrent/BasicThreadFactory/initializeThread(java.lang.Thread)#java/lang/Thread/setPriority(int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getMax()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getWidth()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getHeight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getPaddingRight()
android/support/v7/widget/AppCompatSeekBarHelper/drawTickMarks(android.graphics.Canvas)#android/widget/SeekBar/getPaddingLeft()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Integer/intValue()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Character/getNumericValue(char)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/length()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int,int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/substring(int)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/Integer/valueOf(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/text/DecimalFormat/format(double)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/matches(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/formatter/LargeValueFormatter/makePretty(double)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPoint/getDistributionPoint()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/CRLDistPoint/getDistributionPoints()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPointName/getType()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralName/toASN1Primitive()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralName/getTagNo()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/DERIA5String/getString()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/GeneralNames/getNames()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/DistributionPointName/getName()
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/DERIA5String/getInstance(org.spongycastle.asn1.ASN1TaggedObject,boolean)
com/itextpdf/text/pdf/security/CertificateUtil/getCRLURL(java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/CRLDistPoint/getInstance(java.lang.Object)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/setName(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/lang/System/currentTimeMillis()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/res/Resources/getString(int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/NotificationChannel(java.lang.String,java.lang.CharSequence,int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/notify(int,android.app.Notification)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/getNotificationChannel(java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationChannel/getName()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getApplicationInfo()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getSystemService(java.lang.String)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/app/NotificationManager/createNotificationChannel(android.app.NotificationChannel)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#java/util/concurrent/atomic/AtomicBoolean/set(boolean)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,java.lang.String,android.app.PendingIntent)#android/content/Context/getResources()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setTitle(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setMessage(java.lang.CharSequence)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/create()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context,int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/Context/getTheme()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/util/TypedValue/TypedValue()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/app/AlertDialog$Builder/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/res/Resources/getResourceEntryName(int)
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/Context/getResources()
com/google/android/gms/common/GoogleApiAvailability/zaa(android.content.Context,int,com.google.android.gms.common.internal.DialogRedirect,android.content.DialogInterface$OnCancelListener)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#java/lang/Math/min(double,double)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IScatterDataSet)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/ScatterDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSetCount()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/ScatterData/getDataSets()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getIcon()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IScatterDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/ScatterChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/support/design/internal/BottomNavigationMenuView/getChildAt(int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View/getVisibility()
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/support/design/internal/BottomNavigationMenuView/setMeasuredDimension(int,int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/internal/BottomNavigationMenuView/onMeasure(int,int)#android/support/design/internal/BottomNavigationMenuView/getChildCount()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/getFontDescriptor(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/Collection/toArray(java.lang.Object[])
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/addRangeUni(java.util.HashMap,boolean,boolean)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/CFFFontSubset/getNames()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/setSubset(boolean)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/createSubsetPrefix()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/getFullFont()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#com/itextpdf/text/pdf/TrueTypeFontUnicode/readCffFont()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashMap/values()
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashSet/HashSet(java.util.Collection)
com/itextpdf/text/pdf/TtfUnicodeWriter/writeFont(com.itextpdf.text.pdf.TrueTypeFontUnicode,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.Object[],byte[])#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/getNewSigName()#java/util/Map/keySet()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfStamperImp/addDirectTemplateSimple(com.itextpdf.text.pdf.PdfTemplate,com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/text/SimpleDateFormat/format(java.util.Date)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplateReference(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfName,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfSignatureAppearance$RenderingMode/ordinal()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/util/Calendar/getTime()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/concatCTM(float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addImage(com.itextpdf.text.Image,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float,float,float,float,float)
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/setLiteral(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/seek(long)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/OutputStream/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/Math/min(long,long)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/EOFException/EOFException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/read(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/length()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/RandomAccessFile/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/io/File/delete()
com/itextpdf/text/pdf/PdfSignatureAppearance/close(com.itextpdf.text.pdf.PdfDictionary)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/close()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfStamperImp/getPdfIndirectReference()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/seek(long)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Arrays/sort(long[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/length()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/RandomAccessFile/write(byte[],int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#com/itextpdf/text/pdf/PdfFormField/setPage(int)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfSignatureAppearance/preClose(java.util.HashMap)#java/io/File/delete()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderColorChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarData/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TableLayout/getChildAt(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TableLayout/getChildCount()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getText(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/view/ViewGroup/removeAllViews()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showTableValues(android.widget.TableLayout,java.util.List)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderArrowsChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List)#com/github/mikephil/charting/data/BarData/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/XAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/setData(com.github.mikephil.charting.data.ChartData)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/getAxisRight()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/YAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/XAxis/setLabelCount(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/getAxisLeft()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/getLegend()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/Legend/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/YAxis/setGranularityEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/components/YAxis/setAxisMaximum(float)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/getXAxis()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#com/github/mikephil/charting/charts/LineChart/setTouchEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/renderSeriesChart(com.github.mikephil.charting.charts.LineChart,java.util.List)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setColor(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setStrokeWidth(float)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/setContentView(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getIntent()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setAntiAlias(boolean)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setAlpha(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/Paint()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/view/ViewTreeObserver/addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/widget/ImageView/getViewTreeObserver()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/lang/String/valueOf(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/DecimalFormat()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/util/List/toArray(java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/format(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/setMaximumFractionDigits(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/format(double)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#java/util/Collections/sort(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/populateTableValues(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getApplicationContext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#android/view/View/setVisibility(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#android/content/Intent/setDataAndType(android.net.Uri,java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#android/content/Context/getPackageName()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#android/content/Intent/Intent(java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#android/content/Intent/setFlags(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getFilesDir()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/exportToPdf(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/ContainerStatsActivity/showSeries(int,int)#java/util/Iterator/next()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Map$Entry/getKey()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/lang/String/toLowerCase(java.util.Locale)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Calendar/getDisplayNames(int,int,java.util.Locale)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/TreeSet/iterator()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Set/iterator()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Map$Entry/getValue()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Map/entrySet()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/TreeSet/add(java.lang.Object)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Iterator/hasNext()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/TreeSet/TreeSet(java.util.Comparator)
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/Iterator/next()
org/apache/commons/lang3/time/FastDateParser/appendDisplayNames(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/toUpperCase()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BarcodeCodabar/calculateChecksum(java.lang.String)#java/lang/String/charAt(int)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/widget/FrameLayout/findViewById(int)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/widget/FrameLayout/setOnTouchListener(android.view.View$OnTouchListener)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/support/design/widget/CoordinatorLayout/findViewById(int)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/support/design/widget/BottomSheetDialog/getContext()
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/widget/FrameLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/widget/FrameLayout/addView(android.view.View)
android/support/design/widget/BottomSheetDialog/wrapInBottomSheet(int,android.view.View,android.view.ViewGroup$LayoutParams)#android/support/design/widget/BottomSheetDialog/getLayoutInflater()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#android/content/Intent/Intent(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#android/content/Context/bindService(android.content.Intent,android.content.ServiceConnection,int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase$1/run()#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(boolean)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/size()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/add(int,java.lang.Object)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getParent()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/get(int)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/recycleViewHolderInternal(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/tryGetViewHolderForPositionByDeadline(int,boolean,long)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#android/view/View/getParent()
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/RecyclerView$Recycler/bindViewToPosition(android.view.View,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/support/v7/widget/RecyclerView/removeCallbacks(java.lang.Runnable)
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#java/lang/Runnable/run()
android/support/v7/widget/helper/ItemTouchHelper$2/onTouchEvent(android.support.v7.widget.RecyclerView,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/os/Bundle/getInt(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/os/Bundle/getString(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#android/os/Message/getData()
android/support/v4/media/MediaBrowserServiceCompat$ServiceHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/Float/valueOf(float)
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/reflect/Array/newInstance(java.lang.Class,int[])
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfDeviceNColor/getPdfObject(com.itextpdf.text.pdf.PdfWriter)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/os/Bundle/getLong(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/os/Bundle/getStringArray(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/app/RemoteInput/getAllowFreeFormInput()
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/app/RemoteInput/getChoices()
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/app/RemoteInput/getLabel()
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/os/Bundle/getParcelableArray(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/app/RemoteInput/getResultKey()
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/app/RemoteInput/getExtras()
android/support/v4/app/NotificationCompat$CarExtender/getUnreadConversationFromBundle(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/build()
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/addExtras(android.os.Bundle)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/putLong(java.lang.String,long)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/putStringArray(java.lang.String,java.lang.String[])
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/setLabel(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/setAllowFreeFormInput(boolean)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/RemoteInput$Builder(java.lang.String)
android/support/v4/app/NotificationCompat$CarExtender/getBundleForUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation)#android/app/RemoteInput$Builder/setChoices(java.lang.CharSequence[])
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#java/lang/StringBuilder/append(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#java/lang/StringBuilder/append(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getHeight()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getLastVisiblePosition()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#android/util/Log/isLoggable(java.lang.String,int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#android/view/View/getTop()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getChildAt(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getCount()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#android/view/View/getBottom()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#java/lang/StringBuilder/StringBuilder()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#android/util/Log/d(java.lang.String,java.lang.String)
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getFirstVisiblePosition()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#java/lang/StringBuilder/toString()
com/leavjenn/smoothdaterangepicker/date/DayPickerView$ScrollStateRunnable/run()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/smoothScrollBy(int,int)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/getName()
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/get(java.lang.Object)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/AccessibleObject/setAccessible(java.lang.reflect.AccessibleObject[],boolean)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/getModifiers()
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Modifier/isTransient(int)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/InternalError/InternalError(java.lang.String)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Modifier/isStatic(int)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/Class/getDeclaredFields()
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/String/contains(java.lang.CharSequence)
org/apache/commons/lang3/builder/HashCodeBuilder/reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Set/isEmpty()
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/split(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/length()
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Set/remove(java.lang.Object)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zza(com.google.android.gms.measurement.internal.zzas,android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/Cursor/getColumnNames()
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzx/zzb(android.database.sqlite.SQLiteDatabase,java.lang.String)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Iterator/next()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Set/iterator()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Properties/keySet()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Iterator/hasNext()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/toLowerCase()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/trim()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/length()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Integer/toHexString(int)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Float/toString(float)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/append(float)
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/simpleparser/StyleSheet/resolveStyleAttribute(java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/endsWith(java.lang.String)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle/Notification$MessagingStyle(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#java/util/Iterator/next()
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$Builder/setContentText(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#java/util/List/get(int)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle/setConversationTitle(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#java/util/List/iterator()
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle/setBuilder(android.app.Notification$Builder)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle$Message/setData(java.lang.String,android.net.Uri)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/text/SpannableStringBuilder/insert(int,java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$BigTextStyle/setBigContentTitle(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#java/util/List/size()
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/text/SpannableStringBuilder/SpannableStringBuilder()
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$Builder/setContentTitle(java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle/addMessage(android.app.Notification$MessagingStyle$Message)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$BigTextStyle/Notification$BigTextStyle(android.app.Notification$Builder)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$MessagingStyle$Message/Notification$MessagingStyle$Message(java.lang.CharSequence,long,java.lang.CharSequence)
android/support/v4/app/NotificationCompat$MessagingStyle/apply(android.support.v4.app.NotificationBuilderWithBuilderAccessor)#android/app/Notification$BigTextStyle/bigText(java.lang.CharSequence)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#com/itextpdf/text/pdf/codec/PngImage$NewByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/io/InputStream/read()
com/itextpdf/text/pdf/codec/PngImage/readPng()#java/lang/Math/abs(float)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Class/forName(java.lang.String)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Integer/intValue()
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/reflect/Field/get(java.lang.Object)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#android/content/Context/getPackageName()
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#android/app/NotificationManager/areNotificationsEnabled()
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Class/getName()
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#java/lang/Integer/valueOf(int)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#android/content/Context/getApplicationInfo()
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#android/content/Context/getSystemService(java.lang.String)
android/support/v4/app/NotificationManagerCompat/areNotificationsEnabled()#android/content/Context/getApplicationContext()
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/setRight(float)
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/getHeight()
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/close()
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/String(byte[],int,int,java.lang.String)
com/itextpdf/text/Jpeg/processParameters()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/Jpeg/processParameters()#java/lang/String/valueOf(int)
com/itextpdf/text/Jpeg/processParameters()#java/net/URL/openStream()
com/itextpdf/text/Jpeg/processParameters()#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/Jpeg/processParameters()#java/net/URL/toString()
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/read(byte[])
com/itextpdf/text/Jpeg/processParameters()#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/setTop(float)
com/itextpdf/text/Jpeg/processParameters()#java/io/InputStream/read()
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/tagICC(com.itextpdf.text.pdf.ICC_Profile)
com/itextpdf/text/Jpeg/processParameters()#com/itextpdf/text/Jpeg/getWidth()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/lang/StringBuilder/length()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.Object)
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#android/os/Bundle/toString()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzaq/zzd(android.os.Bundle)#android/os/Bundle/keySet()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/Iterator/hasNext()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/lang/String/isEmpty()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/lang/String/startsWith(java.lang.String)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/os/Bundle/getString(java.lang.String)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/os/Bundle/keySet()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/content/Intent/getBundleExtra(java.lang.String)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/Map/isEmpty()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/Iterator/next()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/HashMap/HashMap()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/util/Set/iterator()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#java/lang/String/substring(int)
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/content/Intent/getExtras()
android/support/v4/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)#android/app/RemoteInput/getDataResultsFromIntent(android.content.Intent,java.lang.String)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/os/Bundle/Bundle()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Iterator/hasNext()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Map$Entry/getKey()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/content/Intent/setClipData(android.content.ClipData)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/content/Intent/getBundleExtra(java.lang.String)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/app/RemoteInput/addDataResultToIntent(android.app.RemoteInput,android.content.Intent,java.util.Map)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Iterator/next()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Set/iterator()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Map$Entry/getValue()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/content/Intent/Intent()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#java/util/Map/entrySet()
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/content/ClipData/newIntent(java.lang.CharSequence,android.content.Intent)
android/support/v4/app/RemoteInput/addDataResultToIntent(android.support.v4.app.RemoteInput,android.content.Intent,java.util.Map)#android/net/Uri/toString()
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/os/Bundle/Bundle()
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/content/Intent/getBundleExtra(java.lang.String)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/content/ClipData/newIntent(java.lang.CharSequence,android.content.Intent)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/os/Bundle/get(java.lang.String)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/content/Intent/setClipData(android.content.ClipData)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/os/Bundle/putCharSequence(java.lang.String,java.lang.CharSequence)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/content/Intent/Intent()
android/support/v4/app/RemoteInput/addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle)#android/app/RemoteInput/addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/ref/WeakReference/get()
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Bundle/getParcelableArrayList(java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Bundle/getString(java.lang.String)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Message/getData()
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$CallbackHandler/handleMessage(android.os.Message)#java/lang/Class/getClassLoader()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/length()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/trim()
com/itextpdf/text/html/simpleparser/ElementFactory/getFont(com.itextpdf.text.html.simpleparser.ChainedProperties)#java/lang/String/substring(int,int)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/io/File/File(java.lang.String,java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/io/File/getPath()
com/itextpdf/text/html/simpleparser/ElementFactory/createImage(java.lang.String,java.util.Map,com.itextpdf.text.html.simpleparser.ChainedProperties,com.itextpdf.text.DocListener,com.itextpdf.text.html.simpleparser.ImageProvider,java.util.HashMap,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Bitmap/getWidth()
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Paint/Paint()
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/ColorMatrix/setSaturation(float)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/ColorMatrixColorFilter/ColorMatrixColorFilter(android.graphics.ColorMatrix)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/ColorMatrix/ColorMatrix()
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Canvas/setBitmap(android.graphics.Bitmap)
android/support/v4/print/PrintHelper$PrintHelperApi19/convertBitmapForColorMode(android.graphics.Bitmap,int)#android/graphics/Bitmap/getHeight()
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes$Builder/setColorMode(int)
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes$Builder/setMinMargins(android.print.PrintAttributes$Margins)
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes$Builder/setMediaSize(android.print.PrintAttributes$MediaSize)
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes/getResolution()
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes/getMediaSize()
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes/getColorMode()
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes/getMinMargins()
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes$Builder/setResolution(android.print.PrintAttributes$Resolution)
android/support/v4/print/PrintHelper$PrintHelperApi19/copyAttributes(android.print.PrintAttributes)#android/print/PrintAttributes$Builder/PrintAttributes$Builder()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/size()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Set/iterator()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Iterator/next()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/util/Map/keySet()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/findAliases(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/xmp/impl/XMPSchemaRegistryImpl/registerNamespace(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setFieldSeparator(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setArraySeparator(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setArrayEnd(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setContentEnd(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setArrayStart(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/setContentStart(java.lang.String)
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#java/lang/StringBuilder/toString()
org/apache/commons/lang3/builder/MultilineRecursiveToStringStyle/resetIndent()#java/lang/System/lineSeparator()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/CircleImageView/layout(int,int,int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingLeft()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingTop()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingBottom()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredWidth()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getPaddingRight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildCount()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/CircleImageView/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getMeasuredHeight()
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/support/v4/widget/SwipeRefreshLayout/getChildAt(int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/ViewGroup/onMeasure(int,int)
android/support/v4/widget/SwipeRefreshLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setVisibility(int)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/min(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/getVisibility()
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Double/isNaN(double)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/abs(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleY(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(float,float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/max(double,double)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#android/support/v4/widget/CircleImageView/setScaleX(float)
android/support/v4/widget/SwipeRefreshLayout/moveSpinner(float)#java/lang/Math/pow(double,double)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TableLayout/getChildAt(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TableLayout/getChildCount()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TextView/setText(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/view/ViewGroup/removeAllViews()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showTableStats(java.util.List,java.util.List,android.widget.TableLayout)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/clear()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerColor(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Description/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/clear()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setMinimumHeight(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showSeriesPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/DecimalFormat()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/format(double)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/lang/Double/isNaN(double)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/populateRowData(java.util.List,android.widget.TableRow,android.content.Context)#java/text/DecimalFormat/setMaximumFractionDigits(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Description/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/clear()
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractContainersStatsActivity/showArrowsPerScore(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/setValueFormatter(com.github.mikephil.charting.formatter.IValueFormatter)
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/Iterator/hasNext()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarData/getMaxEntryCountSet()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/List/size()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/Iterator/next()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarData/notifyDataChanged()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#java/util/List/iterator()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/data/BarData/groupBars(float,float,float)#com/github/mikephil/charting/data/BarEntry/setX(float)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/database/Cursor/isNull(int)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/database/Cursor/getLong(int)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/content/Context/getContentResolver()
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#android/database/Cursor/moveToFirst()
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#java/lang/StringBuilder/toString()
android/support/v4/provider/DocumentsContractApi19/queryForLong(android.content.Context,android.net.Uri,java.lang.String,long)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/database/Cursor/isNull(int)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/database/Cursor/moveToFirst()
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/content/Context/getContentResolver()
android/support/v4/provider/DocumentsContractApi19/queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String)#android/database/Cursor/getString(int)
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/lang/String/toLowerCase()
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/util/Map/get(java.lang.Object)
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/util/Set/toArray()
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/util/Map/keySet()
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/lang/StringBuilder/StringBuilder()
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/lang/RuntimeException/RuntimeException(java.lang.String)
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/lang/StringBuilder/toString()
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/util/Arrays/toString(java.lang.Object[])
io/sentry/DefaultSentryClientFactory/getRejectedExecutionHandler(io.sentry.dsn.Dsn)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Set/isEmpty()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Set/iterator()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Iterator/hasNext()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Map$Entry/getKey()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Map/isEmpty()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Iterator/next()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Map$Entry/getValue()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Collection/iterator()
io/sentry/DefaultSentryClientFactory/configureSentryClient(io.sentry.SentryClient,io.sentry.dsn.Dsn)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/util/List/size()
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/lang/Class/cast(java.lang.Object)
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/util/List/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
com/google/android/gms/internal/measurement/zzyd/zzai(java.util.List)#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/Class/newInstance()
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzyd/zze(com.google.android.gms.internal.measurement.zzxz)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/Class/getSimpleName()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/view/View/findViewById(int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/StringBuilder/toString()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/recycle()
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/app/WindowDecorActionBar/init(android.view.View)#java/lang/Object/getClass()
com/google/android/gms/ads/identifier/zza/run()#java/net/URL/openConnection()
com/google/android/gms/ads/identifier/zza/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/ads/identifier/zza/run()#java/util/Iterator/hasNext()
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/append(int)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/buildUpon()
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/toString()
com/google/android/gms/ads/identifier/zza/run()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/net/HttpURLConnection/disconnect()
com/google/android/gms/ads/identifier/zza/run()#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/IndexOutOfBoundsException/getMessage()
com/google/android/gms/ads/identifier/zza/run()#java/util/Map/get(java.lang.Object)
com/google/android/gms/ads/identifier/zza/run()#java/net/URL/URL(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/String/length()
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri$Builder/build()
com/google/android/gms/ads/identifier/zza/run()#java/util/Iterator/next()
com/google/android/gms/ads/identifier/zza/run()#java/util/Map/keySet()
com/google/android/gms/ads/identifier/zza/run()#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/ads/identifier/zza/run()#java/util/Set/iterator()
com/google/android/gms/ads/identifier/zza/run()#android/net/Uri/parse(java.lang.String)
com/google/android/gms/ads/identifier/zza/run()#java/lang/StringBuilder/toString()
com/google/android/gms/ads/identifier/zza/run()#java/lang/Exception/getMessage()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/util/logging/Logger/finest(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#com/itextpdf/text/pdf/parser/clipper/Paths/add(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/util/List/size()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#com/itextpdf/text/pdf/parser/clipper/Paths/clear()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#com/itextpdf/text/pdf/parser/clipper/Path/add(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/buildResult(com.itextpdf.text.pdf.parser.clipper.Paths)#java/util/List/get(int)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/util/logging/Logger/finest(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/Class/getName()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/util/List/get(int)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/util/logging/Logger/entering(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/appendPolygon(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Edge)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/util/logging/Logger/finest(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/util/logging/Logger/entering(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#com/itextpdf/text/pdf/parser/clipper/Point$LongPoint/equals(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/append(boolean)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/Class/getName()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/clipper/DefaultClipper/addOutPt(com.itextpdf.text.pdf.parser.clipper.Edge,com.itextpdf.text.pdf.parser.clipper.Point$LongPoint)#java/util/List/get(int)
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/util/concurrent/atomic/AtomicInteger/get()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Class/getName()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Object/getClass()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/floatValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/shortValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/doubleValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/intValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/byteValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/util/concurrent/atomic/AtomicBoolean/get()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/util/concurrent/atomic/AtomicLong/get()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Number/longValue()
com/fasterxml/jackson/core/JsonGenerator/_writeSimpleObject(java.lang.Object)#java/lang/Boolean/booleanValue()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/getNextSibling()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMReference/digest(javax.xml.crypto.dsig.XMLSignContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMSignedInfo/canonicalize(javax.xml.crypto.XMLCryptoContext,java.io.ByteArrayOutputStream)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/setAttributeNS(java.lang.String,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/xml/security/utils/Base64/encode(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/getParent()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Document/getDocumentElement()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMUtils/getSignaturePrefix(javax.xml.crypto.XMLCryptoContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMSignedInfo/getReferences()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/dom/DOMSignContext/DOMSignContext(java.security.Key,org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/w3c/dom/Element/getChildNodes()
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.util.List,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#java/util/List/get(int)
com/itextpdf/text/pdf/security/MakeXmlSignature/sign(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.security.ExternalSignature,com.itextpdf.text.pdf.security.XmlLocator,org.apache.jcp.xml.dsig.internal.dom.DOMSignedInfo,javax.xml.crypto.dsig.XMLObject,javax.xml.crypto.dsig.keyinfo.KeyInfo,java.lang.String)#org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature/marshal(org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,javax.xml.crypto.dom.DOMCryptoContext)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/spec/XPathType/XPathType(java.lang.String,javax.xml.crypto.dsig.spec.XPathType$Filter)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newTransform(java.lang.String,javax.xml.crypto.dsig.spec.TransformParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/spec/XPathFilter2ParameterSpec/XPathFilter2ParameterSpec(java.util.List)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod,java.util.List,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateContentReference(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String)#javax/xml/crypto/dsig/XMLSignatureFactory/newDigestMethod(java.lang.String,javax.xml.crypto.dsig.spec.DigestMethodParameterSpec)
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#java/lang/Object/toString()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/TransformerFactory/newInstance()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.Writer)
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/Transformer/setOutputProperty(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#java/io/StringWriter/StringWriter()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#java/lang/String/getBytes()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/TransformerFactory/newTransformer()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/stream/StreamResult/getWriter()
com/itextpdf/text/pdf/security/MakeXmlSignature/getByteArrayOfNode(org.w3c.dom.Node)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#javax/xml/crypto/dom/DOMStructure/DOMStructure(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/apache/xml/security/utils/Base64/encode(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Document/createElement(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/text/SimpleDateFormat/format(java.util.Date)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Element/setIdAttribute(java.lang.String,boolean)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Calendar/getTime()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/length()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/security/cert/Certificate/getEncoded()
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/concat(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/String/substring(int)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#javax/xml/crypto/dsig/XMLSignatureFactory/newXMLObject(java.util.List,java.lang.String,java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/util/Collections/singletonList(java.lang.Object)
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/MakeXmlSignature/generateXadesObject(javax.xml.crypto.dsig.XMLSignatureFactory,com.itextpdf.text.pdf.XmlSignatureAppearance,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/InputStream/close()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getResponseCode()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/iterator()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/NullPointerException/NullPointerException()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getContent()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CrlClientOnline/getEncoded(java.security.cert.X509Certificate,java.lang.String)#java/lang/Exception/getMessage()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Document/createElement(java.lang.String)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/TransformerFactory/newInstance()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Map$Entry/getKey()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Document/appendChild(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Element/appendChild(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/stream/StreamResult/StreamResult(java.io.OutputStream)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/parsers/DocumentBuilder/newDocument()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Map/entrySet()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/dom/DOMSource/DOMSource(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Map/size()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/Transformer/setOutputProperty(java.lang.String,java.lang.String)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Set/iterator()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/util/Map$Entry/getValue()
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/Transformer/transform(javax.xml.transform.Source,javax.xml.transform.Result)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#java/lang/String/valueOf(int)
com/itextpdf/testutils/CompareTool$CompareResult/writeReportToXml(java.io.OutputStream)#javax/xml/transform/TransformerFactory/newTransformer()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Map$Entry/getValue()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Map/entrySet()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/lang/StringBuilder/toString()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Map$Entry/getKey()
com/itextpdf/testutils/CompareTool$CompareResult/getReport()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/getPdfIndirectReference()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/indexOf(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#com/itextpdf/text/pdf/PdfCopyFieldsImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopyFieldsImp/closeIt()#java/util/HashMap/entrySet()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDimensionPixelOffset(int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getLocationOnScreen(int[])
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/graphics/Rect/height()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getWidth()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getApplicationWindowToken()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getWindowVisibleDisplayFrame(android.graphics.Rect)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getHeight()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/measure(int,int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/content/Context/getResources()
android/support/v7/widget/TooltipPopup/computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)#android/view/View/getMeasuredHeight()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/clear()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/apply()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/putInt(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/getPreferences(int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Set/iterator()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/validateNumber(java.lang.String,int,int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Map$Entry/getValue()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/util/Map/entrySet()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/widget/EditText/getText()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/Intent/putExtra(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#java/lang/Integer/parseInt(java.lang.String)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/startRetentions(android.view.View)#android/content/SharedPreferences/edit()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/getPreferences(int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Set/iterator()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/setContentView(int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Map$Entry/getValue()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#java/util/Map/entrySet()
ar/com/tzulberti/archerytraining/activities/timer/ConfigureTimerActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/getInt(java.lang.String,int)
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getLayoutParams()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingRight()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingBottom()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/layout(int,int,int,int)
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getPaddingLeft()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getBottom()
android/support/design/widget/HeaderScrollingViewBehavior/layoutChild(android.support.design.widget.CoordinatorLayout,android.view.View,int)#android/view/View/getMeasuredHeight()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeNameResource(int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getFloat(int,float)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getColor(int,int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/StateSet/trimStateSet(int[],int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeBooleanValue(int,boolean)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/util/AttributeSet/getAttributeCount()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/hasValue(int)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/ColorStateList/ColorStateList(int[][],int[])
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/recycle()
android/support/v7/content/res/AppCompatColorStateListInflater/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/remove(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#android/os/Handler/removeMessages(int,java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/size()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/get(int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/List/remove(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/Queue/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager$zaa/zab(com.google.android.gms.common.api.internal.GoogleApiManager$zab)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StackTraceElement/isNativeMethod()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Math/round(double)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Throwable/toString()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StackTraceElement/getClassName()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Class/getCanonicalName()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Math/pow(double,double)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/String/valueOf(long)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Math/abs(long)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/String/charAt(int)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Throwable/getStackTrace()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/append(long)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Class/getName()
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
com/google/android/gms/measurement/internal/zzas/zza(boolean,java.lang.Object)#java/lang/Object/getClass()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/widget/HorizontalScrollView/onMeasure(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getPaddingBottom()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getMeasuredWidth()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildMeasureSpec(int,int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getPaddingTop()
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildAt(int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/design/widget/TabLayout/onMeasure(int,int)#android/support/design/widget/TabLayout/getChildCount()
android/support/design/widget/TabLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/support/transition/Explode/getEpicenter()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/view/View/getLocationOnScreen(int[])
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/view/View/getWidth()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#java/lang/Math/random()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#java/lang/Math/round(float)
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/graphics/Rect/centerX()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/view/View/getTranslationX()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/view/View/getHeight()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/graphics/Rect/centerY()
android/support/transition/Explode/calculateOut(android.view.View,android.graphics.Rect,int[])#android/view/View/getTranslationY()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/getTargets()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/containsAll(java.util.Collection)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/List/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/size()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionAt(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/TransitionSet/getTransitionCount()
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/removeTarget(android.view.View)
android/support/v4/app/FragmentTransitionCompat21/replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)#android/transition/Transition/addTarget(android.view.View)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/size()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/requestLayout()
android/support/v4/view/ViewPager/dataSetChanged()#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/dataSetChanged()#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/dataSetChanged()#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/getScaledPagingTouchSlop()
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/get(android.content.Context)
android/support/v4/view/ViewPager/initViewPager()#android/widget/Scroller/Scroller(android.content.Context,android.view.animation.Interpolator)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setFocusable(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setWillNotDraw(boolean)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/getContext()
android/support/v4/view/ViewPager/initViewPager()#android/content/res/Resources/getDisplayMetrics()
android/support/v4/view/ViewPager/initViewPager()#android/widget/EdgeEffect/EdgeEffect(android.content.Context)
android/support/v4/view/ViewPager/initViewPager()#android/support/v4/view/ViewPager/setDescendantFocusability(int)
android/support/v4/view/ViewPager/initViewPager()#android/view/ViewConfiguration/getScaledMaximumFlingVelocity()
android/support/v4/view/ViewPager/initViewPager()#android/content/Context/getResources()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getHeight()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/finish()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/setSize(int,int)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/draw(android.graphics.Canvas)#android/support/v4/view/ViewPager/getOverScrollMode()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/util/ArrayList/isEmpty()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/widget/Scroller/setFinalX(int)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/recomputeScrollPosition(int,int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/setMeasuredDimension(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getDefaultSize(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getMeasuredWidth()
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onMeasure(int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getRight()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildCount()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/canScrollHorizontally(int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollX()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollY()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getBottom()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildAt(int)
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getTop()
android/support/v4/view/ViewPager/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getLeft()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getEdgeFlags()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/support/v4/view/ViewPager/getParent()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/view/ViewPager/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingTop()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getPaddingBottom()
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onLayout(boolean,int,int,int,int)#android/view/View/measure(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getMeasuredWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/offsetLeftAndRight(int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getWidth()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/view/View/getLeft()
android/support/v4/view/ViewPager/onPageScrolled(int,float,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/os/SystemClock/uptimeMillis()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/fakeDragBy(float)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/fakeDragBy(float)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/obtain(long,long,int,float,float,int)
android/support/v4/view/ViewPager/fakeDragBy(float)#android/view/MotionEvent/recycle()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingLeft()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Integer/toHexString(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getWindowToken()
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/remove(int)
android/support/v4/view/ViewPager/populate(int)#android/view/View/getLayoutParams()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/hasFocus()
android/support/v4/view/ViewPager/populate(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getId()
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/max(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getPaddingRight()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getResources()
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/populate(int)#android/view/View/requestFocus(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/ViewPager/populate(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/populate(int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/populate(int)#android/content/res/Resources/getResourceName(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/populate(int)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/populate(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/SoundEffectConstants/getContantForFocusDirection(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/requestFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Class/getSimpleName()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/ViewParent/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/getInstance()
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/findFocus()
android/support/v4/view/ViewPager/arrowScroll(int)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/FocusFinder/findNextFocus(android.view.ViewGroup,android.view.View,int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/support/v4/view/ViewPager/playSoundEffect(int)
android/support/v4/view/ViewPager/arrowScroll(int)#android/view/View/getParent()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/Object/getClass()
android/support/v4/view/ViewPager/arrowScroll(int)#java/lang/StringBuilder/toString()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getRight()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/Rect()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getBottom()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getTop()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getLeft()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/View/getParent()
android/support/v4/view/ViewPager/getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)#android/view/ViewGroup/getBottom()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/lang/Runnable/run()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/getCurrY()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/completeScroll(boolean)#java/util/ArrayList/get(int)
android/support/v4/view/ViewPager/completeScroll(boolean)#android/support/v4/view/ViewPager/scrollTo(int,int)
android/support/v4/view/ViewPager/completeScroll(boolean)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/getVisibility()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/view/View/addFocusables(java.util.ArrayList,int,int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/size()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getDescendantFocusability()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusableInTouchMode()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/getChildAt(int)
android/support/v4/view/ViewPager/addFocusables(java.util.ArrayList,int,int)#android/support/v4/view/ViewPager/isFocusable()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/computeScrollOffset()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getFinalX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/isFinished()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(float,float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/startScroll(int,int,int,int,int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/round(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/abortAnimation()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getScrollY()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(float)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/getCurrX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/support/v4/view/ViewPager/getChildCount()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/min(int,int)
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#android/widget/Scroller/getStartX()
android/support/v4/view/ViewPager/smoothScrollTo(int,int,int)#java/lang/Math/abs(int)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#android/os/Bundle/putLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/Long/toString(long)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzdv/zzb(com.google.android.gms.measurement.internal.zzag,java.lang.String)#java/lang/SecurityException/getMessage()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/support/v4/media/session/IMediaSession/asBinder()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/Bundle/Bundle()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/Bundle/getInt(java.lang.String)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#java/util/List/get(int)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#java/lang/Class/getClassLoader()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/ResultReceiver/send(int,android.os.Bundle)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#java/lang/ref/WeakReference/get()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#java/util/List/size()
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/media/session/MediaSessionCompat$Callback$StubApi21/onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/CertificateID/CertificateID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,java.math.BigInteger)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/jcajce/JcaX509CertificateHolder/JcaX509CertificateHolder(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/x509/Extension/Extension(org.spongycastle.asn1.ASN1ObjectIdentifier,boolean,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/x509/Extensions/Extensions(org.spongycastle.asn1.x509.Extension[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/JcaDigestCalculatorProviderBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/addRequest(org.spongycastle.cert.ocsp.CertificateID)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/DEROctetString/getEncoded()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/OCSPReqBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#java/security/Security/addProvider(java.security.Provider)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/jce/provider/BouncyCastleProvider/BouncyCastleProvider()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/build()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/setRequestExtensions(org.spongycastle.asn1.x509.Extensions)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/cert/ocsp/OCSPReqBuilder/build()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/generateOCSPRequest(java.security.cert.X509Certificate,java.math.BigInteger)#org/spongycastle/operator/DigestCalculatorProvider/get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/close()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/flush()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#org/spongycastle/cert/ocsp/OCSPReq/getEncoded()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/write(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getContent()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getOutputStream()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#org/spongycastle/cert/ocsp/OCSPResp/OCSPResp(byte[])
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/getResponseCode()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/OcspClientBouncyCastle/getOcspResponse(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.lang.String)#java/net/HttpURLConnection/setDoOutput(boolean)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#android/os/Bundle/Bundle(android.os.Bundle)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/util/List/contains(java.lang.Object)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#android/os/Bundle/remove(java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/util/ArrayList/size()
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzfx/zza(java.lang.String,java.lang.String,android.os.Bundle,java.util.List,boolean,boolean)#android/os/Bundle/keySet()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#android/os/Bundle/Bundle(android.os.Bundle)
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/List/size()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#java/util/List/set(int,java.lang.Object)
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#android/os/Bundle/keySet()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#android/os/Bundle/Bundle()
com/google/android/gms/measurement/internal/zzfx/zzf(android.os.Bundle)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#android/os/Bundle/Bundle()
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#android/os/Bundle/putDouble(java.lang.String,double)
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#android/os/Bundle/putLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfx/zzd(java.util.List)#java/lang/Double/doubleValue()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/AvailabilityException/getMessage()#android/support/v4/util/ArrayMap/get(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Iterator/next()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/Set/iterator()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/util/List/add(java.lang.Object)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/AvailabilityException/getMessage()#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/String/length()
com/google/android/gms/common/api/AvailabilityException/getMessage()#java/lang/StringBuilder/StringBuilder(int)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/iterator()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/ArrayList()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/remove(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/ArrayList(java.util.Collection)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/Iterator/hasNext()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/add(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/Iterator/next()
android/support/transition/TransitionManager$MultiListener/onPreDraw()#java/util/ArrayList/size()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/io/File/File(java.io.File,java.lang.String)
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#android/os/Environment/getExternalStorageState()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/io/File/exists()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/lang/String/equals(java.lang.Object)
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/io/File/getAbsolutePath()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/io/File/mkdirs()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/lang/Exception/Exception(java.lang.String)
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#java/io/File/isDirectory()
ar/com/tzulberti/archerytraining/helper/PDFExporter/getDataDir(java.io.File)#android/os/Environment/getExternalStorageDirectory()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/support/v7/view/menu/MenuPopup/setCallback(android.support.v7.view.menu.MenuPresenter$Callback)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/Display/getRealSize(android.graphics.Point)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/WindowManager/getDefaultDisplay()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/Context/getResources()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/graphics/Point/Point()
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/view/Display/getSize(android.graphics.Point)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#android/content/Context/getSystemService(java.lang.String)
android/support/v7/view/menu/MenuPopupHelper/createPopup()#java/lang/Math/min(int,int)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/File/exists()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/StringBuilder/StringBuilder()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/StringBuilder/append(java.lang.Object)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/FileOutputStream/FileOutputStream(java.io.File)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/Integer/toString(int)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/File/File(java.lang.String,java.lang.String)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/File/getAbsolutePath()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/util/UUID/toString()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/FileOutputStream/close()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/lang/StringBuilder/toString()
io/sentry/buffer/DiskBuffer/add(io.sentry.event.Event)#java/io/ObjectOutputStream/close()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/ObjectInputStream/readObject()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/File/File(java.lang.String)
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/FileInputStream/close()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/File/delete()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/lang/StringBuilder/toString()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/lang/StringBuilder/StringBuilder()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/ObjectInputStream/close()
io/sentry/buffer/DiskBuffer/fileToEvent(java.io.File)#java/io/File/getAbsolutePath()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfPageLabels/getPageLabels(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/get(java.lang.Object)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingBottom()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/setMeasuredDimension(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/SlidingPaneLayout/onMeasure(int,int)#android/support/v4/widget/SlidingPaneLayout/isInEditMode()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/ViewGroup/getChildCount()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/canScrollHorizontally(int)
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollX()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getScrollY()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getBottom()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/canScroll(android.view.View,boolean,int,int,int)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/getClipBounds(android.graphics.Rect)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(android.graphics.Rect)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/v4/widget/SlidingPaneLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getBottom()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/draw(android.graphics.Canvas)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/getWidth()
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/onLayout(boolean,int,int,int,int)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getRight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingLeft()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/setVisibility(int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingTop()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getHeight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getWidth()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingRight()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getBottom()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getVisibility()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#java/lang/Math/max(int,int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getPaddingBottom()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getTop()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/view/View/getLeft()
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getChildAt(int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#java/lang/Math/min(int,int)
android/support/v4/widget/SlidingPaneLayout/updateObscuredViewsVisibility(android.view.View)#android/support/v4/widget/SlidingPaneLayout/getChildCount()
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Math/abs(double)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#com/itextpdf/text/pdf/parser/clipper/Paths/add(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Double/isNaN(double)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Math/round(double)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Math/acos(double)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#com/itextpdf/text/pdf/parser/clipper/Path/size()
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Math/sin(double)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/util/List/clear()
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#com/itextpdf/text/pdf/parser/clipper/Path/get(int)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#com/itextpdf/text/pdf/parser/clipper/Path/add(java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/util/List/get(int)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/util/List/set(int,java.lang.Object)
com/itextpdf/text/pdf/parser/clipper/ClipperOffset/doOffset(double)#java/lang/Math/cos(double)
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(float[],float[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(boolean[],boolean[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/List/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/deepEquals(java.lang.Object[],java.lang.Object[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(int[],int[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/lang/Class/isArray()
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(long[],long[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
com/google/android/gms/internal/measurement/zzyf/equals(java.lang.Object)#java/util/Arrays/equals(double[],double[])
com/google/android/gms/measurement/internal/zzat/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/String/length()
com/google/android/gms/measurement/internal/zzat/run()#java/lang/String/substring(int,int)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzat/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/String/charAt(int)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/StringBuilder/append(long)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzat/run()#java/lang/StringBuilder/append(char)
com/google/android/gms/common/images/ImageManager$zab/run()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/images/ImageManager$zab/run()#android/os/ParcelFileDescriptor/close()
com/google/android/gms/common/images/ImageManager$zab/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/images/ImageManager$zab/run()#android/graphics/BitmapFactory/decodeFileDescriptor(java.io.FileDescriptor)
com/google/android/gms/common/images/ImageManager$zab/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/images/ImageManager$zab/run()#java/lang/String/length()
com/google/android/gms/common/images/ImageManager$zab/run()#java/util/concurrent/CountDownLatch/await()
com/google/android/gms/common/images/ImageManager$zab/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/images/ImageManager$zab/run()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/images/ImageManager$zab/run()#android/os/Handler/post(java.lang.Runnable)
com/google/android/gms/common/images/ImageManager$zab/run()#java/util/concurrent/CountDownLatch/CountDownLatch(int)
com/google/android/gms/common/images/ImageManager$zab/run()#android/os/ParcelFileDescriptor/getFileDescriptor()
com/google/android/gms/common/images/ImageManager$zab/run()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/get(byte[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/rewind()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/ByteBuffer/limit()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/CharBuffer/wrap(char[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/CharsetEncoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/Charset/newEncoder()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(char,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/get(byte[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/rewind()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/CharBuffer/wrap(char[])
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/CharsetEncoder/onUnmappableCharacter(java.nio.charset.CodingErrorAction)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/Charset/newEncoder()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/CharsetEncoder/encode(java.nio.CharBuffer)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/ByteBuffer/limit()
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/nio/charset/Charset/forName(java.lang.String)
com/itextpdf/text/pdf/PdfEncodings/convertToBytes(java.lang.String,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getFontMetrics(android.graphics.Paint$FontMetrics)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Rect/width()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#java/lang/String/length()
com/github/mikephil/charting/utils/Utils/drawXAxisValue(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/rotate(float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/getFontMetrics(android.graphics.Paint$FontMetrics)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/getLineCount()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/getTextAlign()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/getWidth()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/TextPaint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/utils/Utils/drawMultilineText(android.graphics.Canvas,android.text.StaticLayout,float,float,android.text.TextPaint,com.github.mikephil.charting.utils.MPPointF,float)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getXAxis()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getHeight()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getCenter()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getWidth()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/charts/PieRadarChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/PieRadarChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectOutputStream/flush()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectInputStream/readObject()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectInputStream/close()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectOutputStream/close()
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
com/google/android/gms/measurement/internal/zzdw/zze(java.lang.Object)#java/io/ByteArrayOutputStream/toByteArray()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/isEmpty()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/lang/ref/WeakReference/get()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/Iterator/next()
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v7/view/menu/MenuBuilder/dispatchSaveInstanceState(android.os.Bundle)#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/next()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/clear()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/add(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/addAll(java.util.Collection)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/remove(java.lang.Object)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/get(int)
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/Iterator/hasNext()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/lang/ref/WeakReference/get()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/ArrayList/size()
android/support/v7/view/menu/MenuBuilder/flagActionItems()#java/util/concurrent/CopyOnWriteArrayList/iterator()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/PackageManager/queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Context/getPackageManager()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/Intent(android.content.Intent)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/size()
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIntent(android.content.Intent)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#java/util/List/get(int)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v7/view/menu/MenuBuilder/addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])#android/view/MenuItem/setIcon(android.graphics.drawable.Drawable)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/expandActionView()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/View/getId()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/support/v7/view/menu/SubMenuBuilder/restoreActionViewStates(android.os.Bundle)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/hasSubMenu()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/getSubMenu()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/MenuItem/getActionView()
android/support/v7/view/menu/MenuBuilder/restoreActionViewStates(android.os.Bundle)#android/view/View/restoreHierarchyState(android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/support/v7/view/menu/SubMenuBuilder/saveActionViewStates(android.os.Bundle)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/saveHierarchyState(android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/isActionViewExpanded()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/hasSubMenu()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getSubMenu()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/util/SparseArray/SparseArray()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getActionView()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/MenuItem/getItemId()
android/support/v7/view/menu/MenuBuilder/saveActionViewStates(android.os.Bundle)#android/view/View/getId()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/util/ListIterator/next()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/util/ListIterator/hasNext()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/parser/ContentByteUtils/getContentBytesFromContentObject(com.itextpdf.text.pdf.PdfObject)#java/lang/Object/getClass()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/animate()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/getVisibility()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setScaleY(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/scaleY(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setScaleX(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/support/design/widget/VisibilityAwareImageButton/setAlpha(float)
android/support/design/widget/FloatingActionButtonImpl/show(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean)#android/view/ViewPropertyAnimator/scaleX(float)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Object/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/toString()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.CharSequence)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#android/graphics/Rect/Rect()
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/Integer/numberOfTrailingZeros(int)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/append(boolean)
android/support/v4/view/accessibility/AccessibilityNodeInfoCompat/toString()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/charAt(int)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/length()
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/substring(int,int)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Integer/valueOf(int)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Math/min(int,int)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Math/max(int,int)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Character/toString(char)
com/itextpdf/testutils/CompareTool/compareStringsExtended(com.itextpdf.text.pdf.PdfString,com.itextpdf.text.pdf.PdfString,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map$Entry/getKey()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map/size()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/lang/String/equals(java.lang.Object)
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Set/iterator()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map/get(java.lang.Object)
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map$Entry/getValue()
com/itextpdf/testutils/CompareTool/linksAreSame(com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink,com.itextpdf.text.pdf.PdfAnnotation$PdfImportedLink)#java/util/Map/entrySet()
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#org/w3c/dom/Document/normalizeDocument()
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setIgnoringElementContentWhitespace(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#org/w3c/dom/Document/isEqualNode(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/newInstance()
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setCoalescing(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilder/parse(java.io.File)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(java.lang.String,java.lang.String)#javax/xml/parsers/DocumentBuilderFactory/setIgnoringComments(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilder/parse(java.io.InputStream)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#org/w3c/dom/Document/normalizeDocument()
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/setIgnoringElementContentWhitespace(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#org/w3c/dom/Document/isEqualNode(org.w3c.dom.Node)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/newDocumentBuilder()
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/newInstance()
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/setCoalescing(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/setNamespaceAware(boolean)
com/itextpdf/testutils/CompareTool/compareXmls(byte[],byte[])#javax/xml/parsers/DocumentBuilderFactory/setIgnoringComments(boolean)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Process/getInputStream()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/exists()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Integer/valueOf(int)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/List/contains(java.lang.Object)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Map/entrySet()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Process/getErrorStream()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/BufferedReader/close()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Integer/intValue()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/PrintStream/print(java.lang.String)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Map$Entry/getKey()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/List/isEmpty()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Integer/toString(int)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Map/isEmpty()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/listFiles(java.io.FileFilter)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/File(java.lang.String)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/getAbsolutePath()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Set/iterator()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/FileInputStream/close()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/mkdirs()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/BufferedReader/readLine()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Object/getClass()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/Map$Entry/getValue()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/util/List/iterator()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Math/min(int,int)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/FileInputStream/FileInputStream(java.io.File)
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/Process/waitFor()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/io/File/delete()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/StringBuilder/toString()
com/itextpdf/testutils/CompareTool/compare(java.lang.String,java.lang.String,java.util.Map,java.util.List)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/util/ArrayList/ArrayList(int)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/io/PrintStream/print(java.lang.String)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/lang/String/length()
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/util/List/size()
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/util/List/add(java.lang.Object)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/io/PrintStream/flush()
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/util/ArrayList/ArrayList()
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/io/PrintStream/println(java.lang.String)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/lang/Integer/valueOf(int)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/util/List/get(int)
com/itextpdf/testutils/CompareTool/compareByContent(java.lang.String,java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/replaceAll(java.lang.String,java.lang.String)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Math/max(int,int)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/String(byte[],int,int)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/String(byte[])
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Integer/valueOf(int)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/Math/min(int,int)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#com/itextpdf/text/pdf/PRStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#com/itextpdf/text/pdf/PRStream/getAsDict(com.itextpdf.text.pdf.PdfName)
com/itextpdf/testutils/CompareTool/compareStreamsExtended(com.itextpdf.text.pdf.PRStream,com.itextpdf.text.pdf.PRStream,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#com/itextpdf/text/pdf/PRStream/getDirectObject(com.itextpdf.text.pdf.PdfName)
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Set/addAll(java.util.Collection)
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Set/iterator()
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/substring(int)
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#com/itextpdf/text/pdf/PdfDictionary/isStream()
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/equals(java.lang.Object)
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/lang/String/indexOf(int)
com/itextpdf/testutils/CompareTool/compareDictionariesExtended(com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.text.pdf.PdfDictionary,com.itextpdf.testutils.CompareTool$ObjectPath,com.itextpdf.testutils.CompareTool$CompareResult)#java/util/TreeSet/TreeSet(java.util.Collection)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/Object/toString()
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/net/URLEncoder/encode(java.lang.String,java.lang.String)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/String/length()
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#android/webkit/WebView/findAddress(java.lang.String)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/String/substring(int)
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/StringBuilder/toString()
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/StringBuilder/StringBuilder()
android/support/v4/text/util/LinkifyCompat/gatherMapLinks(java.util.ArrayList,android.text.Spannable)#java/lang/String/indexOf(java.lang.String)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#java/util/ArrayList/remove(int)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#android/text/Spannable/removeSpan(java.lang.Object)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#java/util/ArrayList/size()
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#android/text/Spannable/length()
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#android/text/Spannable/getSpanEnd(java.lang.Object)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#android/text/Spannable/getSpans(int,int,java.lang.Class)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#java/util/ArrayList/get(int)
android/support/v4/text/util/LinkifyCompat/pruneOverlaps(java.util.ArrayList,android.text.Spannable)#android/text/Spannable/getSpanStart(java.lang.Object)
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#java/util/ArrayList/iterator()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#java/util/ArrayList/ArrayList()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#java/util/Iterator/hasNext()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#android/text/util/Linkify/addLinks(android.text.Spannable,int)
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#java/util/Iterator/next()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#java/util/ArrayList/size()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#android/text/Spannable/length()
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#android/text/Spannable/getSpans(int,int,java.lang.Class)
android/support/v4/text/util/LinkifyCompat/addLinks(android.text.Spannable,int)#android/text/Spannable/removeSpan(java.lang.Object)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/set(int,int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar(java.util.TimeZone)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/SimpleTimeZone/SimpleTimeZone(int,java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/util/GregorianCalendar/clear()
com/itextpdf/text/pdf/PdfDate/decode(java.lang.String)#java/lang/String/indexOf(int)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/optString(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/getBoolean(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/Set/add(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#android/accounts/Account/Account(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONArray/getString(int)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONArray/length()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zab(java.lang.String)#org/json/JSONObject/getJSONArray(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/ArrayList/size()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/JSONObject()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONArray/JSONArray()
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONArray/put(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#java/util/ArrayList/get(int)
com/google/android/gms/auth/api/signin/GoogleSignInOptions/zad()#org/json/JSONObject/put(java.lang.String,boolean)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getPositionForView(android.view.View)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#com/leavjenn/smoothdaterangepicker/date/DayPickerView/smoothScrollToPositionFromTop(int,int,int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#android/util/Log/isLoggable(java.lang.String,int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#android/view/View/getTop()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#com/leavjenn/smoothdaterangepicker/date/DayPickerView/getChildAt(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#java/lang/StringBuilder/toString()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#java/lang/StringBuilder/append(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/goTo(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay,boolean,boolean,boolean)#android/util/Log/d(java.lang.String,java.lang.String)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setFastScrollEnabled(boolean)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setFadingEdgeLength(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#android/view/ViewConfiguration/getScrollFriction()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setDivider(android.graphics.drawable.Drawable)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setItemsCanFocus(boolean)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setOnScrollListener(android.widget.AbsListView$OnScrollListener)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setVerticalScrollBarEnabled(boolean)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setCacheColorHint(int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/setUpListView()#com/leavjenn/smoothdaterangepicker/date/DayPickerView/setFriction(float)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/util/Calendar/set(int,int,int)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/util/Calendar/getTime()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/util/Calendar/getDisplayName(int,int,java.util.Locale)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/util/Locale/getDefault()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/lang/StringBuilder/toString()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/lang/StringBuilder/append(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/text/SimpleDateFormat/format(java.util.Date)
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/lang/StringBuilder/StringBuilder()
com/leavjenn/smoothdaterangepicker/date/DayPickerView/getMonthAndYearString(com.leavjenn.smoothdaterangepicker.date.MonthAdapter$CalendarDay)#java/util/Calendar/getInstance()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfContentByte/openMCBlockInt(com.itextpdf.text.pdf.interfaces.IAccessibleElement)#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/lang/Math/max(double,double)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/net/URL/getPath()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/lang/Math/min(double,double)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/pdf/PdfImage/writeContent(java.io.OutputStream)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/lang/Double/isNaN(double)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/pdf/PdfImage/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/Image/hasBorders()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/pdf/PdfImage/getKeys()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/pdf/PdfName/getBytes()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#com/itextpdf/text/pdf/PdfImage/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfContentByte/addImage(com.itextpdf.text.Image,double,double,double,double,double,double,boolean,boolean)#java/util/HashMap/keySet()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/startAnimation(android.view.animation.Animation)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getHeight()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getContext()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setAnimationListener(android.view.animation.Animation$AnimationListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/AnimationUtils/loadAnimation(android.content.Context,int)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setInterpolator(android.view.animation.Interpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/view/animation/Animation/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewOut(int)#android/animation/ValueAnimator/start()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/startAnimation(android.view.animation.Animation)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getHeight()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/getContext()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setIntValues(int[])
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/setTranslationY(float)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/AnimationUtils/loadAnimation(android.content.Context,int)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/start()
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setInterpolator(android.view.animation.Interpolator)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setAnimationListener(android.view.animation.Animation$AnimationListener)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/BaseTransientBottomBar/animateViewIn()#android/view/animation/Animation/setDuration(long)
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/Class/isArray()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/reflect/Field/getName()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/reflect/AccessibleObject/setAccessible(java.lang.reflect.AccessibleObject[],boolean)
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#org/apache/commons/lang3/builder/ReflectionToStringBuilder/getObject()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#org/apache/commons/lang3/builder/ReflectionToStringBuilder/append(java.lang.String,java.lang.Object)
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/InternalError/InternalError(java.lang.String)
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/IllegalAccessException/getMessage()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/Class/getDeclaredFields()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/builder/ReflectionToStringBuilder/appendFieldsIn(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/CharSequence/toString()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/res/Resources/getValue(int,android.util.TypedValue,boolean)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/Context/getTheme()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/TypedValue/TypedValue()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/res/Resources/getXml(int)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/support/v4/util/ArrayMap/isEmpty()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/graphics/drawable/Drawable/setChangingConfigurations(int)
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#android/content/Context/getResources()
android/support/v7/widget/AppCompatDrawableManager/loadDrawableFromDelegates(android.content.Context,int)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/measurement/internal/zzbv/run()#java/util/concurrent/BlockingQueue/peek()
com/google/android/gms/measurement/internal/zzbv/run()#java/util/concurrent/BlockingQueue/poll()
com/google/android/gms/measurement/internal/zzbv/run()#java/lang/Object/wait(long)
com/google/android/gms/measurement/internal/zzbv/run()#android/os/Process/myTid()
com/google/android/gms/measurement/internal/zzbv/run()#java/lang/Object/notifyAll()
com/google/android/gms/measurement/internal/zzbv/run()#android/os/Process/setThreadPriority(int)
com/google/android/gms/measurement/internal/zzbv/run()#android/os/Process/getThreadPriority(int)
com/google/android/gms/measurement/internal/zzbv/run()#java/util/concurrent/Semaphore/acquire()
com/google/android/gms/measurement/internal/zzbv/run()#java/util/concurrent/Semaphore/release()
com/google/android/gms/measurement/internal/zzbv/run()#com/google/android/gms/measurement/internal/zzbu/run()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map$Entry/getKey()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/isEmpty()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map$Entry/getValue()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/Map/entrySet()
com/google/android/gms/common/api/internal/zas/zaa(android.content.Context,com.google.android.gms.common.api.internal.zaaw,java.util.concurrent.locks.Lock,android.os.Looper,com.google.android.gms.common.GoogleApiAvailabilityLight,java.util.Map,com.google.android.gms.common.internal.ClientSettings,java.util.Map,com.google.android.gms.common.api.Api$AbstractClientBuilder,java.util.ArrayList)#java/util/ArrayList/get(int)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/Throwable/Throwable()
com/google/firebase/iid/zzr/zza(android.os.Bundle)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/String/length()
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/io/IOException/IOException(java.lang.String)
com/google/firebase/iid/zzr/zza(android.os.Bundle)#java/lang/String/valueOf(java.lang.Object)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/Character/isISOControl(int)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/StringBuilder/append(int)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/Integer/toHexString(int)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/Character/isDefined(int)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/StringBuilder/append(char)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fasterxml/jackson/core/base/ParserBase/reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/math/BigDecimal/intValue()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#com/fasterxml/jackson/core/base/ParserBase/_throwInternal()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#com/fasterxml/jackson/core/base/ParserBase/_reportError(java.lang.String)
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/math/BigInteger/intValue()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#com/fasterxml/jackson/core/base/ParserBase/getText()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/math/BigDecimal/compareTo(java.math.BigDecimal)
com/fasterxml/jackson/core/base/ParserBase/convertNumberToInt()#java/math/BigInteger/compareTo(java.math.BigInteger)
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/lang/Class/getInterfaces()
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/Map/get(java.lang.Object)
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/lang/Class/getCanonicalName()
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/List/addAll(java.util.Collection)
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/ArrayList/ArrayList()
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/lang/Class/getSuperclass()
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/ArrayList/ArrayList(java.util.Collection)
android/arch/lifecycle/Lifecycling/resolveObserverCallbackType(java.lang.Class)#java/util/Collections/singletonList(java.lang.Object)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/reflect/Constructor/setAccessible(boolean)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/String/length()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/Class/getCanonicalName()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/String/isEmpty()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/String/substring(int)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/StringBuilder/toString()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/Class/forName(java.lang.String)
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/Package/getName()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/Class/getPackage()
android/arch/lifecycle/Lifecycling/generatedConstructor(java.lang.Class)#java/lang/reflect/Constructor/isAccessible()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/isNull(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getPlayoffs()#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/isNull(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/getCompletePlayoffData(long)#android/database/Cursor/moveToFirst()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#java/lang/Long/valueOf(long)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/content/ContentValues/ContentValues()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/PlayoffDAO/createSerie(ar.com.tzulberti.archerytraining.model.playoff.Playoff)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Iterator/next()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/ListIterator/set(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/sort()#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/ListIterator/next()
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Arrays/sort(java.lang.Object[],int,int)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/Collections/sort(java.util.List)
com/itextpdf/xmp/impl/XMPNode/sort()#java/util/List/listIterator()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/getOptionsString()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/String/length()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(int)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/toString()
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/Arrays/sort(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/StringBuffer/append(char)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#com/itextpdf/xmp/options/PropertyOptions/containsOneOf(int)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/List/toArray(java.lang.Object[])
com/itextpdf/xmp/impl/XMPNode/dumpNode(java.lang.StringBuffer,boolean,int,int)#java/util/Arrays/sort(java.lang.Object[],int,int)
com/google/android/gms/common/server/response/zak/toString()#java/util/Iterator/hasNext()
com/google/android/gms/common/server/response/zak/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/zak/toString()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/server/response/zak/toString()#java/lang/StringBuilder/StringBuilder()
com/google/android/gms/common/server/response/zak/toString()#java/util/Set/iterator()
com/google/android/gms/common/server/response/zak/toString()#java/lang/StringBuilder/append(java.lang.Object)
com/google/android/gms/common/server/response/zak/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/zak/toString()#java/util/Iterator/next()
com/google/android/gms/common/server/response/zak/toString()#java/util/Map/keySet()
com/google/android/gms/common/server/response/zak/toString()#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/server/response/zak/toString()#java/util/HashMap/keySet()
com/google/android/gms/common/server/response/zak/zacs()#java/util/Iterator/hasNext()
com/google/android/gms/common/server/response/zak/zacs()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/server/response/zak/zacs()#java/util/Set/iterator()
com/google/android/gms/common/server/response/zak/zacs()#java/util/Iterator/next()
com/google/android/gms/common/server/response/zak/zacs()#java/util/HashMap/HashMap()
com/google/android/gms/common/server/response/zak/zacs()#java/util/Map/keySet()
com/google/android/gms/common/server/response/zak/zacs()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/server/response/zak/zacs()#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/server/response/zak/zacs()#java/util/HashMap/keySet()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/Integer/intValue()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#com/itextpdf/text/Paragraph/getFont()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#com/itextpdf/text/Paragraph/add(int,com.itextpdf.text.Element)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/length()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/toString()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/util/ArrayList/size()
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/insert(int,int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/Math/min(int,int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/deleteCharAt(int)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/lang/StringBuffer/insert(int,java.lang.String)
com/itextpdf/text/Section/constructTitle(com.itextpdf.text.Paragraph,java.util.ArrayList,int,int)#java/util/ArrayList/get(int)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Double/isInfinite()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Character/isDigit(char)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Double/floatValue()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/indexOf(int)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/charAt(int)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/math/BigDecimal/valueOf(double)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Float/toString()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Double/doubleValue()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Double/toString()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Float/floatValue()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/math/NumberUtils/createNumber(java.lang.String)#java/lang/Float/isInfinite()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/net/Uri/encode(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/app/SearchableInfo/getSuggestIntentAction()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/database/Cursor/getPosition()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#android/app/SearchableInfo/getSuggestIntentData()
android/support/v7/widget/SearchView/createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setData(android.net.Uri)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/app/SearchableInfo/getSearchActivity()
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/Intent(java.lang.String)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/addFlags(int)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/putExtra(java.lang.String,java.lang.CharSequence)
android/support/v7/widget/SearchView/createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/view/View/getWidth()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/setDropDownHorizontalOffset(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView/getContext()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/view/View/getPaddingLeft()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/content/Context/getResources()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/setDropDownWidth(int)
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/graphics/Rect/Rect()
android/support/v7/widget/SearchView/adjustDropDownSizeAndPosition()#android/support/v7/widget/SearchView$SearchAutoComplete/getDropDownBackground()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/res/Resources/getString(int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/Intent(android.content.Intent)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/support/v7/widget/SearchView/getResources()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/putExtra(java.lang.String,android.os.Bundle)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoicePromptTextId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/Intent(java.lang.String)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/support/v7/widget/SearchView/getContext()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceMaxResults()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceLanguageId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getVoiceLanguageModeId()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/os/Bundle/Bundle()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/content/ComponentName/flattenToShortString()
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/PendingIntent/getActivity(android.content.Context,int,android.content.Intent,int)
android/support/v7/widget/SearchView/createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)#android/app/SearchableInfo/getSearchActivity()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getWidth()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setContentWidth(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getPaddingLeft()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setHorizontalOffset(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getWidth()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getContext()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getBackground()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/content/Context/getResources()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/computeContentWidth()#android/support/v7/widget/AppCompatSpinner/getPaddingRight()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setInputMethodMode(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner/getSelectedItemPosition()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setSelection(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/getListView()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/widget/ListView/setChoiceMode(int)
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner/getViewTreeObserver()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/support/v7/widget/AppCompatSpinner$DropdownPopup/isShowing()
android/support/v7/widget/AppCompatSpinner$DropdownPopup/show()#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/getActualMinimum(int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/ArithmeticException/ArithmeticException(java.lang.String)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/set(int,int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/getActualMaximum(int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/get(int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Date/getTime()
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/setTime(java.util.Date)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/add(int,int)
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Calendar/getTime()
org/apache/commons/lang3/time/DateUtils/modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)#java/util/Date/setTime(long)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/text/ParsePosition/ParsePosition(int)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/text/ParseException/ParseException(java.lang.String,int)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/Calendar/clear()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/TimeZone/getDefault()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/text/ParsePosition/setIndex(int)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/Calendar/getInstance(java.util.TimeZone,java.util.Locale)
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/Calendar/getTime()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/lang/String/length()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/Locale/getDefault()
org/apache/commons/lang3/time/DateUtils/parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)#java/util/Calendar/setLenient(boolean)
com/google/android/gms/common/images/ImageManager$zad/run()#java/lang/System/gc()
com/google/android/gms/common/images/ImageManager$zad/run()#java/lang/Long/valueOf(long)
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/concurrent/CountDownLatch/countDown()
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/ArrayList/size()
com/google/android/gms/common/images/ImageManager$zad/run()#com/google/android/gms/common/images/ImageManager$zaa/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/images/ImageManager$zad/run()#android/os/Handler/post(java.lang.Runnable)
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/Map/remove(java.lang.Object)
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/images/ImageManager$zad/run()#android/os/SystemClock/elapsedRealtime()
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/HashSet/remove(java.lang.Object)
com/google/android/gms/common/images/ImageManager$zad/run()#com/google/android/gms/common/images/ImageManager$zaa/evictAll()
com/google/android/gms/common/images/ImageManager$zad/run()#java/util/ArrayList/get(int)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/hashCode()
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/io/IOException/getMessage()
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/split(java.lang.String)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzba/zza(com.google.firebase.iid.FirebaseInstanceId,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/Integer/valueOf(int)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/String/split(java.lang.String)
com/google/firebase/iid/zzba/zza(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzba/zza(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/setStackTrace(java.lang.StackTraceElement[])
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getMessage()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getCause()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/initCause(java.lang.Throwable)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getStackTrace()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatDelegateImplBase$1/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/setTo(android.content.res.Resources$Theme)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/applyStyle(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources/newTheme()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9$PanelFeatureState/setStyle(android.content.Context)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/PathMeasure()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/addPath(android.graphics.Path,android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/Paint()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/setPath(android.graphics.Path,boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Canvas/clipPath(android.graphics.Path)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Matrix/postScale(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeCap(android.graphics.Paint$Cap)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setAntiAlias(boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#java/lang/Math/min(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/rLineTo(float,float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setColor(int)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Path/reset()
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeJoin(android.graphics.Paint$Join)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Matrix/set(android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeWidth(float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/getSegment(float,float,android.graphics.Path,boolean)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStrokeMiter(float)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/graphics/drawable/VectorDrawableCompat$VPathRenderer/drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)#android/graphics/PathMeasure/getLength()
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/util/Map/put(java.lang.Object,java.lang.Object)
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/String/split(java.lang.String)
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/net/URI/getQuery()
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/String/isEmpty()
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/StringBuilder/StringBuilder()
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/net/URLDecoder/decode(java.lang.String,java.lang.String)
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
io/sentry/dsn/Dsn/extractOptions(java.net.URI)#java/lang/StringBuilder/toString()
io/sentry/dsn/Dsn/validate()#java/lang/String/equalsIgnoreCase(java.lang.String)
io/sentry/dsn/Dsn/validate()#java/lang/StringBuilder/append(java.lang.String)
io/sentry/dsn/Dsn/validate()#java/util/List/isEmpty()
io/sentry/dsn/Dsn/validate()#java/util/LinkedList/LinkedList()
io/sentry/dsn/Dsn/validate()#java/lang/String/isEmpty()
io/sentry/dsn/Dsn/validate()#java/lang/StringBuilder/StringBuilder()
io/sentry/dsn/Dsn/validate()#java/util/List/add(java.lang.Object)
io/sentry/dsn/Dsn/validate()#java/lang/StringBuilder/append(java.lang.Object)
io/sentry/dsn/Dsn/validate()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/Character/toLowerCase(char)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/substring(int)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/TaggedPdfReaderTool/xmlName(com.itextpdf.text.pdf.PdfName)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/inverseSearchAdd(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/String/trim()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/printStack()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/NamedNodeMap/getNamedItem(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomTemplate/processTemplate(org.w3c.dom.Node,java.util.HashMap)#org/w3c/dom/Node/getNodeType()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/Window/getDecorView()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/isCanceled()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/content/DialogInterface/dismiss()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/startTracking(android.view.KeyEvent,java.lang.Object)
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/support/v7/app/AlertDialog/getWindow()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/View/getKeyDispatcherState()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getAction()
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent$DispatcherState/isTracking(android.view.KeyEvent)
android/support/v7/view/menu/MenuDialogHelper/onKey(android.content.DialogInterface,int,android.view.KeyEvent)#android/view/KeyEvent/getRepeatCount()
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/Map/clear()
com/google/android/gms/stats/WakeLock/acquire(long)#java/lang/Integer/valueOf(int)
com/google/android/gms/stats/WakeLock/acquire(long)#java/lang/Integer/intValue()
com/google/android/gms/stats/WakeLock/acquire(long)#android/os/PowerManager$WakeLock/acquire()
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/stats/WakeLock/acquire(long)#android/os/PowerManager$WakeLock/isHeld()
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/Map/isEmpty()
com/google/android/gms/stats/WakeLock/acquire(long)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#[Ljava/lang/Object;/clone()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Class/getComponentType()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Class/isPrimitive()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Class/getName()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Object/getClass()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/Array/get(java.lang.Object,int)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Class/isArray()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/Array/getLength(java.lang.Object)
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ObjectUtils/clone(java.lang.Object)#java/lang/reflect/InvocationTargetException/getCause()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/Iterator/hasNext()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/Map$Entry/getKey()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/HashMap/entrySet()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/Map$Entry/getValue()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/HashMap/get(java.lang.Object)
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/Iterator/next()
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/HashMap/HashMap(int)
org/apache/commons/lang3/ObjectUtils/mode(java.lang.Object[])#java/util/Set/iterator()
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/support/v7/widget/ScrollingTabContainerView/setAlpha(float)
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/alpha(float)
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/support/v7/widget/ScrollingTabContainerView/animate()
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/cancel()
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/view/ViewPropertyAnimator/start()
android/support/v7/widget/ScrollingTabContainerView/animateToVisibility(int)#android/support/v7/widget/ScrollingTabContainerView/getVisibility()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildCount()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/ScrollingTabContainerView/getMeasuredWidth()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/widget/HorizontalScrollView/onMeasure(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/getMeasuredWidth()
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/LinearLayoutCompat/measure(int,int)
android/support/v7/widget/ScrollingTabContainerView/onMeasure(int,int)#android/support/v7/widget/ScrollingTabContainerView/setFillViewport(boolean)
com/google/firebase/components/zzd/zza(java.lang.Object)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/ArrayList/ArrayList()
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/Iterator/hasNext()
com/google/firebase/components/zzd/zza(java.lang.Object)#android/os/Bundle/get(java.lang.String)
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/Collections/emptyList()
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/Iterator/next()
com/google/firebase/components/zzd/zza(java.lang.Object)#java/lang/String/equals(java.lang.Object)
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/Set/iterator()
com/google/firebase/components/zzd/zza(java.lang.Object)#java/lang/String/substring(int)
com/google/firebase/components/zzd/zza(java.lang.Object)#java/util/List/add(java.lang.Object)
com/google/firebase/components/zzd/zza(java.lang.Object)#java/lang/String/startsWith(java.lang.String)
com/google/firebase/components/zzd/zza(java.lang.Object)#android/os/Bundle/keySet()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/util/StringTokenizer/nextToken()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/util/StringTokenizer/hasMoreTokens()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/lang/System/lineSeparator()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/lang/String/trim()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/lang/String/isEmpty()
org/apache/commons/lang3/exception/ExceptionUtils/getStackFrameList(java.lang.Throwable)#java/lang/String/substring(int,int)
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/lang/Throwable/toString()
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/util/List/size()
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/util/List/addAll(java.util.Collection)
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/util/List/toArray(java.lang.Object[])
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/exception/ExceptionUtils/getRootCauseStackTrace(java.lang.Throwable)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/XAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisLeft()
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/YAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/getLegend()
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/Legend/setEnabled(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/getXAxis()
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/setTouchEnabled(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/setData(com.github.mikephil.charting.data.ChartData)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/YAxis/setAxisMinimum(float)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/XAxis/setLabelCount(int)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#java/util/List/size()
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/setEnabled(boolean)
ar/com/tzulberti/archerytraining/helper/charts/HorizontalBarChartHelper/configureHorizonalBarChart(com.github.mikephil.charting.charts.HorizontalBarChart,java.util.List,com.github.mikephil.charting.data.BarData)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisRight()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/ProcessingInstruction/getData()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/ProcessingInstruction/getTarget()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/XMPMetaParser/findRootNode(org.w3c.dom.Node,boolean,java.lang.Object[])#org/w3c/dom/Node/getNodeType()
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/Context/getPackageManager()
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/Context/getString(int)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/addSubMenu(int,int,int,java.lang.CharSequence)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/MenuItem/setIcon(android.graphics.drawable.Drawable)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/add(int,int,int,java.lang.CharSequence)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#android/view/SubMenu/clear()
android/support/v7/widget/ShareActionProvider/onPrepareSubMenu(android.view.SubMenu)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getLimitLines()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getXOffset()
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#android/graphics/Paint/setColor(int)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/isOutOfRange(int,int,int)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/isHighlighted(int,int,int)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#java/lang/Integer/valueOf(int)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#android/graphics/Typeface/create(android.graphics.Typeface,int)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/leavjenn/smoothdaterangepicker/date/SimpleMonthView/drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethods()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getName()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getComponentType()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getFields()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/get(java.lang.Object,int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/isArray()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/charAt(int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Array/getLength(java.lang.Object)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/length()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.Object)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getType()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Method/getName()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/reflect/Field/getModifiers()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzyj/zza(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer)#java/lang/StringBuffer/setLength(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/SharedPreferences$Editor/apply()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/getResources()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/SharedPreferences$Editor/putInt(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/validateNumber(java.lang.String,int,int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/os/Bundle/putInt(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Map$Entry/getValue()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/res/Resources/getString(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/os/Bundle/Bundle()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/widget/Spinner/getSelectedItemPosition()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/hideKeyboard()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/SharedPreferences$Editor/clear()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/os/Bundle/getInt(java.lang.String)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/widget/EditText/getText()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/Intent/putExtra(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Set/iterator()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/getPreferences(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/lang/Integer/parseInt(java.lang.String)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/content/SharedPreferences/edit()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#java/util/Map/entrySet()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/addPlayoff(android.view.View)#android/widget/Spinner/getSelectedItem()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/EditText/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Set/iterator()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/getPreferences(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.util.List)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Map$Entry/getValue()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/Spinner/setAdapter(android.widget.SpinnerAdapter)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/setContentView(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/ArrayAdapter(android.content.Context,int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/content/res/Resources/getString(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/ArrayAdapter/setDropDownViewResource(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/contains(java.lang.String)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/getResources()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/widget/Spinner/setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#java/util/Map/entrySet()
ar/com/tzulberti/archerytraining/activities/playoff/AddPlayoffActivity/onCreate(android.os.Bundle)#android/content/SharedPreferences/getInt(java.lang.String,int)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BarcodeEAN/convertUPCAtoUPCE(java.lang.String)#java/lang/String/charAt(int)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Condition/signalAll()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/size()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Collections/emptyMap()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaaa/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/OutputStream/close()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/InputStream/read(byte[],int,int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URL/openConnection()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setDoInput(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setUseCaches(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getOutputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getContentEncoding()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setDoOutput(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/getInputStream()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/io/ByteArrayOutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/String(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/net/URLConnection/setRequestProperty(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTSAResponse(byte[])#java/lang/String/getBytes()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampTokenInfo/getGenTime()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/TimeStampRequestGenerator()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/math/BigInteger/valueOf(long)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampToken/getTimeStampInfo()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/setCertReq(boolean)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/asn1/cmp/PKIFailureInfo/intValue()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampToken/getEncoded()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getFailInfo()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequest/getEncoded()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/validate(org.spongycastle.tsp.TimeStampRequest)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/TimeStampResponse(byte[])
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/System/currentTimeMillis()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampRequestGenerator/generate(org.spongycastle.asn1.ASN1ObjectIdentifier,byte[],java.math.BigInteger)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getTimeStampToken()
com/itextpdf/text/pdf/security/TSAClientBouncyCastle/getTimeStampToken(byte[])#org/spongycastle/tsp/TimeStampResponse/getStatusString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#android/os/Looper/getMainLooper()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#android/os/Looper/myLooper()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#android/support/v4/app/LoaderManagerImpl$LoaderInfo/postValue(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/onLoadComplete(android.support.v4.content.Loader,java.lang.Object)#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/LoaderManagerImpl$LoaderInfo/getValue()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/LoaderManagerImpl$LoaderInfo/hasActiveObservers()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/LoaderManagerImpl$LoaderInfo/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/FileReader/FileReader(java.io.File)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromFile(java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadBarEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/close()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/lang/String/split(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#android/content/res/AssetManager/open(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/github/mikephil/charting/utils/FileUtils/loadEntriesFromAssets(android.content.res.AssetManager,java.lang.String)#java/io/BufferedReader/readLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File,boolean)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/createNewFile()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/append(java.lang.CharSequence)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/newLine()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/File/exists()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/next()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/BufferedWriter/close()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/List/iterator()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/util/Iterator/hasNext()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/io/IOException/toString()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/utils/FileUtils/saveToSdCard(java.util.List,java.lang.String)#com/github/mikephil/charting/data/Entry/getY()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/util/Iterator/hasNext()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/util/Iterator/next()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/lang/Class/getName()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/lang/StringBuilder/StringBuilder()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/lang/StringBuilder/toString()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#io/sentry/connection/ConnectionException/getMessage()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/util/Set/iterator()
io/sentry/connection/AbstractConnection/send(io.sentry.event.Event)#java/lang/Object/getClass()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/setTag(int,java.lang.Object)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/setAccessible(boolean)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/setBoolean(java.lang.Object,boolean)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/animation/LayoutTransition/setAnimator(int,android.animation.Animator)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/getTag(int)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/animation/LayoutTransition/isRunning()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/getLayoutTransition()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/setLayoutTransition(android.animation.LayoutTransition)
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#android/view/ViewGroup/requestLayout()
android/support/transition/ViewGroupUtilsApi14/suppressLayout(android.view.ViewGroup,boolean)#java/lang/reflect/Field/getBoolean(java.lang.Object)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/String/length()
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/text/ParsePosition/ParsePosition(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/util/ArrayList/get(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/String/charAt(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/insertFormats(java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/ArrayList/iterator()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#org/apache/commons/lang3/text/ExtendedMessageFormat/getFormats()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/Iterator/hasNext()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/text/MessageFormat/toPattern()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/text/ParsePosition/ParsePosition(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/Iterator/next()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/util/ArrayList/size()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/text/MessageFormat/applyPattern(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/text/MessageFormat/setFormats(java.text.Format[])
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/applyPattern(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/String/length()
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/append(char[],int,int)
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/String/toCharArray()
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/text/ExtendedMessageFormat/appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/String/length()
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/String/substring(int,int)
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/parseFormatDescription(java.lang.String,java.text.ParsePosition)#java/lang/String/charAt(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/Character/isWhitespace(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/String/length()
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/Character/isDigit(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/String/substring(int,int)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/Integer/parseInt(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/String/charAt(int)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/text/ExtendedMessageFormat/readArgumentIndex(java.lang.String,java.text.ParsePosition)#java/lang/StringBuilder/length()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/splitParts(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getOwnerDocument()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/get(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/setNodeValue(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/lastIndexOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/size()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Document/createAttributeNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/inverseSearchAdd(java.util.HashMap,com.itextpdf.text.pdf.XfaForm$Stack2,java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/NamedNodeMap/setNamedItemNS(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/insertNode(org.w3c.dom.Node,java.lang.String)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/inverseSearchAdd(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/printStack()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/escapeSom(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2SomDatasets/processDatasetsInternal(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeType()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Set/iterator()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Map$Entry/getValue()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Collection/iterator()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Map/entrySet()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Iterator/hasNext()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/getActiveExecutor()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Map$Entry/getKey()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/HashMap/HashMap(java.util.Map)
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Map/values()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/Iterator/next()
org/apache/commons/lang3/concurrent/MultiBackgroundInitializer/initialize()#java/util/HashMap/HashMap()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingLeft()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#java/lang/Math/max(int,int)
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getMeasuredHeight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getWidth()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getHeight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getMeasuredWidth()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#java/lang/Math/min(int,int)
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/getBaseline()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/support/v4/view/PagerTitleStrip/getPaddingRight()
android/support/v4/view/PagerTitleStrip/updateTextPositions(int,float,boolean)#android/widget/TextView/layout(int,int,int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingLeft()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#java/lang/Math/max(int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/widget/TextView/measure(int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getWidth()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getHeight()
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/view/PagerTitleStrip/updateText(int,android.support.v4.view.PagerAdapter)#android/support/v4/view/PagerTitleStrip/getPaddingRight()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/widget/TextView/getMeasuredState()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/getPaddingBottom()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/getChildMeasureSpec(int,int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/widget/TextView/measure(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/getPaddingTop()
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/support/v4/view/PagerTitleStrip/setMeasuredDimension(int,int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/view/PagerTitleStrip/onMeasure(int,int)#android/widget/TextView/getMeasuredHeight()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererHorizontalBarChart/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/util/ArrayList/ArrayList(int)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/util/ArrayList/toArray(java.lang.Object[])
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/util/ArrayList/size()
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/time/DurationFormatUtils/lexx(java.lang.String)#java/lang/String/charAt(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/findViewById(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/append(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/ImageView/setImageResource(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow$LayoutParams/TableRow$LayoutParams(int,int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/getBackground()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setText(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setIcon(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/view/View/getId()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setMessage(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#java/util/List/get(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setTitle(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/show()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setBackgroundResource(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setId(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setTextColor(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setPadding(int,int,int,int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setTextSize(int,float)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/getBackground()
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setPadding(int,int,int,int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewTournamentSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setGravity(int)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/StringBuilder/toString()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#android/content/Context/getClassLoader()
android/support/v7/view/SupportMenuInflater$MenuState/newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setShowAsAction(int)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setChecked(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setTitleCondensed(java.lang.CharSequence)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setEnabled(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/content/Context/isRestricted()
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setVisible(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setActionView(int)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setCheckable(boolean)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setActionView(android.view.View)
android/support/v7/view/SupportMenuInflater$MenuState/setItem(android.view.MenuItem)#android/view/MenuItem/setIcon(int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredWidth()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/layout(int,int,int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/measure(int,int)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/LayoutInflater/from(android.content.Context)
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#com/github/mikephil/charting/components/MarkerView/getContext()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/view/View/getMeasuredHeight()
com/github/mikephil/charting/components/MarkerView/setupLayoutResource(int)#android/widget/RelativeLayout$LayoutParams/RelativeLayout$LayoutParams(int,int)
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/LinkedHashMap/values()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfWriter/addSharedObjectsToBody()#com/itextpdf/text/pdf/PdfPatternPainter/getIndirectReference()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfWriter/addNamedDestinations(java.util.Map,int)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/close()#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/LinkedHashSet/isEmpty()
com/itextpdf/text/pdf/PdfWriter/close()#com/itextpdf/text/pdf/PdfWriter/getISOBytes(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/close()#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfWriter/close()#java/lang/String/valueOf(long)
com/itextpdf/text/pdf/PdfWriter/close()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfWriter/close()#java/util/LinkedHashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#com/itextpdf/text/pdf/PdfImage/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#com/itextpdf/text/pdf/PdfImage/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter/addDirectImageSimple(com.itextpdf.text.Image,com.itextpdf.text.pdf.PdfIndirectReference)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/remove()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/LinkedHashSet/iterator()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfLayer/getAsString(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/remove(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfWriter/fillOCProperties(boolean)#com/itextpdf/text/pdf/PdfOCProperties/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfWriter/addLocalDestinations(java.util.TreeMap)#java/util/TreeMap/entrySet()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/toUpperCase()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/trim()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/Exception/getMessage()
com/itextpdf/text/PageSize/getRectangle(java.lang.String)#java/lang/String/substring(int,int)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getColumnIndex(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/ArrayList()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/build()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/close()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/Context/getContentResolver()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/moveToNext()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getInt(int)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/content/ContentUris/withAppendedId(android.net.Uri,long)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getLong(int)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/appendPath(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/provider/FontsContractCompat/getFontFromProvider(android.content.Context,android.support.v4.provider.FontRequest,java.lang.String,android.os.CancellationSignal)#android/database/Cursor/getCount()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/ArrayList/ArrayList(java.util.Collection)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/List/size()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager$NameNotFoundException/PackageManager$NameNotFoundException(java.lang.String)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/List/get(int)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/StringBuilder/toString()
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/util/Collections/sort(java.util.List,java.util.Comparator)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#java/lang/String/equals(java.lang.Object)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
android/support/v4/provider/FontsContractCompat/getProvider(android.content.pm.PackageManager,android.support.v4.provider.FontRequest,android.content.res.Resources)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/IOException/printStackTrace()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/util/SortedSet/iterator()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/size()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader/getGlobal(boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/util/HashMap/remove(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/handleMessage(android.os.Message)#java/lang/Exception/Exception()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/zzb(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/os/Handler/removeMessages(int,java.lang.Object)
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/zze/zza(com.google.android.gms.common.internal.GmsClientSupervisor$zza,android.content.ServiceConnection,java.lang.String)#android/content/ServiceConnection/onServiceConnected(android.content.ComponentName,android.os.IBinder)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/Collections/unmodifiableList(java.util.List)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readCoverageFormat(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/LinkedHashMap/LinkedHashMap(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/Short/valueOf(short)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/Short/shortValue()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readFeatureListTable(int)#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#com/itextpdf/text/pdf/fonts/otf/Language/values()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#com/itextpdf/text/pdf/fonts/otf/Language/isSupported(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/getSupportedLanguage()#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Collections/unmodifiableList(java.util.List)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/OpenTypeFontTableReader/readScriptListTable(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/pop()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/elementAt(int)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/size()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/XfdfReader/endElement(java.lang.String)#java/lang/String/startsWith(java.lang.String)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preTranslate(float,float)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preConcat(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/transition/ViewUtilsApi14/transformMatrixToGlobal(android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#java/lang/Math/atan2(double,double)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#java/lang/Math/toDegrees(double)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setTranslationY(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setTranslationX(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/getWidth()
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setRotation(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setPivotY(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setPivotX(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/getHeight()
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setScaleY(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/getValues(float[])
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#android/view/View/setScaleX(float)
android/support/transition/ViewUtilsApi14/setAnimationMatrix(android.view.View,android.graphics.Matrix)#java/lang/Math/sqrt(double)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/invert(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/postConcat(android.graphics.Matrix)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/postTranslate(float,float)
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/Matrix()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/transition/ViewUtilsApi14/transformMatrixToLocal(android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/animation/Animator/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getId()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/addListener(android.support.transition.Transition$TransitionListener)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getParent()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/offsetTopAndBottom(int)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getVisibility()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/ViewGroup/findViewById(int)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#java/util/Map/get(java.lang.Object)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/getTransitionValues(android.view.View,boolean)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/support/transition/Visibility/getMatchedTransitionValues(android.view.View,boolean)
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getTop()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/getLeft()
android/support/transition/Visibility/onDisappear(android.view.ViewGroup,android.support.transition.TransitionValues,int,android.support.transition.TransitionValues,int)#android/view/View/offsetLeftAndRight(int)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/remove(int)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/get(int)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/add(int,java.lang.Object)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/isEmpty()
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/List/addAll(int,java.util.Collection)
com/itextpdf/text/pdf/FloatLayout/layout(com.itextpdf.text.pdf.PdfContentByte,boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#com/itextpdf/text/Paragraph/get(int)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#com/itextpdf/text/Paragraph/iterator()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/remove(int)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/isEmpty()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#com/itextpdf/text/WritableDirectElement/write(com.itextpdf.text.pdf.PdfWriter,com.itextpdf.text.Document)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/size()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/addAll(int,java.util.Collection)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#com/itextpdf/text/pdf/PdfDocument/top()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/clear()
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/get(int)
com/itextpdf/text/pdf/FloatLayout/floatingLayout(java.util.List,boolean)#java/util/List/add(int,java.lang.Object)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/obtain()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getViewPortHandler()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/enableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/postInvalidate()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/disableScroll()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/BarLineChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/listener/ChartTouchListener/onDoubleTap(android.view.MotionEvent)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/data/BarLineScatterCandleBubbleData/getEntryCount()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/getOnChartGestureListener()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#com/github/mikephil/charting/charts/BarLineChartBase/isLogEnabled()
com/github/mikephil/charting/listener/BarLineChartTouchListener/onDoubleTap(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getPackageManager()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/Context/getString(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/getId()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/findViewById(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/support/v7/widget/ActivityChooserView/getContext()
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setActivated(boolean)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/view/View/setId(int)
android/support/v7/widget/ActivityChooserView$ActivityChooserViewAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/IllegalArgumentException/IllegalArgumentException()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/drawable/InsetDrawable/draw(android.graphics.Canvas)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/app/Activity/getWindow()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/view/Window/getDecorView()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/draw(android.graphics.Canvas)#android/support/v4/app/ActionBarDrawerToggle$SlideDrawable/copyBounds(android.graphics.Rect)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout/setId(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout/FrameLayout(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/support/v4/app/FragmentTabHost/findViewById(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/setOrientation(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout/setOrientation(int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/support/v4/app/FragmentTabHost/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/TabWidget(android.content.Context)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int,float)
android/support/v4/app/FragmentTabHost/ensureHierarchy(android.content.Context)#android/widget/TabWidget/setId(int)
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/size()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zax/maybeSignOut()#java/util/Map/values()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/SparseArray/size()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/SparseArray/clear()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/StringBuilder/append(int)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/util/Queue/clear()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/util/Iterator/next()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/util/Iterator/hasNext()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/util/Queue/iterator()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzad/zza(int,java.lang.String)#java/lang/IllegalStateException/IllegalStateException()
com/google/firebase/iid/zzad/zza(int,java.lang.String)#android/util/SparseArray/valueAt(int)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/os/Message/getData()
com/google/firebase/iid/zzad/zza(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzad/zza(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzad/zza(android.os.Message)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzad/zza(android.os.Message)#android/util/SparseArray/get(int)
com/google/firebase/iid/zzad/zza(android.os.Message)#java/lang/StringBuilder/append(int)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/os/Bundle/getBoolean(java.lang.String,boolean)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/util/SparseArray/remove(int)
com/google/firebase/iid/zzad/zza(android.os.Message)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/lang/StringBuilder/append(int)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/util/Queue/add(java.lang.Object)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#android/content/Intent/Intent(java.lang.String)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzad/zzb(com.google.firebase.iid.zzak)#android/content/Intent/setPackage(java.lang.String)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/nio/channels/FileChannel/map(java.nio.channels.FileChannel$MapMode,long,long)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/close()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/nio/channels/FileChannel/size()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/os/ParcelFileDescriptor/close()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/getChannel()
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#java/io/FileInputStream/FileInputStream(java.io.FileDescriptor)
android/support/v4/graphics/TypefaceCompatUtil/mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/io/File/createNewFile()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/content/Context/getCacheDir()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/append(int)
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/os/Process/myPid()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#android/os/Process/myTid()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/TypefaceCompatUtil/getTempFile(android.content.Context)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/Notification$Action/getExtras()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/os/Bundle/getBoolean(java.lang.String)
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/RemoteInput/getAllowFreeFormInput()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/RemoteInput/getChoices()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/RemoteInput/getLabel()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/Notification$Action/getRemoteInputs()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/Notification$Action/getAllowGeneratedReplies()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/RemoteInput/getExtras()
android/support/v4/app/NotificationCompat/getActionCompatFromAction(android.app.Notification$Action)#android/app/RemoteInput/getResultKey()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/TrueTypeFontUnicode/getCIDFontType2(com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String,java.lang.Object[])#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getSupportedLanguage()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Exception/printStackTrace()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Character/valueOf(char)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/List/contains(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/size()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFontUnicode/readGsubTable()#java/util/HashMap/keySet()
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/toLowerCase(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/toUpperCase(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/isWhitespace(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/String/String(char[])
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/isTitleCase(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/isLowerCase(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/isUpperCase(char)
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/lang3/text/WordUtils/swapCase(java.lang.String)#java/lang/Character/toTitleCase(char)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/util/regex/Matcher/end()
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/String/substring(int)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/util/regex/Matcher/find()
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/util/regex/Matcher/start()
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/Math/min(int,int)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/append(java.lang.CharSequence,int,int)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/WordUtils/wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String)#java/lang/System/lineSeparator()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/View/isShown()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/ref/WeakReference/get()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/design/widget/BottomSheetBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/util/Map/get(java.lang.Object)
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/Class/getName()
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/reflect/Method/getName()
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
android/arch/lifecycle/ClassesInfoCache/verifyAndPutHandler(java.util.Map,android.arch.lifecycle.ClassesInfoCache$MethodReference,android.arch.lifecycle.Lifecycle$Event,java.lang.Class)#java/lang/StringBuilder/toString()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/Class/isAssignableFrom(java.lang.Class)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/Class/getInterfaces()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Map/put(java.lang.Object,java.lang.Object)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/Class/getSuperclass()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Iterator/hasNext()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Map$Entry/getKey()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/reflect/Method/getParameterTypes()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Map$Entry/getValue()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Map/entrySet()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/reflect/Method/getAnnotation(java.lang.Class)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Map/putAll(java.util.Map)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Iterator/next()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/HashMap/HashMap()
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/lang/Boolean/valueOf(boolean)
android/arch/lifecycle/ClassesInfoCache/createInfo(java.lang.Class,java.lang.reflect.Method[])#java/util/Set/iterator()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/length()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/exists()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/substring(int,int)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/getAbsolutePath()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/substring(int)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/getPath()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/isDirectory()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/list()
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/File(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerDirectory(java.lang.String,boolean)#java/io/File/File(java.lang.String,java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(int)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/FontFactoryImp/register(java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/trim()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/Hashtable/get(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/FontFactoryImp/registerFamily(java.lang.String,java.lang.String,java.lang.String)#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TableRow/setPadding(int,int,int,int)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TextView/setTextSize(int,float)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/TournamentStatsActivity/renderRawData(android.widget.TableLayout,ar.com.tzulberti.archerytraining.model.base.ISerieContainer)#android/widget/TextView/TextView(android.content.Context)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/addPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCubicBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawLines(float[],int,int,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/lang/Math/max(int,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColors()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawLinear(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/containsKey(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryCount()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
com/github/mikephil/charting/renderer/LineChartRenderer/drawCircles(android.graphics.Canvas)#java/util/HashMap/get(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/LineChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getIcon()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/addPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/dataprovider/LineDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getColor()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineChartRenderer/drawHorizontalBezier(com.github.mikephil.charting.interfaces.datasets.ILineDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/LineData/getDataSets()
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/LineChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ILineDataSet/isVisible()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getRight()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/support/v4/view/ViewCompat$ViewCompatApi19Impl/offsetLeftAndRight(android.view.View,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/invalidate(android.graphics.Rect)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/intersect(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getParent()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getBottom()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getTop()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/graphics/Rect/intersects(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetLeftAndRight(android.view.View,int)#android/view/View/getLeft()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/invalidate(android.graphics.Rect)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersect(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getParent()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getBottom()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/support/v4/view/ViewCompat$ViewCompatApi19Impl/offsetTopAndBottom(android.view.View,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getRight()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getTop()
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/graphics/Rect/intersects(int,int,int,int)
android/support/v4/view/ViewCompat$ViewCompatApi21Impl/offsetTopAndBottom(android.view.View,int)#android/view/View/getLeft()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/IssuerAndSerialNumber/IssuerAndSerialNumber(org.spongycastle.asn1.x500.X500Name,java.math.BigInteger)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getSerialNumber()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/AlgorithmIdentifier/getAlgorithm()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getTBSCertificate()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/SubjectPublicKeyInfo/getAlgorithm()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/RecipientIdentifier/RecipientIdentifier(org.spongycastle.asn1.cms.IssuerAndSerialNumber)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/init(int,java.security.cert.Certificate)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getSubjectPublicKeyInfo()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/init(int,java.security.Key)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getIssuer()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#javax/crypto/Cipher/doFinal(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/cms/KeyTransRecipientInfo/KeyTransRecipientInfo(org.spongycastle.asn1.cms.RecipientIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/x509/TBSCertificateStructure/getInstance(java.lang.Object)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/computeRecipientInfo(java.security.cert.X509Certificate,byte[])#org/spongycastle/asn1/ASN1Integer/getValue()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/generateKey()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/init(int,java.security.Key,java.security.AlgorithmParameters)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/init(int)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/doFinal(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/Cipher/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/RecipientInfo/RecipientInfo(org.spongycastle.asn1.cms.KeyTransRecipientInfo)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/ContentInfo/ContentInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/KeyGenerator/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/EncryptedContentInfo/EncryptedContentInfo(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.asn1.ASN1OctetString)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/EnvelopedData/EnvelopedData(org.spongycastle.asn1.cms.OriginatorInfo,org.spongycastle.asn1.ASN1Set,org.spongycastle.asn1.cms.EncryptedContentInfo,org.spongycastle.asn1.ASN1Set)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameters/getEncoded(java.lang.String)
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/cms/ContentInfo/toASN1Primitive()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#javax/crypto/SecretKey/getEncoded()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#java/security/AlgorithmParameterGenerator/generateParameters()
com/itextpdf/text/pdf/PdfPublicKeySecurityHandler/createDERForRecipient(byte[],java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/nextToken(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/String/substring(int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/Integer/valueOf(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/StringTokenizer/StringTokenizer(java.lang.String)
com/itextpdf/text/pdf/Type1Font/process(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/get(java.lang.Object)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/postDelayed(java.lang.Runnable,long)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/isEnabled()
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/View/getParent()
android/support/v7/widget/ForwardingListener/onTouchObserved(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumHeight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumWidth()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getVisibility()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildMeasureSpec(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/setMeasuredDimension(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingRight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/LinearLayoutCompat/measureVertical(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingLeft()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getChildAt(int)
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/ViewGroup/getBaseline()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/View/getBaseline()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getBottom()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getTop()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/support/v7/widget/LinearLayoutCompat/getChildCount()
android/support/v7/widget/LinearLayoutCompat/getBaseline()#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumHeight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingTop()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getBaseline()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/setMeasuredDimension(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getSuggestedMinimumWidth()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingBottom()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getVisibility()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getChildMeasureSpec(int,int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingRight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/LinearLayoutCompat/measureHorizontal(int,int)#android/support/v7/widget/LinearLayoutCompat/getPaddingLeft()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/addFrame(android.graphics.drawable.Drawable,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setLevel(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/isOneShot()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getNumberOfFrames()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setLevel(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getDuration(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/AnimationDrawable()
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/getFrame(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileifyIndeterminate(android.graphics.drawable.Drawable)#android/graphics/drawable/AnimationDrawable/setOneShot(boolean)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getNumberOfLayers()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/setId(int,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/getColorFilter()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getId(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/getPaint()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/BitmapDrawable/getBitmap()
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/Paint/setColorFilter(android.graphics.ColorFilter)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ShapeDrawable/ShapeDrawable(android.graphics.drawable.shapes.Shape)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/getDrawable(int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/BitmapShader/BitmapShader(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/ClipDrawable/ClipDrawable(android.graphics.drawable.Drawable,int,int)
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/LayerDrawable/LayerDrawable(android.graphics.drawable.Drawable[])
android/support/v7/widget/AppCompatProgressBarHelper/tileify(android.graphics.drawable.Drawable,boolean)#android/graphics/drawable/BitmapDrawable/getPaint()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/hasNext()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/Iterator/next()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/clear()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/getParcelableArray(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Iterable/iterator()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/String/substring(int)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/Integer/parseInt(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentStatePagerAdapter/restoreState(android.os.Parcelable,java.lang.ClassLoader)#android/os/Bundle/keySet()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/size()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentStatePagerAdapter/saveState()#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentStatePagerAdapter/saveState()#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTextSize(float)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getDisplayMetrics()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setGravity(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTypeface(android.graphics.Typeface)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getString(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setMinHeight(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTextColor(android.content.res.ColorStateList)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setMinWidth(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getColorStateList(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setTransformationMethod(android.text.method.TransformationMethod)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#android/content/res/Resources/getDrawable(int)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/getContext()
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setText(java.lang.CharSequence)
com/google/android/gms/common/internal/SignInButtonImpl/configure(android.content.res.Resources,int,int)#com/google/android/gms/common/internal/SignInButtonImpl/setBackgroundDrawable(android.graphics.drawable.Drawable)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/Cursor/isNull(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getTournamentConstraints(java.util.Map)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/ConstraintsDAO/getRoundConstraints()#android/database/Cursor/getInt(int)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager$LayoutParams/getViewLayoutPosition()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/isEmpty()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/clear()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/view/View/hasFocusable()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/set(int,boolean)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/lang/Math/min(int,int)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/view/View/getLayoutParams()
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/addView(android.view.View,int)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#java/util/BitSet/set(int,int,boolean)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/addView(android.view.View)
android/support/v7/widget/StaggeredGridLayoutManager/fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LayoutState,android.support.v7.widget.RecyclerView$State)#android/support/v7/widget/StaggeredGridLayoutManager/layoutDecoratedWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingBottom()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getChildMeasureSpec(int,int,int,int,boolean)
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getWidth()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getWidthMode()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingTop()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getHeight()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getHeightMode()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingRight()
android/support/v7/widget/StaggeredGridLayoutManager/measureChildWithDecorationsAndMargin(android.view.View,android.support.v7.widget.StaggeredGridLayoutManager$LayoutParams,boolean)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingLeft()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingBottom()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getMinimumWidth()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/height()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingTop()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(int,int)
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingRight()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/graphics/Rect/width()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getPaddingLeft()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/getMinimumHeight()
android/support/v7/widget/StaggeredGridLayoutManager/setMeasuredDimension(android.graphics.Rect,int,int)#android/support/v7/widget/StaggeredGridLayoutManager/chooseSize(int,int,int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/TextInputLayout/getContext()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/view/LayoutInflater/from(android.content.Context)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setPadding(int,int,int,int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/FrameLayout/addView(android.view.View)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/graphics/drawable/ColorDrawable/ColorDrawable()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingLeft()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingTop()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingBottom()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/getMeasuredWidth()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/getPaddingRight()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setVisibility(int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/getVisibility()
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/widget/EditText/setMinimumHeight(int)
android/support/design/widget/TextInputLayout/updatePasswordToggleView()#android/support/design/widget/CheckableImageButton/setOnClickListener(android.view.View$OnClickListener)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setTypeface(android.graphics.Typeface)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/animate()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setId(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/content/res/ColorStateList/getDefaultColor()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/support/design/widget/TextInputLayout/getContext()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setTextColor(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/setVisibility(int)
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/TextInputLayout/setErrorEnabled(boolean)#android/widget/TextView/getTextColors()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getHint()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getText()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getTextSize()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getTypeface()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getGravity()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/text/Editable/length()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/getHintTextColors()
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#android/widget/EditText/setHint(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setEditText(android.widget.EditText)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setAlpha(float)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/animate()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/cancel()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/setVisibility(int)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/start()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/getVisibility()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/widget/TextView/getAlpha()
android/support/design/widget/TextInputLayout/setError(java.lang.CharSequence,boolean)#android/view/ViewPropertyAnimator/alpha(float)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/os/ParcelFileDescriptor/getFd()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/OsConstants/S_ISREG(int)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/append(int)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/Os/readlink(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/io/File/File(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/toString()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/TypefaceCompatApi21Impl/getFile(android.os.ParcelFileDescriptor)#android/system/Os/stat(java.lang.String)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/close()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/File/canRead()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/lang/Throwable/addSuppressed(java.lang.Throwable)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/support/v4/graphics/TypefaceCompatApi21Impl/findBestInfo(android.support.v4.provider.FontsContractCompat$FontInfo[],int)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/ContentResolver/openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/FileInputStream/close()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/graphics/Typeface/createFromFile(java.io.File)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/content/Context/getContentResolver()
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#java/io/FileInputStream/FileInputStream(java.io.FileDescriptor)
android/support/v4/graphics/TypefaceCompatApi21Impl/createFromFontInfo(android.content.Context,android.os.CancellationSignal,android.support.v4.provider.FontsContractCompat$FontInfo[],int)#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/setAllowGeneratedReplies(boolean)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/Notification$Action$Builder(int,java.lang.CharSequence,android.app.PendingIntent)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/addExtras(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Builder/addAction(android.app.Notification$Action)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/build()
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/os/Bundle/putBoolean(java.lang.String,boolean)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#java/util/List/add(java.lang.Object)
android/support/v4/app/NotificationCompatBuilder/addAction(android.support.v4.app.NotificationCompat$Action)#android/app/Notification$Action$Builder/addRemoteInput(android.app.RemoteInput)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/Bundle(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/setExtras(android.os.Bundle)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/getNotification()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/keySet()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification$Builder/build()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/putSparseParcelableArray(java.lang.String,android.util.SparseArray)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Iterator/next()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/containsKey(java.lang.String)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#java/util/Set/iterator()
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/os/Bundle/remove(java.lang.String)
android/support/v4/app/NotificationCompatBuilder/buildInternal()#android/app/Notification/getGroup()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#android/content/res/Resources/getString(int)
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/helper/AppCache/initialize(ar.com.tzulberti.archerytraining.dao.ConstraintsDAO,android.content.res.Resources,java.lang.String)#java/util/List/add(java.lang.Object)
android/support/v4/util/LruCache/trimToSize(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/entrySet()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Iterator/next()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Class/getName()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Set/iterator()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/toString()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/isEmpty()
android/support/v4/util/LruCache/trimToSize(int)#java/util/LinkedHashMap/remove(java.lang.Object)
android/support/v4/util/LruCache/trimToSize(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getKey()
android/support/v4/util/LruCache/trimToSize(int)#java/lang/Object/getClass()
android/support/v4/util/LruCache/trimToSize(int)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/getRawLength()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/File/canRead()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/InputStream/close()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/flateCompress(int)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/net/URL/openStream()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfEFStream/writeLength()
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#com/itextpdf/text/pdf/PdfFileSpecification/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/FileInputStream/FileInputStream(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/PdfFileSpecification/fileEmbedded(com.itextpdf.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/append(java.lang.CharSequence)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/api/internal/zabe/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Set/iterator()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarEntry/getIcon()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/BarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/BarChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setAlpha(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForXValue(float,float)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/BarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getHighLightColor()
android/support/v4/app/ListFragment/ensureList()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/ListFragment/ensureList()#android/widget/ListView/setEmptyView(android.view.View)
android/support/v4/app/ListFragment/ensureList()#android/view/View/findViewById(int)
android/support/v4/app/ListFragment/ensureList()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v4/app/ListFragment/ensureList()#android/widget/ListView/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v4/app/ListFragment/ensureList()#android/os/Handler/post(java.lang.Runnable)
android/support/v4/app/ListFragment/ensureList()#android/support/v4/app/ListFragment/getView()
android/support/v4/app/ListFragment/ensureList()#android/widget/TextView/setVisibility(int)
android/support/v4/app/ListFragment/ensureList()#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/FrameLayout(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/support/v4/app/ListFragment/getContext()
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setOrientation(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/setDrawSelectorOnTop(boolean)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/ListView(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/LinearLayout(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/TextView(android.content.Context)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setGravity(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ProgressBar/ProgressBar(android.content.Context,android.util.AttributeSet,int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setVisibility(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/ListView/setId(int)
android/support/v4/app/ListFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setGravity(int)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/makeMainActivity(android.content.ComponentName)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/Intent()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#java/lang/StringBuilder/toString()
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/app/NavUtils/getParentActivityIntent(android.app.Activity)#android/app/Activity/getParentActivityIntent()
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Class/forName(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/Log/i(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v7/app/AppCompatDelegateImplV9/createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Class/getName()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/getChildCount()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/removeAllViews()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/WindowManager$LayoutParams/WindowManager$LayoutParams(int,int,int,int,int,int,int)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/hasFocus()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/requestFocus()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/res/Resources/getConfiguration()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onMenuOpened(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/content/Context/getSystemService(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/WindowManager/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/View/getParent()
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/ViewGroup/setBackgroundResource(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/content/res/Resources/getColor(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/getLayoutParams()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/isShown()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setVisibility(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setBackgroundColor(int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/graphics/Rect/Rect()
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/support/v7/widget/ActionBarContextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/View(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AppCompatDelegateImplV9/updateStatusGuard(int)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingBottom()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/hasValue(int)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingLeft()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingTop()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/content/res/TypedArray/getValue(int,android.util.TypedValue)
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/view/View/getPaddingRight()
android/support/v7/app/AppCompatDelegateImplV9/applyFixedSizeWindow()#android/support/v7/widget/ContentFrameLayout/requestLayout()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/app/AppCompatDelegateImplV9/getActionBarThemedContext()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/setTo(android.content.res.Resources$Theme)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/applyStyle(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setContentView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/util/TypedValue/complexToDimensionPixelSize(int,android.util.DisplayMetrics)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/View/post(java.lang.Runnable)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/sendAccessibilityEvent(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/PopupWindow(android.content.Context,android.util.AttributeSet,int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources/newTheme()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setHeight(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/setAlpha(float)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/widget/PopupWindow/setWidth(int)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/Context/getResources()
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/app/AppCompatDelegateImplV9/startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback)#android/support/v7/widget/ActionBarContextView/getParent()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/lang/Runnable/run()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onPanelClosed(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onMenuOpened(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window$Callback/onPreparePanel(int,android.view.View,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewConfiguration/get(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/View/removeCallbacks(java.lang.Runnable)
android/support/v7/app/AppCompatDelegateImplV9/reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewConfiguration/hasPermanentMenuKey()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/isDestroyed()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyCharacterMap/getKeyboardType()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onCreatePanelMenu(int,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyEvent/getDeviceId()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onPreparePanel(int,android.view.View,android.view.Menu)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/peekSupportActionBar()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/KeyCharacterMap/load(int)
android/support/v7/app/AppCompatDelegateImplV9/preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent)#android/view/Window$Callback/onCreatePanelView(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/removeViewAt(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/app/AppCompatDelegateImplV9/getWindowCallback()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/hasValue(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/append(boolean)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/Context/obtainStyledAttributes(int[])
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/getChildAt(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/Context/getTheme()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/getDecorView()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/util/TypedValue/TypedValue()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/getChildCount()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/widget/ContentFrameLayout/addView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/Window/setContentView(android.view.View)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/widget/FrameLayout/setForeground(android.graphics.drawable.Drawable)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/recycle()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/support/v7/widget/ContentFrameLayout/setId(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/view/ViewGroup/setId(int)
android/support/v7/app/AppCompatDelegateImplV9/createSubDecor()#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/widget/TextView/getLeft()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTitleStrip/onDraw(android.graphics.Canvas)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getWidth()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/widget/TextView/getRight()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getHeight()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getPaddingLeft()
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v4/view/PagerTabStrip/onDraw(android.graphics.Canvas)#android/support/v4/view/PagerTabStrip/getPaddingRight()
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/String/codePointCount(int,int)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/String/charAt(int)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#android/graphics/Paint/measureText(java.lang.String)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/String/length()
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#android/graphics/Rect/equals(java.lang.Object)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/String/codePointAt(int)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/Character/charCount(int)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#android/graphics/Paint/hasGlyph(java.lang.String)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#java/lang/Character/isWhitespace(char)
android/support/v4/graphics/PaintCompat/hasGlyph(android.graphics.Paint,java.lang.String)#android/graphics/Paint/measureText(java.lang.String,int,int)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/setData(android.net.Uri)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri$Builder/build()
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri/buildUpon()
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/addFlags(int)
com/google/android/gms/common/internal/zzg/zza(java.lang.String,java.lang.String)#android/content/Intent/setPackage(java.lang.String)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/LinkedHashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/clearIndirects(com.itextpdf.text.pdf.PdfReader)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/lang/Object/toString()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/List/iterator()
com/itextpdf/text/pdf/PdfCopy/copyDocumentFields(com.itextpdf.text.pdf.PdfReader)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Map$Entry/setValue(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/LinkedHashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/LinkedHashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixTaggedStructure()#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfCopy/createAcroForms()#com/itextpdf/text/pdf/PdfCopy/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#com/itextpdf/text/pdf/PdfStructureTreeRoot/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/iterator()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashSet/size()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/fixStructureTreeRoot(java.util.HashSet,java.util.HashSet)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/TextField/setText(java.lang.String)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/TextField/setBox(com.itextpdf.text.Rectangle)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/TextField/getRotation()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfAppearance/getIndirectReference()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/ArrayList/indexOf(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/branchForm(java.util.HashMap,com.itextpdf.text.pdf.PdfIndirectReference,java.lang.String)#com/itextpdf/text/pdf/PdfCopy/getPdfIndirectReference()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/ArrayList/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/Map/values()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushAcroFields()#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/adjustTabOrder(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfNumber)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/ArrayList/iterator()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/LinkedHashMap/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/TreeSet/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/LinkedHashMap/entrySet()
com/itextpdf/text/pdf/PdfCopy/flushIndirectObjects()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/LinkedHashMap/LinkedHashMap()
com/itextpdf/text/pdf/PdfCopy/mergeField(java.lang.String,com.itextpdf.text.pdf.AcroFields$Item)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA1$Digest/SHA1$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA384$Digest/SHA384$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#java/security/NoSuchAlgorithmException/NoSuchAlgorithmException(java.lang.String)
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA224$Digest/SHA224$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA256$Digest/SHA256$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/SHA512$Digest/SHA512$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/GOST3411$Digest/GOST3411$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/MD5$Digest/MD5$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/MD2$Digest/MD2$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD160$Digest/RIPEMD160$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD128$Digest/RIPEMD128$Digest()
com/itextpdf/text/pdf/security/BouncyCastleDigest/getMessageDigest(java.lang.String)#org/spongycastle/jcajce/provider/digest/RIPEMD256$Digest/RIPEMD256$Digest()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Long/toString(long)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/util/HashMap/HashMap()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Object/getClass()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Integer/toString(int)
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/String/length()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Math/random()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/Class/getName()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#com/google/android/gms/ads/identifier/zza/start()
com/google/android/gms/ads/identifier/AdvertisingIdClient/zza(com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,boolean,float,long,java.lang.String,java.lang.Throwable)#java/lang/String/isEmpty()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/append(java.lang.CharSequence)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#com/google/android/gms/common/internal/IGmsServiceBroker/asBinder()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/text/SimpleDateFormat/format(java.util.Date)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/os/IInterface/asBinder()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(long)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String,java.util.Locale)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Date/Date(long)
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/BaseGmsClient/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/String/valueOf(int)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/util/concurrent/atomic/AtomicInteger/incrementAndGet()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#android/content/Context/getPackageName()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient/zza(int,android.os.IInterface)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/dao/SerieDataDAO$GroupByType/ordinal()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/setContentView(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#android/content/Intent/getLongExtra(java.lang.String,long)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/getIntent()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Description/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisLeft()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Legend/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setTouchEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setData(com.github.mikephil.charting.data.ChartData)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setAxisMinimum(float)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setLabelCount(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getLegend()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getXAxis()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisRight()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setMinimumHeight(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDistance(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Description/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisLeft()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/Legend/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setTouchEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getDescription()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarDataSet/setColors(java.util.List)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setData(com.github.mikephil.charting.data.ChartData)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setAxisMinimum(float)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setLabelCount(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/invalidate()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/StringBuilder/append(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#ar/com/tzulberti/archerytraining/model/series/SerieData$TrainingType/getFromValue(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getLegend()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#ar/com/tzulberti/archerytraining/model/series/SerieData$TrainingType/ordinal()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getXAxis()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/data/BarData/addDataSet(com.github.mikephil.charting.interfaces.datasets.IDataSet)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/ArrayList/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/getAxisRight()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/charts/HorizontalBarChart/setMinimumHeight(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/RuntimeException/RuntimeException(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerTrainingType(java.util.List,com.github.mikephil.charting.charts.HorizontalBarChart)#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/XAxis/setGranularity(float)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/setData(com.github.mikephil.charting.data.ChartData)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/Description/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/invalidate()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/XAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/YAxis/setDrawGridLines(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/setTouchEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/getAxisRight()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/getDescription()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/YAxis/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#ar/com/tzulberti/archerytraining/dao/SerieDataDAO$GroupByType/ordinal()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/getAxisLeft()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/getLegend()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/XAxis/setDrawAxisLine(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/data/LineDataSet/setColors(int[])
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/Legend/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/charts/LineChart/getXAxis()
ar/com/tzulberti/archerytraining/activities/series/ViewStatsTotalsActivity/showArrowsPerDay(java.util.List,com.github.mikephil.charting.charts.LineChart,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#com/github/mikephil/charting/components/XAxis/setValueFormatter(com.github.mikephil.charting.formatter.IAxisValueFormatter)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/size()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/GeneralSecurityException/GeneralSecurityException()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#com/itextpdf/text/pdf/security/LtvVerification$CertificateOption/equals(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/LtvVerifier/verifySignature()#java/security/Principal/getName()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/hasMessages(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getFlags()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/size()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getScheme()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Context/getContentResolver()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/ArrayList()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/IntentFilter/match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/resolveTypeIfNeeded(android.content.ContentResolver)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getAction()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/os/Handler/sendEmptyMessage(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getCategories()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/Integer/toHexString(int)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#android/content/Intent/getData()
android/support/v4/content/LocalBroadcastManager/sendBroadcast(android.content.Intent)#java/util/ArrayList/get(int)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Condition/signalAll()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Collections/emptyMap()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/unlock()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/concurrent/locks/Lock/lock()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/putAll(java.util.Map)
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/size()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#java/util/Map/values()
com/google/android/gms/common/api/internal/zaz/onComplete(com.google.android.gms.tasks.Task)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/app/PendingIntent/getBroadcast(android.content.Context,int,android.content.Intent,int)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#java/lang/StringBuilder/append(long)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/content/Intent/Intent(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/view/KeyEvent/KeyEvent(int,int)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/media/session/MediaButtonReceiver/buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long)#java/lang/StringBuilder/toString()
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/Context/getPackageManager()
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/pm/PackageManager/queryBroadcastReceivers(android.content.Intent,int)
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/Context/getPackageName()
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#java/util/List/size()
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/Intent/Intent(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#android/content/Intent/setPackage(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getMediaButtonReceiverComponent(android.content.Context)#java/util/List/get(int)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/Context/getPackageName()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/util/List/isEmpty()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/util/List/size()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/Intent/Intent(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/Intent/setPackage(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/util/List/get(int)
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/media/session/MediaButtonReceiver/getServiceComponentByAction(android.content.Context,java.lang.String)#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/support/v4/media/session/MediaButtonReceiver/goAsync()
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Context/getApplicationContext()
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/setComponent(android.content.ComponentName)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/hasExtra(java.lang.String)
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/session/MediaButtonReceiver/onReceive(android.content.Context,android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getWidth()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#java/lang/Math/max(int,int)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHeight(int)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#java/util/Iterator/next()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHeight()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setWidth(int)
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#java/util/Iterator/hasNext()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getVerticalDimensionBehaviour()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHorizontalDimensionBehaviour()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#java/util/List/clear()
android/support/constraint/solver/widgets/Analyzer/determineGroups(android.support.constraint.solver.widgets.ConstraintWidgetContainer)#java/util/List/iterator()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/io/File/createNewFile()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/nio/channels/FileChannel/lock()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/nio/channels/FileChannel/position(long)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/String/length()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/nio/channels/Channels/newOutputStream(java.nio.channels.WritableByteChannel)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/util/Properties/Properties()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/io/RandomAccessFile/getChannel()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/nio/channels/FileChannel/size()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/String/valueOf(long)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzy/zza(android.content.Context,java.lang.String,com.google.firebase.iid.zzz,boolean)#java/util/Properties/store(java.io.OutputStream,java.lang.String)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/KeyPair/KeyPair(java.security.PublicKey,java.security.PrivateKey)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/spec/X509EncodedKeySpec/X509EncodedKeySpec(byte[])
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/KeyFactory/generatePrivate(java.security.spec.KeySpec)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/KeyFactory/getInstance(java.lang.String)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/spec/PKCS8EncodedKeySpec/PKCS8EncodedKeySpec(byte[])
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#android/util/Base64/decode(java.lang.String,int)
com/google/firebase/iid/zzy/zzc(java.lang.String,java.lang.String)#java/security/KeyFactory/generatePublic(java.security.spec.KeySpec)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/io/File/exists()
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzy/zze(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#android/util/Base64/encodeToString(byte[],int)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/AssertionError/AssertionError(java.lang.Object)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/String/length()
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/String/getBytes(java.lang.String)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzy/zzf(android.content.Context,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/setAccessible(boolean)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getDeclaredField(java.lang.String)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/Class/getName()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/StringBuilder()
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/view/LayoutInflaterCompat/forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)#java/lang/StringBuilder/toString()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getTop()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getLeft()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getBottom()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/graphics/Rect/centerX()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getRight()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/CoordinatorLayout/getHeight()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/CoordinatorLayout/getWidth()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/support/design/widget/FloatingActionButton/getLayoutParams()
android/support/design/widget/FloatingActionButton$Behavior/offsetIfNeeded(android.support.design.widget.CoordinatorLayout,android.support.design.widget.FloatingActionButton)#android/graphics/Rect/centerY()
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/String/split(java.lang.String,int)
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String)
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String,java.lang.String)
org/apache/commons/lang3/LocaleUtils/parseLocale(java.lang.String)#java/util/Locale/Locale(java.lang.String)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String,java.lang.String)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/charAt(int)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/isEmpty()
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/substring(int,int)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/Character/isUpperCase(char)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/lang/String/substring(int)
org/apache/commons/lang3/LocaleUtils/toLocale(java.lang.String)#java/util/Locale/Locale(java.lang.String,java.lang.String)
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/Locale/getVariant()
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/ArrayList/ArrayList(int)
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/lang/String/length()
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/Locale/getLanguage()
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/Locale/Locale(java.lang.String,java.lang.String)
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/List/contains(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/Locale/getCountry()
org/apache/commons/lang3/LocaleUtils/localeLookupList(java.util.Locale,java.util.Locale)#java/util/Collections/unmodifiableList(java.util.List)
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Locale/getVariant()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Iterator/hasNext()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Collections/emptyList()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Iterator/next()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Locale/getCountry()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Collections/unmodifiableList(java.util.List)
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/Locale/getLanguage()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/lang/String/isEmpty()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/List/iterator()
org/apache/commons/lang3/LocaleUtils/countriesByLanguage(java.lang.String)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Locale/getVariant()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Iterator/hasNext()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Collections/emptyList()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Iterator/next()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/lang/String/isEmpty()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Locale/getCountry()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/Collections/unmodifiableList(java.util.List)
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/List/iterator()
org/apache/commons/lang3/LocaleUtils/languagesByCountry(java.lang.String)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getChildAt(int)
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingTop()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getBaseline()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingRight()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getPaddingLeft()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/support/design/internal/BaselineLayout/getChildCount()
android/support/design/internal/BaselineLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getSuggestedMinimumWidth()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getPaddingBottom()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getBaseline()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/measureChild(android.view.View,int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/setMeasuredDimension(int,int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getChildAt(int)
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getSuggestedMinimumHeight()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/support/design/internal/BaselineLayout/getChildCount()
android/support/design/internal/BaselineLayout/onMeasure(int,int)#android/view/View/getVisibility()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Class/getResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/ClassLoader/getSystemResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Thread/currentThread()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/String/substring(int)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/Thread/getContextClassLoader()
com/itextpdf/text/io/StreamUtil/getResourceStream(java.lang.String,java.lang.ClassLoader)#java/lang/StringBuilder/toString()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getPaddingBottom()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getChildAt(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/setMinimumHeight(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getResources()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getPaddingTop()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getPaddingTop()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/support/v7/widget/ButtonBarLayout/getMeasuredWidthAndState()
android/support/v7/widget/ButtonBarLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/length()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/Integer/valueOf(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/NullPointerException/NullPointerException(java.lang.String)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/toString()
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/StringBuilder/append(int)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/data/EntityBuffer/zacb()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/Math/min(long,long)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/channels/FileChannel/map(java.nio.channels.FileChannel$MapMode,long,long)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/Error/Error(java.lang.String)
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/MappedByteBuffer/load()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/nio/channels/FileChannel/size()
com/itextpdf/text/pdf/MappedRandomAccessFile/init(java.nio.channels.FileChannel,java.nio.channels.FileChannel$MapMode)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getDimension(int,float)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getColorStateList(int)
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/VectorDrawableCompat/updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)#android/content/res/TypedArray/getPositionDescription()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/getMatrix(android.graphics.Matrix)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/offsetTo(int,int)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#java/lang/Math/abs(float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/support/graphics/drawable/VectorDrawableCompat/copyBounds(android.graphics.Rect)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Matrix/getValues(float[])
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/graphics/drawable/VectorDrawableCompat/draw(android.graphics.Canvas)#java/lang/Math/min(int,int)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayDeque/pop()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat$VClipPath/getPathName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayDeque/push(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat$VFullPath/getPathName()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayDeque/ArrayDeque()
android/support/graphics/drawable/VectorDrawableCompat/inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/util/ArrayDeque/peek()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/reflect/Field/getInt(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/getLocalVersion(android.content.Context,java.lang.String)#java/lang/Exception/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/Exception/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#java/lang/Boolean/booleanValue()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,int,android.database.Cursor,com.google.android.gms.dynamite.zzk)#android/util/Log/v(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/os/IBinder/queryLocalInterface(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/Class/newInstance()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/content/Context/createPackageContext(java.lang.String,int)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/Exception/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zzj(android.content.Context)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,int)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Class/getDeclaredField(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getPackageName()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/isEmpty()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#com/google/android/gms/dynamite/DynamiteModule$LoadingException/getMessage()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/ClassLoader/getSystemClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getApplicationContext()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Boolean/booleanValue()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#android/content/Context/getClassLoader()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zza(android.content.Context,java.lang.String,boolean)#java/lang/Class/getName()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getColumnIndex(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/close()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/moveToFirst()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/content/Context/getContentResolver()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getString(int)
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/zzc(android.content.Context,java.lang.String,boolean)#android/database/Cursor/getInt(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/ThreadLocal/set(java.lang.Object)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/length()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/ThreadLocal/get()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#com/google/android/gms/dynamite/DynamiteModule$LoadingException/getMessage()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/dynamite/DynamiteModule/load(android.content.Context,com.google.android.gms.dynamite.DynamiteModule$VersionPolicy,java.lang.String)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/OutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/File/getPath()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#java/lang/Exception/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToPath(java.lang.String,java.lang.String)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTypeface()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/charts/Chart/getWidth()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getXOffset()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getYOffset()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/isEnabled()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/charts/Chart/getHeight()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTextColor()
com/github/mikephil/charting/charts/Chart/drawDescription(android.graphics.Canvas)#com/github/mikephil/charting/components/Description/getTextSize()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/IOException/printStackTrace()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Long/valueOf(long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/exists()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap/compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#com/github/mikephil/charting/charts/Chart/getContext()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/getAbsolutePath()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentResolver/insert(android.net.Uri,android.content.ContentValues)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/mkdirs()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/Integer/valueOf(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/close()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/os/Environment/getExternalStorageDirectory()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/graphics/Bitmap$CompressFormat/ordinal()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/flush()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/ContentValues(int)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/File(java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/io/File/length()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#android/content/Context/getContentResolver()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/saveToGallery(java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap$CompressFormat,int)#java/lang/String/endsWith(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/iterator()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/util/Log/w(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/hasNext()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#com/github/mikephil/charting/charts/Chart/post(java.lang.Runnable)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/Iterator/next()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/util/ArrayList/clear()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/Chart/onSizeChanged(int,int,int,int)#android/view/ViewGroup/onSizeChanged(int,int,int,int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position()
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/put(int,byte)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Math/max(int,int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position(int)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzxn/zzc(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/Context/getPackageManager()
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/Signature/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#android/content/pm/PackageManager/getPackageInfo(java.lang.String,int)
com/google/android/gms/common/GooglePlayServicesUtilLight/zza(android.content.Context,boolean,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/Context/getPackageName()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/util/concurrent/atomic/AtomicBoolean/get()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/res/Resources/getString(int)
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/GooglePlayServicesUtilLight/isGooglePlayServicesAvailable(android.content.Context,int)#android/content/Context/getResources()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageManager/getPackageInstaller()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageInstaller$SessionInfo/getAppPackageName()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageInstaller/getAllSessions()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/List/iterator()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/common/GooglePlayServicesUtilLight/isUninstalledAppPossiblyUpdating(android.content.Context,java.lang.String)#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preTranslate(float,float)
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/isIdentity()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getScrollX()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getScrollY()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getMatrix()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/graphics/Matrix/preConcat(android.graphics.Matrix)
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getParent()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getTop()
android/support/v4/widget/ViewGroupUtils/offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix)#android/view/View/getLeft()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#com/github/mikephil/charting/components/Legend$LegendForm/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/drawForm(android.graphics.Canvas,float,float,com.github.mikephil.charting.components.LegendEntry,com.github.mikephil.charting.components.Legend)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Boolean/booleanValue()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getYOffset()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/lang/Double/isNaN(double)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/LegendRenderer/renderLegend(android.graphics.Canvas)#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextSize()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTextColor()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/components/Legend/getTypeface()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/clear()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/lang/Integer/intValue()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getLabel()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/size()
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/Collections/addAll(java.util.Collection,java.lang.Object[])
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/renderer/LegendRenderer/computeLegend(com.github.mikephil.charting.data.ChartData)#java/util/List/get(int)
com/google/firebase/components/Component$1/zzb(java.util.List)#java/util/ArrayList/ArrayList()
com/google/firebase/components/Component$1/zzb(java.util.List)#java/util/Iterator/hasNext()
com/google/firebase/components/Component$1/zzb(java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/firebase/components/Component$1/zzb(java.util.List)#java/util/Iterator/next()
com/google/firebase/components/Component$1/zzb(java.util.List)#java/lang/Class/getDeclaredConstructor(java.lang.Class[])
com/google/firebase/components/Component$1/zzb(java.util.List)#java/util/List/add(java.lang.Object)
com/google/firebase/components/Component$1/zzb(java.util.List)#java/util/List/iterator()
com/google/firebase/components/Component$1/zzb(java.util.List)#java/lang/Class/forName(java.lang.String)
com/google/firebase/components/Component$1/zzb(java.util.List)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/google/firebase/components/Component$1/zzb(java.util.List)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/components/Component$1/zzb(java.util.List)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/google/firebase/components/Component$1/zzb(java.util.List)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Map/values()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/List/add(java.lang.Object)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Set/remove(java.lang.Object)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/HashSet/HashSet(java.util.Collection)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/ArrayList/ArrayList()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Iterator/hasNext()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Collections/reverse(java.util.List)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Map/get(java.lang.Object)
com/google/firebase/components/Component$1/zza(java.util.List)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/List/size()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Iterator/next()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Set/isEmpty()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/HashMap/HashMap(int)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Set/iterator()
com/google/firebase/components/Component$1/zza(java.util.List)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/List/iterator()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Collection/iterator()
com/google/firebase/components/Component$1/zza(java.util.List)#java/util/Set/add(java.lang.Object)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/String/toLowerCase()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#android/content/res/Resources/getXml(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#android/content/res/Resources/getResourceName(int)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/CharSequence/toString()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/StringBuilder/toString()
android/support/v4/content/res/ResourcesCompat/loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,android.support.v4.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#com/itextpdf/text/pdf/Barcode128/getCodeType()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Barcode128/setCode(java.lang.String)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getBarsCode128Raw(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/valueOf(char)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Barcode128/getHumanReadableUCCEAN(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#com/itextpdf/text/pdf/Barcode128$Barcode128CodeSet/getStartSymbol()
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/String/length()
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/String/substring(int)
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Barcode128/getRawText(java.lang.String,boolean,com.itextpdf.text.pdf.Barcode128$Barcode128CodeSet)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/size()
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/security/PdfPKCS7/signCertificateChain()#java/security/cert/X509Certificate/verify(java.security.PublicKey,java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/add(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/ASN1EncodableVector()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERNull/DERNull()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(boolean,int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/Signature/sign()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Integer/ASN1Integer(java.math.BigInteger)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/Signature/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/writeObject(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/close()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Set/iterator()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1OutputStream/ASN1OutputStream(java.io.OutputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Integer/ASN1Integer(int)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getTBSCertificate()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getEncodedPKCS7(byte[],com.itextpdf.text.pdf.security.TSAClient,byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Primitive/getEncoded(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/security/cert/CertificateFactory/generateCRL(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/security/cert/CertificateFactory/getInstance(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/getObjectAt(int)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#java/util/Collection/add(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/size()
com/itextpdf/text/pdf/security/PdfPKCS7/findCRL(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Encodable/toASN1Primitive()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/CertificateID(org.spongycastle.operator.DigestCalculator,org.spongycastle.cert.X509CertificateHolder,java.math.BigInteger)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/SingleResp/getCertID()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#java/util/Collection/size()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/JcaDigestCalculatorProviderBuilder()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder/build()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/operator/DigestCalculatorProvider/get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/CertificateID/getHashAlgOID()
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/jcajce/JcaX509CertificateHolder/JcaX509CertificateHolder(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/PdfPKCS7/isRevocationValid()#org/spongycastle/cert/ocsp/BasicOCSPResp/getResponses()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1OctetString/getOctets()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/size()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1TaggedObject/getObject()
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ocsp/BasicOCSPResponse/getInstance(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/cert/ocsp/BasicOCSPResp/BasicOCSPResp(org.spongycastle.asn1.ocsp.BasicOCSPResponse)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/findOcsp(org.spongycastle.asn1.ASN1Sequence)#org/spongycastle/asn1/ASN1Sequence/getObjectAt(int)
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/Signature/verify(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/asn1/tsp/TSTInfo/getMessageImprint()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/Signature/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/asn1/tsp/MessageImprint/getHashedMessage()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/tsp/TimeStampToken/getTimeStampInfo()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#org/spongycastle/tsp/TimeStampTokenInfo/toASN1Structure()
com/itextpdf/text/pdf/security/PdfPKCS7/verify()#java/security/MessageDigest/update(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1Enumerated/ASN1Enumerated(int)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1ObjectIdentifier/ASN1ObjectIdentifier(java.lang.String)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/x509/AlgorithmIdentifier/AlgorithmIdentifier(org.spongycastle.asn1.ASN1ObjectIdentifier)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSequence/DERSequence(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1EncodableVector)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/ASN1InputStream(java.io.InputStream)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/add(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERSet/DERSet(org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1InputStream/readObject()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/ASN1EncodableVector/ASN1EncodableVector()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DERTaggedObject/DERTaggedObject(boolean,int,org.spongycastle.asn1.ASN1Encodable)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/cms/Attribute/Attribute(org.spongycastle.asn1.ASN1ObjectIdentifier,org.spongycastle.asn1.ASN1Set)
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#org/spongycastle/asn1/DEROctetString/DEROctetString(byte[])
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/PdfPKCS7/getAuthenticatedAttributeSet(byte[],byte[],java.util.Collection,com.itextpdf.text.pdf.security.MakeSignature$CryptoStandard)#java/util/Collection/iterator()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Map/entrySet()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createReverseMapping()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Map/entrySet()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode/createDirectMapping()#java/util/HashMap/HashMap()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/trim()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/substring(int,int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/substring(int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/lang/String/indexOf(int)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/util/HashMap/HashMap()
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/text/error_messages/MessageLocalization/readLanguageStream(java.io.Reader)#java/io/BufferedReader/readLine()
com/google/firebase/iid/zzag/run()#java/util/Queue/isEmpty()
com/google/firebase/iid/zzag/run()#android/os/Message/setData(android.os.Bundle)
com/google/firebase/iid/zzag/run()#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzag/run()#android/content/Context/getPackageName()
com/google/firebase/iid/zzag/run()#java/lang/String/length()
com/google/firebase/iid/zzag/run()#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzag/run()#android/util/SparseArray/put(int,java.lang.Object)
com/google/firebase/iid/zzag/run()#android/os/RemoteException/getMessage()
com/google/firebase/iid/zzag/run()#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzag/run()#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/firebase/iid/zzag/run()#java/util/concurrent/ScheduledExecutorService/schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)
com/google/firebase/iid/zzag/run()#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzag/run()#android/os/Bundle/Bundle()
com/google/firebase/iid/zzag/run()#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
com/google/firebase/iid/zzag/run()#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzag/run()#android/os/Bundle/putBoolean(java.lang.String,boolean)
com/google/firebase/iid/zzag/run()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzag/run()#android/os/Message/obtain()
com/google/firebase/iid/zzag/run()#java/util/Queue/poll()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/sendMessageDelayed(android.os.Message,long)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/values()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/keySet()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Collection/iterator()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/content/Context/getApplicationContext()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Set/clear()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/lang/Exception/Exception()
com/google/android/gms/common/api/internal/GoogleApiManager/handleMessage(android.os.Message)#java/util/Map/remove(java.lang.Object)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#java/lang/Math/atan2(double,double)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/PathMeasure/getPosTan(float,float[],float[])
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/Matrix/setTranslate(float,float)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/PathMeasure/PathMeasure(android.graphics.Path,boolean)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/PathMeasure/getLength()
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/Matrix/postScale(float,float)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/Path/transform(android.graphics.Matrix,android.graphics.Path)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#java/lang/Math/toDegrees(double)
android/support/transition/PatternPathMotion/setPatternPath(android.graphics.Path)#android/graphics/Matrix/postRotate(float)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/util/regex/Matcher/appendTail(java.lang.StringBuffer)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/String/String(char[])
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/util/regex/Matcher/appendReplacement(java.lang.StringBuffer,java.lang.String)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/StringBuffer/toString()
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/util/regex/Matcher/find()
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/Character/toChars(int)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/lang/String/substring(int)
com/google/android/gms/common/util/zzd/unescape(java.lang.String)#java/util/regex/Matcher/group()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/moveTo(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/stroke()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setLineDash(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorStroke(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/lineTo(float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/setMatrix(float,float,float,float,float,float)
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/BaseField/getBorderAppearance()#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/size()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/BaseField/breakLines(java.util.ArrayList,com.itextpdf.text.pdf.BaseFont,float,float)#java/lang/StringBuffer/toString()
android/support/transition/Transition/toString(java.lang.String)#java/lang/Class/getSimpleName()
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/Transition/toString(java.lang.String)#java/lang/Integer/toHexString(int)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(long)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/transition/Transition/toString(java.lang.String)#java/util/ArrayList/get(int)
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/toString()
android/support/transition/Transition/toString(java.lang.String)#java/util/ArrayList/size()
android/support/transition/Transition/toString(java.lang.String)#java/lang/Object/hashCode()
android/support/transition/Transition/toString(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/transition/Transition/toString(java.lang.String)#java/lang/Object/getClass()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/SparseIntArray()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/Map/get(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/valueAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/animation/Animator/getStartDelay()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/contains(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/put(int,int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/lang/Math/min(long,long)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/keyAt(int)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/animation/Animator/setStartDelay(long)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/lang/String/equals(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#android/util/SparseIntArray/size()
android/support/transition/Transition/createAnimators(android.view.ViewGroup,android.support.transition.TransitionValuesMaps,android.support.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)#java/util/ArrayList/get(int)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getAdapter()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/support/v4/util/ArrayMap/containsKey(java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/util/SparseArray/indexOfKey(int)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListAdapter/hasStableIds()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/view/View/getId()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getPositionForView(android.view.View)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/util/SparseArray/put(int,java.lang.Object)
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/Transition/addViewValues(android.support.transition.TransitionValuesMaps,android.view.View,android.support.transition.TransitionValues)#android/widget/ListView/getItemIdAtPosition(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/ViewGroup/getChildCount()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/View/getId()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/lang/Class/isInstance(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/size()
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/lang/Integer/valueOf(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/get(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/contains(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/ViewGroup/getChildAt(int)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/captureHierarchy(android.view.View,boolean)#android/view/View/getParent()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#java/util/ArrayList/ArrayList()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#java/lang/Object/equals(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/cancel()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/isStarted()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/animation/Animator/isRunning()
android/support/transition/Transition/playTransition(android.view.ViewGroup)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#android/view/InflateException/InflateException(java.lang.String)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/String/equalsIgnoreCase(java.lang.String)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/String/isEmpty()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/util/StringTokenizer/nextToken()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/StringBuilder/toString()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/lang/String/trim()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/util/StringTokenizer/countTokens()
android/support/transition/Transition/parseMatchOrder(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/isEmpty()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/valueAt(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/view/ViewGroup/findViewById(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/size()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/keyAt(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/lang/Integer/intValue()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/ArrayList(int)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/add(java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/size()
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/transition/Transition/captureValues(android.view.ViewGroup,boolean)#java/util/ArrayList/get(int)
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/view/View/getRight()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/support/v7/widget/DropDownListView/refreshDrawableState()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/view/View/isEnabled()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#java/lang/reflect/Field/getBoolean(java.lang.Object)
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/view/View/getBottom()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#java/lang/IllegalAccessException/printStackTrace()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#java/lang/reflect/Field/set(java.lang.Object,java.lang.Object)
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/view/View/getTop()
android/support/v7/widget/DropDownListView/positionSelectorCompat(int,android.view.View)#android/view/View/getLeft()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/layoutChildren()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/refreshDrawableState()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/setPressed(boolean)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/getChildAt(int)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/setPressed(boolean)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/isPressed()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/isPressed()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/getTop()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/getLeft()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/view/View/drawableHotspotChanged(float,float)
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/getFirstVisiblePosition()
android/support/v7/widget/DropDownListView/setPressedItem(android.view.View,int,float,float)#android/support/v7/widget/DropDownListView/drawableHotspotChanged(float,float)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getDividerHeight()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/forceLayout()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getAdapter()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/measure(int,int)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getListPaddingRight()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getDivider()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getListPaddingBottom()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getListPaddingTop()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/generateDefaultLayoutParams()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getCount()
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/widget/ListAdapter/getItemViewType(int)
android/support/v7/widget/DropDownListView/measureHeightOfChildrenCompat(int,int,int,int,int)#android/support/v7/widget/DropDownListView/getListPaddingLeft()
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getY(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/getFirstVisiblePosition()
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/view/MotionEvent/getX(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/getChildAt(int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v7/widget/DropDownListView/pointToPosition(int,int)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v4/widget/ListViewAutoScrollHelper/onTouch(android.view.View,android.view.MotionEvent)
android/support/v7/widget/DropDownListView/onForwardedEvent(android.view.MotionEvent,int)#android/support/v4/widget/ListViewAutoScrollHelper/setEnabled(boolean)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/setSelectionFromTop(int,int)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/getFirstVisiblePosition()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/widget/ListView/onHoverEvent(android.view.MotionEvent)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/getChildAt(int)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/pointToPosition(int,int)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/getSelectedItemPosition()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/view/View/isEnabled()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/setSelection(int)
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/view/View/getTop()
android/support/v7/widget/DropDownListView/onHoverEvent(android.view.MotionEvent)#android/support/v7/widget/DropDownListView/getTop()
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/Character/isISOControl(char)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/StringBuilder/append(int)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/Integer/toHexString(int)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/StringBuilder/append(char)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/Base64Variant/_reportInvalidBase64(char,int,java.lang.String)#java/lang/Character/isDefined(char)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/length()
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/BaseGmsClient$zzf/zzm()#android/os/IBinder/getInterfaceDescriptor()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashSet,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/size()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFont/getNames(int)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/addRangeUni(java.util.HashMap,boolean,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/size()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/TrueTypeFont/getAllNames()#java/lang/String/valueOf(int)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#android/view/View/getLayoutParams()
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#android/view/View/getParent()
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#java/lang/StringBuilder/toString()
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#android/support/v7/widget/Toolbar/addView(android.view.View,int)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#android/support/v7/widget/Toolbar/removeView(android.view.View)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/ToolbarWidgetWrapper/setNavigationMode(int)#android/widget/Spinner/getParent()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/Fragment/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/content/Context/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Object/getClass()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/Class/getClassLoader()
android/support/v4/app/Fragment/instantiate(android.content.Context,java.lang.String,android.os.Bundle)#java/lang/StringBuilder/toString()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#android/content/BroadcastReceiver/setResultCode(int)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/length()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#android/content/BroadcastReceiver/isOrderedBroadcast()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zzb(android.content.BroadcastReceiver,android.content.Context,java.lang.String,android.content.Intent)#android/content/BroadcastReceiver/goAsync()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/removeExtra(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Context/getPackageName()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#com/google/firebase/iid/FirebaseInstanceIdReceiver/setResultCode(int)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/removeCategory(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/putExtra(java.lang.String,byte[])
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/getStringExtra(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/setComponent(android.content.ComponentName)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/util/Base64/decode(java.lang.String,int)
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#com/google/firebase/iid/FirebaseInstanceIdReceiver/isOrderedBroadcast()
com/google/firebase/iid/FirebaseInstanceIdReceiver/zza(android.content.Context,android.content.Intent,java.lang.String)#android/content/Intent/setPackage(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#com/itextpdf/text/pdf/XfaForm$Stack2/add(java.lang.Object)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/XfaForm$Xml2Som/splitParts(java.lang.String)#java/lang/String/endsWith(java.lang.String)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/ListView/addHeaderView(android.view.View,java.lang.Object,boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/View/getLocationOnScreen(int[])
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/view/menu/CascadingMenuPopup/getEpicenterBounds()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setHorizontalOffset(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setDropDownGravity(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/view/menu/CascadingMenuPopup/measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/ListView/setOnKeyListener(android.view.View$OnKeyListener)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setVerticalOffset(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/getListView()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/show()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/FrameLayout/findViewById(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/View/getWidth()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/size()
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setAnchorView(android.view.View)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setEpicenterBounds(android.graphics.Rect)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setAdapter(android.widget.ListAdapter)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/add(java.lang.Object)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#java/util/List/get(int)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setOverlapAnchor(boolean)
android/support/v7/view/menu/CascadingMenuPopup/showMenu(android.support.v7.view.menu.MenuBuilder)#android/support/v7/widget/MenuPopupWindow/setContentWidth(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/widget/PopupWindow$OnDismissListener/onDismiss()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/remove(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewTreeObserver/removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/size()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/widget/MenuPopupWindow/dismiss()
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#java/util/List/get(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/support/v7/widget/MenuPopupWindow/setAnimationStyle(int)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/View/removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
android/support/v7/view/menu/CascadingMenuPopup/onCloseMenu(android.support.v7.view.menu.MenuBuilder,boolean)#android/view/ViewTreeObserver/isAlive()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/subList(int,int)
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/size()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/clear()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/remove()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/lang/Integer/valueOf(int)
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/iterator()
com/google/android/gms/internal/measurement/zzwn/zza(int,java.util.List,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/List/set(int,java.lang.Object)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/offset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/lineTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/height()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/restore()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/reset()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Canvas/save()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/Path()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/close()
android/support/v4/widget/CircularProgressDrawable$Ring/drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF)#android/graphics/Path/moveTo(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setColor(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/height()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Paint/setAlpha(int)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/inset(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerX()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/centerY()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/max(float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/set(float,float,float,float)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/RectF/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#android/graphics/Rect/width()
android/support/v4/widget/CircularProgressDrawable$Ring/draw(android.graphics.Canvas,android.graphics.Rect)#java/lang/Math/min(int,int)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzxo/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/Character/isSurrogatePair(char,char)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/AcroFields/fill()#java/util/LinkedHashMap/LinkedHashMap()
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/String/length()
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/AcroFields/fill()#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/fill()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setWriter(com.itextpdf.text.pdf.PdfWriter)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setBorderWidth(float)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setText(java.lang.String)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/getRotation()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/RadioCheckField/getRotation()
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/TextField/setBox(com.itextpdf.text.Rectangle)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#com/itextpdf/text/pdf/RadioCheckField/setBox(com.itextpdf.text.Rectangle)
com/itextpdf/text/pdf/AcroFields/getAppearance(com.itextpdf.text.pdf.PdfDictionary,java.lang.String[],java.lang.String)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/ArrayList(java.util.Collection)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/size()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Collections/sort(java.util.List,java.util.Comparator)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Set/iterator()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/Map/entrySet()
com/itextpdf/text/pdf/AcroFields/getSignatureNames()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Set/iterator()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map/entrySet()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getBlankSignatureNames()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfFormField/getMKColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/getInternalBuffer()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/String/equalsIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/String/substring(int)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/Float/floatValue()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfAppearance/toString()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#com/itextpdf/text/pdf/PdfName/getBytes()
com/itextpdf/text/pdf/AcroFields/setFieldProperty(java.lang.String,java.lang.String,java.lang.Object,int[])#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#com/itextpdf/text/pdf/PdfAppearance/getIndirectReference()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/length()
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/ArrayList/indexOf(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/setField(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/size()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/LinkedHashSet/LinkedHashSet()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/HashSet/toArray(java.lang.Object[])
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#com/itextpdf/text/pdf/PdfName/toString()
com/itextpdf/text/pdf/AcroFields/getAppearanceStates(java.lang.String)#java/util/Set/iterator()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/removeViewInLayout(android.view.View)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/indexOfChild(android.view.View)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getContext()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/addView(android.view.View,int)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getParent()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/View/setId(int)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/ViewStubCompat/inflate()#android/support/v7/widget/ViewStubCompat/getLayoutParams()
android/support/v7/widget/ViewStubCompat/inflate()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ViewStubCompat/inflate()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ViewStubCompat/inflate()#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormatSymbols/DecimalFormatSymbols(java.util.Locale)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/append(char)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/applyPattern(java.lang.String)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/DecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/Double/isNaN(double)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/util/TimeZone/getOffset(long)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/format(long)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/toString()
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/util/Calendar/getTimeInMillis()
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/text/DecimalFormat/format(double)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/Math/abs(int)
com/itextpdf/xmp/impl/ISO8601Converter/render(com.itextpdf.xmp.XMPDateTime)#java/lang/StringBuffer/StringBuffer()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/Long/valueOf(long)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/Double/parseDouble(java.lang.String)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/StringBuilder/StringBuilder()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/Integer/valueOf(int)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/StringBuilder/append(java.lang.Object)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/connect()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/StringBuilder/toString()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/io/OutputStream/close()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/disconnect()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/Integer/intValue()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/getOutputStream()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/io/InputStream/close()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/lang/String/isEmpty()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/getResponseCode()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/getErrorStream()
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/getHeaderField(java.lang.String)
io/sentry/connection/HttpConnection/doSend(io.sentry.event.Event)#java/net/HttpURLConnection/getInputStream()
io/sentry/connection/HttpConnection/getConnection()#io/sentry/connection/HttpConnection/getAuthHeader()
io/sentry/connection/HttpConnection/getConnection()#java/net/HttpURLConnection/setReadTimeout(int)
io/sentry/connection/HttpConnection/getConnection()#java/net/HttpURLConnection/setConnectTimeout(int)
io/sentry/connection/HttpConnection/getConnection()#java/net/HttpURLConnection/setRequestMethod(java.lang.String)
io/sentry/connection/HttpConnection/getConnection()#java/net/HttpURLConnection/setRequestProperty(java.lang.String,java.lang.String)
io/sentry/connection/HttpConnection/getConnection()#java/net/HttpURLConnection/setDoOutput(boolean)
io/sentry/connection/HttpConnection/getConnection()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
io/sentry/connection/HttpConnection/getConnection()#java/net/URL/openConnection()
io/sentry/connection/HttpConnection/getConnection()#javax/net/ssl/HttpsURLConnection/setHostnameVerifier(javax.net.ssl.HostnameVerifier)
io/sentry/connection/HttpConnection/getConnection()#java/net/URL/openConnection(java.net.Proxy)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/Class/forName(java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/Bundle(android.os.Bundle)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/getLong(java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/get(java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/putInt(java.lang.String,int)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/containsKey(java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/getLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/Set/toArray(java.lang.Object[])
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/util/Arrays/sort(java.lang.Object[])
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/getString(java.lang.String)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/size()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/putLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#java/security/SecureRandom/nextLong()
com/google/android/gms/measurement/internal/zzda/zza(java.lang.String,java.lang.String,long,android.os.Bundle,boolean,boolean,boolean,java.lang.String)#android/os/Bundle/keySet()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/concurrent/atomic/AtomicReference/AtomicReference()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/Collections/emptyList()
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/lang/Object/wait(long)
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzda/zzf(java.lang.String,java.lang.String,java.lang.String)#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Collections/emptyMap()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/concurrent/atomic/AtomicReference/AtomicReference()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/List/size()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzda/zzb(java.lang.String,java.lang.String,java.lang.String,boolean)#java/lang/Object/wait(long)
com/google/android/gms/measurement/internal/zzeb/zzdj()#java/util/List/size()
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/Context/getPackageManager()
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/Intent/setClassName(android.content.Context,java.lang.String)
com/google/android/gms/measurement/internal/zzeb/zzdj()#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/measurement/internal/zzeb/zzdj()#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/Intent/Intent()
com/google/android/gms/measurement/internal/zzeb/zzdj()#java/lang/Boolean/booleanValue()
com/google/android/gms/measurement/internal/zzeb/zzdj()#android/content/Intent/setComponent(android.content.ComponentName)
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/reflect/Field/setAccessible(boolean)
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/util/Iterator/hasNext()
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/util/Iterator/next()
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/reflect/Modifier/isPublic(int)
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/Class/getField(java.lang.String)
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/Class/getSuperclass()
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/Class/getDeclaredField(java.lang.String)
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/lang/reflect/Field/getModifiers()
org/apache/commons/lang3/reflect/FieldUtils/getField(java.lang.Class,java.lang.String,boolean)#java/util/List/iterator()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/util/LinkedList/iterator()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/util/LinkedList/isEmpty()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/util/Iterator/hasNext()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/StringBuilder/append(int)
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/util/Iterator/next()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/fasterxml/jackson/core/util/ByteArrayBuilder/toByteArray()#java/lang/StringBuilder/toString()
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/Integer/intValue()
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/text/DateFormat/getTimeInstance(int,java.util.Locale)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/text/DateFormat/getDateInstance(int,java.util.Locale)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/text/SimpleDateFormat/toPattern()
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/text/DateFormat/getDateTimeInstance(int,int,java.util.Locale)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/util/concurrent/ConcurrentMap/get(java.lang.Object)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/util/concurrent/ConcurrentMap/putIfAbsent(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/time/FormatCache/getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow$LayoutParams/TableRow$LayoutParams(int,int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/setId(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/findViewById(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/append(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/ImageView/setImageResource(int)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/tournament/ViewExistingTournamentsActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/String/valueOf(int)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/v7/widget/LinearLayoutCompat/draw(android.graphics.Canvas)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingTop()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingLeft()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getLeft()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/view/Gravity/apply(int,int,int,android.graphics.Rect,android.graphics.Rect)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getTop()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getRight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingBottom()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getPaddingRight()
android/support/design/internal/ForegroundLinearLayout/draw(android.graphics.Canvas)#android/support/design/internal/ForegroundLinearLayout/getBottom()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setState(int[])
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/Rect/Rect()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/invalidate()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/getDrawableState()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/isStateful()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/requestLayout()
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/support/design/internal/ForegroundLinearLayout/setWillNotDraw(boolean)
android/support/design/internal/ForegroundLinearLayout/setForeground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/isEmpty()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/size()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/util/ArrayList/get(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/println(boolean)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(int)
android/support/v4/app/BackStackRecord/dump(java.lang.String,java.io.PrintWriter,boolean)#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isMemberClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getModifiers()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/getCanonicalName()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isPublic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/toString()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Object/getClass()
android/support/v4/app/BackStackRecord/doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int)#java/lang/Class/isAnonymousClass()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/size()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/get(int)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Looper/myLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#android/os/Handler/getLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onUnintentionalDisconnection(int)#java/util/ArrayList/clear()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/String/length()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/os/Handler/sendMessage(android.os.Message)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#android/os/Handler/obtainMessage(int,java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/GmsClientEventManager/registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/size()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Handler/removeMessages(int)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/get(int)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/contains(java.lang.Object)
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/concurrent/atomic/AtomicInteger/get()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Looper/myLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#android/os/Handler/getLooper()
com/google/android/gms/common/internal/GmsClientEventManager/onConnectionSuccess(android.os.Bundle)#java/util/ArrayList/clear()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/lang/Integer/intValue()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setTranslationX(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setVisibility(int)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashMap/containsKey(java.lang.Object)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/getContext()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/getId()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/Iterator/next()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/Guideline/setId(int)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/Barrier/setReferencedIds(int[])
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setPivotX(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setRotationY(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setScaleY(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/Barrier/validateParams()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashSet/iterator()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setTranslationZ(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/lang/Float/isNaN(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setTranslationY(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/Iterator/hasNext()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashSet/remove(java.lang.Object)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/Barrier/setId(int)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setRotation(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setAlpha(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setPivotY(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setElevation(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/lang/Integer/valueOf(int)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setRotationX(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashSet/HashSet(java.util.Collection)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashMap/keySet()
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#android/view/View/setScaleX(float)
android/support/constraint/ConstraintSet/applyToInternal(android.support.constraint.ConstraintLayout)#java/util/HashMap/get(java.lang.Object)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#org/xmlpull/v1/XmlPullParserException/printStackTrace()
android/support/constraint/ConstraintSet/load(android.content.Context,int)#java/lang/String/equalsIgnoreCase(java.lang.String)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#android/content/res/Resources/getXml(int)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/getName()
android/support/constraint/ConstraintSet/load(android.content.Context,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#java/lang/Integer/valueOf(int)
android/support/constraint/ConstraintSet/load(android.content.Context,int)#android/content/Context/getResources()
android/support/constraint/ConstraintSet/load(android.content.Context,int)#java/io/IOException/printStackTrace()
android/support/constraint/ConstraintSet/load(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/constraint/ConstraintSet/load(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getDimension(int,float)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#java/lang/StringBuilder/append(java.lang.String)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getDimensionPixelOffset(int,int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#java/lang/Integer/toHexString(int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getString(int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#java/lang/StringBuilder/StringBuilder()
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getLayoutDimension(int,int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/util/SparseIntArray/get(int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#java/lang/StringBuilder/toString()
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getInt(int,int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getIndex(int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getFloat(int,float)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#java/lang/StringBuilder/append(int)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getIndexCount()
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getBoolean(int,boolean)
android/support/constraint/ConstraintSet/populateConstraint(android.support.constraint.ConstraintSet$Constraint,android.content.res.TypedArray)#android/content/res/TypedArray/getResourceId(int,int)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getVisibility()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getPivotY()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getId()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getTranslationY()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getTranslationZ()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getScaleX()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getElevation()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getScaleY()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getAlpha()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/util/HashMap/clear()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getPivotX()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/util/HashMap/containsKey(java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/support/constraint/Barrier/getReferencedIds()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getRotation()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/lang/Integer/valueOf(int)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getTranslationX()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getRotationX()
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#java/util/HashMap/get(java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.ConstraintLayout)#android/view/View/getRotationY()
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#android/view/View/getId()
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#android/support/constraint/Constraints/getChildAt(int)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/util/HashMap/get(java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/util/HashMap/clear()
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/util/HashMap/containsKey(java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#java/lang/Integer/valueOf(int)
android/support/constraint/ConstraintSet/clone(android.support.constraint.Constraints)#android/support/constraint/Constraints/getChildCount()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/lang/Integer/intValue()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/lang/Class/getField(java.lang.String)
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/lang/String/split(java.lang.String)
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/lang/String/trim()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/content/Context/getPackageName()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/view/View/getContext()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/util/Arrays/copyOf(int[],int)
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/view/View/isInEditMode()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#java/lang/reflect/Field/getInt(java.lang.Object)
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/view/View/getParent()
android/support/constraint/ConstraintSet/convertReferenceString(android.view.View,java.lang.String)#android/content/Context/getResources()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow$LayoutParams/TableRow$LayoutParams(int,int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/getText(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/Button/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/widget/TableRow/getParent()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/widget/TableLayout/removeView(android.view.View)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#java/lang/RuntimeException/RuntimeException(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/view/View/getParent()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,long)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#java/lang/StringBuilder/append(int)
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#android/view/View/getId()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/onClick(android.view.View)#ar/com/tzulberti/archerytraining/activities/series/ViewRawDataActivity/startActivity(android.content.Intent)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getBounds()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/support/v7/widget/SwitchCompat/getWidth()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/draw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/getWidth()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.Rect,android.graphics.Region$Op)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/copyBounds(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/support/v7/widget/SwitchCompat/getDrawableState()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/Layout/getHeight()
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/text/TextPaint/setColor(int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/content/res/ColorStateList/getColorForState(int[],int)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onDraw(android.graphics.Canvas)#android/widget/CompoundButton/onDraw(android.graphics.Canvas)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getGravity()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingTop()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingLeft()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getHeight()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingBottom()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getPaddingRight()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/support/v7/widget/SwitchCompat/getWidth()
android/support/v7/widget/SwitchCompat/onLayout(boolean,int,int,int,int)#android/widget/CompoundButton/onLayout(boolean,int,int,int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/getMeasuredHeight()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/Rect/setEmpty()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/getMeasuredWidthAndState()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/support/v7/widget/SwitchCompat/setMeasuredDimension(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/widget/CompoundButton/onMeasure(int,int)
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/text/Layout/getWidth()
android/support/v7/widget/SwitchCompat/onMeasure(int,int)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/widget/CompoundButton/onTouchEvent(android.view.MotionEvent)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/SwitchCompat/getParent()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/SwitchCompat/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/SwitchCompat/isEnabled()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/getText()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/setClassName(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/widget/CompoundButton/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/append(char)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/support/v7/widget/SwitchCompat/isChecked()
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#android/view/accessibility/AccessibilityNodeInfo/setText(java.lang.CharSequence)
android/support/v7/widget/SwitchCompat/onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)#java/lang/StringBuilder/append(java.lang.CharSequence)
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/lang/Integer/intValue()
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Iterator/hasNext()
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Map/get(java.lang.Object)
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Set/iterator()
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/lang/Integer/valueOf(int)
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Iterator/next()
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/HashMap/HashMap()
com/itextpdf/testutils/CompareTool$CmpMarkedContentRenderFilter/getParsedTagContent()#java/util/Map/keySet()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/os/ParcelFileDescriptor/close()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/pdf/PrintedPdfDocument/writeTo(java.io.OutputStream)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/os/ParcelFileDescriptor/getFileDescriptor()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/pdf/PrintedPdfDocument/PrintedPdfDocument(android.content.Context,android.print.PrintAttributes)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#java/io/FileOutputStream/FileOutputStream(java.io.FileDescriptor)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/os/CancellationSignal/isCanceled()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/PrintAttributes/getColorMode()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/pdf/PdfDocument$Page/getInfo()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Bitmap/getHeight()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/pdf/PdfDocument$Page/getCanvas()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/pdf/PrintedPdfDocument/close()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Canvas/clipRect(android.graphics.RectF)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Canvas/drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Bitmap/getWidth()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/pdf/PrintedPdfDocument/finishPage(android.graphics.pdf.PdfDocument$Page)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Bitmap/recycle()
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/RectF/RectF(android.graphics.Rect)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/Matrix/postTranslate(float,float)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/print/pdf/PrintedPdfDocument/startPage(int)
android/support/v4/print/PrintHelper$PrintHelperApi19$2/doInBackground(java.lang.Void[])#android/graphics/pdf/PdfDocument$PageInfo/getContentRect()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readChainingContextPositioningFormat_3(int)#com/itextpdf/text/pdf/fonts/otf/GlyphPositioningTableReader/readCoverageFormat(int)
com/itextpdf/text/Paragraph/breakUp()#java/util/ArrayList/ArrayList()
com/itextpdf/text/Paragraph/breakUp()#java/util/List/size()
com/itextpdf/text/Paragraph/breakUp()#java/util/Iterator/next()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/ListItem/setSpacingAfter(float)
com/itextpdf/text/Paragraph/breakUp()#java/util/List/get(int)
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/Paragraph/size()
com/itextpdf/text/Paragraph/breakUp()#java/util/Iterator/hasNext()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/Paragraph/iterator()
com/itextpdf/text/Paragraph/breakUp()#com/itextpdf/text/ListItem/setSpacingBefore(float)
com/itextpdf/text/Paragraph/breakUp()#java/util/List/add(java.lang.Object)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getChildAt(int)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getChildCount()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/hasDividerBeforeChildAt(int)
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getGravity()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingTop()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getDividerDrawable()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getMeasuredHeight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingLeft()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingRight()
android/support/v7/widget/AlertDialogLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getChildAt(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getChildCount()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getVisibility()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getId()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingTop()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingLeft()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/setMeasuredDimension(int,int)
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingBottom()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/support/v7/widget/AlertDialogLayout/getPaddingRight()
android/support/v7/widget/AlertDialogLayout/tryOnMeasure(int,int)#android/view/View/getMeasuredHeight()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSets()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarData/getDataSetCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BarEntry/getIcon()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/setPhases(float,float)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/isInverted(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/dataprovider/BarDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(android.graphics.RectF,android.graphics.Paint)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/util/List/size()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColor()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/data/BarEntry/getX()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IBarDataSet/getColors()
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#java/lang/Math/min(int,int)
com/github/mikephil/charting/renderer/HorizontalBarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBarDataSet,int)#com/github/mikephil/charting/buffer/BarBuffer/size()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/content/Context/getTheme()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/content/res/Resources/getXml(int)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/graphics/drawable/Drawable/getConstantState()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/content/Context/getResources()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/create(android.content.Context,int)#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/support/graphics/drawable/VectorDrawableCompat/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/Resources/obtainAttributes(android.util.AttributeSet,int[])
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getResourceId(int,int)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatedVectorDrawableCompat/inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)#android/content/res/TypedArray/recycle()
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/io/File/setReadable(boolean,boolean)
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#android/content/SharedPreferences$Editor/commit()
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/io/File/File(java.lang.String,java.lang.String)
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/io/File/setExecutable(boolean,boolean)
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#android/content/Context/getApplicationInfo()
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/io/File/getParentFile()
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
com/google/android/gms/common/util/SharedPreferencesUtils/publishWorldReadableSharedPreferences(android.content.Context,android.content.SharedPreferences$Editor,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/CircularPropagation/getViewVisibility(android.support.transition.TransitionValues)
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getWidth()
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Math/round(float)
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/CircularPropagation/getViewY(android.support.transition.TransitionValues)
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/CircularPropagation/getViewX(android.support.transition.TransitionValues)
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getTranslationX()
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getHeight()
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/centerX()
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getTranslationY()
android/support/transition/CircularPropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/centerY()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/ArrayList/ArrayList()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/getTranslationZ()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/playSequentially(android.animation.Animator[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/List/toArray(java.lang.Object[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isFocused()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/setDuration(long)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#java/util/List/add(java.lang.Object)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet$Builder/with(android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setTranslationZ(float)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isPressed()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/StateListAnimator/addState(int[],android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/FloatingActionButtonLollipop/updatePadding()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/ofFloat(java.lang.Object,android.util.Property,float[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/StateListAnimator/StateListAnimator()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setStateListAnimator(android.animation.StateListAnimator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/ObjectAnimator/ofFloat(java.lang.Object,java.lang.String,float[])
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/isEnabled()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/play(android.animation.Animator)
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/animation/AnimatorSet/AnimatorSet()
android/support/design/widget/FloatingActionButtonLollipop/onElevationsChanged(float,float)#android/support/design/widget/VisibilityAwareImageButton/setElevation(float)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getPadding(android.graphics.Rect)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getSelectedItemPosition()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/measure(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#java/lang/Math/min(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getView(int,android.view.View,android.view.ViewGroup)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getMeasuredHeight()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getItemViewType(int)
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/widget/SpinnerAdapter/getCount()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/support/v7/widget/AppCompatSpinner/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)#android/view/View/getLayoutParams()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getMeasuredHeight()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getAdapter()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/widget/Spinner/onMeasure(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/setMeasuredDimension(int,int)
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getMeasuredWidth()
android/support/v7/widget/AppCompatSpinner/onMeasure(int,int)#android/support/v7/widget/AppCompatSpinner/getBackground()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/os/Parcel/setDataPosition(int)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Iterator/hasNext()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#com/google/android/gms/common/server/response/SafeParcelResponse/zab(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/Double/valueOf(double)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/Long/valueOf(long)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/os/Parcel/dataPosition()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Set/size()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Map$Entry/getKey()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/util/SparseArray/get(int)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/Float/valueOf(float)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Iterator/next()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/HashMap/HashMap()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(boolean)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(long)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Set/iterator()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/util/SparseArray/put(int,java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(char)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/util/SparseArray/SparseArray()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Map$Entry/getValue()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(double)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/os/Bundle/getString(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/util/Map/entrySet()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/append(float)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(java.lang.StringBuilder,java.util.Map,android.os.Parcel)#android/os/Bundle/keySet()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/Class/getCanonicalName()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/Object/getClass()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Iterator/hasNext()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/Class/newInstance()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/length()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Iterator/next()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map/keySet()
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/server/response/SafeParcelResponse/zaa(com.google.android.gms.common.server.response.zak,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Set/iterator()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getName()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/print(char)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/println(char)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeName()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Attr/getNodeValue()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/print(java.lang.String)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getSystemId()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/lang/String/length()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Document/getDoctype()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/flush()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getInternalSubset()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/DocumentType/getPublicId()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Document/getDocumentElement()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#java/io/PrintWriter/println(java.lang.String)
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/xml/XmlDomWriter/write(org.w3c.dom.Node)#org/w3c/dom/Attr/getNodeName()
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/Integer/parseInt(java.lang.String)
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/Long/intValue()
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzsk/zzu(java.lang.Object)#java/lang/Integer/valueOf(int)
android/support/transition/TransitionValues/toString()#java/util/Iterator/hasNext()
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionValues/toString()#java/util/Map/get(java.lang.Object)
android/support/transition/TransitionValues/toString()#java/lang/Integer/toHexString(int)
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionValues/toString()#java/util/Set/iterator()
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/append(java.lang.Object)
android/support/transition/TransitionValues/toString()#java/lang/StringBuilder/toString()
android/support/transition/TransitionValues/toString()#java/util/Iterator/next()
android/support/transition/TransitionValues/toString()#java/util/Map/keySet()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ArrayList/ArrayList()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ServiceLoader/iterator()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/cast(java.lang.Object)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ArrayList/size()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getConstructor(java.lang.Class[])
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getClassLoader()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/logging/Logger/logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ArrayList/get(int)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Package/getName()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getSimpleName()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ServiceLoader/load(java.lang.Class,java.lang.ClassLoader)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getName()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/getPackage()
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
com/google/android/gms/internal/measurement/zzum/zzd(java.lang.Class)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,byte[],int,int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/length()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/CharSequence/charAt(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/limit()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException(java.lang.String)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/toCodePoint(char,char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/Character/isSurrogatePair(char,char)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/append(long)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzxq/zzb(java.lang.CharSequence,java.nio.ByteBuffer)#java/nio/ByteBuffer/position(int)
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/Package/getName()
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/Class/newInstance()
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/Class/getPackage()
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
com/fasterxml/jackson/core/util/VersionUtil/packageVersionFor(java.lang.Class)#java/lang/Class/getClassLoader()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/view/View/setVisibility(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#java/util/Random/nextInt(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#java/util/Random/Random()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/widget/EditText/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/widget/EditText/setVisibility(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSerieInformationActivity/setAdditionalInformation()#android/widget/EditText/addTextChangedListener(android.text.TextWatcher)
com/google/android/gms/measurement/internal/zzba/run()#java/io/OutputStream/close()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/getHeaderFields()
com/google/android/gms/measurement/internal/zzba/run()#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/addRequestProperty(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/setFixedLengthStreamingMode(int)
com/google/android/gms/measurement/internal/zzba/run()#java/util/Map$Entry/getValue()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/connect()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/setDoOutput(boolean)
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/disconnect()
com/google/android/gms/measurement/internal/zzba/run()#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzba/run()#java/util/Map$Entry/getKey()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/getOutputStream()
com/google/android/gms/measurement/internal/zzba/run()#java/net/HttpURLConnection/getResponseCode()
com/google/android/gms/measurement/internal/zzba/run()#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzba/run()#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzba/run()#java/util/Map/entrySet()
com/google/android/gms/measurement/internal/zzba/run()#java/io/OutputStream/write(byte[])
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/view/View/getRight()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildAt(int)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setFloatValues(float[])
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/setDuration(long)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/cancel()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/start()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#java/lang/Math/abs(int)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/isRunning()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/animation/ValueAnimator/ValueAnimator()
android/support/design/widget/TabLayout$SlidingTabStrip/animateIndicatorToPosition(int,int)#android/view/View/getLeft()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getMeasuredWidth()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildAt(int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/support/design/widget/TabLayout$SlidingTabStrip/getChildCount()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/design/widget/TabLayout$SlidingTabStrip/onMeasure(int,int)#android/view/View/getVisibility()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/Object/toString()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/length()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/substring(int,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/Character/digit(char,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(char)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/indexOf(int,int)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/awt/geom/misc/Messages/format(java.lang.String,java.lang.Object[])#java/lang/String/charAt(int)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/util/TypedValue/TypedValue()
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/content/Context/getPackageName()
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/String/substring(int)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/content/res/Resources/getValue(java.lang.String,android.util.TypedValue,boolean)
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/CharSequence/toString()
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/ViewUtils/getXmlAttributeString(java.lang.String,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,java.lang.String)#android/content/Context/getResources()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/group()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/find()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/start()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/regex/Matcher/end()
com/itextpdf/text/pdf/ArrayBasedStringTokenizer/tokenize(java.lang.String)#java/util/List/toArray(java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/validateNumber(java.lang.String,int,int)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/clear()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/apply()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/SharedPreferences$Editor/putInt(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Set/iterator()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Map$Entry/getValue()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Map/entrySet()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/getPreferences(int)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Map/put(java.lang.Object,java.lang.Object)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/util/HashMap/HashMap()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/widget/EditText/getText()
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/Intent/putExtra(java.lang.String,int)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#java/lang/Integer/parseInt(java.lang.String)
ar/com/tzulberti/archerytraining/activities/retentions/ConfigureRetentionActivity/startRetentions(android.view.View)#android/content/SharedPreferences/edit()
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/build()
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/PrintDocumentInfo$Builder(java.lang.String)
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/setContentType(int)
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/execute(java.lang.Object[])
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintAttributes/equals(java.lang.Object)
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/os/CancellationSignal/isCanceled()
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutFinished(android.print.PrintDocumentInfo,boolean)
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentInfo$Builder/setPageCount(int)
android/support/v4/print/PrintHelper$PrintHelperApi19$3/onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutCancelled()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/lang/Object/toString()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Map$Entry/getKey()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Iterator/next()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Set/iterator()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Map/entrySet()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/lang/Class/isArray()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Iterator/hasNext()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/lang/Object/getClass()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Map$Entry/getValue()
io/sentry/marshaller/json/SentryJsonGenerator/writeObject(java.lang.Object,int)#java/util/Collection/iterator()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/SortedMap/keySet()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/SortedMap/get(java.lang.Object)
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page/getData(boolean)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/Exception/getCause()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/String/length()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/ClassLoader/loadClass(java.lang.String)
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/String/concat(java.lang.String)
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/String/String(java.lang.String)
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/Exception/getMessage()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#android/content/Context/getClassLoader()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#java/lang/Throwable/getMessage()
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/security/ProviderInstaller/installIfNeeded(android.content.Context)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/io/File/createNewFile()
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#android/webkit/MimeTypeMap/getExtensionFromMimeType(java.lang.String)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/provider/RawDocumentFile/createFile(java.lang.String,java.lang.String)#android/webkit/MimeTypeMap/getSingleton()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/isEmpty()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/equals(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/List/iterator()
com/itextpdf/text/pdf/security/LtvVerification/addVerification(java.lang.String,com.itextpdf.text.pdf.security.OcspClient,com.itextpdf.text.pdf.security.CrlClient,com.itextpdf.text.pdf.security.LtvVerification$CertificateOption,com.itextpdf.text.pdf.security.LtvVerification$Level,com.itextpdf.text.pdf.security.LtvVerification$CertificateInclusion)#java/util/Collection/iterator()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/nio/ByteBuffer/allocate(int)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap$Config/toString()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap/getWidth()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap/copyPixelsToBuffer(java.nio.Buffer)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap/getConfig()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap/getHeight()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/io/DataOutputStream/writeInt(int)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#android/graphics/Bitmap/getRowBytes()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/io/DataOutputStream/writeUTF(java.lang.String)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/io/DataOutputStream/write(byte[])
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/nio/ByteBuffer/array()
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
com/google/android/gms/common/data/BitmapTeleporter/writeToParcel(android.os.Parcel,int)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream)
com/google/android/gms/common/data/BitmapTeleporter/get()#android/graphics/Bitmap$Config/valueOf(java.lang.String)
com/google/android/gms/common/data/BitmapTeleporter/get()#java/io/DataInputStream/readUTF()
com/google/android/gms/common/data/BitmapTeleporter/get()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/data/BitmapTeleporter/get()#java/io/DataInputStream/readInt()
com/google/android/gms/common/data/BitmapTeleporter/get()#android/os/ParcelFileDescriptor$AutoCloseInputStream/ParcelFileDescriptor$AutoCloseInputStream(android.os.ParcelFileDescriptor)
com/google/android/gms/common/data/BitmapTeleporter/get()#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/google/android/gms/common/data/BitmapTeleporter/get()#java/io/DataInputStream/read(byte[])
com/google/android/gms/common/data/BitmapTeleporter/get()#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/google/android/gms/common/data/BitmapTeleporter/get()#java/nio/ByteBuffer/wrap(byte[])
com/google/android/gms/common/data/BitmapTeleporter/get()#android/graphics/Bitmap/copyPixelsFromBuffer(java.nio.Buffer)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/isInEditMode()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/view/ViewParent/getParent()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/append(java.lang.String)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/StringBuilder()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/getResources()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/append(java.lang.Object)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/content/res/Resources/getResourceName(int)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/view/View/getParent()
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#android/support/design/widget/CoordinatorLayout/findViewById(int)
android/support/design/widget/CoordinatorLayout$LayoutParams/resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/util/regex/Matcher/matches()
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/internal/measurement/zzsl/zzs(java.lang.Object)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActionBarContextView/initTitle()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getChildCount()
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/widget/ActionBarContextView/initTitle()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/findViewById(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/TextView/setVisibility(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/setVisibility(int)
android/support/v7/widget/ActionBarContextView/initTitle()#android/widget/LinearLayout/getParent()
android/support/v7/widget/ActionBarContextView/initTitle()#android/support/v7/widget/ActionBarContextView/getChildAt(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingRight()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Class/getSimpleName()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getChildAt(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/setVisibility(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getParent()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getChildCount()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/measure(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/measureChildView(android.view.View,int,int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/widget/LinearLayout/getMeasuredWidth()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/getPaddingTop()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/Object/getClass()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarContextView/onMeasure(int,int)#android/support/v7/widget/ActionBarContextView/setMeasuredDimension(int,int)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setClassName(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/content/Context/getPackageName()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#java/lang/Class/getName()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/support/v7/widget/AbsActionBarView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#java/lang/Object/getClass()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/getEventType()
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setSource(android.view.View)
android/support/v7/widget/ActionBarContextView/onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)#android/view/accessibility/AccessibilityEvent/setPackageName(java.lang.CharSequence)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/setOnClickListener(android.view.View$OnClickListener)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/getContext()
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/findViewById(int)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/support/v7/widget/ActionBarContextView/addView(android.view.View)
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/View/getParent()
android/support/v7/widget/ActionBarContextView/initForMode(android.support.v7.view.ActionMode)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/next(int,int,boolean)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/widget/LinearLayout/getVisibility()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingBottom()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/positionChild(android.view.View,int,int,int,boolean)
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingRight()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingLeft()
android/support/v7/widget/ActionBarContextView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContextView/getPaddingTop()
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/Class/isAssignableFrom(java.lang.Class)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/Class/getName()
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/Class/asSubclass(java.lang.Class)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/google/android/gms/internal/measurement/zzun/zzf(java.lang.Class)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map/size()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzvp/equals(java.lang.Object)#java/util/Map/entrySet()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getDescendantFocusability()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#android/view/View/addFocusables(java.util.ArrayList,int,int)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/clear()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/size()
android/support/v4/widget/DrawerLayout/addFocusables(java.util.ArrayList,int,int)#java/util/ArrayList/get(int)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/setVisibility(int)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/openDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/max(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getRight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#java/lang/Math/min(float,float)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/restoreToCount(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Paint/setColor(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/ViewGroup/drawChild(android.graphics.Canvas,android.view.View,long)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/save()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getHeight()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getLeft()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/graphics/drawable/Drawable/setAlpha(int)
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/view/View/getBottom()
android/support/v4/widget/DrawerLayout/drawChild(android.graphics.Canvas,android.view.View,long)#android/support/v4/widget/DrawerLayout/getHeight()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/setVisibility(int)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getWidth()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/support/v4/widget/DrawerLayout/invalidate()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#android/view/View/getTop()
android/support/v4/widget/DrawerLayout/closeDrawer(android.view.View,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildCount()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetBottom()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetRight()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/isInEditMode()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildMeasureSpec(int,int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/toString()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/dispatchApplyWindowInsets(android.view.WindowInsets)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/setMeasuredDimension(int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/replaceSystemWindowInsets(int,int,int,int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/support/v4/widget/DrawerLayout/getChildAt(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetLeft()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/WindowInsets/getSystemWindowInsetTop()
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/widget/DrawerLayout/onMeasure(int,int)#android/view/View/measure(int,int)
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getSpacingAfter()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#java/util/Stack/size()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getIndentationRight()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/Paragraph/getFont()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorder(int)
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/Anchor/getLeading()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getSpacingBefore()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getAlignment()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getTotalLeading()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/Paragraph/getTotalLeading()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfWriter/isPaused()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getIndentationLeft()
com/itextpdf/text/pdf/PdfDocument/add(com.itextpdf.text.Element)#com/itextpdf/text/ListItem/getFont()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Float/Float(float)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/length()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/indexOf(int,int)
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/Boolean/booleanValue()
com/itextpdf/text/pdf/PdfDocument/writeLineToContent(com.itextpdf.text.pdf.PdfLine,com.itextpdf.text.pdf.PdfContentByte,com.itextpdf.text.pdf.PdfContentByte,java.lang.Object[],float)#java/lang/String/indexOf(int)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/replace(char,char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/io/PrintWriter/print(java.lang.String)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/io/PrintWriter/print(char)
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/length()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/Pfm2afm/putheader()#java/lang/String/indexOf(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/remove(int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/size()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/get(int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/toString()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplApi21/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#android/content/Intent/getAction()
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/String/length()
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#android/content/Intent/getExtras()
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
com/google/firebase/iid/FirebaseInstanceIdService/zzd(android.content.Intent)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getValueFormatter()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/renderer/XAxisRendererRadarChart/drawLabel(android.graphics.Canvas,java.lang.String,float,float,com.github.mikephil.charting.utils.MPPointF,float)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/XAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/Locale/getLanguage()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/Calendar/getInstance()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/Calendar/get(int)
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/Locale/getDefault()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/String/toLowerCase(java.util.Locale)
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/String/length()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/Locale/getCountry()
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzaa/zzgy()#java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/text/Layout/getLineCount()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/widget/TextView/onMeasure(int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/getContext()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setTextSize(int,float)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setMaxLines(int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/getLayout()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/support/v7/widget/DialogTitle/setSingleLine(boolean)
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/content/res/TypedArray/recycle()
android/support/v7/widget/DialogTitle/onMeasure(int,int)#android/text/Layout/getEllipsisCount(int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/lang/reflect/Array/newInstance(java.lang.Class,int[])
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfFormField/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/TextField/getChoiceField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/TextField/getTextField()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/TextField/getTextField()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getListAppearance()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/TextField/getBorderAppearance()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/size()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/TextField/getListAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/TextField/getListAppearance()#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/Phrase/get(int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/TextField/getBorderAppearance()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/TextField/getRealFont()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/String/length()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/StringBuffer/substring(int,int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/Phrase/size()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/TextField/getAppearance()#java/lang/Math/min(int,int)
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/TextField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/util/Iterator/hasNext()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/lang/StackTraceElement/getClassName()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/util/Set/isEmpty()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/util/Set/iterator()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/lang/String/startsWith(java.lang.String)
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/util/Map/get(java.lang.Object)
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/lang/Throwable/getStackTrace()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/util/Iterator/next()
io/sentry/jvmti/FrameCache/shouldCacheThrowable(java.lang.Throwable,int)#java/lang/ThreadLocal/get()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/length()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/substring(int)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfChunk/split(float)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/Math/max(int,int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/size()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/qrcode/Encoder/interleaveWithECBytes(com.itextpdf.text.pdf.qrcode.BitVector,int,int,int,com.itextpdf.text.pdf.qrcode.BitVector)#java/util/ArrayList/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#ar/com/tzulberti/archerytraining/model/base/ISerieContainer/getIdColumn()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#ar/com/tzulberti/archerytraining/model/base/ISerie/getIdColumn()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/List/add(int,java.lang.Object)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getArrowsPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#ar/com/tzulberti/archerytraining/model/base/ISerie/getIdColumn()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/dao/BaseArrowSeriesDAO/getSeriesPerScore(ar.com.tzulberti.archerytraining.model.constrains.TournamentConstraint)#android/database/Cursor/getInt(int)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/util/concurrent/atomic/AtomicInteger/getAndIncrement()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/toString()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/String/length()
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/util/concurrent/ThreadFactory/newThread(java.lang.Runnable)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/setName(java.lang.String)
com/google/android/gms/common/util/concurrent/NumberedThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/StringBuilder(int)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/ReentrantLock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicReference/AtomicReference()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/newCondition()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicBoolean/get()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/unlock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/atomic/AtomicReference/get()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/lang/InterruptedException/InterruptedException(java.lang.String)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/Condition/awaitNanos(long)
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/locks/ReentrantLock/lock()
android/support/v4/provider/SelfDestructiveThread/postAndWait(java.util.concurrent.Callable,int)#java/util/concurrent/TimeUnit/toNanos(long)
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/isEmpty()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/Class/getName()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/MakeSignature/processCrl(java.security.cert.Certificate,java.util.Collection)#java/util/ArrayList/addAll(java.util.Collection)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/copyBounds(android.graphics.Rect)
com/github/mikephil/charting/components/MarkerImage/draw(android.graphics.Canvas,float,float)#android/graphics/drawable/Drawable/getIntrinsicHeight()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/Class/getSimpleName()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/Class/getName()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/Object/getClass()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/reflect/InvocationTargetException/getCause()
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/event/EventUtils/addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getRight()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/util/List/size()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/util/List/get(int)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getBottom()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#java/lang/Math/abs(int)
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper$Callback/chooseDropTarget(android.support.v7.widget.RecyclerView$ViewHolder,java.util.List,int,int)#android/view/View/getLeft()
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/RadioCheckField/getRealFont()
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKNormalCaption(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearanceState(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,java.lang.String,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/RadioCheckField/getField(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/RadioCheckField/getRealFont()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/RadioCheckField/getBorderAppearance()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/RadioCheckField/getAppearance(boolean,boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/stroke()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorStroke(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setMatrix(float,float,float,float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/circle(float,float,float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/getBoundingBox()
com/itextpdf/text/pdf/RadioCheckField/getAppearanceRadioCircle(boolean)#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/Long/parseLong(java.lang.String,int)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/String/length()
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/String/substring(int,int)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/String/substring(int)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/NumberFormatException/NumberFormatException(java.lang.String)
com/google/android/gms/common/util/NumberUtils/parseHexLong(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/Double/valueOf(double)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/Double/parseDouble(java.lang.String)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/Float/doubleValue()
com/google/android/gms/internal/measurement/zzsm/zzv(java.lang.Object)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#java/lang/Integer/intValue()
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#android/widget/EditText/setError(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#java/lang/Object/toString()
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/validateNumber(java.lang.String,int,int)
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#android/widget/EditText/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#java/lang/Integer/valueOf(java.lang.String)
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/hideKeyboard()
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#android/support/design/widget/Snackbar/show()
ar/com/tzulberti/archerytraining/activities/series/AddSerieActivity/addNewSerie(android.view.View)#android/widget/EditText/getText()
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/CharSequence/length()
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/StringBuilder/StringBuilder(java.lang.CharSequence)
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/CharSequence/toString()
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/util/Formatter/format(java.lang.String,java.lang.Object[])
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/Integer/valueOf(int)
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/StringBuilder/replace(int,int,java.lang.String)
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/StringBuilder/length()
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/StringBuilder/insert(int,char)
org/apache/commons/lang3/text/FormattableUtils/append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#android/os/Looper/getThread()
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#android/os/Looper/getMainLooper()
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/Asserts/checkMainThread(java.lang.String)#java/lang/Thread/currentThread()
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#android/os/Looper/getThread()
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#android/os/Looper/getMainLooper()
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/Asserts/checkNotMainThread(java.lang.String)#java/lang/Thread/currentThread()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/graphics/Rect/Rect()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/scrollIfNecessary()#java/lang/System/currentTimeMillis()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Integer/intValue()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/ArrayList()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/size()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/add(int,java.lang.Object)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getBottom()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Math/abs(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getRight()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Math/round(float)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/clear()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/lang/Integer/valueOf(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/List/get(int)
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/findSwapTargets(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/getLeft()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#java/lang/Math/signum(float)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getParent()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/performHapticFeedback(int)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#java/util/List/add(java.lang.Object)
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getTop()
android/support/v7/widget/helper/ItemTouchHelper/select(android.support.v7.widget.RecyclerView$ViewHolder,int)#android/view/View/getLeft()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getName()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/ProviderInfo/loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/pm/PackageManager/resolveContentProvider(java.lang.String,int)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/next()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/res/XmlResourceParser/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getPackageManager()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getCacheDir()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getFilesDir()
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider/parsePathStrategy(android.content.Context,java.lang.String)#android/content/Context/getExternalMediaDirs()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/delete(int,int)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(long)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(java.lang.StringBuffer)
com/itextpdf/text/pdf/PdfWriter$PdfBody$PdfCrossReference/toPdf(java.io.OutputStream)#java/lang/StringBuffer/append(java.lang.String)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/util/regex/Matcher/appendTail(java.lang.StringBuffer)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/lang/String/charAt(int)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/util/regex/Matcher/appendReplacement(java.lang.StringBuffer,java.lang.String)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/lang/StringBuffer/toString()
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/util/regex/Matcher/group()
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/util/regex/Matcher/find()
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/common/util/JsonUtils/escapeString(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/util/regex/Matcher/appendTail(java.lang.StringBuffer)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/lang/String/charAt(int)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/util/regex/Matcher/appendReplacement(java.lang.StringBuffer,java.lang.String)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/lang/StringBuffer/toString()
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/util/regex/Matcher/group()
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/util/regex/Matcher/find()
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/common/util/JsonUtils/unescapeString(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONObject/has(java.lang.String)
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONObject/length()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONObject/keys()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONArray/length()
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONObject/get(java.lang.String)
com/google/android/gms/common/util/JsonUtils/areJsonValuesEquivalent(java.lang.Object,java.lang.Object)#org/json/JSONArray/get(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/Character/getType(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/appendCodePoint(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/util/Random/nextInt(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/Character/isDigit(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/Character/isLetter(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/Character/charCount(int)
org/apache/commons/lang3/RandomStringUtils/random(int,int,int,boolean,boolean,char[],java.util.Random)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/equals(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/concurrent/locks/ReentrantLock/ReentrantLock()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/String/length()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/isEmpty()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/values()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Iterator/next()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Map/keySet()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/iterator()
com/google/android/gms/common/api/GoogleApiClient$Builder/build()#java/util/Set/add(java.lang.Object)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getY()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/data/BubbleEntry/getX()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IBubbleDataSet)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForXValue(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getY()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/alpha(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/RGBToHSV(int,int,int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/BubbleChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Color/HSVToColor(int,float[])
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/BubbleEntry/getX()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/min(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/round(float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleEntry/getIcon()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/green(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/BubbleChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/BubbleData/getDataSets()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/blue(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/argb(int,int,int,int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/BubbleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Color/red(int)
com/github/mikephil/charting/renderer/BubbleChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IBubbleDataSet/getAxisDependency()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/Iterator/hasNext()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/size()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/Iterator/next()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#com/github/mikephil/charting/highlight/CombinedHighlighter/buildHighlights(com.github.mikephil.charting.interfaces.datasets.IDataSet,int,float,com.github.mikephil.charting.data.DataSet$Rounding)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/clear()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/get(int)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/iterator()
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#com/github/mikephil/charting/data/BarLineScatterCandleBubbleData/getDataSetByIndex(int)
com/github/mikephil/charting/highlight/CombinedHighlighter/getHighlightsAtXValue(float,float,float)#java/util/List/add(java.lang.Object)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Collections/emptyMap()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/String/split(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/useDelimiter(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/Scanner(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/String/length()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/net/URI/getRawQuery()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/HashMap/HashMap()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/hasNext()
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/util/HttpUtils/parse(java.net.URI,java.lang.String)#java/util/Scanner/next()
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/StringBuilder/append(java.lang.String)
io/sentry/connection/BufferedConnection$Flusher/run()#java/util/Iterator/next()
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/StringBuilder/append(long)
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/StringBuilder/StringBuilder()
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/StringBuilder/toString()
io/sentry/connection/BufferedConnection$Flusher/run()#java/util/Iterator/hasNext()
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/StringBuilder/append(java.lang.Object)
io/sentry/connection/BufferedConnection$Flusher/run()#java/lang/System/currentTimeMillis()
io/sentry/connection/BufferedConnection$Flusher/run()#java/util/Date/getTime()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IPieDataSet)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/next()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/List/iterator()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/eraseColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#android/graphics/Bitmap/getWidth()
com/github/mikephil/charting/renderer/PieChartRenderer/drawData(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/arcTo(android.graphics.RectF,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/close()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Math/max(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/set(float,float,float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Double/isNaN(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/abs(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/PieChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieEntry/getY()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieEntry/getIcon()
com/github/mikephil/charting/renderer/PieChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/PieData/getDataSets()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/CharSequence/length()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/addOval(android.graphics.RectF,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/StaticLayout(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/ceil(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Object/equals(java.lang.Object)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/getHeight()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/width()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#java/lang/Math/max(double,double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/RectF/height()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/PieChartRenderer/drawCenterText(android.graphics.Canvas)#android/text/StaticLayout/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getColor(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getData()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Double/isNaN(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/abs(float)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/cos(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/isVisible()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IPieDataSet/getEntryCount()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/charts/PieChart/getRotationAngle()
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/toRadians(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#java/lang/Math/sin(double)
com/github/mikephil/charting/renderer/PieChartRenderer/drawRoundedSlices(android.graphics.Canvas)#com/github/mikephil/charting/data/Entry/getY()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getStyle()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawColor(int)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/clipPath(android.graphics.Path)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/getColor()
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/LineRadarRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/io/PrintStream/print(java.lang.String)
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Thread/getName()
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/getMessage()
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/StringBuilder()
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Boolean/booleanValue()
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Throwable/printStackTrace(java.io.PrintStream)
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/StringBuilder/toString()
io/sentry/SentryUncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)#java/lang/Thread$UncaughtExceptionHandler/uncaughtException(java.lang.Thread,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaak/zac(int)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaak/zac(int)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/Exception/Exception()
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaak/zac(int)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/clear()
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/Integer/valueOf(int)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Set/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/Boolean/booleanValue()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/lang/System/identityHashCode(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/size()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/HashMap/HashMap()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaak/begin()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/isEmpty()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/size()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/ArrayList/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/zaap()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/HashSet/HashSet(java.util.Collection)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Set/addAll(java.util.Collection)
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Collections/emptySet()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaak/zaat()#java/util/Map/keySet()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Math/max(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/addTemplateReference(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfName,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Math/min(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PushbuttonField/getRealFont()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PushbuttonField/getBorderAppearance()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/Image/getHeight()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#java/lang/String/length()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/addTemplate(com.itextpdf.text.pdf.PdfTemplate,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfTemplate/addImage(com.itextpdf.text.Image,float,float,float,float,float,float)
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/getBoundingBox()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/resetGrayFill()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PushbuttonField/getAppearance()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setFlags(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKNormalIcon(com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKRotation(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKTextPosition(int)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PushbuttonField/getRealFont()
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKIconFit(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfName,float,float,boolean)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKNormalCaption(java.lang.String)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setMKBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setBorderStyle(com.itextpdf.text.pdf.PdfBorderDictionary)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PushbuttonField/getField()#com/itextpdf/text/pdf/PdfAppearance/setColorFill(com.itextpdf.text.BaseColor)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getFormattedLabel(int)
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRendererRadarChart/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PdfStream/getAsArray(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/HashSet/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map/keySet()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/lang/Math/abs(float)
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/flatFields()#com/itextpdf/text/pdf/PdfIndirectReference/isIndirect()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addFileAttachments()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfFormField/getIndirectReference()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/HashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfAnnotation/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation,com.itextpdf.text.pdf.PdfDictionary)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addSharedObjectsToBody()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/LinkedHashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfOCProperties/getAsDict(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/createXmpWriter(java.io.ByteArrayOutputStream,com.itextpdf.text.pdf.PdfDictionary)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/getPdfVersion()
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfOCProperties/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/close(java.util.Map)#com/itextpdf/text/pdf/PdfStamperImp/fillOCProperties(boolean)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/LinkedHashSet/isEmpty()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#com/itextpdf/text/pdf/PdfLayer/merge(com.itextpdf.text.pdf.PdfDictionary)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/values()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/LinkedHashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/readOCProperties()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#com/itextpdf/text/pdf/PdfLayer/getAsString(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/LinkedHashSet/iterator()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/getPdfLayers()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/getISOBytes(java.lang.String)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/writeKeyInfo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,com.itextpdf.text.pdf.PdfIndirectReference,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/isCloseStream()
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,boolean)
com/itextpdf/text/pdf/PdfStamperImp/close(com.itextpdf.text.pdf.PdfIndirectReference,int)#java/lang/String/valueOf(long)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/FdfReader/getCatalog()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/FdfReader/getPdfObject(int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#com/itextpdf/text/pdf/PdfStamperImp/addToBody(com.itextpdf.text.pdf.PdfObject,int)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfStamperImp/addComments(com.itextpdf.text.pdf.FdfReader)#java/util/HashMap/get(java.lang.Object)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/view/View/getId()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/view/View/getContext()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/ContextWrapper/getBaseContext()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/Context/isRestricted()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/res/Resources/getResourceEntryName(int)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/Object/getClass()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatViewInflater$DeclaredOnClickListener/resolveMethod(android.content.Context,java.lang.String)#android/content/Context/getResources()
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setVisibility(int)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/support/v7/widget/ActivityChooserView/getContext()
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/content/Context/getString(int,java.lang.Object[])
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/getVisibility()
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/view/View/setBackgroundDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/content/Context/getPackageManager()
android/support/v7/widget/ActivityChooserView/updateAppearance()#android/content/pm/ResolveInfo/loadIcon(android.content.pm.PackageManager)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/Object/hashCode()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#android/view/View/getParent()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/Integer/toHexString(int)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
android/support/v7/widget/RecyclerView$ViewHolder/toString()#java/lang/StringBuilder/append(long)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getRepeatCount()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/Window/getDecorView()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/isCtrlPressed()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/isModifierKey(int)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/support/v7/app/AppCompatActivity/getWindow()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/View/dispatchKeyShortcutEvent(android.view.KeyEvent)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/metaStateHasNoModifiers(int)
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getMetaState()
android/support/v7/app/AppCompatActivity/performMenuItemShortcut(int,android.view.KeyEvent)#android/view/KeyEvent/getKeyCode()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_getByteArrayBuilder()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.Object)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_constructError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/IllegalArgumentException/getMessage()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/append(char)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/io/DataInput/readUnsignedByte()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/lang/Character/isJavaIdentifierStart(int)
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8DataInputJsonParser/resetAsNaN(java.lang.String,double)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getChildAt(int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getChildCount()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/BaseTransientBottomBar$SnackbarBaseLayout/onMeasure(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getPaddingLeft()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getPaddingRight()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/design/widget/Snackbar$SnackbarLayout/onMeasure(int,int)#android/support/design/widget/Snackbar$SnackbarLayout/getMeasuredWidth()
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/Class/asSubclass(java.lang.Class)
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#android/content/Context/getClassLoader()
android/support/v7/app/AppCompatViewInflater/createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Bundle/Bundle()
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Bundle/putAll(android.os.Bundle)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Messenger/getBinder()
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#java/util/List/add(java.lang.Object)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/support/v4/media/session/IMediaSession/asBinder()
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Messenger/Messenger(android.os.Handler)
android/support/v4/media/MediaBrowserServiceCompat$MediaBrowserServiceImplApi21/onGetRoot(java.lang.String,int,android.os.Bundle)#android/os/Bundle/remove(java.lang.String)
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/util/Iterator/next()
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/reflect/Method/getName()
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/reflect/Method/getParameterTypes()
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/lang/reflect/Method/getDeclaringClass()
org/apache/commons/lang3/reflect/MethodUtils/getAnnotation(java.lang.reflect.Method,java.lang.Class,boolean,boolean)#java/util/List/iterator()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/reflect/Method/isAccessible()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/Class/getName()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/Object/getClass()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/MethodUtils/invokeMethod(java.lang.Object,boolean,java.lang.String,java.lang.Object[],java.lang.Class[])#java/lang/reflect/Method/setAccessible(boolean)
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getMethods()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getSuperclass()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getComponentType()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/reflect/Method/isVarArgs()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/reflect/Method/getName()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/reflect/Method/getParameterTypes()
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/String/equals(java.lang.Object)
org/apache/commons/lang3/reflect/MethodUtils/getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])#java/lang/Class/getName()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/lang/Class/getMethods()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/Iterator/hasNext()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/lang/Class/getDeclaredMethods()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/Iterator/next()
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/List/add(int,java.lang.Object)
org/apache/commons/lang3/reflect/MethodUtils/getMethodsListWithAnnotation(java.lang.Class,java.lang.Class,boolean,boolean)#java/util/List/iterator()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/util/Iterator/hasNext()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/util/Iterator/next()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/lang/reflect/Method/getGenericParameterTypes()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/lang/reflect/Method/getParameterTypes()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/lang/reflect/Method/getDeclaringClass()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/util/Set/add(java.lang.Object)
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/util/LinkedHashSet/LinkedHashSet()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/lang/Iterable/iterator()
org/apache/commons/lang3/reflect/MethodUtils/getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)#java/lang/reflect/Method/getName()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/List/size()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/Iterator/next()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/Set/iterator()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/List/get(int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/lang/StringBuilder/toString()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/Map$Entry/getKey()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle)#java/util/Map$Entry/getValue()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/remove(int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/size()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/util/List/get(int)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/toString()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserCompat$MediaBrowserImplBase/unsubscribe(java.lang.String,android.support.v4.media.MediaBrowserCompat$SubscriptionCallback)#android/util/Log/d(java.lang.String,java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/flush()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/io/ByteArrayOutputStream/close()
com/itextpdf/text/xml/xmp/XmpReader/serializeDoc()#java/lang/String/getBytes()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Document/createTextNode(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/setPrefix(java.lang.String)
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/Node/getAttributes()
com/itextpdf/text/xml/xmp/XmpReader/add(java.lang.String,java.lang.String,java.lang.String,java.lang.String)#org/w3c/dom/NamedNodeMap/item(int)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/resetAsNaN(java.lang.String,double)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#java/lang/StringBuilder/append(char)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#java/lang/Character/isJavaIdentifierStart(int)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_handleOddValue(int)#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/IllegalArgumentException/getMessage()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_constructError(java.lang.String)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_getByteArrayBuilder()
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/ReaderBasedJsonParser/_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.Object)
com/fasterxml/jackson/core/json/ReaderBasedJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#java/lang/Math/min(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/getYOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendVerticalAlignment/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/charts/BarLineChartBase/getXAxis()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/getXOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend$LegendHorizontalAlignment/ordinal()
com/github/mikephil/charting/charts/BarLineChartBase/calculateLegendOffsets(android.graphics.RectF)#com/github/mikephil/charting/components/Legend/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraTopOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraLeftOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraBottomOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#com/github/mikephil/charting/charts/BarLineChartBase/getExtraRightOffset()
com/github/mikephil/charting/charts/BarLineChartBase/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/valuesToHighlight()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/System/currentTimeMillis()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLimitLinesBehindDataEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawDescription(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/append(long)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/charts/BarLineChartBase/drawMarkers(android.graphics.Canvas)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#com/github/mikephil/charting/renderer/YAxisRenderer/computeAxis(float,float,boolean)
com/github/mikephil/charting/charts/BarLineChartBase/onDraw(android.graphics.Canvas)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getEras()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getAmPmStrings()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/String/length()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getWeekdays()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/DateFormatSymbols(java.util.Locale)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getShortMonths()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/String/charAt(int)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/String/substring(int)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getMonths()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/text/DateFormatSymbols/getShortWeekdays()
org/apache/commons/lang3/time/FastDatePrinter/parsePattern()#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map/size()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Iterator/next()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Set/iterator()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/append(char)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/io/BufferedReader/close()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Stack/push(java.lang.Object)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/io/BufferedReader/BufferedReader(java.io.Reader,int)
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map$Entry/getValue()
com/google/android/gms/common/server/response/FastParser/parse(java.io.InputStream,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map/entrySet()
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/append(char)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Stack/push(java.lang.Object)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/String/length()
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/HashMap/HashMap()
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastParser/zaa(java.io.BufferedReader,com.google.android.gms.common.server.response.FastJsonResponse)#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/Character/isISOControl(char)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/io/BufferedReader/read(char[])
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/StringBuilder/append(char)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/util/Stack/push(java.lang.Object)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/Integer/valueOf(int)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/io/BufferedReader/reset()
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/io/BufferedReader/mark(int)
com/google/android/gms/common/server/response/FastParser/zab(java.io.BufferedReader)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/length()
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/toString()
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/charAt(int)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/Integer/parseInt(java.lang.String,int)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/subSequence(int,int)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/io/Writer/write(int)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/text/translate/UnicodeUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endTag(java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/remove(int)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Xml/newSerializer()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startTag(java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/setOutput(java.io.OutputStream,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(float)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/startDocument(java.lang.String,java.lang.Boolean)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/util/List/size()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/Context/openFileOutput(java.lang.String,int)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#android/content/ComponentName/flattenToString()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/endDocument()
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#org/xmlpull/v1/XmlSerializer/attribute(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/lang/String/valueOf(long)
android/support/v7/widget/ActivityChooserModel$PersistHistoryAsyncTask/doInBackground(java.lang.Object[])#java/io/FileOutputStream/close()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/optString(java.lang.String,java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONArray/getString(int)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/getString(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/util/Set/add(java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/lang/Long/parseLong(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/optString(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/JSONObject(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONArray/length()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#java/util/HashSet/HashSet()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zaa(java.lang.String)#org/json/JSONObject/getJSONArray(java.lang.String)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/put(java.lang.String,long)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/put(java.lang.String,java.lang.Object)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/List/size()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONObject/JSONObject()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONArray/JSONArray()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#android/net/Uri/toString()
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#java/util/Arrays/sort(java.lang.Object[],java.util.Comparator)
com/google/android/gms/auth/api/signin/GoogleSignInAccount/zad()#org/json/JSONArray/put(java.lang.Object)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Long/bitCount(long)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingRight()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/setPadding(int,int,int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildAt(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildCount()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingLeft()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/setMeasuredDimension(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingBottom()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/view/View/measure(int,int)
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getPaddingTop()
android/support/v7/widget/ActionMenuView/onMeasureExactFormat(int,int)#android/support/v7/widget/ActionMenuView/getChildMeasureSpec(int,int,int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getPaddingRight()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getChildCount()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getPaddingLeft()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getDividerWidth()
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionMenuView/getChildAt(int)
android/support/v7/widget/ActionMenuView/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/Class/getResourceAsStream(java.lang.String)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/String/length()
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/Properties/Properties()
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/concurrent/ConcurrentHashMap/containsKey(java.lang.Object)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/Properties/load(java.io.InputStream)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/util/Properties/getProperty(java.lang.String,java.lang.String)
com/google/android/gms/common/internal/LibraryVersion/getVersion(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Iterator/next()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Map/entrySet()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#com/itextpdf/text/pdf/CMapAwareDocumentFont/getByte2Uni()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#com/itextpdf/text/pdf/CMapAwareDocumentFont/getDiffmap()
com/itextpdf/text/pdf/CMapAwareDocumentFont/processUni2Byte()#java/util/Set/iterator()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ParseTypeResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(char)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/ParseRDF/rdf_ResourcePropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/ParseRDF/rdf_LiteralPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/hasChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_EmptyPropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/Iterator/hasNext()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/getLength()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeValue()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/removeNamedItem(java.lang.String)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/Iterator/next()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeName()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getPrefix()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/List/add(java.lang.Object)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getAttributes()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/NamedNodeMap/item(int)
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#java/util/List/iterator()
com/itextpdf/xmp/impl/ParseRDF/rdf_PropertyElement(com.itextpdf.xmp.impl.XMPMetaImpl,com.itextpdf.xmp.impl.XMPNode,org.w3c.dom.Node,boolean)#org/w3c/dom/Node/hasChildNodes()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/RuntimeException/getMessage()
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaco/handleMessage(android.os.Message)#android/util/Log/e(java.lang.String,java.lang.String)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/length()
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/StringBuffer(java.lang.String)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/String/indexOf(int,int)
com/itextpdf/text/xml/simpleparser/EntitiesToUnicode/decodeString(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Class/getFields()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/String/hashCode()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Field/getName()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#android/graphics/Rect/Rect()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/Object/getClass()
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Field/getInt(java.lang.Object)
android/support/v7/widget/DrawableUtils/getOpticalBounds(android.graphics.drawable.Drawable)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/resetAnchors()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setY(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/Exception/printStackTrace()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHeight()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setWidth(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getWidth()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/createObjectVariables(android.support.constraint.solver.LinearSystem)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/resetSolverVariables(android.support.constraint.solver.Cache)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getVerticalDimensionBehaviour()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/StringBuilder/append(java.lang.String)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/io/PrintStream/println(java.lang.String)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/Math/max(int,int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/updateDrawPosition()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHeight(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setX(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/List/size()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/ArrayList/size()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/StringBuilder/StringBuilder()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHorizontalDimensionBehaviour()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/List/clear()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/List/get(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/StringBuilder/append(java.lang.Object)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/List/add(int,java.lang.Object)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/updateFromSolver(android.support.constraint.solver.LinearSystem)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/util/ArrayList/get(int)
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#java/lang/StringBuilder/toString()
android/support/constraint/solver/widgets/ConstraintWidgetContainer/layout()#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getRootConstraintContainer()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#com/itextpdf/text/pdf/PdfDocument$PdfCatalog/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/TreeMap/isEmpty()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/TreeMap/entrySet()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/isEmpty()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/PdfDocument$PdfCatalog/addNames(java.util.TreeMap,java.util.HashMap,java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/size()
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/getBaseline()
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/ImageView/getLayoutParams()
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/setPivotY(float)
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/setPivotX(float)
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/support/design/internal/BottomNavigationItemView/refreshDrawableState()
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/setScaleY(float)
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/setVisibility(int)
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/getWidth()
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/ImageView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/design/internal/BottomNavigationItemView/setChecked(boolean)#android/widget/TextView/setScaleX(float)
com/google/firebase/iid/zzan/zzac()#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzan/zzac()#android/content/Context/getPackageManager()
com/google/firebase/iid/zzan/zzac()#android/content/pm/PackageManager/queryBroadcastReceivers(android.content.Intent,int)
com/google/firebase/iid/zzan/zzac()#java/util/List/size()
com/google/firebase/iid/zzan/zzac()#android/content/Intent/Intent(java.lang.String)
com/google/firebase/iid/zzan/zzac()#android/content/Intent/setPackage(java.lang.String)
com/google/firebase/iid/zzan/zzac()#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
com/google/firebase/iid/zzan/zzac()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/firebase/iid/zzan/zzac()#android/content/pm/PackageManager/checkPermission(java.lang.String,java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/text/TextPaint/setTextSize(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/util/Log/w(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/requestLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/isInLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/getLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/getPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/text/TextPaint/getTextSize()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/forceLayout()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setRawTextSize(float)#android/widget/TextView/invalidate()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getLineSpacingExtra()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setAlignment(android.text.Layout$Alignment)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setTextDirection(android.text.TextDirectionHeuristic)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getBreakStrategy()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/build()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setBreakStrategy(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setIncludePad(boolean)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setLineSpacing(float,float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getHyphenationFrequency()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getIncludeFontPadding()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/widget/TextView/getLineSpacingMultiplier()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#java/lang/CharSequence/length()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setMaxLines(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/obtain(java.lang.CharSequence,int,int,android.text.TextPaint,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)#android/text/StaticLayout$Builder/setHyphenationFrequency(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTotalPaddingRight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTextSize()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getCompoundPaddingTop()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getTotalPaddingLeft()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#java/lang/Boolean/valueOf(boolean)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/graphics/RectF/setEmpty()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getCompoundPaddingBottom()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#android/widget/TextView/getHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/autoSizeText()#java/lang/Boolean/booleanValue()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/setTextSize(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getHeight()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#java/lang/CharSequence/length()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getTransformationMethod()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#java/lang/Math/round(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getLineEnd(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getMaxLines()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/reset()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getText()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/set(android.text.TextPaint)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/TextPaint/TextPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/method/TransformationMethod/getTransformation(java.lang.CharSequence,android.view.View)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/text/StaticLayout/getLineCount()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/suggestedSizeFitsInSpace(int,android.graphics.RectF)#android/widget/TextView/getPaint()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getDimension(int,float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getResources()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/recycle()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/Resources/obtainTypedArray(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/Context/getResources()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/getInt(int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/res/TypedArray/hasValue(int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/loadFromAttributes(android.util.AttributeSet,int)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/Math/round(float)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/util/Arrays/copyOf(int[],int)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/util/Arrays/toString(int[])
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#java/lang/StringBuilder/toString()
android/support/v7/widget/AppCompatTextViewAutoSizeHelper/setAutoSizeTextTypeUniformWithPresetSizes(int[],int)#android/content/Context/getResources()
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/StringBuilder/append(int)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/String/length()
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/util/NoSuchElementException/NoSuchElementException(java.lang.String)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/Object/getClass()
com/google/android/gms/common/data/SingleRefDataBufferIterator/next()#java/lang/StringBuilder/toString()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#android/widget/LinearLayout/setContentDescription(java.lang.CharSequence)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/util/Calendar/getTime()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#android/widget/TextView/setText(java.lang.CharSequence)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/util/Calendar/getDisplayName(int,int,java.util.Locale)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/util/Calendar/getTimeInMillis()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/util/Locale/getDefault()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/lang/String/valueOf(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/text/SimpleDateFormat/format(java.util.Date)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getActivity()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getString(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/updateDisplay(boolean)#java/lang/String/toUpperCase(java.util.Locale)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/text/SimpleDateFormat/format(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/Long/valueOf(long)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/TextView/getVisibility()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/EditText/setText(java.lang.CharSequence)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/util/Calendar/getTimeInMillis()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/util/List/get(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#com/leavjenn/smoothdaterangepicker/date/AccessibleDateAnimator/setDisplayedChild(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/text/format/DateUtils/formatDateTime(android.content.Context,long,int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/StringBuilder/append(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#com/leavjenn/smoothdaterangepicker/date/SimpleDayPickerView/onDateChanged()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getActivity()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/EditText/requestFocus()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/EditText/selectAll()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/StringBuilder/StringBuilder()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/EditText/setVisibility(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#com/leavjenn/smoothdaterangepicker/date/AccessibleDateAnimator/setContentDescription(java.lang.CharSequence)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#android/widget/TextView/setVisibility(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/StringBuilder/append(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/StringBuilder/toString()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/setCurrentView(int)#java/lang/String/valueOf(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#android/widget/EditText/setText(java.lang.CharSequence)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#android/widget/EditText/hasSelection()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/lang/String/valueOf(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/util/Calendar/set(int,int,int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#android/widget/EditText/setSelection(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/util/Calendar/setTime(java.util.Date)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/util/Calendar/add(int,int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/util/Calendar/getTime()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/lang/String/length()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#android/widget/LinearLayout/isSelected()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onDurationChanged(int)#java/util/Calendar/getInstance()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/Resources/getString(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/AccessibleDateAnimator/setInAnimation(android.view.animation.Animation)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SimpleDayPickerView/setAccentColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getInt(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/isCancelable()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/AccessibleDateAnimator/addView(android.view.View)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/EditText/getBackground()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setBackgroundColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/EditText/setTextIsSelectable(boolean)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/Window/requestFeature(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getDialog()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/Resources/getColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getResources()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#java/util/ArrayList/ArrayList()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/app/Dialog/getWindow()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/AccessibleDateAnimator/setOutAnimation(android.view.animation.Animation)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/Button/setTypeface(android.graphics.Typeface)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/getActivity()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/content/res/Resources/getColorStateList(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getBoolean(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/EditText/setRawInputType(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/os/Bundle/getSerializable(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/View/setBackgroundColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/animation/AlphaAnimation/AlphaAnimation(float,float)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/View/findViewById(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/LinearLayout/setOnClickListener(android.view.View$OnClickListener)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/util/Log/d(java.lang.String,java.lang.String)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/view/animation/Animation/setDuration(long)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/Button/setTextColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#java/util/Calendar/getTimeInMillis()
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setOnClickListener(android.view.View$OnClickListener)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/EditText/setHighlightColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/graphics/drawable/Drawable/setColorFilter(int,android.graphics.PorterDuff$Mode)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/TextView/setBackgroundColor(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#com/leavjenn/smoothdaterangepicker/date/SimpleDayPickerView/postSetSelection(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/widget/Button/setVisibility(int)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#java/util/List/add(int,java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/SmoothDateRangePickerFragment/onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)#android/app/Activity/getResources()
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/ArrayList/contains(java.lang.Object)
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/List/get(int)
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/util/List/iterator()
com/itextpdf/text/pdf/PdfPTable/writeSelectedRows(int,int,int,int,float,float,com.itextpdf.text.pdf.PdfContentByte[],boolean)#java/lang/Math/min(int,int)
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/lang/Integer/valueOf(int)
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/leavjenn/smoothdaterangepicker/date/MonthView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/HashMap/clear()
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/leavjenn/smoothdaterangepicker/date/MonthView/invalidate()
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/HashMap/HashMap()
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/leavjenn/smoothdaterangepicker/date/MonthView/getTag()
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#com/leavjenn/smoothdaterangepicker/date/MonthView/setClickable(boolean)
com/leavjenn/smoothdaterangepicker/date/MonthAdapter/getView(int,android.view.View,android.view.ViewGroup)#android/widget/AbsListView$LayoutParams/AbsListView$LayoutParams(int,int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Map/size()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader$PageRefs/selectPages(java.util.List)#java/util/List/iterator()
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#java/util/Iterator/hasNext()
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/addCustomAction(android.media.session.PlaybackState$CustomAction)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/PlaybackState$Builder()
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/setErrorMessage(java.lang.CharSequence)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#java/util/Iterator/next()
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/setState(int,long,float,long)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/setActions(long)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/build()
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/setBufferedPosition(long)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#android/media/session/PlaybackState$Builder/setActiveQueueItemId(long)
android/support/v4/media/session/PlaybackStateCompatApi21/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long)#java/util/List/iterator()
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/util/List/remove(int)
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/util/List/size()
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/lang/String/substring(int,int)
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/lang/String/substring(int)
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/lang/String/toCharArray()
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/lang/String/String(char[],int,int)
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/text/StrSubstitutor/substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)#java/lang/String/length()
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#io/sentry/android/AndroidSentryClientFactory/getBufferSize(io.sentry.dsn.Dsn)
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#android/content/Context/getCacheDir()
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/io/File/File(java.lang.String)
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/io/File/File(java.lang.String,java.lang.String)
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/io/File/getAbsolutePath()
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/lang/StringBuilder/toString()
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#java/lang/StringBuilder/StringBuilder()
io/sentry/android/AndroidSentryClientFactory/getBuffer(io.sentry.dsn.Dsn)#android/util/Log/d(java.lang.String,java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/String/equalsIgnoreCase(java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/Object/toString()
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/StringBuilder/append(java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#android/util/Log/e(java.lang.String,java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/StringBuilder/append(java.lang.Object)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/StringBuilder/toString()
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#android/util/Log/w(java.lang.String,java.lang.String)
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#java/lang/StringBuilder/StringBuilder()
io/sentry/android/AndroidSentryClientFactory/createSentryClient(io.sentry.dsn.Dsn)#android/util/Log/d(java.lang.String,java.lang.String)
io/sentry/jul/SentryHandler/retrieveProperties()#java/util/logging/LogManager/getLogManager()
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/Boolean/valueOf(java.lang.String)
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/StringBuilder/append(java.lang.String)
io/sentry/jul/SentryHandler/retrieveProperties()#java/util/logging/LogManager/getProperty(java.lang.String)
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/Class/getName()
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/StringBuilder/StringBuilder()
io/sentry/jul/SentryHandler/retrieveProperties()#io/sentry/jul/SentryHandler/setLevel(java.util.logging.Level)
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/Boolean/booleanValue()
io/sentry/jul/SentryHandler/retrieveProperties()#java/lang/StringBuilder/toString()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getLoggerName()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Iterator/hasNext()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getThreadID()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getMillis()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Set/contains(java.lang.Object)
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Map$Entry/getKey()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getThrown()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Iterator/next()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getLevel()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getParameters()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getMessage()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Set/iterator()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/ResourceBundle/containsKey(java.lang.String)
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Date/Date(long)
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/logging/LogRecord/getResourceBundle()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/lang/Integer/valueOf(int)
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Map$Entry/getValue()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/Map/entrySet()
io/sentry/jul/SentryHandler/createEventBuilder(java.util.logging.LogRecord)#java/util/ResourceBundle/getString(java.lang.String)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getDownTime()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTapEvent(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageAtTime(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/removeMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/hasMessages(int)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onSingleTapUp(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onDoubleTap(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnDoubleTapListener/onSingleTapConfirmed(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/os/Handler/sendEmptyMessageDelayed(int,long)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onDown(android.view.MotionEvent)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/GestureDetector$OnGestureListener/onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)
android/support/v4/view/GestureDetectorCompat$GestureDetectorCompatImplBase/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/setAntiAlias(boolean)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#com/appyvet/materialrangebar/PinView/getResources()
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/content/res/Resources/getDisplayMetrics()
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/setColor(int)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/Paint()
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/setStrokeWidth(float)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#java/lang/Math/max(float,float)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/setTextSize(float)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/appyvet/materialrangebar/PinView/init(android.content.Context,float,float,int,int,float,int,int,float,float,float,boolean)#android/content/Context/getResources()
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/view/View/draw(android.graphics.Canvas)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#java/lang/String/length()
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
com/appyvet/materialrangebar/PinView/draw(android.graphics.Canvas)#android/graphics/Rect/width()
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/getName()
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/get(java.lang.Object)
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/AccessibleObject/setAccessible(java.lang.reflect.AccessibleObject[],boolean)
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/Modifier/isTransient(int)
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/Field/getModifiers()
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/InternalError/InternalError(java.lang.String)
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/reflect/Modifier/isStatic(int)
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/Class/getDeclaredFields()
org/apache/commons/lang3/builder/CompareToBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])#java/lang/String/contains(java.lang.CharSequence)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/toLowerCase()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/length()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/substring(int,int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/charAt(int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/String/substring(int)
com/itextpdf/text/html/HtmlUtilities/parseLength(java.lang.String,float)#java/lang/Float/floatValue()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/Properties/setProperty(java.lang.String,java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/length()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/Properties/Properties()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/HtmlUtilities/parseAttributes(java.lang.String)#java/lang/String/trim()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/Iterator/hasNext()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/isEmpty()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/Iterator/next()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArrayList(java.lang.String,java.util.ArrayList)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/size()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelableArray(java.lang.String,android.os.Parcelable[])
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/iterator()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/Bundle()
android/support/v4/app/NotificationCompat$WearableExtender/extend(android.support.v4.app.NotificationCompat$Builder)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/Cursor/moveToFirst()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentInformation(long)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/isNull(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getTournamentSeriesInformation(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/lang/Long/valueOf(long)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/content/ContentValues/ContentValues()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/createNewSerie(ar.com.tzulberti.archerytraining.model.tournament.Tournament)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#java/util/Map/get(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/TournamentDAO/getExistingTournaments()#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/setId(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/findViewById(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TextView/setTextColor(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/ImageView/setImageResource(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/getResources()
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/content/res/Resources/getColor(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/widget/TableLayout/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/renderInformation(java.io.Serializable,android.widget.TableLayout)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow$LayoutParams/TableRow$LayoutParams(int,int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/getString(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/playoff/ViewExistingPlayoffActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#java/util/Properties/getProperty(java.lang.String)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#java/lang/String/split(java.lang.String)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#android/content/res/AssetManager/open(java.lang.String)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#java/util/Properties/Properties()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#android/util/Log/d(java.lang.String,java.lang.String)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#java/util/Properties/load(java.io.InputStream)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#android/content/Context/getAssets()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#java/io/InputStream/close()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getProGuardUuids(android.content.Context)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/util/Map/put(java.lang.Object,java.lang.Object)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Long/valueOf(long)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Math/max(int,int)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Float/valueOf(float)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/util/Date/Date()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Boolean/valueOf(boolean)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Integer/valueOf(int)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/StringBuilder/append(java.lang.String)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Integer/toString(int)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/util/HashMap/HashMap()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/StringBuilder/StringBuilder()
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/Math/min(int,int)
io/sentry/android/event/helper/AndroidEventBuilderHelper/getContexts()#java/lang/StringBuilder/toString()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setContentView(android.view.View)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setCancelable(boolean)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getActivity()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/os/Bundle/getBundle(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/onRestoreInstanceState(android.os.Bundle)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOwnerActivity(android.app.Activity)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/support/v4/app/DialogFragment/getView()
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnCancelListener(android.content.DialogInterface$OnCancelListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/app/Dialog/setOnDismissListener(android.content.DialogInterface$OnDismissListener)
android/support/v4/app/DialogFragment/onActivityCreated(android.os.Bundle)#android/view/View/getParent()
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/os/PersistableBundle/PersistableBundle()
com/google/android/gms/measurement/internal/zzfj/zzh(long)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/job/JobInfo$Builder/setOverrideDeadline(long)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/job/JobInfo$Builder/setMinimumLatency(long)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/job/JobInfo$Builder/JobInfo$Builder(int,android.content.ComponentName)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/os/PersistableBundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#java/lang/Math/max(long,long)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/job/JobInfo$Builder/setExtras(android.os.PersistableBundle)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/AlarmManager/setInexactRepeating(int,long,long,android.app.PendingIntent)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/content/ComponentName/ComponentName(android.content.Context,java.lang.String)
com/google/android/gms/measurement/internal/zzfj/zzh(long)#android/app/job/JobInfo$Builder/build()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/ArrayList()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/List/isEmpty()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Map/keySet()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/size()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/List/add(java.lang.Object)
com/google/android/gms/common/api/internal/zaan/zaan()#java/util/ArrayList/get(int)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/webkit/WebView/loadData(java.lang.String,java.lang.String,java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/app/AlertDialog/show()
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/app/AlertDialog$Builder/setView(android.view.View)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/LayoutInflater/from(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/app/AlertDialog$Builder/create()
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/support/v7/app/AppCompatActivity/onOptionsItemSelected(android.view.MenuItem)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/MenuItem/getItemId()
ar/com/tzulberti/archerytraining/activities/common/BaseArcheryTrainingActivity/onOptionsItemSelected(android.view.MenuItem)#android/view/View/findViewById(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/support/design/widget/CoordinatorLayout/getContext()
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/get(android.content.Context)
android/support/design/widget/HeaderBehavior/onInterceptTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/recycle()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/support/design/widget/CoordinatorLayout/getContext()
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/ViewConfiguration/get(android.content.Context)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/design/widget/HeaderBehavior/onTouchEvent(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/Character/isDigit(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/getInterletterValues(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/String(char[])
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/size()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/String/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/hyphenation/SimplePatternParser/normalizeException(java.util.ArrayList)#java/lang/StringBuffer/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/length()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/indexOf(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/verifyXPathRoot(java.lang.String,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/substring(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/xmp/impl/xpath/XMPPathParser/expandXPath(java.lang.String,java.lang.String)#java/lang/String/length()
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#java/util/Iterator/hasNext()
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/addCustomAction(android.media.session.PlaybackState$CustomAction)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/PlaybackState$Builder()
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setErrorMessage(java.lang.CharSequence)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#java/util/Iterator/next()
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setState(int,long,float,long)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setExtras(android.os.Bundle)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setActions(long)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/build()
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setBufferedPosition(long)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#android/media/session/PlaybackState$Builder/setActiveQueueItemId(long)
android/support/v4/media/session/PlaybackStateCompatApi22/newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)#java/util/List/iterator()
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/util/Iterator/hasNext()
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/util/Objects/toString(java.lang.Object,java.lang.String)
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/util/Arrays/asList(java.lang.Object[])
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/util/Iterator/next()
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/util/List/iterator()
org/apache/commons/lang3/StringUtils/joinWith(java.lang.String,java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/String/length()
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/isUpperCase(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/isLowerCase(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/String/codePointAt(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/isTitleCase(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/toUpperCase(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/charCount(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/Character/toLowerCase(int)
org/apache/commons/lang3/StringUtils/swapCase(java.lang.String)#java/lang/String/String(int[],int,int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/String/length()
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/String/isEmpty()
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/Math/min(int,int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/String/charAt(int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/String/indexOf(java.lang.String,int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/StringBuilder(int)
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/StringUtils/replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)#java/lang/String/indexOf(java.lang.String)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/String/length()
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/String/substring(int,int)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/String/substring(int)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/Integer/valueOf(int)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/StringUtils/abbreviate(java.lang.String,java.lang.String,int,int)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/length()
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/util/ArrayList/toArray(java.lang.Object[])
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/indexOf(java.lang.String,int)
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/substring(int)
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/equals(java.lang.Object)
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/util/ArrayList/size()
org/apache/commons/lang3/StringUtils/splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/substring(int,int)
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/Character/isWhitespace(char)
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/charAt(int)
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/length()
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/util/List/size()
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/util/List/toArray(java.lang.Object[])
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/substring(int,int)
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/util/List/add(java.lang.Object)
org/apache/commons/lang3/StringUtils/splitWorker(java.lang.String,java.lang.String,int,boolean)#java/lang/String/indexOf(int)
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/length()
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/toString()
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/Character/codePointCount(java.lang.CharSequence,int,int)
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/io/Writer/write(int)
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/StringEscapeUtils$CsvEscaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/io/Writer/write(java.lang.String)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/getString(int)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/getFloat(int)
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/dao/BowDAO/getBowsInformation(long)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.Float)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/lang/Long/valueOf(long)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/lang/Float/valueOf(float)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.String)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getWritableDatabase()
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/content/ContentValues/ContentValues()
ar/com/tzulberti/archerytraining/dao/BowDAO/createBow(java.lang.String,java.util.List)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/setInput(java.io.InputStream,java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getName()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParserException/XmlPullParserException(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/clear()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Long/parseLong(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/Float/parseFloat(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/content/Context/openFileInput(java.lang.String)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/util/List/add(java.lang.Object)
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/io/FileInputStream/close()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#android/util/Xml/newPullParser()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/next()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#java/lang/StringBuilder/toString()
android/support/v7/widget/ActivityChooserModel/readHistoricalDataImpl()#org/xmlpull/v1/XmlPullParser/getAttributeValue(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/finish()
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int)
com/itextpdf/text/pdf/PdfStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/size()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/write(byte[])
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/util/zip/DeflaterOutputStream/close()
com/itextpdf/text/pdf/PdfStream/flateCompress(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/subtract(java.math.BigDecimal)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/compareTo(java.math.BigDecimal)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/add(java.math.BigDecimal)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/BigDecimal(int)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/multiply(java.math.BigDecimal)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/BigDecimal(double)
com/google/android/gms/measurement/internal/zzm/zza(java.math.BigDecimal,com.google.android.gms.internal.measurement.zzfl,double)#java/math/BigDecimal/BigDecimal(java.lang.String)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/util/regex/Pattern/compile(java.lang.String,int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/util/regex/Matcher/matches()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/String/toUpperCase(java.util.Locale)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/util/List/contains(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,int,boolean,java.lang.String,java.util.List,java.lang.String)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/HashSet/HashSet()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/BitSet/get(int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Arrays/copyOf(java.lang.Object[],int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Map/get(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String,java.lang.Object[])
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/List/size()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Map/size()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Map/keySet()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/BitSet/BitSet()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Set/contains(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/content/ContentValues/put(java.lang.String,byte[])
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/content/ContentValues/ContentValues()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Collections/sort(java.util.List)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/BitSet/set(int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/database/sqlite/SQLiteDatabase/insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/BitSet/set(int,boolean)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Set/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/lang/Boolean/booleanValue()
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#java/util/Map/remove(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(java.lang.String,com.google.android.gms.internal.measurement.zzft[],com.google.android.gms.internal.measurement.zzfz[])#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/lang/Boolean/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/util/Map/get(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/util/HashSet/HashSet()
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/util/Set/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/lang/Boolean/booleanValue()
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/lang/Double/doubleValue()
com/google/android/gms/measurement/internal/zzm/zza(com.google.android.gms.internal.measurement.zzfj,java.lang.String,com.google.android.gms.internal.measurement.zzfu[],long)#java/util/Set/contains(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/InputStream/read()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/flush()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/println(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/println()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/PrintWriter/print(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/String/length()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/listContentStreamForPage(com.itextpdf.text.pdf.PdfReader,int,java.io.PrintWriter)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/Exception/printStackTrace(java.io.PrintStream)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/close()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/File/File(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/flush()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintWriter/PrintWriter(java.io.OutputStream)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/FileOutputStream/FileOutputStream(java.io.File)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/io/PrintStream/println(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/main(java.lang.String[])#java/lang/String/compareToIgnoreCase(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/length()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/Set/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/setLength(int)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/util/List/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getDictionaryDetail(com.itextpdf.text.pdf.PdfDictionary,int)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStream/getAsNumber(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/next()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/io/InputStream/read()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Set/iterator()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#com/itextpdf/text/pdf/PdfStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/parser/PdfContentReaderTool/getXObjectDetail(com.itextpdf.text.pdf.PdfDictionary)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/widget/RemoteViews/setOnClickPendingIntent(int,android.app.PendingIntent)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/widget/RemoteViews/addView(int,android.widget.RemoteViews)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/support/v4/media/app/NotificationCompat$MediaStyle/applyStandardTemplate(boolean,int,boolean)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/widget/RemoteViews/setInt(int,java.lang.String,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/widget/RemoteViews/removeAllViews(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#java/lang/Math/min(int,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#java/util/ArrayList/get(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/content/Context/getResources()
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/content/res/Resources/getInteger(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#android/widget/RemoteViews/setViewVisibility(int,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateBigContentView()#java/util/ArrayList/size()
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/content/res/Resources/getInteger(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/widget/RemoteViews/setOnClickPendingIntent(int,android.app.PendingIntent)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/lang/String/format(java.lang.String,java.lang.Object[])
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/widget/RemoteViews/addView(int,android.widget.RemoteViews)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/support/v4/media/app/NotificationCompat$MediaStyle/applyStandardTemplate(boolean,int,boolean)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/widget/RemoteViews/setInt(int,java.lang.String,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/lang/Math/min(int,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/util/ArrayList/get(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/content/Context/getResources()
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/widget/RemoteViews/setViewVisibility(int,int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/util/ArrayList/size()
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#java/lang/Integer/valueOf(int)
android/support/v4/media/app/NotificationCompat$MediaStyle/generateContentView()#android/widget/RemoteViews/removeAllViews(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/File(java.io.File,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/getEncodedPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/indexOf(int,int)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#android/net/Uri/decode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/lang/SecurityException/SecurityException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/util/HashMap/get(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getFileForUri(android.net.Uri)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/hasNext()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/HashMap/entrySet()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Iterator/next()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(char)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/Uri$Builder()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getKey()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/encodedPath(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/length()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/build()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri/encode(java.lang.String,java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Set/iterator()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/substring(int)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/util/Map$Entry/getValue()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/getUriForFile(java.io.File)#java/lang/String/endsWith(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/io/File/getCanonicalFile()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/content/FileProvider$SimplePathStrategy/addRoot(java.lang.String,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/WrappedDrawableApi14/setBounds(android.graphics.Rect)
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/WrappedDrawableApi14/setLevel(int)
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getLevel()
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getConstantState()
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/support/v4/graphics/drawable/WrappedDrawableApi14/invalidateSelf()
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getState()
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/isVisible()
android/support/v4/graphics/drawable/WrappedDrawableApi14/setWrappedDrawable(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getBounds()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#android/os/Parcel/dataSize()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/length()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/Integer/toHexString(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/toString()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#android/os/Parcel/dataPosition()
com/google/android/gms/common/internal/safeparcel/SafeParcelReader/validateObjectHeader(android.os.Parcel)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/String/String(char[],int,int)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Character/isWhitespace(char)
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/String/length()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/Iterator/next()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#com/itextpdf/text/Image/getWidth()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/util/List/iterator()
com/itextpdf/text/pdf/BidiLine/processLine(float,float,int,int,int,float,float,float)#java/lang/Boolean/booleanValue()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/Resources$Theme/obtainStyledAttributes(int[])
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/Context/getTheme()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/getDrawable(int)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/recycle()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/widget/OverScroller/OverScroller(android.content.Context)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/Context/getApplicationInfo()
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/content/res/TypedArray/getDimensionPixelSize(int,int)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/support/v7/widget/ActionBarOverlayLayout/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarOverlayLayout/init(android.content.Context)#android/support/v7/widget/ActionBarOverlayLayout/getContext()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingRight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/graphics/Rect/set(android.graphics.Rect)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingLeft()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getSuggestedMinimumWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingBottom()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredState()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/measureChildWithMargins(android.view.View,int,int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/setMeasuredDimension(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/graphics/Rect/equals(java.lang.Object)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getSuggestedMinimumHeight()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getVisibility()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingTop()
android/support/v7/widget/ActionBarOverlayLayout/onMeasure(int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredState()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingRight()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getChildAt(int)
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getChildCount()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingLeft()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingBottom()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredWidth()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarOverlayLayout/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarOverlayLayout/getPaddingTop()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/iterator()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/addLast(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/util/LinkedList/LinkedList()
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/pdf/CFFFont/getCID(java.lang.String)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/getResources()
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#android/content/res/Resources/getText(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#android/widget/TextView/setBackgroundResource(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity$3/start()
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#android/widget/TextView/setText(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startSeries()#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/getResources()
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#android/content/res/Resources/getText(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#java/lang/Integer/toString(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#android/widget/TextView/setBackgroundResource(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity$4/start()
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/retentions/RetentionExerciseActivity/startRepetition()#java/lang/String/valueOf(int)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/JsonReadContext/typeDesc()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportMismatchedEndMarker(int,char)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/JsonReadContext/inObject()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/close()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextToken()#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/resetAsNaN(java.lang.String,double)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/append(char)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportInvalidEOFInValue(com.fasterxml.jackson.core.JsonToken)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#java/lang/Character/isJavaIdentifierStart(int)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_handleUnexpectedValue(int)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/JsonReadContext/typeDesc()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportMismatchedEndMarker(int,char)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/JsonReadContext/inObject()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/close()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName()#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/JsonReadContext/typeDesc()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/JsonReadContext/inArray()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/JsonReadContext/inObject()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportMismatchedEndMarker(int,char)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportUnexpectedChar(int,java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/close()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/nextFieldName(com.fasterxml.jackson.core.SerializableString)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_reportError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/IllegalArgumentException/getMessage()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_constructError(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/StringBuilder()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.Object)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/toString()
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#java/lang/StringBuilder/append(java.lang.String)
com/fasterxml/jackson/core/json/UTF8StreamJsonParser/getBinaryValue(com.fasterxml.jackson.core.Base64Variant)#com/fasterxml/jackson/core/json/UTF8StreamJsonParser/_getByteArrayBuilder()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[],int,int)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/util/Log/e(java.lang.String,java.lang.String)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/graphics/Color/parseColor(java.lang.String)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getDimension(int,float)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getFloat(int,float)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getTextArray(int)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/String/length()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/CharSequence/toString()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getColor(int,int)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/util/HashMap/HashMap()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/util/ArrayList/add(java.lang.Object)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getBoolean(int,boolean)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#android/util/TypedValue/applyDimension(int,float,android.util.DisplayMetrics)
com/appyvet/materialrangebar/RangeBar/rangeBarInit(android.content.Context,android.util.AttributeSet)#java/lang/Integer/valueOf(int)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/StringBuilder/append(int)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#com/appyvet/materialrangebar/RangeBar/invalidate()
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#android/util/Log/e(java.lang.String,java.lang.String)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/StringBuilder/StringBuilder()
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/StringBuilder/append(float)
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#com/appyvet/materialrangebar/RangeBar/requestLayout()
com/appyvet/materialrangebar/RangeBar/setRangePinsByIndices(int,int)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/Object/toString()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/util/Iterator/hasNext()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/util/List/size()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/util/Iterator/next()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/length()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/util/List/iterator()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/exception/DefaultExceptionContext/getFormattedExceptionMessage(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#com/google/android/gms/dynamic/IObjectWrapper/asBinder()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/get(java.lang.Object)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/setAccessible(boolean)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/append(int)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/isAccessible()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/reflect/Field/isSynthetic()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/StringBuilder/toString()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/Object/getClass()
com/google/android/gms/dynamic/ObjectWrapper/unwrap(com.google.android.gms.dynamic.IObjectWrapper)#java/lang/Class/getDeclaredFields()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#android/content/ContentValues/size()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/Iterator/hasNext()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/Map$Entry/getKey()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/Map$Entry/getValue()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/Iterator/next()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/HashMap/HashMap(int)
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#android/content/ContentValues/valueSet()
com/google/android/gms/common/data/DataHolder$Builder/withRow(android.content.ContentValues)#java/util/Set/iterator()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/length()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/Integer/parseInt(java.lang.String,int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/charAt(int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/substring(int)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/Integer/parseInt(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createEncoding()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/toLowerCase()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/append(boolean)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/indexOf(java.lang.String)
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/BaseFont/createFont(java.lang.String,java.lang.String,boolean,boolean,byte[],byte[],boolean,boolean)#java/lang/String/endsWith(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getSimpleName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/length()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Integer/toHexString(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Class/getName()
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/lastIndexOf(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/String/substring(int)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/StringBuilder/append(char)
android/support/v4/util/DebugUtils/buildShortClassTag(java.lang.Object,java.lang.StringBuilder)#java/lang/Object/getClass()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/util/TypedValue/getFraction(float,float)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/content/res/Resources/getDisplayMetrics()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getContext()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/util/TypedValue/getDimension(android.util.DisplayMetrics)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/support/v7/widget/ContentFrameLayout/getMeasuredWidth()
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/widget/FrameLayout/onMeasure(int,int)
android/support/v7/widget/ContentFrameLayout/onMeasure(int,int)#android/content/Context/getResources()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getVerticalDimensionBehaviour()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getPaddingRight()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getPaddingLeft()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getPaddingBottom()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/getBaseline()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/measure(int,int)
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getPaddingTop()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/solver/widgets/ResolutionAnchor/isResolved()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/getMeasuredWidth()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/getVisibility()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHorizontalDimensionBehaviour()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/solver/widgets/ResolutionDimension/invalidate()
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/support/constraint/ConstraintLayout/getChildMeasureSpec(int,int,int)
android/support/constraint/ConstraintLayout/internalMeasureDimensions(int,int)#android/view/View/getMeasuredHeight()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/ConstraintLayout/getPaddingRight()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHeight(int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/ConstraintLayout/getLayoutParams()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/ConstraintLayout/getPaddingLeft()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/ConstraintLayout/getPaddingBottom()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#java/lang/Math/min(int,int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setMinWidth(int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/ConstraintLayout/getPaddingTop()
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setWidth(int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/constraint/ConstraintLayout/setSelfDimensionBehaviour(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setMinHeight(int)
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getPaddingTop()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getPaddingRight()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getPaddingLeft()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getPaddingBottom()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/getBaseline()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/measure(int,int)
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/getMeasuredHeight()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/getMeasuredWidth()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/view/View/getVisibility()
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintLayout/internalMeasureChildren(int,int)#android/support/constraint/ConstraintLayout/getChildMeasureSpec(int,int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setVerticalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getPaddingBottom()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHeight()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getPaddingTop()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setWidth(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getWidth()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getMeasuredWidth()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getVisibility()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/resolveSizeAndState(int,int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getVerticalDimensionBehaviour()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/setMeasuredDimension(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/combineMeasuredStates(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getPaddingRight()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHeight(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setY(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setX(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getLayoutDirection()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setMaxWidth(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getPaddingLeft()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#java/util/ArrayList/size()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setHorizontalDimensionBehaviour(android.support.constraint.solver.widgets.ConstraintWidget$DimensionBehaviour)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/getHorizontalDimensionBehaviour()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getBaseline()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/ConstraintLayout/getChildMeasureSpec(int,int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/measure(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#java/lang/System/currentTimeMillis()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ResolutionDimension/isResolved()
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setMaxHeight(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#java/lang/Math/min(int,int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#java/util/ArrayList/get(int)
android/support/constraint/ConstraintLayout/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/support/constraint/ConstraintLayout/getContext()
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/getDimensionPixelOffset(int,int)
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/support/constraint/solver/widgets/ConstraintWidgetContainer/setCompanionWidget(java.lang.Object)
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/support/constraint/ConstraintLayout/getId()
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/getInt(int,int)
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/getIndex(int)
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/getIndexCount()
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/constraint/ConstraintLayout/init(android.util.AttributeSet)#android/util/SparseArray/put(int,java.lang.Object)
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/view/View/setVisibility(int)
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/support/constraint/ConstraintLayout/isInEditMode()
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#java/util/ArrayList/get(int)
android/support/constraint/ConstraintLayout/onLayout(boolean,int,int,int,int)#java/util/ArrayList/size()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/support/constraint/ConstraintLayout/getWidth()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/support/constraint/ConstraintLayout/getHeight()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/view/View/getVisibility()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/Paint()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/support/constraint/ConstraintLayout/isInEditMode()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/support/constraint/ConstraintLayout/getChildAt(int)
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/support/constraint/ConstraintLayout/getChildCount()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/view/ViewGroup/dispatchDraw(android.graphics.Canvas)
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#java/lang/Integer/parseInt(java.lang.String)
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/view/View/getTag()
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#java/lang/String/split(java.lang.String)
android/support/constraint/ConstraintLayout/dispatchDraw(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/write(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/String/String(byte[],java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/io/InputStream/read()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/parse(com.itextpdf.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/Character/isWhitespace(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/length()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/io/BufferedReader/BufferedReader(java.io.Reader)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/indexOf(int)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/io/BufferedReader/read()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/append(char)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/toString()
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/xml/simpleparser/SimpleXMLParser/go(java.io.Reader)#java/lang/StringBuffer/setLength(int)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/round(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Paint/getStrokeWidth()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Double/isNaN(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/support/v7/graphics/drawable/DrawerArrowDrawable/getBounds()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/round(float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/restore()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Rect/centerX()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/rewind()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/cos(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/sqrt(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/rLineTo(float,float)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/close()
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#java/lang/Math/sin(double)
android/support/v7/graphics/drawable/DrawerArrowDrawable/draw(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#android/util/Pair/Pair(java.lang.Object,java.lang.Object)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/lang/String/length()
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#java/util/Map/get(java.lang.Object)
com/google/firebase/iid/zzaq/zza(java.lang.String,java.lang.String,com.google.firebase.iid.zzas)#android/util/Log/isLoggable(java.lang.String,int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancelAll(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/cancel(java.lang.String,int,java.lang.String)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/app/INotificationSideChannel$Stub/notify(java.lang.String,int,java.lang.String,android.app.Notification)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/app/INotificationSideChannel$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/size()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Math/max(float,float)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/lang/Boolean/valueOf(boolean)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/clear()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#com/github/mikephil/charting/components/Legend$LegendOrientation/ordinal()
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/get(int)
com/github/mikephil/charting/components/Legend/calculateDimensions(android.graphics.Paint,com.github.mikephil.charting.utils.ViewPortHandler)#java/util/List/set(int,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/append(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureTable(int,int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Collections/unmodifiableMap(java.util.Map)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/List/size()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Set/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/LinkedHashMap/LinkedHashMap()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getGlyphSubstitutionMap()#java/util/Map/keySet()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSetTable(int,int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/size()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readCoverageFormat(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readLigatureSubstitutionSubtable(int)#java/util/List/get(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readCoverageFormat(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/Arrays/asList(java.lang.Object[])
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/readSingleSubstitutionSubtable(int)#java/util/List/get(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Iterator/next()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/StringBuilder(int)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/List/iterator()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Character/charValue()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/List/isEmpty()
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/fonts/otf/GlyphSubstitutionTableReader/getTextFromGlyph(int,java.util.Map)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/toByteArray()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/ByteArrayOutputStream/writeTo(java.io.OutputStream)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/finish()
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater,int)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#com/itextpdf/text/pdf/PdfEFStream/superToPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)
com/itextpdf/text/pdf/PdfEFStream/toPdf(com.itextpdf.text.pdf.PdfWriter,java.io.OutputStream)#java/io/OutputStream/write(byte[],int,int)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/remove(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/keys()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/Properties()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/io/InputStream/close()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Properties/load(java.io.InputStream)
com/itextpdf/text/pdf/CJKFont/readFontProperties(java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getRegistry()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getOrdering()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getOrdering()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getSupplement()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidByte/getRegistry()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/CJKFont/getCIDFont(com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.IntHashtable)#com/itextpdf/text/pdf/fonts/cmaps/CMapCidUni/getSupplement()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/getProperty(java.lang.String)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/lang/String/split(java.lang.String)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/lang/String/length()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/Properties()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/io/InputStream/close()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Set/iterator()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/keySet()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Set/add(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Iterator/next()
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/CJKFont/loadRegistry()#java/util/Properties/load(java.io.InputStream)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Set/contains(java.lang.Object)
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Set/iterator()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/CJKFont/GetCompatibleFont(java.lang.String)#java/util/HashMap/get(java.lang.Object)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Paint/setColor(int)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Paint/setShadowLayer(float,float,float,int)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Matrix/setTranslate(float,float)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Matrix/Matrix()
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Canvas/setBitmap(android.graphics.Bitmap)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/getHeight()
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/BitmapShader/setLocalMatrix(android.graphics.Matrix)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Bitmap/getWidth()
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Paint/clearShadowLayer()
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/BitmapShader/BitmapShader(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#android/graphics/Paint/Paint(int)
android/support/v4/graphics/drawable/IconCompat/createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean)#java/lang/Math/min(int,int)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/content/Intent$ShortcutIconResource/fromContext(android.content.Context,int)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/content/Context/getSystemService(java.lang.String)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Bitmap/copy(android.graphics.Bitmap$Config,boolean)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Bitmap/getHeight()
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Bitmap/getWidth()
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/graphics/Bitmap/getConfig()
android/support/v4/graphics/drawable/IconCompat/addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable)#android/app/ActivityManager/getLauncherLargeIconSize()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Set/addAll(java.util.Collection)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/size()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/valueOf(char)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/String(char[])
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/TreeSet/TreeSet(java.util.Comparator)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/charAt(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Map/keySet()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/List/get(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/FontDetails/convertToBytesAfterGlyphSubstitution(java.lang.String)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#com/itextpdf/text/pdf/TrueTypeFontUnicode/getGlyphWidth(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/String/getBytes(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/FontDetails/convertToBytesGid(java.lang.String)#java/lang/String/toCharArray()
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(int[],int[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(boolean[],boolean[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/lang/Class/isAnnotation()
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(short[],short[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(float[],float[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(long[],long[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(char[],char[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(byte[],byte[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object)#java/util/Arrays/equals(double[],double[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(byte[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(int[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(long[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(boolean[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(char[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(java.lang.Object[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(double[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(float[])
org/apache/commons/lang3/AnnotationUtils/arrayMemberHash(java.lang.Class,java.lang.Object)#java/util/Arrays/hashCode(short[])
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setBackgroundResource(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/TextView(android.content.Context)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setId(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setTextColor(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TableRow/setPadding(int,int,int,int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setTextSize(int,float)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/getBackground()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setPadding(int,int,int,int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/renderRow(java.io.Serializable,android.widget.TableRow)#android/widget/TextView/setGravity(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setIcon(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setPositiveButton(int,android.content.DialogInterface$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/startActivity(android.content.Intent)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/view/View/getId()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setMessage(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#java/util/List/get(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/show()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/AlertDialog$Builder(android.content.Context)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/content/Intent/Intent(android.content.Context,java.lang.Class)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setTitle(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/app/AlertDialog$Builder/setNegativeButton(int,android.content.DialogInterface$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/onClick(android.view.View)#android/content/Intent/putExtra(java.lang.String,java.io.Serializable)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/content/res/Resources/getColor(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/view/View/inflate(android.content.Context,int,android.view.ViewGroup)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/findViewById(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TextView/setTextColor(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#android/widget/ImageView/setImageResource(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/text/SimpleDateFormat/format(java.util.Date)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsBeforeData(android.widget.TableLayout)#ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/getResources()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow$LayoutParams/TableRow$LayoutParams(int,int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#java/util/List/isEmpty()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/getBackground()
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setId(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableLayout/addView(android.view.View)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/setText(int)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/Button/Button(android.content.Context)
ar/com/tzulberti/archerytraining/activities/playoff/ViewPlayoffSeriesActivity/addButtonsAfterData(android.widget.TableLayout)#android/widget/TableRow/TableRow(android.content.Context)
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/SidePropagation/getViewVisibility(android.support.transition.TransitionValues)
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getLocationOnScreen(int[])
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/SidePropagation/getViewX(android.support.transition.TransitionValues)
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getWidth()
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Math/round(float)
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/SidePropagation/getViewY(android.support.transition.TransitionValues)
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getTranslationX()
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getHeight()
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/centerX()
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getTranslationY()
android/support/transition/SidePropagation/getStartDelay(android.view.ViewGroup,android.support.transition.Transition,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/centerY()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/getPosTan(float,float[],float[])
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/nextContour()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/PathMeasure(android.graphics.Path,boolean)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/Math/abs(float)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/Math/min(int,int)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#android/graphics/PathMeasure/getLength()
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/append(float)
android/support/graphics/drawable/PathInterpolatorCompat/initPath(android.graphics.Path)#java/lang/StringBuilder/toString()
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/drawable/Drawable/mutate()
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/content/res/Resources/getDrawable(int)
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/content/Context/getResources()
android/support/v4/app/NotificationCompat$Style/createIconWithBackground(int,int,int,int)#android/graphics/drawable/Drawable/setFilterBitmap(boolean)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setTextViewText(int,java.lang.CharSequence)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/content/res/Resources/getString(int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/content/Context/getPackageName()
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/RemoteViews(java.lang.String,int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#java/text/NumberFormat/format(long)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/content/Context/getResources()
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/os/SystemClock/elapsedRealtime()
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/content/res/Resources/getInteger(int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/content/res/Resources/getDimensionPixelSize(int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setViewVisibility(int,int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setViewPadding(int,int,int,int,int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#java/text/NumberFormat/getIntegerInstance()
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setImageViewBitmap(int,android.graphics.Bitmap)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setBoolean(int,java.lang.String,boolean)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setInt(int,java.lang.String,int)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#java/lang/System/currentTimeMillis()
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setTextViewTextSize(int,int,float)
android/support/v4/app/NotificationCompat$Style/applyStandardTemplate(boolean,int,boolean)#android/widget/RemoteViews/setLong(int,java.lang.String,long)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/content/Context/getResources()
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/mutate()
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/content/res/Resources/getDrawable(int)
android/support/v4/app/NotificationCompat$Style/createColoredBitmap(int,int,int)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#android/os/Looper/getMainLooper()
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#java/lang/StringBuilder/append(int)
android/support/v4/app/LoaderManagerImpl/destroyLoader(int)#android/os/Looper/myLooper()
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/Class/isMemberClass()
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/Class/getModifiers()
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/reflect/Modifier/isStatic(int)
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/StringBuilder/toString()
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/LoaderManagerImpl/createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks,android.support.v4.content.Loader)#java/lang/Object/getClass()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/view/menu/StandardMenuPopup/getEpicenterBounds()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/FrameLayout/findViewById(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/View/getViewTreeObserver()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setEpicenterBounds(android.graphics.Rect)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setDropDownGravity(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setContentWidth(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/view/menu/StandardMenuPopup/measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/View/addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/FrameLayout/setEnabled(boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setInputMethodMode(int)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/ListView/addHeaderView(android.view.View,java.lang.Object,boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/getListView()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/show()
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setModal(boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setAnchorView(android.view.View)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setAdapter(android.widget.ListAdapter)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/view/ViewTreeObserver/addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/support/v7/widget/MenuPopupWindow/setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
android/support/v7/view/menu/StandardMenuPopup/tryShow()#android/widget/ListView/setOnKeyListener(android.view.View$OnKeyListener)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/RandomAccessFile/close()
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/nio/channels/FileChannel/lock()
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/RandomAccessFile/RandomAccessFile(java.io.File,java.lang.String)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/File/canRead()
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/net/URL/URL(java.lang.String)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/FileInputStream/FileInputStream(java.lang.String)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/File/File(java.lang.String)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/io/RandomAccessSourceFactory/createBestSource(java.lang.String)#java/io/RandomAccessFile/getChannel()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#java/lang/Integer/intValue()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/res/Resources/getDisplayMetrics()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/Log/i(java.lang.String,java.lang.String)
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/TypedValue/getDimension(android.util.DisplayMetrics)
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/Context/getTheme()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/util/TypedValue/TypedValue()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/Context/getResources()
android/support/v4/view/ViewConfigurationCompat/getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/widget/RemoteViews/setContentDescription(int,java.lang.CharSequence)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/content/Context/getPackageName()
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/widget/RemoteViews/RemoteViews(java.lang.String,int)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/widget/RemoteViews/setImageViewBitmap(int,android.graphics.Bitmap)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/createColoredBitmap(int,int)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/content/Context/getResources()
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/widget/RemoteViews/setTextViewText(int,java.lang.CharSequence)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/content/res/Resources/getColor(int)
android/support/v4/app/NotificationCompat$DecoratedCustomViewStyle/generateActionButton(android.support.v4.app.NotificationCompat$Action)#android/widget/RemoteViews/setOnClickPendingIntent(int,android.app.PendingIntent)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setAdapter(android.widget.ListAdapter)
android/support/v7/app/AlertController/setupView()#android/view/View/setVisibility(int)
android/support/v7/app/AlertController/setupView()#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setItemChecked(int,boolean)
android/support/v7/app/AlertController/setupView()#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/view/ViewGroup/getVisibility()
android/support/v7/app/AlertController/setupView()#android/view/View/findViewById(int)
android/support/v7/app/AlertController/setupView()#android/support/v4/widget/NestedScrollView/setClipToPadding(boolean)
android/support/v7/app/AlertController/setupView()#android/widget/ListView/setSelection(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup/getLayoutParams()
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/widget/FrameLayout/addView(android.view.View,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/LayoutInflater/from(android.content.Context)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/view/Window/setFlags(int,int)
android/support/v7/app/AlertController/setupCustomContent(android.view.ViewGroup)#android/widget/FrameLayout/setPadding(int,int,int,int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingRight()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/View/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/TextView/setPadding(int,int,int,int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setVisibility(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingLeft()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/setImageResource(int)
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingTop()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/widget/ImageView/getPaddingBottom()
android/support/v7/app/AlertController/setupTitle(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/removeViewAt(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/setVisibility(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/indexOfChild(android.view.View)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/findViewById(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/Window/findViewById(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/widget/TextView/setVisibility(int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup/addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/view/ViewGroup$LayoutParams/ViewGroup$LayoutParams(int,int)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/setFocusable(boolean)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/removeView(android.view.View)
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/support/v4/widget/NestedScrollView/getParent()
android/support/v7/app/AlertController/setupContent(android.view.ViewGroup)#android/widget/TextView/setText(java.lang.CharSequence)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/Deflater/Deflater(int)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/DeflaterOutputStream(java.io.OutputStream,java.util.zip.Deflater)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#com/itextpdf/text/pdf/PRStream/remove(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/write(byte[])
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/Deflater/end()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#com/itextpdf/text/pdf/PRStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/util/zip/DeflaterOutputStream/close()
com/itextpdf/text/pdf/PRStream/setData(byte[],boolean,int)#java/io/ByteArrayOutputStream/toByteArray()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setAlpha(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getMaxEntryCountSet()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawWeb(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillDrawable()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getLineWidth()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,android.graphics.drawable.Drawable)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillAlpha()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getFillColor()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawFilledEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawFilledPath(android.graphics.Canvas,android.graphics.Path,int,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/close()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.IRadarDataSet,int)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/Float/isNaN(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isHighlightEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/RadarChartRenderer/isInBoundsX(com.github.mikephil.charting.data.Entry,com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightLines(android.graphics.Canvas,float,float,com.github.mikephil.charting.interfaces.datasets.ILineScatterCandleRadarDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getRotationAngle()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarEntry/getY()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getData()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/charts/RadarChart/getCenterOffsets()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarEntry/getIcon()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/RadarChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/getEntryCount()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/IRadarDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/RadarData/getDataSetByIndex(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Path/addCircle(float,float,float,android.graphics.Path$Direction)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/restore()
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/RadarChartRenderer/drawHighlightCircle(android.graphics.Canvas,com.github.mikephil.charting.utils.MPPointF,float,float,int,int,float)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/Class/forName(java.lang.String)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/getName()
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/String/equals(java.lang.Object)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#android/content/res/TypedArray/recycle()
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/next()
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/transition/TransitionInflater/getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/toString()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/view/InflateException/InflateException(java.lang.String)
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/view/InflateException/initCause(java.lang.Throwable)
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/content/res/XmlResourceParser/close()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/content/res/XmlResourceParser/getPositionDescription()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#org/xmlpull/v1/XmlPullParserException/getMessage()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/content/res/Resources/getXml(int)
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#java/io/IOException/getMessage()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#java/lang/StringBuilder/toString()
android/support/transition/TransitionInflater/inflateTransitionManager(int,android.view.ViewGroup)#android/content/Context/getResources()
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/support/v4/util/ArrayMap/get(java.lang.Object)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/Class/asSubclass(java.lang.Class)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/StringBuilder/toString()
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/view/InflateException/InflateException(java.lang.String)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/view/InflateException/InflateException(java.lang.String,java.lang.Throwable)
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#android/content/Context/getClassLoader()
android/support/transition/TransitionInflater/createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/transition/TransitionInflater/inflateTransition(int)#android/view/InflateException/InflateException(java.lang.String,java.lang.Throwable)
android/support/transition/TransitionInflater/inflateTransition(int)#android/content/res/XmlResourceParser/close()
android/support/transition/TransitionInflater/inflateTransition(int)#android/content/res/XmlResourceParser/getPositionDescription()
android/support/transition/TransitionInflater/inflateTransition(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionInflater/inflateTransition(int)#org/xmlpull/v1/XmlPullParserException/getMessage()
android/support/transition/TransitionInflater/inflateTransition(int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/transition/TransitionInflater/inflateTransition(int)#android/content/res/Resources/getXml(int)
android/support/transition/TransitionInflater/inflateTransition(int)#java/io/IOException/getMessage()
android/support/transition/TransitionInflater/inflateTransition(int)#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionInflater/inflateTransition(int)#java/lang/StringBuilder/toString()
android/support/transition/TransitionInflater/inflateTransition(int)#android/content/Context/getResources()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#android/view/InflateException/InflateException(java.lang.String)
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/append(java.lang.String)
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/String/equals(java.lang.Object)
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/toString()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/getName()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/isEmptyElementTag()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/StringBuilder/StringBuilder()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#org/xmlpull/v1/XmlPullParser/next()
android/support/transition/TransitionInflater/createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.support.transition.Transition)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Iterator/hasNext()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Iterator/next()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/substring(int,int)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/get(int)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/iterator()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/endsWith(java.lang.String)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/List/isEmpty()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/lang/String/length()
com/itextpdf/text/html/simpleparser/TableWrapper/createTable()#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getEntireIndexRange(int)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/iterator()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getDictItem()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/getPosition()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/addLast(java.lang.Object)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/lang/String/length()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#com/itextpdf/text/pdf/CFFFontSubset/seek(int)
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/Iterator/next()
com/itextpdf/text/pdf/CFFFontSubset/BuildNewFile(int)#java/util/LinkedList/LinkedList()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getScrollY()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/widget/FrameLayout/draw(android.graphics.Canvas)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/drawable/Drawable/setBounds(android.graphics.Rect)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Rect/set(int,int,int,int)
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getWidth()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getHeight()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/support/design/internal/ScrimInsetsFrameLayout/getScrollX()
android/support/design/internal/ScrimInsetsFrameLayout/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources/getAnimation(int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/Context/getTheme()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/XmlResourceParser/close()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources$NotFoundException/Resources$NotFoundException(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/res/Resources$NotFoundException/initCause(java.lang.Throwable)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/Integer/toHexString(int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/view/animation/AnimationUtils/loadInterpolator(android.content.Context,int)
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimationUtilsCompat/loadInterpolator(android.content.Context,int)#android/content/Context/getResources()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AnticipateOvershootInterpolator/AnticipateOvershootInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/OvershootInterpolator/OvershootInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AnticipateInterpolator/AnticipateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/DecelerateInterpolator/DecelerateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AccelerateInterpolator/AccelerateInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/BounceInterpolator/BounceInterpolator()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/LinearInterpolator/LinearInterpolator()
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/CycleInterpolator/CycleInterpolator(android.content.Context,android.util.AttributeSet)
android/support/graphics/drawable/AnimationUtilsCompat/createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)#android/view/animation/AccelerateDecelerateInterpolator/AccelerateDecelerateInterpolator()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Rect/inset(int,int)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Rect/height()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#java/lang/Math/max(int,int)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Matrix/setTranslate(float,float)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/support/v4/graphics/drawable/RoundedBitmapDrawable/getBounds()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/RectF/set(android.graphics.Rect)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/RectF/height()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Bitmap/getHeight()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/BitmapShader/setLocalMatrix(android.graphics.Matrix)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Bitmap/getWidth()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Matrix/preScale(float,float)
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/RectF/width()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#android/graphics/Rect/width()
android/support/v4/graphics/drawable/RoundedBitmapDrawable/updateDstRect()#java/lang/Math/min(int,int)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/Class/forName(java.lang.String)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/util/Iterator/hasNext()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/reflect/Method/getModifiers()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/util/Iterator/next()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/reflect/Modifier/isStatic(int)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/reflect/Modifier/isPublic(int)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/util/List/contains(java.lang.Object)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/StringBuilder/toString()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#android/util/Log/wtf(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/Iterable/iterator()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/util/Set/contains(java.lang.Object)
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#java/lang/StringBuilder/StringBuilder()
com/google/firebase/FirebaseApp/zza(java.lang.Class,java.lang.Object,java.lang.Iterable,boolean)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/StringBuilder/toString()
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/lang/String/trim()
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/util/List/isEmpty()
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/firebase/FirebaseApp/getInstance(java.lang.String)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/Float(float)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getIndentationRight()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/isNaN(float)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/Stack()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/isEmpty()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/pop()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getSpacingAfter()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/Paragraph/getLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getSpacingBefore()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getAlignment()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/removeFirst()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getKeepTogether()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/getFirst()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getExtraParagraphSpace()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/size()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/set(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/Paragraph/getMultipliedLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/add(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Float/floatValue()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/LinkedList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getIndentationLeft()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getFirstLineIndent()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/Stack/isEmpty()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#com/itextpdf/text/ListItem/getMultipliedLeading()
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/ColumnText/goComposite(boolean)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorder()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorderWidth()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/LinkedList()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/addAll(java.util.Collection)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorderWidth(float)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorder(int)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBorderColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBackgroundColor()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/Image/getBorderColor()
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#com/itextpdf/text/pdf/PdfPCell/setBackgroundColor(com.itextpdf.text.BaseColor)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/util/LinkedList/add(java.lang.Object)
com/itextpdf/text/pdf/ColumnText/addElement(com.itextpdf.text.Element)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/Runtime/getRuntime()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/append(long)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/Runtime/freeMemory()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/String/getBytes()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/security/MessageDigest/digest(byte[])
com/itextpdf/text/pdf/PdfEncryption/createDocumentId()#java/lang/System/currentTimeMillis()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Paint/setAntiAlias(boolean)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/rLineTo(float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/reset()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RadialGradient/RadialGradient(float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/arcTo(android.graphics.RectF,float,float,boolean)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/Path()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Paint/setShader(android.graphics.Shader)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/RectF(float,float,float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/LinearGradient/LinearGradient(float,float,float,float,int[],float[],android.graphics.Shader$TileMode)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/setFillType(android.graphics.Path$FillType)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/close()
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/Path/moveTo(float,float)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/RectF(android.graphics.RectF)
android/support/design/widget/ShadowDrawableWrapper/buildShadowCorners()#android/graphics/RectF/inset(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/scale(float,float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/centerX()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/centerY()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/width()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/RectF/height()
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/design/widget/ShadowDrawableWrapper/drawShadow(android.graphics.Canvas)#android/graphics/Canvas/rotate(float,float,float)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/removeExtra(java.lang.String)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/isEmpty()
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/getAction()
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/setAction(java.lang.String)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/lang/String/equals(java.lang.Object)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/get(int)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
android/support/v4/app/ShareCompat$IntentBuilder/getIntent()#java/util/ArrayList/size()
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/Context/getPackageManager()
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#java/lang/String/isEmpty()
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/Intent/Intent(java.lang.String)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#java/util/List/isEmpty()
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/Intent/Intent(android.content.Intent)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/ComponentName/ComponentName(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/Intent/setComponent(android.content.ComponentName)
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#java/lang/Exception/getMessage()
com/google/android/gms/measurement/internal/zzbj/zzce(java.lang.String)#android/content/pm/PackageManager/queryIntentServices(android.content.Intent,int)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/List/size()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificates(java.security.cert.Certificate[],java.security.KeyStore,java.util.Collection,java.util.Calendar)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/build(java.security.cert.X509Certificate)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/JcaSimpleSignerInfoVerifierBuilder()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/cms/jcajce/JcaSimpleSignerInfoVerifierBuilder/setProvider(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyTimestampCertificates(org.spongycastle.tsp.TimeStampToken,java.security.KeyStore,java.lang.String)#org/spongycastle/tsp/TimeStampToken/isSignatureValid(org.spongycastle.cms.SignerInformationVerifier)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/build(java.security.PublicKey)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/cert/ocsp/BasicOCSPResp/isSignatureValid(org.spongycastle.operator.ContentVerifierProvider)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/setProvider(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#org/spongycastle/operator/jcajce/JcaContentVerifierProviderBuilder/JcaContentVerifierProviderBuilder()
com/itextpdf/text/pdf/security/CertificateVerification/verifyOcspCertificates(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.KeyStore,java.lang.String)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getKeyUsage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Calendar/getTime()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Set/iterator()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getCriticalExtensionOIDs()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/hasUnsupportedCriticalExtension()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/List/contains(java.lang.Object)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/Collection/iterator()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/util/GregorianCalendar/GregorianCalendar()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/CRL/isRevoked(java.security.cert.Certificate)
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/getExtendedKeyUsage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/lang/Exception/getMessage()
com/itextpdf/text/pdf/security/CertificateVerification/verifyCertificate(java.security.cert.X509Certificate,java.util.Collection,java.util.Calendar)#java/security/cert/X509Certificate/checkValidity(java.util.Date)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getPathSegments()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/size()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/pm/PackageManager/getResourcesForApplication(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/util/List/get(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/net/Uri/getAuthority()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#android/content/res/Resources/getDrawable(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceUri(android.net.Uri)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestPath()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/query(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/fragment(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/Uri$Builder()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/build()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/scheme(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/authority(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestAuthority()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#java/lang/String/valueOf(int)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/app/SearchableInfo/getSuggestSelection()
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendEncodedPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)#android/net/Uri$Builder/appendPath(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/flattenToShortString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getActivityInfo(android.content.ComponentName,int)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/ComponentName/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager/getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/PackageManager$NameNotFoundException/toString()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/pm/ActivityInfo/getIconResource()
android/support/v7/widget/SuggestionsAdapter/getActivityIcon(android.content.ComponentName)#android/content/Context/getPackageManager()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/net/Uri/getScheme()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/graphics/drawable/Drawable/createFromStream(java.io.InputStream,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/Context/getContentResolver()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/FileNotFoundException/getMessage()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/io/InputStream/close()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawable(android.net.Uri)#android/content/ContentResolver/openInputStream(android.net.Uri)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/content/Context/getPackageName()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/equals(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/String/isEmpty()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#android/net/Uri/parse(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v7/widget/SuggestionsAdapter/getDrawableFromResourceValue(java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/style/TextAppearanceSpan/TextAppearanceSpan(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#java/lang/CharSequence/length()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getTheme()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/SpannableString(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/util/TypedValue/TypedValue()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources/getColorStateList(int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/text/SpannableString/setSpan(java.lang.Object,int,int,int)
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/Context/getResources()
android/support/v7/widget/SuggestionsAdapter/formatUrl(java.lang.CharSequence)#android/content/res/Resources$Theme/resolveAttribute(int,android.util.TypedValue,boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setVisibility(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setMaxLines(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/setSingleLine(boolean)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setTag(java.lang.Object)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/view/View/getTag()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/database/Cursor/getInt(int)
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/TextView/getText()
android/support/v7/widget/SuggestionsAdapter/bindView(android.view.View,android.content.Context,android.database.Cursor)#android/widget/ImageView/setOnClickListener(android.view.View$OnClickListener)
com/google/android/gms/measurement/internal/zzfn/zzmb()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Math/abs(long)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Math/min(long,long)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Math/max(int,int)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Math/max(long,long)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzmb()#java/lang/Math/min(int,int)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/os/Bundle/putLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/content/Context/getPackageManager()
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/os/Bundle/Bundle()
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzf(com.google.android.gms.measurement.internal.zzk)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/ArrayList/get(int)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/Collections/emptyList()
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/List/size()
com/google/android/gms/measurement/internal/zzfn/zzc(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/ArrayList/size()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Math/round(double)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#android/provider/Settings$Secure/getString(android.content.ContentResolver,java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Double/valueOf(double)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Math/max(int,int)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/System/nanoTime()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String,java.lang.Object[])
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/toUpperCase(java.util.Locale)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/List/size()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Math/max(long,long)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Double/isNaN(double)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Double/doubleValue()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/isEmpty()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#android/content/Context/getContentResolver()
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/String(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Math/min(int,int)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/Math/abs(long)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/matches(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)#java/lang/String/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/channels/FileChannel/truncate(long)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/ByteBuffer/flip()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/channels/FileChannel/isOpen()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/channels/FileChannel/force(boolean)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/channels/FileChannel/size()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/channels/FileChannel/write(java.nio.ByteBuffer)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/ByteBuffer/putInt(int)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.nio.channels.FileChannel)#java/nio/ByteBuffer/allocate(int)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/lang/String/String(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/lang/String/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/appendQueryParameter(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/Uri$Builder()
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/encodedAuthority(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/net/URL/URL(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/build()
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/scheme(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri$Builder/path(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzb(com.google.android.gms.measurement.internal.zzg)#android/net/Uri/toString()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/util/List/iterator()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#android/database/sqlite/SQLiteException/SQLiteException(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/util/List/contains(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzfn/zza(int,java.lang.Throwable,byte[],java.lang.String)#java/lang/String/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/hashCode()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Arrays/copyOf(java.lang.Object[],int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/List/isEmpty()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Map/get(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/sqlite/SQLiteDatabase/execSQL(java.lang.String,java.lang.Object[])
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/List/size()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/HashMap/HashMap()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Long/longValue()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/codePointAt(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/StringBuilder/append(long)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Character/isLetter(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/security/SecureRandom/nextInt(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Set/iterator()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/getString(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Map$Entry/getValue()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Character/charCount(int)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/String/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/util/Map/entrySet()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Math/abs(long)
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/Boolean/booleanValue()
com/google/android/gms/measurement/internal/zzfn/zzd(java.lang.String,long)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Math/abs(long)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Boolean/booleanValue()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/ArrayList/ArrayList(int)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/ArrayList/ArrayList(java.util.Collection)
com/google/android/gms/measurement/internal/zzfn/zzlz()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/Iterator/hasNext()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Math/max(int,int)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/isEmpty()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/net/URL/URL(java.lang.String)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/subList(int,int)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/size()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/Iterator/next()
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/get(int)
com/google/android/gms/measurement/internal/zzfn/zzlz()#java/util/List/iterator()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/toLowerCase()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Math/max(int,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#com/itextpdf/text/html/WebColors/get(java.lang.Object)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/length()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Double/isNaN(double)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#com/itextpdf/text/html/WebColors/containsKey(java.lang.Object)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Math/min(int,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/String/substring(int,int)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/util/StringTokenizer/hasMoreElements()
com/itextpdf/text/html/WebColors/getRGBColor(java.lang.String)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/Arrays/sort(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/size()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/get(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/PdfReader/getJavaScript(com.itextpdf.text.pdf.RandomAccessFileOrArray)#java/util/HashMap/keySet()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/ArrayList(int)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/io/IOException/getMessage()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Set/iterator()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/Collections/nCopies(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDocObj()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/empty()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/Stack()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/pop()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/util/Set/toArray(java.lang.Object[])
com/itextpdf/text/pdf/PdfReader/removeUnusedNode(com.itextpdf.text.pdf.PdfObject,boolean[])#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#com/itextpdf/text/pdf/PdfLiteral/getBytes()
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/Arrays/equals(byte[],byte[])
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/Map/get(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/lang/Object/getClass()
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/lang/String/getBytes()
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/lang/Class/toString()
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/decodeBytes(byte[],com.itextpdf.text.pdf.PdfDictionary,java.util.Map)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/CMSEnvelopedData/CMSEnvelopedData(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/set(int,java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cert/X509CertificateHolder/X509CertificateHolder(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformationStore/get(org.spongycastle.cms.RecipientId)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Collection/iterator()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/remove(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/lang/Object/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformationStore/getRecipients()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/CMSEnvelopedData/getRecipientInfos()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformation/getRID()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientId/match(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/cert/Certificate/getEncoded()
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/update(byte[],int,int)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/getInstance(java.lang.String)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#java/security/MessageDigest/update(byte[])
com/itextpdf/text/pdf/PdfReader/readDecryptedDocObj()#org/spongycastle/cms/RecipientInformation/getContent(org.spongycastle.cms.Recipient)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/readFully(byte[],int,int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/write(byte[])
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/DataInputStream/read()
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/lang/Math/abs(int)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/itextpdf/text/pdf/PdfReader/decodePredictor(byte[],com.itextpdf.text.pdf.PdfObject)#java/io/ByteArrayOutputStream/toByteArray()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/ImageView/getVisibility()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getPaddingRight()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getLayout()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getLineCount()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getResources()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/setTextSize(int,float)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/getTextSize()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/LinearLayout/onMeasure(int,int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getPaddingLeft()
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/widget/TextView/setMaxLines(int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/design/widget/TabLayout$TabView/onMeasure(int,int)#android/support/design/widget/TabLayout$TabView/getMeasuredWidth()
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/removeView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/addView(android.view.View,int)
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/getContext()
android/support/design/widget/TabLayout$TabView/update()#android/support/design/widget/TabLayout$TabView/addView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/view/LayoutInflater/inflate(int,android.view.ViewGroup,boolean)
android/support/design/widget/TabLayout$TabView/update()#android/view/View/findViewById(int)
android/support/design/widget/TabLayout$TabView/update()#android/widget/TextView/setTextColor(android.content.res.ColorStateList)
android/support/design/widget/TabLayout$TabView/update()#android/view/ViewGroup/removeView(android.view.View)
android/support/design/widget/TabLayout$TabView/update()#android/view/LayoutInflater/from(android.content.Context)
android/support/design/widget/TabLayout$TabView/update()#android/view/View/getParent()
android/support/design/widget/TabLayout$TabView/update()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TabLayout$TabView/update()#android/widget/ImageView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/update()#android/widget/TextView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/getVisibility()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/support/design/widget/TabLayout$TabView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/setVisibility(int)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setContentDescription(java.lang.CharSequence)
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/getLayoutParams()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/ImageView/requestLayout()
android/support/design/widget/TabLayout$TabView/updateTextAndIcon(android.widget.TextView,android.widget.ImageView)#android/widget/TextView/setVisibility(int)
io/sentry/event/EventBuilder/makeImmutable()#java/util/Map/put(java.lang.Object,java.lang.Object)
io/sentry/event/EventBuilder/makeImmutable()#java/util/Iterator/hasNext()
io/sentry/event/EventBuilder/makeImmutable()#java/util/Map$Entry/getKey()
io/sentry/event/EventBuilder/makeImmutable()#java/util/Collections/unmodifiableMap(java.util.Map)
io/sentry/event/EventBuilder/makeImmutable()#java/util/Set/iterator()
io/sentry/event/EventBuilder/makeImmutable()#java/util/Map/entrySet()
io/sentry/event/EventBuilder/makeImmutable()#java/util/Iterator/next()
io/sentry/event/EventBuilder/makeImmutable()#java/util/HashMap/HashMap()
io/sentry/event/EventBuilder/makeImmutable()#java/util/Collections/unmodifiableList(java.util.List)
io/sentry/event/EventBuilder/makeImmutable()#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setGrayStroke(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setLineWidth(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setGrayFill(float)
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/closePathStroke()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/fill()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawSignatureAppearences(com.itextpdf.text.pdf.PdfFormField,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showText(java.lang.String)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawSingleLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/setTextMatrix(float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/newPath()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/nextToken()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginVariableText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/hasMoreTokens()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/rectangle(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showTextAligned(int,java.lang.String,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/clip()
com/itextpdf/text/pdf/PdfAcroForm/drawMultiLineOfText(com.itextpdf.text.pdf.PdfFormField,java.lang.String,com.itextpdf.text.pdf.BaseFont,float,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/drawTextField(float,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/restoreState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setDefaultAppearanceString(com.itextpdf.text.pdf.PdfContentByte)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfFormField/setAppearance(com.itextpdf.text.pdf.PdfName,java.lang.String,com.itextpdf.text.pdf.PdfTemplate)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/saveState()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/beginText()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/endText()
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/showTextAligned(int,java.lang.String,float,float,float)
com/itextpdf/text/pdf/PdfAcroForm/drawCheckBoxAppearences(com.itextpdf.text.pdf.PdfFormField,java.lang.String,float,float,float,float)#com/itextpdf/text/pdf/PdfAppearance/resetRGBColorFill()
com/itextpdf/text/Version/getInstance()#java/lang/Class/forName(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/itextpdf/text/Version/getInstance()#java/lang/String/length()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/Version/getInstance()#java/lang/String/startsWith(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/itextpdf/text/Version/getInstance()#java/lang/Exception/Exception()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/toString()
com/itextpdf/text/Version/getInstance()#java/lang/Class/newInstance()
com/itextpdf/text/Version/getInstance()#java/lang/String/toLowerCase()
com/itextpdf/text/Version/getInstance()#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/Version/getInstance()#java/lang/String/trim()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#io/sentry/event/Breadcrumb$Type/getValue()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Iterator/hasNext()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Map$Entry/getKey()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Iterator/next()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Set/iterator()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/List/iterator()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Date/getTime()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#io/sentry/event/Breadcrumb$Level/getValue()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Map/isEmpty()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/List/isEmpty()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Map$Entry/getValue()
io/sentry/marshaller/json/JsonMarshaller/writeBreadcumbs(com.fasterxml.jackson.core.JsonGenerator,java.util.List)#java/util/Map/entrySet()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#com/itextpdf/text/pdf/PdfStream/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/first()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/Integer/intValue()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/Iterator/next()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/io/OutputStream/write(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/iterator()
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/Integer/valueOf(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/io/OutputStream/write(byte[])
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/lang/String/valueOf(int)
com/itextpdf/text/pdf/PdfWriter$PdfBody/writeCrossReferenceTable(java.io.OutputStream,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfIndirectReference,com.itextpdf.text.pdf.PdfObject,long)#java/util/TreeSet/add(java.lang.Object)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/min(float,float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView$ScaleType/toString()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postTranslate(float,float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getImageMatrix()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/concat(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putString(java.lang.String,java.lang.String)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getBackground()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getScaleType()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putParcelable(java.lang.String,android.os.Parcelable)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/Bundle()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/view/View/draw(android.graphics.Canvas)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/Matrix()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/set(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/width()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/os/Bundle/putFloatArray(java.lang.String,float[])
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/widget/ImageView/getDrawable()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/RectF/height()
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#java/lang/Math/round(float)
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/getValues(float[])
android/support/v4/app/SharedElementCallback/onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)#android/graphics/Matrix/postScale(float,float)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/BitmapDrawable/getBitmap()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/getBounds()
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#java/lang/Math/min(float,float)
android/support/v4/app/SharedElementCallback/createDrawableBitmap(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/getScaleType()
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getFloatArray(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/graphics/Matrix/Matrix()
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setImageMatrix(android.graphics.Matrix)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/os/Bundle/getString(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView$ScaleType/valueOf(java.lang.String)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/setScaleType(android.widget.ImageView$ScaleType)
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/graphics/Matrix/setValues(float[])
android/support/v4/app/SharedElementCallback/onCreateSnapshotView(android.content.Context,android.os.Parcelable)#android/widget/ImageView/ImageView(android.content.Context)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/os/Environment/getExternalStorageDirectory()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/os/Environment/getStorageState(java.io.File)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#android/os/Environment/getExternalStorageState()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/StringBuilder()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/io/File/getCanonicalPath()
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/String/startsWith(java.lang.String)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/os/EnvironmentCompat/getStorageState(java.io.File)#java/lang/StringBuilder/toString()
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/view/View/getLocalVisibleRect(android.graphics.Rect)
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/view/View/getScrollY()
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/view/View/getContext()
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/graphics/Rect/offset(int,int)
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/view/View/getLocationOnScreen(int[])
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/graphics/Rect/intersect(android.graphics.Rect)
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/content/Context/getPackageName()
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/graphics/Rect/equals(java.lang.Object)
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#android/view/View/getScrollX()
android/support/v4/widget/ExploreByTouchHelper/createNodeForChild(int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/obtain(int)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/content/Context/getPackageName()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setScrollable(boolean)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/View/getContext()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#java/util/List/add(java.lang.Object)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setContentDescription(java.lang.CharSequence)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/getText()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setChecked(boolean)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setClassName(java.lang.CharSequence)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#java/util/List/isEmpty()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setEnabled(boolean)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setPackageName(java.lang.CharSequence)
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/getContentDescription()
android/support/v4/widget/ExploreByTouchHelper/createEventForChild(int,int)#android/view/accessibility/AccessibilityEvent/setPassword(boolean)
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/Iterator/next()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/toArray(java.lang.Object[])
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/clear()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/iterator()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/indexOf(java.lang.Object)
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/Iterator/hasNext()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/lang/ref/WeakReference/get()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/size()
com/github/mikephil/charting/renderer/CombinedChartRenderer/drawHighlighted(android.graphics.Canvas,com.github.mikephil.charting.highlight.Highlight[])#java/util/List/add(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getLimitLines()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextSize()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getTypeface()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getYOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineWidth()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineDashPathEffect()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/getAxisLineColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderAxisLine(android.graphics.Canvas)#com/github/mikephil/charting/components/XAxis/isDrawAxisLineEnabled()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/XAxisRenderer/renderLimitLineLabel(android.graphics.Canvas,com.github.mikephil.charting.components.LimitLine,float[],float)#com/github/mikephil/charting/components/LimitLine/getTextSize()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/widget/ImageView/getWidth()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/graphics/Matrix/Matrix()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#java/lang/Math/max(float,float)
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/widget/ImageView/getDrawable()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#java/lang/Math/round(float)
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/graphics/Matrix/postTranslate(float,float)
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/widget/ImageView/getHeight()
android/support/transition/ChangeImageTransform/centerCropMatrix(android.widget.ImageView)#android/graphics/Matrix/postScale(float,float)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/media/RemoteControlClient$MetadataEditor/putLong(int,long)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/os/Bundle/getLong(java.lang.String)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/os/Bundle/getParcelable(java.lang.String)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/media/RemoteControlClient$MetadataEditor/putString(int,java.lang.String)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/media/RemoteControlClient/editMetadata(boolean)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/os/Bundle/containsKey(java.lang.String)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/graphics/Bitmap/getConfig()
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/media/RemoteControlClient$MetadataEditor/putBitmap(int,android.graphics.Bitmap)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/graphics/Bitmap/copy(android.graphics.Bitmap$Config,boolean)
android/support/v4/media/session/MediaSessionCompat$MediaSessionImplBase/buildRccMetadata(android.os.Bundle)#android/os/Bundle/getString(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#android/os/Looper/getMainLooper()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/length()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#com/google/android/gms/internal/common/zze/post(java.lang.Runnable)
com/google/android/gms/common/api/internal/zza/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/util/WeakHashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentManager/beginTransaction()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/Activity/getFragmentManager()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#com/google/android/gms/common/api/internal/zza/isRemoving()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentTransaction/add(android.app.Fragment,java.lang.String)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/lang/ref/WeakReference/get()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#java/util/WeakHashMap/get(java.lang.Object)
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentTransaction/commitAllowingStateLoss()
com/google/android/gms/common/api/internal/zza/zza(android.app.Activity)#android/app/FragmentManager/findFragmentByTag(java.lang.String)
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Iterator/hasNext()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map$Entry/getKey()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map$Entry/getValue()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Map/entrySet()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/os/Bundle/Bundle()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/os/Bundle/putBundle(java.lang.String,android.os.Bundle)
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#java/util/Iterator/next()
com/google/android/gms/common/api/internal/zza/onSaveInstanceState(android.os.Bundle)#android/app/Fragment/onSaveInstanceState(android.os.Bundle)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#com/google/android/gms/internal/measurement/zzvv/zzwj()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Object/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Method/getModifiers()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Enum/ordinal()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/TreeSet/TreeSet()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Set/add(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/endsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/toLowerCase()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Class/getDeclaredMethods()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Map/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/HashMap/HashMap()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Double/doubleValue()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Method/getReturnType()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Method/getName()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/concat(java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Modifier/isPublic(int)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/substring(int)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Float/floatValue()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/replaceFirst(java.lang.String,java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/reflect/Method/getParameterTypes()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/String/String(java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/Boolean/booleanValue()
com/google/android/gms/internal/measurement/zzvy/zza(com.google.android.gms.internal.measurement.zzvv,java.lang.StringBuilder,int)#java/lang/NoSuchMethodError/NoSuchMethodError()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/Object/toString()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(char)
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/List/iterator()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzvy/zzb(java.lang.StringBuilder,int,java.lang.String,java.lang.Object)#java/util/Map$Entry/getKey()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setAntiAlias(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/widget/Button/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/findViewById(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/widget/ImageView/setOnTouchListener(android.view.View$OnTouchListener)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/setColor(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/widget/ImageView/setOnLongClickListener(android.view.View$OnLongClickListener)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/graphics/Paint/Paint()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/view/ViewTreeObserver/addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/setContentView(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/widget/ImageView/getViewTreeObserver()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#android/content/Intent/getSerializableExtra(java.lang.String)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/getIntent()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/onCreate(android.os.Bundle)#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/getString(int,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/Paint/setAntiAlias(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/Paint/setColor(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/Paint/Paint()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/widget/ImageView/setAdjustViewBounds(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/BitmapFactory$Options/BitmapFactory$Options()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/BitmapFactory/decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#java/util/List/iterator()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/getResources()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/showSeriesArrow()#android/graphics/Bitmap/createBitmap(android.graphics.Bitmap)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/graphics/PorterDuffColorFilter/PorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/Double/isNaN(double)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/Math/pow(double,double)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/Math/sqrt(double)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/graphics/drawable/Drawable/setColorFilter(android.graphics.ColorFilter)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/Math/floor(double)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#java/lang/String/format(java.lang.String,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/TextView/getBackground()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/Button/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/ImageView/setAdjustViewBounds(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/ImageView/setImageBitmap(android.graphics.Bitmap)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/graphics/Canvas/drawCircle(float,float,float,android.graphics.Paint)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/widget/TextView/setTextColor(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/addTargetImpact(float,float,boolean,boolean,int)#android/graphics/Bitmap/copy(android.graphics.Bitmap$Config,boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#java/util/List/remove(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#android/widget/TextView/setBackgroundResource(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#android/widget/TextView/setBackground(android.graphics.drawable.Drawable)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#android/widget/Button/setEnabled(boolean)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#android/content/res/Resources/getDrawable(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/getResources()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#java/lang/String/format(java.lang.String,java.lang.Object[])
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#java/util/List/size()
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#android/widget/TextView/setText(java.lang.CharSequence)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/activities/common/AbstractSerieArrowsActivity/undoLastArrow(android.view.View)#java/util/List/get(int)
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/util/concurrent/atomic/AtomicInteger/getAndIncrement()
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/getPriority()
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(int)
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/Thread(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/setDaemon(boolean)
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/StringBuilder()
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/isDaemon()
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/toString()
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/Thread/setPriority(int)
io/sentry/DefaultSentryClientFactory$DaemonThreadFactory/newThread(java.lang.Runnable)#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraLeftOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/prepareOffsetMatrix()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraBottomOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/renderer/YAxisRenderer/getPaintAxisLabels()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/graphics/RectF/toString()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/append(float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraRightOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/StringBuilder/toString()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/components/XAxis/isEnabled()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#java/lang/Math/max(float,float)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#android/util/Log/i(java.lang.String,java.lang.String)
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/getExtraTopOffset()
com/github/mikephil/charting/charts/HorizontalBarChart/calculateOffsets()#com/github/mikephil/charting/charts/HorizontalBarChart/calculateLegendOffsets(android.graphics.RectF)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#java/util/ArrayList/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/Cursor/getColumnIndexOrThrow(java.lang.String)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getLastValues(int)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#java/lang/String/format(java.lang.String,java.lang.Object[])
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getTotalsForDistance(long,long)#android/database/Cursor/getInt(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#android/database/sqlite/SQLiteDatabase/rawQuery(java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#ar/com/tzulberti/archerytraining/dao/SerieDataDAO$GroupByType/ordinal()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/lang/StringBuilder/append(java.lang.String)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#android/database/Cursor/getLong(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#android/database/Cursor/close()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/lang/StringBuilder/StringBuilder()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#ar/com/tzulberti/archerytraining/database/DatabaseHelper/getReadableDatabase()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/lang/String/valueOf(long)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#android/database/Cursor/moveToNext()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/lang/StringBuilder/toString()
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/dao/SerieDataDAO/getDailyArrowsInformation(long,long,ar.com.tzulberti.archerytraining.dao.SerieDataDAO$GroupByType)#android/database/Cursor/getInt(int)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isHidden()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isInLayout()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/startActivity(android.content.Intent)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getArguments()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/startActivityForResult(android.content.Intent,int)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzag()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzah()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isResumed()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isRemoving()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getTargetRequestCode()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/setMenuVisibility(boolean)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getUserVisibleHint()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/setUserVisibleHint(boolean)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isDetached()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readStrongBinder()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzad()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/setHasOptionsMenu(boolean)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzae()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isVisible()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getTag()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeInt(int)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzaf()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zzb(com.google.android.gms.dynamic.IObjectWrapper)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getRetainInstance()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/setRetainInstance(boolean)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/getId()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(com.google.android.gms.dynamic.IObjectWrapper)
com/google/android/gms/dynamic/IFragmentWrapper$Stub/zza(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/dynamic/IFragmentWrapper$Stub/isAdded()
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/putExtras(android.os.Bundle)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/lang/String/length()
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/setAction(java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/getExtras()
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/setPackage(java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/Intent()
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/io/IOException/IOException(java.lang.Throwable)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/io/IOException/IOException(java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Context/sendBroadcast(android.content.Intent)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/os/Messenger/send(android.os.Message)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/content/Context/startService(android.content.Intent)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zze(android.os.Bundle)#android/os/Message/obtain()
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/util/regex/Pattern/compile(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/getParcelableExtra(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/length()
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/setExtrasClassLoader(java.lang.ClassLoader)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/startsWith(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/util/regex/Pattern/matcher(java.lang.CharSequence)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/getStringExtra(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/putExtra(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/util/regex/Matcher/group(int)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/split(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/getAction()
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/util/regex/Matcher/matches()
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/hasExtra(java.lang.String)
com/google/firebase/iid/zzat/zzb(android.os.Message)#java/lang/String/substring(int)
com/google/firebase/iid/zzat/zzb(android.os.Message)#android/content/Intent/getExtras()
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/String/charAt(int)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/util/Calendar/set(int,int)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/String/length()
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/Character/isDigit(char)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/String/substring(int,int)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/Integer/parseInt(java.lang.String)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/text/ParsePosition/setErrorIndex(int)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/text/ParsePosition/getIndex()
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/lang/Character/isWhitespace(char)
org/apache/commons/lang3/time/FastDateParser$NumberStrategy/parse(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String,java.text.ParsePosition,int)#java/text/ParsePosition/setIndex(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/Boolean/booleanValue()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/getVisibility()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setVisibility(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/endViewTransition(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getBoolean(java.lang.String,boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/clearAnimation()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/removeView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/animation/Animator/cancel()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/ViewGroup/addView(android.view.View)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/view/View/setSaveFromParentEnabled(boolean)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#android/content/res/Resources/getResourceName(int)
android/support/v4/app/FragmentManagerImpl/moveToState(android.support.v4.app.Fragment,int,int,int,boolean)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/setBackStackIndex(int,android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/clear()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/getSparseParcelableArray(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/contains(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/content/Context/getClassLoader()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/PrintWriter(java.io.Writer)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/io/PrintWriter/close()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/os/Bundle/setClassLoader(java.lang.ClassLoader)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/size()
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#android/util/SparseArray/SparseArray(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/util/List/get(int)
android/support/v4/app/FragmentManagerImpl/restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/Integer/valueOf(int)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/freeBackStackIndex(int)#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/toArray()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/util/Arrays/toString(java.lang.Object[])
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(int)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentManagerImpl/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getId()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getPositionDescription()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/Context/obtainStyledAttributes(android.util.AttributeSet,int[])
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/util/AttributeSet/getAttributeValue(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setId(int)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/getTag()
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#android/view/View/setTag(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/util/ArrayList/get(int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/Bundle()
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveAllState()#android/os/Bundle/putInt(java.lang.String,int)
android/support/v4/app/FragmentManagerImpl/saveAllState()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/size()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/SparseArray/valueAt(int)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/saveNonConfig()#java/util/ArrayList/ArrayList()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/add(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/size()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/StringBuilder()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/set(int,java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/append(java.lang.Object)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/remove(int)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/lang/Integer/intValue()
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#android/util/Log/v(java.lang.String,java.lang.String)
android/support/v4/app/FragmentManagerImpl/allocBackStackIndex(android.support.v4.app.BackStackRecord)#java/util/ArrayList/ArrayList()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getLimitLines()
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderLimitLines(android.graphics.Canvas)#com/github/mikephil/charting/components/LimitLine/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/lineTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/inset(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/RectF/set(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/drawZeroLine(android.graphics.Canvas)#android/graphics/Path/moveTo(float,float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTypeface()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getXOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawLabelsEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getYOffset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextSize()
com/github/mikephil/charting/renderer/YAxisRenderer/renderAxisLabels(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getTextColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/clipRect(android.graphics.RectF)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/save()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setPathEffect(android.graphics.PathEffect)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/drawPath(android.graphics.Path,android.graphics.Paint)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridColor()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#android/graphics/Path/reset()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridLineWidth()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/isDrawGridLinesEnabled()
com/github/mikephil/charting/renderer/YAxisRenderer/renderGridLines(android.graphics.Canvas)#com/github/mikephil/charting/components/YAxis/getGridDashPathEffect()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getCertStatus()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getSerialNumber()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/after(java.util.Date)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getNextUpdate()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/BasicOCSPResp/getResponses()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getCertID()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/String/format(java.lang.String,java.lang.Object[])
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/operator/bc/BcDigestCalculatorProvider/BcDigestCalculatorProvider()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/Date(long)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/X509CertificateHolder/X509CertificateHolder(byte[])
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/CertificateID/matchesIssuer(org.spongycastle.cert.X509CertificateHolder,org.spongycastle.operator.DigestCalculatorProvider)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getEncoded()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/SingleResp/getThisUpdate()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Date/getTime()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#org/spongycastle/cert/ocsp/CertificateID/getSerialNumber()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/math/BigInteger/equals(java.lang.Object)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/cert/X509Certificate/getExtendedKeyUsage()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/util/Date/Date()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#com/itextpdf/text/pdf/security/CRLVerifier/setOnlineCheckingAllowed(boolean)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/util/List/contains(java.lang.Object)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/util/Enumeration/hasMoreElements()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#org/spongycastle/cert/jcajce/JcaX509CertificateConverter/JcaX509CertificateConverter()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#org/spongycastle/cert/jcajce/JcaX509CertificateConverter/getCertificate(org.spongycastle.cert.X509CertificateHolder)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#com/itextpdf/text/pdf/security/CRLVerifier/setRootStore(java.security.KeyStore)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#org/spongycastle/cert/ocsp/BasicOCSPResp/getCerts()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/cert/X509Certificate/checkValidity()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#org/spongycastle/asn1/ASN1ObjectIdentifier/getId()
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/OCSPVerifier/isValidResponse(org.spongycastle.cert.ocsp.BasicOCSPResp,java.security.cert.X509Certificate)#java/security/cert/X509Certificate/getExtensionValue(java.lang.String)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/iterator()
com/itextpdf/text/pdf/security/OCSPVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(int)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/next()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/iterator()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/CRLVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Iterator/hasNext()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/Class/isArray()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/Class/getComponentType()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/reflect/TypeVariable/getBounds()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/reflect/GenericArrayType/getGenericComponentType()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/Class/isPrimitive()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/util/Collections/emptyMap()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/util/Map/putAll(java.util.Map)
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getOwnerType()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
org/apache/commons/lang3/reflect/TypeUtils/unrollVariables(java.util.Map,java.lang.reflect.Type)#java/util/HashMap/HashMap(java.util.Map)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getGenericDeclaration()
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/Object/getClass()
org/apache/commons/lang3/reflect/TypeUtils/getRawType(java.lang.reflect.Type,java.lang.reflect.Type)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/Class/isArray()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/Class/getComponentType()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/reflect/GenericArrayType/getGenericComponentType()
org/apache/commons/lang3/reflect/TypeUtils/isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/Class/getName()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/reflect/ParameterizedType/getOwnerType()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/Object/toString()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/Class/getSimpleName()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/reflect/ParameterizedType/getRawType()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/parameterizedTypeToString(java.lang.reflect.ParameterizedType)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/isArray()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/getSimpleName()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/getComponentType()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/getTypeParameters()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/getName()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/Class/getEnclosingClass()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/reflect/TypeUtils/classToString(java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/reflect/TypeVariable/getGenericDeclaration()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/Class/getSimpleName()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/insert(int,java.lang.String)
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/Class/getName()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/Class/getEnclosingClass()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/append(char)
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/insert(int,char)
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/reflect/TypeUtils/toLongString(java.lang.reflect.TypeVariable)#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/lang/Object/equals(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/util/HashMap/HashMap(java.util.Map)
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/lang/Class/getTypeParameters()
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/util/HashMap/HashMap()
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/lang/reflect/ParameterizedType/getOwnerType()
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/util/Map/get(java.lang.Object)
org/apache/commons/lang3/reflect/TypeUtils/getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/util/HashMap/containsKey(java.lang.Object)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#android/content/ContentResolver/query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#android/database/Cursor/getString(int)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#android/database/Cursor/moveToFirst()
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/util/HashMap/putAll(java.util.Map)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/util/HashMap/get(java.lang.Object)
com/google/android/gms/internal/measurement/zzru/zza(android.content.ContentResolver,java.lang.String,java.lang.String)#java/util/HashMap/isEmpty()
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setAntiAlias(boolean)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Typeface/create(java.lang.String,int)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setColor(int)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#com/leavjenn/smoothdaterangepicker/date/MonthView/getContext()
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setTypeface(android.graphics.Typeface)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setFakeBoldText(boolean)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setTextSize(float)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/setAlpha(int)
com/leavjenn/smoothdaterangepicker/date/MonthView/initView()#android/graphics/Paint/Paint()
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/lang/Integer/intValue()
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/security/InvalidParameterException/InvalidParameterException(java.lang.String)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/HashMap/containsKey(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/Calendar/set(int,int)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/Calendar/getActualMaximum(int)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#com/leavjenn/smoothdaterangepicker/date/MonthView/setTag(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/Calendar/getInstance()
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/Calendar/getFirstDayOfWeek()
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#com/leavjenn/smoothdaterangepicker/date/MonthView$MonthViewTouchHelper/invalidateRoot()
com/leavjenn/smoothdaterangepicker/date/MonthView/setMonthParams(java.util.HashMap)#java/util/Calendar/get(int)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Calendar/set(int,int)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/lang/String/length()
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/lang/String/toUpperCase(java.util.Locale)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Calendar/getDisplayName(int,int,java.util.Locale)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/lang/String/equals(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Calendar/get(int)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Locale/getDefault()
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Locale/equals(java.lang.Object)
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/util/Locale/getLanguage()
com/leavjenn/smoothdaterangepicker/date/MonthView/drawMonthDayLabels(android.graphics.Canvas)#java/lang/String/substring(int,int)
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/List/size()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/List/isEmpty()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/Map/isEmpty()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/Map/values()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#com/google/android/gms/internal/measurement/zzxs/zzyv()
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#sun/misc/Unsafe/getInt(java.lang.Object,long)
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/List/get(int)
com/google/android/gms/internal/measurement/zzvz/zzaj(java.lang.Object)#java/util/Collection/iterator()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/hasNext()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Map$Entry/getKey()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Set/iterator()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Map$Entry/getValue()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Map/entrySet()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/remove()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/lang/Integer/intValue()
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/internal/measurement/zzvz/zza(int,int,java.util.Map,com.google.android.gms.internal.measurement.zzut,java.lang.Object,com.google.android.gms.internal.measurement.zzxd)#java/util/Iterator/next()
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/reflect/Field/getName()
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/Class/getDeclaredField(java.lang.String)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/String/length()
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/Class/getDeclaredFields()
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/util/Arrays/toString(java.lang.Object[])
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/internal/measurement/zzvz/zza(java.lang.Class,java.lang.String)#java/lang/Class/getName()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/canScrollList(int)
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getCount()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getHeight()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getTop()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getFirstVisiblePosition()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/view/View/getBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getListPaddingBottom()
android/support/v4/widget/ListViewCompat/canScrollList(android.widget.ListView,int)#android/widget/ListView/getChildAt(int)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfAnnotation/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfFormField/getIndirectReference()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/HashSet/HashSet()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/HashSet/addAll(java.util.Collection)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#com/itextpdf/text/pdf/PdfAnnotation/get(com.itextpdf.text.pdf.PdfName)
com/itextpdf/text/pdf/PdfCopy$PageStamp/addAnnotation(com.itextpdf.text.pdf.PdfAnnotation)#java/util/ArrayList/get(int)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/Context/getPackageManager()
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/Context/getSharedPreferences(java.lang.String,int)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/os/Bundle/getBoolean(java.lang.String)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/Context/getPackageName()
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/SharedPreferences/getBoolean(java.lang.String,boolean)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/pm/PackageManager/getApplicationInfo(java.lang.String,int)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/content/SharedPreferences/contains(java.lang.String)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#android/os/Bundle/containsKey(java.lang.String)
com/google/firebase/iid/FirebaseInstanceId$zza/zzt()#java/lang/Boolean/valueOf(boolean)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/view/View/setTranslationY(float)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/view/View/setTranslationX(float)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/animation/ObjectAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/animation/ObjectAnimator/setInterpolator(android.animation.TimeInterpolator)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/animation/ObjectAnimator/ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/animation/PropertyValuesHolder/ofFloat(android.util.Property,float[])
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/view/View/getTranslationY()
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#java/lang/Math/round(float)
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/view/View/getTranslationX()
android/support/transition/TranslationAnimationCreator/createAnimation(android.view.View,android.support.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator)#android/view/View/getTag(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/hasNext()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getKey()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/size()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Iterator/next()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#android/support/v4/util/ArrayMap/ensureCapacity(int)
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Set/iterator()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map$Entry/getValue()
android/support/v4/util/ArrayMap/putAll(java.util.Map)#java/util/Map/entrySet()
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeTypedList(java.util.List)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zzc(com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzag,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzo,com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zzb(com.google.android.gms.measurement.internal.zzo)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zzd(com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeNoException()
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(long,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zzb(com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzag,com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzag,java.lang.String)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(java.lang.String,java.lang.String,com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readLong()
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(java.lang.String,java.lang.String,java.lang.String,boolean)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zze(java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzk,boolean)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(java.lang.String,java.lang.String,boolean,com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#com/google/android/gms/measurement/internal/zzak/zza(com.google.android.gms.measurement.internal.zzfu,com.google.android.gms.measurement.internal.zzk)
com/google/android/gms/measurement/internal/zzak/dispatchTransaction(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeByteArray(byte[])
com/google/android/gms/measurement/internal/zzbl/run()#android/os/Bundle/putString(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/equalsIgnoreCase(java.lang.String)
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/isEmpty()
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/String(java.lang.String)
com/google/android/gms/measurement/internal/zzbl/run()#android/os/Bundle/putLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/length()
com/google/android/gms/measurement/internal/zzbl/run()#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzbl/run()#android/net/Uri/parse(java.lang.String)
com/google/android/gms/measurement/internal/zzbl/run()#android/os/Bundle/getLong(java.lang.String,long)
com/google/android/gms/measurement/internal/zzbl/run()#android/os/Bundle/getString(java.lang.String)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/Class/getField(java.lang.String)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/content/res/Resources/getIdentifier(java.lang.String,java.lang.String,java.lang.String)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/support/constraint/ConstraintHelper/getParent()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/content/Context/getPackageName()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/reflect/Field/getInt(java.lang.Object)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/Integer/intValue()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/support/constraint/ConstraintHelper/isInEditMode()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/String/trim()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#java/lang/StringBuilder/toString()
android/support/constraint/ConstraintHelper/addID(java.lang.String)#android/content/Context/getResources()
com/google/firebase/iid/zzh/zzc()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzh/zzc()#java/util/Queue/poll()
com/google/firebase/iid/zzh/zzc()#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzh/zzc()#com/google/firebase/iid/zzf/isBinderAlive()
com/google/firebase/iid/zzh/zzc()#java/util/Queue/isEmpty()
com/google/firebase/iid/zzh/zzc()#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzh/zzc()#java/lang/StringBuilder/append(boolean)
com/google/firebase/iid/zzh/zzc()#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzh/zzc()#android/util/Log/e(java.lang.String,java.lang.String)
com/google/firebase/iid/zzh/zzc()#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/firebase/iid/zzh/zzc()#android/util/Log/isLoggable(java.lang.String,int)
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Document/getFirstChild()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getFirstChild()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#org/w3c/dom/Node/getNextSibling()
com/itextpdf/text/pdf/XfaForm/extractXFANodes(org.w3c.dom.Document)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getOwnerDocument()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/getLength()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/getElementsByTagName(java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/appendChild(org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#java/lang/String/equals(java.lang.Object)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Element/setAttribute(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNamespaceURI()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getChildNodes()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/NodeList/item(int)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getNodeType()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Node/getLocalName()
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/createElementNS(java.lang.String,java.lang.String)
com/itextpdf/text/pdf/XfaForm/fillXfaForm(org.w3c.dom.Node,boolean)#org/w3c/dom/Document/importNode(org.w3c.dom.Node,boolean)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/remove(int)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/size()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/append(char)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/ArrayList/get(int)
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/Iterator/next()
com/itextpdf/text/pdf/PRAcroForm/iterateFields(com.itextpdf.text.pdf.PdfArray,com.itextpdf.text.pdf.PRIndirectReference,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/endAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/animation/AnimationUtils/currentAnimationTimeMillis()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/GestureDetector/onTouchEvent(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getAction()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getY()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/isDragDecelerationEnabled()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/distance(float,float,float,float)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/invalidate()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/disableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/listener/PieRadarChartTouchListener/startAction(android.view.MotionEvent)
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#com/github/mikephil/charting/charts/PieRadarChartBase/enableScroll()
com/github/mikephil/charting/listener/PieRadarChartTouchListener/onTouch(android.view.View,android.view.MotionEvent)#android/view/MotionEvent/getX()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStyle(android.graphics.Paint$Style)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/data/CandleEntry/getX()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLine(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Paint/setStrokeWidth(float)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawRect(float,float,float,float,android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawDataSet(android.graphics.Canvas,com.github.mikephil.charting.interfaces.datasets.ICandleDataSet)#android/graphics/Canvas/drawLines(float[],android.graphics.Paint)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/applyValueTextStyle(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleEntry/getIcon()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValue(android.graphics.Canvas,com.github.mikephil.charting.formatter.IValueFormatter,float,com.github.mikephil.charting.data.Entry,int,float,float,int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isDrawIconsEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getEntryForIndex(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicHeight()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/dataprovider/CandleDataProvider/getTransformer(com.github.mikephil.charting.components.YAxis$AxisDependency)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/get(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueTextColor(int)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/isDrawingValuesAllowed(com.github.mikephil.charting.interfaces.dataprovider.ChartInterface)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getValueFormatter()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/renderer/CandleStickChartRenderer/shouldDrawValues(com.github.mikephil.charting.interfaces.datasets.IDataSet)
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/isDrawValuesEnabled()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/data/CandleData/getDataSets()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#android/graphics/drawable/Drawable/getIntrinsicWidth()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#java/util/List/size()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getIconsOffset()
com/github/mikephil/charting/renderer/CandleStickChartRenderer/drawValues(android.graphics.Canvas)#com/github/mikephil/charting/interfaces/datasets/ICandleDataSet/getAxisDependency()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/start()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/TextView/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/animate()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/TextView/animate()
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/internal/SnackbarContentLayout/animateContentOut(int,int)#android/widget/Button/getVisibility()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/alpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/start()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/setStartDelay(long)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/TextView/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/setAlpha(float)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/animate()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/TextView/animate()
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/design/internal/SnackbarContentLayout/animateContentIn(int,int)#android/widget/Button/getVisibility()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/MessageDigest/digest()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/io/InputStream/read(byte[])
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/lang/Integer/Integer(int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/GeneralSecurityException/GeneralSecurityException(java.lang.Throwable)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/security/MessageDigest/update(byte[],int,int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#com/itextpdf/text/pdf/PdfSignature/put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/io/IOException/IOException(java.lang.String)
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/util/HashMap/HashMap()
com/itextpdf/text/pdf/security/LtvTimestamp/timestamp(com.itextpdf.text.pdf.PdfSignatureAppearance,com.itextpdf.text.pdf.security.TSAClient,java.lang.String)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setId(int)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setOnClickListener(android.view.View$OnClickListener)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout/getContext()
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout$LayoutParams/FrameLayout$LayoutParams(int,int)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/addView(android.view.View)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/setText(java.lang.CharSequence)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/setText(java.lang.CharSequence)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/Button/Button(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/LinearLayout(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/TextView/TextView(android.content.Context)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/FrameLayout/addView(android.view.View)
com/google/android/gms/dynamic/DeferredLifecycleHelper/showGooglePlayUnavailableMessage(android.widget.FrameLayout)#android/widget/LinearLayout/setOrientation(int)
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/ArrayList/ArrayList()
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/Iterator/hasNext()
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/ArrayList/toArray(java.lang.Object[])
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/Iterator/next()
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/List/iterator()
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/util/ArrayList/add(java.lang.Object)
org/apache/commons/lang3/event/EventListenerSupport/writeObject(java.io.ObjectOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#java/lang/CharSequence/length()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Canvas/drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/ascent()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Rect/isEmpty()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Paint/Paint(int)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/descent()
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/text/TextPaint/measureText(java.lang.CharSequence,int,int)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/design/widget/CollapsingTextHelper/ensureExpandedTexture()#java/lang/Math/round(float)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#android/util/Log/i(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#android/os/IBinder/linkToDeath(android.os.IBinder$DeathRecipient,int)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#java/lang/StringBuilder/StringBuilder()
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#java/lang/Object/getClass()
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#android/support/v4/util/ArrayMap/put(java.lang.Object,java.lang.Object)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#java/lang/Class/getName()
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#android/support/v4/util/ArrayMap/remove(java.lang.Object)
android/support/v4/media/MediaBrowserServiceCompat$ServiceBinderImpl$1/run()#java/lang/StringBuilder/toString()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/lang/Object/toString()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Iterator/hasNext()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Map$Entry/getKey()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Map/size()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Map$Entry/getValue()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Map/entrySet()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Iterator/next()
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/HashMap/HashMap(int)
io/sentry/event/Event/convertToSerializable(java.util.Map)#java/util/Set/iterator()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#android/os/Looper/getMainLooper()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/String/length()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/util/Map/containsKey(java.lang.Object)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#com/google/android/gms/internal/common/zze/post(java.lang.Runnable)
com/google/android/gms/common/api/internal/zzc/addCallback(java.lang.String,com.google.android.gms.common.api.internal.LifecycleCallback)#java/lang/StringBuilder/StringBuilder(int)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/abs(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/sin(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Double/isNaN(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/tan(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/cos(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/sqrt(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#android/graphics/Path/cubicTo(float,float,float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#java/lang/Math/ceil(double)
android/support/v4/graphics/PathParser$PathDataNode/arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)#android/graphics/Path/rLineTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/toRadians(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/sin(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Double/isNaN(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/cos(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/sqrt(double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/toString()
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/Math/atan2(double,double)
android/support/v4/graphics/PathParser$PathDataNode/drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)#java/lang/StringBuilder/append(double)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rLineTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rMoveTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rCubicTo(float,float,float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/lineTo(float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/rQuadTo(float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/quadTo(float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/cubicTo(float,float,float,float,float,float)
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/close()
android/support/v4/graphics/PathParser$PathDataNode/addCommand(android.graphics.Path,float[],char,char,float[])#android/graphics/Path/moveTo(float,float)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/getMeasuredWidth()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/support/v7/widget/Toolbar/getChildMeasureSpec(int,int,int)
android/support/v7/widget/Toolbar/measureChildCollapseMargins(android.view.View,int,int,int,int,int[])#android/view/View/measure(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/getSize(int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getChildMeasureSpec(int,int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/makeMeasureSpec(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View/measure(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/view/View$MeasureSpec/getMode(int)
android/support/v7/widget/Toolbar/measureChildConstrained(android.view.View,int,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/resolveSizeAndState(int,int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getChildCount()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/onMeasure(int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/setMeasuredDimension(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageView/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getSuggestedMinimumWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/combineMeasuredStates(int,int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getSuggestedMinimumHeight()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/Toolbar/getChildAt(int)
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/support/v7/widget/ActionMenuView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/widget/ImageButton/getMeasuredState()
android/support/v7/widget/Toolbar/onMeasure(int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/getContext()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setSingleLine()
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/widget/TextView/setTextColor(int)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/Toolbar/setTitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/removeView(android.view.View)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/getContext()
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setSingleLine()
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setTextAppearance(android.content.Context,int)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/widget/TextView/setTextColor(int)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/Toolbar/setSubtitle(java.lang.CharSequence)#android/support/v7/widget/Toolbar/removeView(android.view.View)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingTop()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingRight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getLayoutParams()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/size()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/layout(int,int,int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/get(int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getHeight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingLeft()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getMeasuredHeight()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getPaddingBottom()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/util/ArrayList/clear()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/widget/TextView/getMeasuredWidth()
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#java/lang/Math/min(int,int)
android/support/v7/widget/Toolbar/onLayout(boolean,int,int,int,int)#android/support/v7/widget/Toolbar/getWidth()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/ArrayList/ArrayList()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/isCertificateEntry(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/aliases()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/addAll(java.util.Collection)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/verify(java.security.PublicKey)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/List/add(java.lang.Object)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Enumeration/nextElement()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getPublicKey()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/KeyStore/getCertificate(java.lang.String)
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/cert/X509Certificate/getSubjectDN()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/lang/Object/getClass()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/security/Principal/getName()
com/itextpdf/text/pdf/security/RootStoreVerifier/verify(java.security.cert.X509Certificate,java.security.cert.X509Certificate,java.util.Date)#java/util/Enumeration/hasMoreElements()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/content/Context/getPackageManager()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#java/util/Iterator/hasNext()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/content/pm/PackageManager/queryBroadcastReceivers(android.content.Intent,int)
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/content/pm/ShortcutManager/isRequestPinShortcutSupported()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#java/util/Iterator/next()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/content/Intent/Intent(java.lang.String)
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#java/util/List/iterator()
android/support/v4/content/pm/ShortcutManagerCompat/isRequestPinShortcutSupported(android.content.Context)#android/content/Context/getSystemService(java.lang.Class)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/length()
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/toString()
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/charAt(int)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/Character/codePointCount(java.lang.CharSequence,int,int)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/CharSequence/subSequence(int,int)
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper/translate(java.lang.CharSequence,int,java.io.Writer)#java/io/Writer/write(java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/setAction(java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/String(java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/contains(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/Intent()
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getStringExtra(java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/setClassName(android.content.Context,java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/Intent/getLongExtra(java.lang.String,long)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/content/BroadcastReceiver$PendingResult/finish()
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzbm/onReceive(android.content.Context,android.content.Intent)#android/net/Uri/parse(java.lang.String)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/SparseArray/indexOfKey(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/String/length()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/SparseArray/put(int,java.lang.Object)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/append(boolean)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaj/zaa(int,com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/android/gms/common/api/internal/zaj/onStart()#android/util/SparseArray/size()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/String/length()
com/google/android/gms/common/api/internal/zaj/onStart()#java/util/concurrent/atomic/AtomicReference/get()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/toString()
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/append(boolean)
com/google/android/gms/common/api/internal/zaj/onStart()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/api/internal/zaj/onStart()#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Intent/setClassName(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Context/getPackageManager()
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Intent/getAction()
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Context/getPackageName()
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/length()
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder(int)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/startsWith(java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/pm/PackageManager/resolveService(android.content.Intent,int)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/Boolean/booleanValue()
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Context/checkCallingOrSelfPermission(java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/content/Context/startService(android.content.Intent)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/util/Log/e(java.lang.String,java.lang.String,java.lang.Throwable)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/Boolean/valueOf(boolean)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzav/zzd(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/util/Queue/offer(java.lang.Object)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/content/Context/getPackageName()
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/length()
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/equals(java.lang.Object)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/util/Log/isLoggable(java.lang.String,int)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/util/Log/d(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/content/Intent/Intent(java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/content/Intent/setPackage(java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/String(java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#android/util/Log/w(java.lang.String,java.lang.String)
com/google/firebase/iid/zzav/zzb(android.content.Context,java.lang.String,android.content.Intent)#java/lang/String/hashCode()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#com/github/mikephil/charting/data/DataSet/getLabel()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/append(int)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/util/List/size()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/toString()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/StringBuilder()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/append(java.lang.String)
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuffer/StringBuffer()
com/github/mikephil/charting/data/DataSet/toSimpleString()#java/lang/StringBuilder/toString()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/lang/Float/Float(float)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/ArrayList()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Stack/push(java.lang.Object)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/add(java.lang.Object)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/lang/Float/floatValue()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/get(int)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Stack/pop()
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/Collections/reverse(java.util.List)
com/itextpdf/text/html/simpleparser/HTMLWorker/processRow()#java/util/ArrayList/size()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager/newWakeLock(int,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/setReferenceCounted(boolean)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Intent/putExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/startService(android.content.Intent)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/util/SparseArray/put(int,java.lang.Object)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/Context/getSystemService(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/os/PowerManager$WakeLock/acquire(long)
android/support/v4/content/WakefulBroadcastReceiver/startWakefulService(android.content.Context,android.content.Intent)#android/content/ComponentName/flattenToShortString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/content/Intent/getIntExtra(java.lang.String,int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/os/PowerManager$WakeLock/release()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/toString()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/get(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/append(int)
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#java/lang/StringBuilder/StringBuilder()
android/support/v4/content/WakefulBroadcastReceiver/completeWakefulIntent(android.content.Intent)#android/util/SparseArray/remove(int)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/util/ArrayList/ArrayList()
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/hasNext()
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/util/Iterator/next()
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/util/List/add(java.lang.Object)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/lang/Integer/valueOf(int)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.String)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/util/List/iterator()
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#java/lang/String/valueOf(int)
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#android/content/ContentValues/ContentValues()
ar/com/tzulberti/archerytraining/database/InsertConstantValues/insertRoundConstrainInformation(android.database.sqlite.SQLiteDatabase)#android/database/sqlite/SQLiteDatabase/insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#android/support/v4/app/BaseFragmentActivityApi16/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/System/identityHashCode(java.lang.Object)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/Integer/toHexString(int)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/print(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(java.lang.String)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/io/PrintWriter/println(boolean)
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/toString()
android/support/v4/app/FragmentActivity/dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getLocationOnScreen(int[])
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getVisibility()
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getWidth()
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#java/util/Map/get(java.lang.Object)
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#java/lang/Math/round(float)
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#java/lang/Integer/valueOf(int)
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getTranslationY()
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getTranslationX()
android/support/transition/VisibilityPropagation/captureValues(android.support.transition.TransitionValues)#android/view/View/getHeight()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/remove(int)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setTranslationY(float)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setTranslationX(float)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchAnimationsFinished()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/clear()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/size()
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/support/v7/widget/DefaultItemAnimator/dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#java/util/ArrayList/get(int)
android/support/v7/widget/DefaultItemAnimator/endAnimations()#android/view/View/setAlpha(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/translationY(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/setListener(android.animation.Animator$AnimatorListener)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/alpha(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/start()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/View/animate()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/support/v7/widget/DefaultItemAnimator/getChangeDuration()
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/translationX(float)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#java/util/ArrayList/add(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/animateChangeImpl(android.support.v7.widget.DefaultItemAnimator$ChangeInfo)#android/view/ViewPropertyAnimator/setDuration(long)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getChangeDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/lang/Math/max(long,long)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/Iterator/next()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/clear()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/add(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/addAll(java.util.Collection)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getRemoveDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/get(int)
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/iterator()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/ArrayList()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/Iterator/hasNext()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#android/support/v7/widget/DefaultItemAnimator/getMoveDuration()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/runPendingAnimations()#java/lang/Runnable/run()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/remove(int)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/remove(java.lang.Object)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setTranslationY(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setTranslationX(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/isEmpty()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchMoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchAddFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/setAlpha(float)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/support/v7/widget/DefaultItemAnimator/dispatchRemoveFinished(android.support.v7.widget.RecyclerView$ViewHolder)
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/ViewPropertyAnimator/cancel()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/size()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#android/view/View/animate()
android/support/v7/widget/DefaultItemAnimator/endAnimation(android.support.v7.widget.RecyclerView$ViewHolder)#java/util/ArrayList/get(int)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/util/Collections/emptyMap()
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/util/Collections/unmodifiableMap(java.util.Map)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/append(int)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
com/google/android/gms/common/util/CollectionUtils/mapOfKeyValueArrays(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/toString()
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/String/length()
com/google/android/gms/internal/measurement/zzsx/zztw()#com/google/android/gms/internal/measurement/zzsx/zzvx()
com/google/android/gms/internal/measurement/zzsx/zztw()#com/google/android/gms/internal/measurement/zzsx/zzb(com.google.android.gms.internal.measurement.zztv)
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/Class/getName()
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/Object/getClass()
com/google/android/gms/internal/measurement/zzsx/zztw()#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Rect/offset(int,int)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#java/lang/Math/ceil(double)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getWidth()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Matrix/isIdentity()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Matrix/mapRect(android.graphics.RectF)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#java/lang/Math/floor(double)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/graphics/RectF/set(android.graphics.Rect)
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getMatrix()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getTop()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getHeight()
android/support/v7/widget/RecyclerView$LayoutManager/getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)#android/view/View/getLeft()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/getLayoutParams()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/support/v7/widget/RecyclerView/indexOfChild(android.view.View)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/getParent()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView$LayoutManager/addViewInt(android.view.View,int,boolean)#android/view/View/invalidate()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getLayoutParams()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getVisibility()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredHeight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/support/v7/widget/ActionBarContainer/getMeasuredWidth()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getMeasuredHeight()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/widget/FrameLayout/onLayout(boolean,int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/layout(int,int,int,int)
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/onLayout(boolean,int,int,int,int)#android/view/View/getLeft()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/setPrimaryBackground(android.graphics.drawable.Drawable)#android/view/View/getLeft()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getRight()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/invalidate()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/graphics/drawable/Drawable/setCallback(android.graphics.drawable.Drawable$Callback)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/unscheduleDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/support/v7/widget/ActionBarContainer/setWillNotDraw(boolean)
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getBottom()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getTop()
android/support/v7/widget/ActionBarContainer/setStackedBackground(android.graphics.drawable.Drawable)#android/view/View/getLeft()
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setDisabledMessage(java.lang.CharSequence)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/build()
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setShortLabel(java.lang.CharSequence)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setIcon(android.graphics.drawable.Icon)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/ShortcutInfo$Builder(android.content.Context,java.lang.String)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setIntents(android.content.Intent[])
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setLongLabel(java.lang.CharSequence)
android/support/v4/content/pm/ShortcutInfoCompat/toShortcutInfo()#android/content/pm/ShortcutInfo$Builder/setActivity(android.content.ComponentName)
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getDrawable()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingTop()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingLeft()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingRight()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/AppCompatImageView/setFrame(int,int,int,int)
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getWidth()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#java/lang/Math/max(int,int)
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getHeight()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getBackground()
android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/setFrame(int,int,int,int)#android/support/v7/widget/ActionMenuPresenter$OverflowMenuButton/getPaddingBottom()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#android/animation/Keyframe/hasValue()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/StringBuilder/append(int)
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#android/animation/Keyframe/getFraction()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#android/animation/Keyframe/getValue()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/Float/valueOf(float)
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimatorInflaterCompat/dumpKeyframes(java.lang.Object[],java.lang.String)#android/util/Log/d(java.lang.String,java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getDimension(int,float)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/view/InflateException/InflateException(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getInt(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getFloat(int,float)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getString(int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/peekValue(int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofFloat(java.lang.String,float[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/ofInt(java.lang.String,int[])
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/content/res/TypedArray/getColor(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)#android/animation/PropertyValuesHolder/setEvaluator(android.animation.TypeEvaluator)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/getPosTan(float,float[],float[])
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Float/valueOf(float)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/PathMeasure(android.graphics.Path,boolean)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Float/floatValue()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/lang/Math/min(int,int)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/getLength()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/graphics/PathMeasure/nextContour()
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/animation/PropertyValuesHolder/ofFloat(java.lang.String,float[])
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)#android/animation/ObjectAnimator/setValues(android.animation.PropertyValuesHolder[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#android/content/res/TypedArray/recycle()
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/PropertyValuesHolder/ofKeyframe(java.lang.String,android.animation.Keyframe[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/toArray(java.lang.Object[])
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/PropertyValuesHolder/setEvaluator(android.animation.TypeEvaluator)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/Keyframe/getFraction()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/get(int)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/animation/Keyframe/setFraction(float)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimatorInflaterCompat/loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)#java/util/ArrayList/add(int,java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/ArrayList()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/Iterator/hasNext()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/playSequentially(android.animation.Animator[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/append(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/getName()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/iterator()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/Iterator/next()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/ValueAnimator/setValues(android.animation.PropertyValuesHolder[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/String/equals(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/content/res/TypedArray/recycle()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/add(java.lang.Object)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/util/ArrayList/size()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/getDepth()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/StringBuilder()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/playTogether(android.animation.Animator[])
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#org/xmlpull/v1/XmlPullParser/next()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/RuntimeException/RuntimeException(java.lang.String)
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#java/lang/StringBuilder/toString()
android/support/graphics/drawable/AnimatorInflaterCompat/createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)#android/animation/AnimatorSet/AnimatorSet()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/getScaledTouchSlop()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/util/Log/w(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/getScaledPagingTouchSlop()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/support/v7/widget/RecyclerView/getContext()
android/support/v7/widget/RecyclerView/setScrollingTouchSlop(int)#android/view/ViewConfiguration/get(android.content.Context)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/offsetLocation(float,float)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/computeCurrentVelocity(int,float)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getYVelocity(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/recycle()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/obtain(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/getXVelocity(int)
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/onTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/NoSuchMethodException/initCause(java.lang.Throwable)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/support/v7/widget/RecyclerView/isInEditMode()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/ClassLoader/loadClass(java.lang.String)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/getConstructor(java.lang.Class[])
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Integer/valueOf(int)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/content/Context/getClassLoader()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/reflect/Constructor/setAccessible(boolean)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/String/trim()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/asSubclass(java.lang.Class)
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#android/util/AttributeSet/getPositionDescription()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/String/isEmpty()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Object/getClass()
android/support/v7/widget/RecyclerView/createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int)#java/lang/Class/getClassLoader()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/clear()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/support/v7/widget/RecyclerView/getParent()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/ViewParent/requestDisallowInterceptTouchEvent(boolean)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/Math/abs(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/util/Log/e(java.lang.String,java.lang.String)
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/onInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/Package/getName()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#android/content/Context/getPackageName()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/Class/getPackage()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(char)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/String/contains(java.lang.CharSequence)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/getFullClassName(android.content.Context,java.lang.String)#java/lang/String/charAt(int)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#java/lang/StringBuilder/append(java.lang.String)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#java/lang/StringBuilder/StringBuilder()
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#android/graphics/Rect/set(int,int,int,int)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#android/support/v7/widget/RecyclerView/offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#java/lang/StringBuilder/toString()
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#java/lang/StringBuilder/append(int)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#android/view/View/getWidth()
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v7/widget/RecyclerView/isPreferredNextFocus(android.view.View,android.view.View,int)#android/view/View/getHeight()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/restoreToCount(int)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/save()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/view/ViewGroup/draw(android.graphics.Canvas)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#java/util/ArrayList/size()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/draw(android.graphics.Canvas)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#java/util/ArrayList/get(int)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/rotate(float)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/graphics/Canvas/translate(float,float)
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/widget/EdgeEffect/isFinished()
android/support/v7/widget/RecyclerView/draw(android.graphics.Canvas)#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/isFocusable()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/hasFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/findViewById(int)
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/getDescendantFocusability()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/hasFocusable()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/requestFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/isFocused()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/getParent()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/requestFocus()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/support/v7/widget/RecyclerView/getFocusedChild()
android/support/v7/widget/RecyclerView/recoverFocusFromState()#android/view/View/hasFocus()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/beginTransaction()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.Long)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/content/ContentValues/put(java.lang.String,java.lang.Integer)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/setTransactionSuccessful()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/content/ContentValues/ContentValues()
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzn(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/endTransaction()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/util/Collections/emptyMap()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#android/database/Cursor/getInt(int)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzm(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/util/Collections/emptyMap()
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#android/database/Cursor/getInt(int)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzl(java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/util/Pair/create(java.lang.Object,java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/isNull(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/lang/Long/valueOf(long)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/util/List/isEmpty()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/util/Collections/emptyList()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#java/lang/String/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,int,int)#android/database/Cursor/getInt(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/Cursor/getString(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/close()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/getString(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/moveToNext()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#java/util/Collections/emptyList()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/sqlite/SQLiteDatabase/query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/getBlob(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#java/util/List/size()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/getLong(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#java/lang/Integer/valueOf(int)
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/moveToFirst()
com/google/android/gms/measurement/internal/zzt/zzb(java.lang.String,java.lang.String[])#android/database/Cursor/getInt(int)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/util/ArrayList/ArrayList(int)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/util/List/size()
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/util/List/toArray(java.lang.Object[])
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zzc(java.lang.String,java.lang.String,java.lang.String)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/util/ArrayList/ArrayList()
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/Math/max(int,int)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/util/List/size()
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/util/List/add(java.lang.Object)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#android/database/sqlite/SQLiteDatabase/delete(java.lang.String,java.lang.String,java.lang.String[])
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/Math/min(int,int)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/StringBuilder/toString()
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/Integer/intValue()
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/String/length()
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#android/text/TextUtils/join(java.lang.CharSequence,java.lang.Iterable)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/lang/Integer/toString(int)
com/google/android/gms/measurement/internal/zzt/zza(java.lang.String,java.util.List)#java/util/List/get(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onEvent(java.lang.String,android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onCaptioningEnabledChanged(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChangedRemoved(boolean)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueTitleChanged(java.lang.CharSequence)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcelable$Creator/createFromParcel(android.os.Parcel)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/createTypedArrayList(android.os.Parcelable$Creator)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onRepeatModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readInt()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onExtrasChanged(android.os.Bundle)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/readString()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Binder/onTransact(int,android.os.Parcel,android.os.Parcel,int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/enforceInterface(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onSessionDestroyed()
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/os/Parcel/writeString(java.lang.String)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onQueueChanged(java.util.List)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onShuffleModeChanged(int)
android/support/v4/media/session/IMediaControllerCallback$Stub/onTransact(int,android.os.Parcel,android.os.Parcel,int)#android/support/v4/media/session/IMediaControllerCallback$Stub/onSessionReady()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getCurrX()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getCurrY()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/abortAnimation()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/computeScrollOffset()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getFinalX()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/widget/OverScroller/getFinalY()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/ViewGroup/post(java.lang.Runnable)
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/continueSettling(boolean)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getRight()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/ViewGroup/getChildAt(int)
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/ViewGroup/getChildCount()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/canScrollHorizontally(int)
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getScrollX()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getScrollY()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/canScrollVertically(int)
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getBottom()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/canScroll(android.view.View,boolean,int,int,int,int)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/findPointerIndex(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/processTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerCount()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/addMovement(android.view.MotionEvent)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getY()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/VelocityTracker/obtain()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getX(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getPointerId(int)
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionIndex()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/View/getTop()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/View/getLeft()
android/support/v4/widget/ViewDragHelper/shouldInterceptTouchEvent(android.view.MotionEvent)#android/view/MotionEvent/getActionMasked()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getRight()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#java/util/Map/put(java.lang.Object,java.lang.Object)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getWidth()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getBottom()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#java/lang/Integer/valueOf(int)
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getHeight()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getLeft()
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getLocationInWindow(int[])
android/support/transition/ChangeBounds/captureValues(android.support.transition.TransitionValues)#android/view/View/getTop()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/addListener(android.animation.Animator$AnimatorListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getWidth()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/Rect(int,int,int,int)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Bitmap/createBitmap(int,int,android.graphics.Bitmap$Config)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getHeight()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Integer/intValue()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/ChangeBounds/addListener(android.support.transition.Transition$TransitionListener)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/lang/Math/max(int,int)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/draw(android.graphics.Canvas)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#java/util/Map/get(java.lang.Object)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/ObjectAnimator/ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Rect/equals(java.lang.Object)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/Canvas/Canvas(android.graphics.Bitmap)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/playTogether(android.animation.Animator[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/ViewGroup/getLocationInWindow(int[])
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/view/View/getParent()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/graphics/drawable/BitmapDrawable/BitmapDrawable(android.graphics.Bitmap)
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/support/transition/ChangeBounds/getPathMotion()
android/support/transition/ChangeBounds/createAnimator(android.view.ViewGroup,android.support.transition.TransitionValues,android.support.transition.TransitionValues)#android/animation/AnimatorSet/AnimatorSet()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/util/Iterator/hasNext()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#android/content/SharedPreferences$Editor/commit()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#android/content/SharedPreferences/getAll()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/lang/String/startsWith(java.lang.String)
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/util/Iterator/next()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/util/Map/keySet()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/lang/String/concat(java.lang.String)
com/google/firebase/iid/zzaw/zzh(java.lang.String)#java/util/Set/iterator()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#android/content/SharedPreferences/edit()
com/google/firebase/iid/zzaw/zzh(java.lang.String)#android/content/SharedPreferences$Editor/remove(java.lang.String)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/ArrayList/ArrayList()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/getEventType()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/Resources/obtainAttributes(android.util.AttributeSet,int[])
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/isEmpty()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/size()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getResourceId(int,int)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/add(java.lang.Object)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/next()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#org/xmlpull/v1/XmlPullParser/getName()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getString(int)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/lang/String/equals(java.lang.Object)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/recycle()
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#java/util/List/toArray(java.lang.Object[])
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/util/Xml/asAttributeSet(org.xmlpull.v1.XmlPullParser)
android/support/v4/content/res/FontResourcesParserCompat/readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)#android/content/res/TypedArray/getInteger(int,int)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/Float/isNaN(float)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/StringBuilder/append(int)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/Float/valueOf(float)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/Integer/valueOf(int)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
android/support/v4/util/Preconditions/checkArrayElementsInRange(float[],float,float,java.lang.String)#java/lang/StringBuilder/toString()
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/util/Iterator/hasNext()
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/Long/valueOf(long)
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/util/Iterator/next()
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/String/format(java.util.Locale,java.lang.String,java.lang.Object[])
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/StringBuilder/StringBuilder()
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/NullPointerException/NullPointerException(java.lang.String)
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/util/Collection/iterator()
android/support/v4/util/Preconditions/checkCollectionElementsNotNull(java.util.Collection,java.lang.String)#java/lang/StringBuilder/toString()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/length()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/util/List/size()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/equals(java.lang.Object)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/String(java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/System/currentTimeMillis()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/Intent()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/text/TextUtils/isEmpty(java.lang.CharSequence)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/os/SystemClock/elapsedRealtime()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/util/Log/wtf(java.lang.String,java.lang.Throwable)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Context/getPackageName()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/putExtra(java.lang.String,android.os.Parcelable)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/util/Log/e(java.lang.String,java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Context/startService(android.content.Intent)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/Boolean/valueOf(boolean)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/String/concat(java.lang.String)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/util/List/get(int)
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/stats/WakeLockTracker/registerEvent(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,long)#android/content/Intent/setComponent(android.content.ComponentName)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/Character/toUpperCase(char)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/String/valueOf(java.lang.Object)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/RuntimeException/RuntimeException(java.lang.Throwable)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/String/length()
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/String/substring(int)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/StringBuilder/append(char)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/Object/getClass()
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/String/charAt(int)
com/google/android/gms/common/server/response/FastJsonResponse/getFieldValue(com.google.android.gms.common.server.response.FastJsonResponse$Field)#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/Iterator/hasNext()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/Map/get(java.lang.Object)
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/Set/iterator()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/lang/StringBuilder/length()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/ArrayList/get(int)
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/Iterator/next()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/Map/keySet()
com/google/android/gms/common/server/response/FastJsonResponse/toString()#java/util/ArrayList/size()
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/Integer/intValue()
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/StringBuilder/append(int)
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/StringBuilder/StringBuilder(int)
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/Boolean/booleanValue()
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/StringBuilder/toString()
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/Long/longValue()
com/google/android/gms/common/server/response/FastJsonResponse/zaa(com.google.android.gms.common.server.response.FastJsonResponse$Field,java.lang.Object)#java/lang/Double/doubleValue()
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getName()
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/AccessibleObject/setAccessible(java.lang.reflect.AccessibleObject[],boolean)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Modifier/isTransient(int)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Field/getModifiers()
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Field/get(java.lang.Object)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/InternalError/InternalError(java.lang.String)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/Class/getDeclaredFields()
org/apache/commons/lang3/builder/EqualsBuilder/reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class)#java/lang/String/contains(java.lang.CharSequence)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/os/AsyncTask/onPostExecute(java.lang.Object)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentInfo$Builder/PrintDocumentInfo$Builder(java.lang.String)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/graphics/Matrix/Matrix()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/graphics/Bitmap/createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintAttributes/equals(java.lang.Object)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintAttributes/getMediaSize()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentInfo$Builder/setPageCount(int)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentInfo$Builder/build()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/graphics/Bitmap/getWidth()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentInfo$Builder/setContentType(int)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/graphics/Matrix/postRotate(float)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintAttributes$MediaSize/isPortrait()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutFinished(android.print.PrintDocumentInfo,boolean)
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/graphics/Bitmap/getHeight()
android/support/v4/print/PrintHelper$PrintHelperApi19$3$1/onPostExecute(android.graphics.Bitmap)#android/print/PrintDocumentAdapter$LayoutResultCallback/onLayoutFailed(java.lang.CharSequence)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/save()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getChildAt(int)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/view/View/getTranslationX()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/getIntrinsicWidth()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getChildCount()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#java/lang/Math/round(float)
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/restore()
android/support/v7/widget/DividerItemDecoration/drawHorizontal(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/setBounds(int,int,int,int)
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getHeight()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/save()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingLeft()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingBottom()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getChildAt(int)
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/getIntrinsicHeight()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/restore()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/drawable/Drawable/draw(android.graphics.Canvas)
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingTop()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/graphics/Canvas/clipRect(int,int,int,int)
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getPaddingRight()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getChildCount()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#java/lang/Math/round(float)
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/support/v7/widget/RecyclerView/getWidth()
android/support/v7/widget/DividerItemDecoration/drawVertical(android.graphics.Canvas,android.support.v7.widget.RecyclerView)#android/view/View/getTranslationY()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/Class/forName(java.lang.String)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/Menu/size()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/widget/TextView/getContext()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/MenuItem/setShowAsAction(int)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/content/Intent/getAction()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/util/List/size()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/Class/isInstance(java.lang.Object)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/String/equals(java.lang.Object)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/Menu/add(int,int,int,java.lang.CharSequence)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/MenuItem/setIntent(android.content.Intent)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/Object/getClass()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/MenuItem/getIntent()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/content/Context/getPackageManager()
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/content/pm/ResolveInfo/loadLabel(android.content.pm.PackageManager)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/lang/Integer/valueOf(int)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#android/view/Menu/getItem(int)
android/support/v4/widget/TextViewCompat$TextViewCompatApi26Impl$1/recomputeProcessTextMenuItems(android.view.Menu)#java/util/List/get(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#com/itextpdf/text/pdf/PRIndirectReference/getNumber()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/util/HashMap/size()
com/itextpdf/text/pdf/SimpleNamedDestination/getNamedDestination(com.itextpdf.text.pdf.PdfReader,boolean)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/hasNext()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getKey()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Map$Entry/getValue()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/size()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/entrySet()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Iterator/next()
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/HashMap/HashMap(int)
com/itextpdf/text/pdf/SimpleNamedDestination/outputNamedDestinationAsStrings(java.util.HashMap,com.itextpdf.text.pdf.PdfWriter)#java/util/Set/iterator()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/append(char)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/length()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/StringBuilder()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/substring(int)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/String/toCharArray()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuffer/StringBuffer()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/StringBuilder/toString()
com/itextpdf/text/pdf/SimpleNamedDestination/escapeBinaryString(java.lang.String)#java/lang/Integer/toOctalString(int)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/Class/isAssignableFrom(java.lang.Class)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/Class/getComponentType()
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/Class/getName()
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String,java.lang.Throwable)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/Object/getClass()
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/addAll(java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/Object/getClass()
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/util/Arrays/sort(int[])
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/Class/getComponentType()
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/ArrayUtils/removeAll(java.lang.Object,int[])#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/Class/getComponentType()
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/Object/getClass()
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ArrayUtils/insert(int,java.lang.Object[],java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/Double/isNaN(double)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/util/HashMap/HashMap(int)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/util/Map$Entry/getKey()
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
org/apache/commons/lang3/ArrayUtils/toMap(java.lang.Object[])#java/util/Map$Entry/getValue()
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/Class/getComponentType()
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/Object/getClass()
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/ArrayUtils/remove(java.lang.Object,int)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/StringBuilder/toString()
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException(java.lang.String)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/reflect/Array/getLength(java.lang.Object)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/StringBuilder/append(int)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/reflect/Array/newInstance(java.lang.Class,int)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/reflect/Array/set(java.lang.Object,int,java.lang.Object)
org/apache/commons/lang3/ArrayUtils/add(java.lang.Object,int,java.lang.Object,java.lang.Class)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/addView(android.view.View,int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setLayoutParams(android.view.ViewGroup$LayoutParams)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/LinearLayout$LayoutParams/LinearLayout$LayoutParams(int,int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/view/ViewGroup/removeView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setEllipsize(android.text.TextUtils$TruncateAt)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setVisibility(int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setContentDescription(java.lang.CharSequence)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/view/View/getParent()
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setImageDrawable(android.graphics.drawable.Drawable)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/ImageView/setVisibility(int)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/getContext()
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/removeView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/support/v7/widget/ScrollingTabContainerView$TabView/addView(android.view.View)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/text/TextUtils/isEmpty(java.lang.CharSequence)
android/support/v7/widget/ScrollingTabContainerView$TabView/update()#android/widget/TextView/setText(java.lang.CharSequence)
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/abortAnimation()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/computeScrollOffset()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrX()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrY()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/support/v7/widget/RecyclerView/invalidate()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/support/v7/widget/RecyclerView/getOverScrollMode()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#java/util/ArrayList/isEmpty()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getCurrVelocity()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/isFinished()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getFinalX()
android/support/v7/widget/RecyclerView$ViewFlinger/run()#android/widget/OverScroller/getFinalY()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/support/constraint/Placeholder/isInEditMode()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawText(java.lang.String,float,float,android.graphics.Paint)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Rect/height()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/Paint()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/setTypeface(android.graphics.Typeface)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/setTextSize(float)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/getTextBounds(java.lang.String,int,int,android.graphics.Rect)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Canvas/getClipBounds(android.graphics.Rect)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Typeface/create(android.graphics.Typeface,int)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Canvas/drawRGB(int,int,int)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Rect/Rect()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/setTextAlign(android.graphics.Paint$Align)
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Rect/width()
android/support/constraint/Placeholder/onDraw(android.graphics.Canvas)#android/graphics/Paint/setARGB(int,int,int,int)
